From 770266a715e965cf29db4bc068ed6d41b535368b Mon Sep 17 00:00:00 2001
From: Simon Ser <contact@emersion.fr>
Date: Sat, 20 May 2023 01:12:41 +0200
Subject: [PATCH 5/7] Update OpenGL headers

Token from commit 91cdaf381d77b6e700654ecd78cb88a95c1fde1a of
OpenGL-Registry.

Signed-off-by: Simon Ser <contact@emersion.fr>
Reviewed-by: Eric Engestrom <eric@engestrom.ch>
Part-of: <https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/23144>
Signed-off-by: Icenowy Zheng <uwu@icenowy.me>
---
 include/GL/glcorearb.h         |   159 +-
 include/GL/glext.h             |   327 +-
 include/GL/glxext.h            |     2 +-
 include/GL/wglext.h            |    25 +-
 include/GLES/egl.h             |    15 +-
 include/GLES/gl.h              |    25 +-
 include/GLES/glext.h           |    29 +-
 include/GLES/glplatform.h      |    15 +-
 include/GLES2/gl2.h            |    29 +-
 include/GLES2/gl2ext.h         |   260 +-
 include/GLES2/gl2platform.h    |    15 +-
 include/GLES3/gl3.h            |    37 +-
 include/GLES3/gl31.h           |    25 +-
 include/GLES3/gl32.h           |    25 +-
 include/GLES3/gl3platform.h    |    15 +-
 src/mapi/glapi/registry/gl.xml | 17639 ++++++++++++-------------------
 16 files changed, 7415 insertions(+), 11227 deletions(-)

diff --git a/include/GL/glcorearb.h b/include/GL/glcorearb.h
index e8515a17644..07517e7e5d9 100644
--- a/include/GL/glcorearb.h
+++ b/include/GL/glcorearb.h
@@ -6,28 +6,9 @@ extern "C" {
 #endif
 
 /*
-** Copyright (c) 2013-2018 The Khronos Group Inc.
+** Copyright 2013-2020 The Khronos Group Inc.
+** SPDX-License-Identifier: MIT
 **
-** Permission is hereby granted, free of charge, to any person obtaining a
-** copy of this software and/or associated documentation files (the
-** "Materials"), to deal in the Materials without restriction, including
-** without limitation the rights to use, copy, modify, merge, publish,
-** distribute, sublicense, and/or sell copies of the Materials, and to
-** permit persons to whom the Materials are furnished to do so, subject to
-** the following conditions:
-**
-** The above copyright notice and this permission notice shall be included
-** in all copies or substantial portions of the Materials.
-**
-** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
-** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
-** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
-** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
-*/
-/*
 ** This header is generated from the Khronos OpenGL / OpenGL ES XML
 ** API Registry. The current version of the Registry, generator scripts
 ** used to make the header, and the header can be found at
@@ -1573,7 +1554,7 @@ typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);
 typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
 typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
 typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);
-typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
+typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values);
 typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);
 typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);
 typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
@@ -1593,7 +1574,7 @@ GLAPI void APIENTRY glDeleteSync (GLsync sync);
 GLAPI GLenum APIENTRY glClientWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);
 GLAPI void APIENTRY glWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);
 GLAPI void APIENTRY glGetInteger64v (GLenum pname, GLint64 *data);
-GLAPI void APIENTRY glGetSynciv (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
+GLAPI void APIENTRY glGetSynciv (GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values);
 GLAPI void APIENTRY glGetInteger64i_v (GLenum target, GLuint index, GLint64 *data);
 GLAPI void APIENTRY glGetBufferParameteri64v (GLenum target, GLenum pname, GLint64 *params);
 GLAPI void APIENTRY glFramebufferTexture (GLenum target, GLenum attachment, GLuint texture, GLint level);
@@ -1789,8 +1770,8 @@ typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location,
 typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
 typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
 typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
-typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
-typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
+typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
+typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
 typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
 typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
 typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
@@ -1836,8 +1817,8 @@ GLAPI void APIENTRY glGetUniformdv (GLuint program, GLint location, GLdouble *pa
 GLAPI GLint APIENTRY glGetSubroutineUniformLocation (GLuint program, GLenum shadertype, const GLchar *name);
 GLAPI GLuint APIENTRY glGetSubroutineIndex (GLuint program, GLenum shadertype, const GLchar *name);
 GLAPI void APIENTRY glGetActiveSubroutineUniformiv (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
-GLAPI void APIENTRY glGetActiveSubroutineUniformName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
-GLAPI void APIENTRY glGetActiveSubroutineName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
+GLAPI void APIENTRY glGetActiveSubroutineUniformName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
+GLAPI void APIENTRY glGetActiveSubroutineName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
 GLAPI void APIENTRY glUniformSubroutinesuiv (GLenum shadertype, GLsizei count, const GLuint *indices);
 GLAPI void APIENTRY glGetUniformSubroutineuiv (GLenum shadertype, GLint location, GLuint *params);
 GLAPI void APIENTRY glGetProgramStageiv (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
@@ -1895,7 +1876,7 @@ GLAPI void APIENTRY glGetQueryIndexediv (GLenum target, GLuint index, GLenum pna
 #define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
 #define GL_UNDEFINED_VERTEX               0x8260
 typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);
-typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
+typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryFormat, const void *binary, GLsizei length);
 typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
 typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
 typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);
@@ -1984,7 +1965,7 @@ typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfl
 typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
 #ifdef GL_GLEXT_PROTOTYPES
 GLAPI void APIENTRY glReleaseShaderCompiler (void);
-GLAPI void APIENTRY glShaderBinary (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
+GLAPI void APIENTRY glShaderBinary (GLsizei count, const GLuint *shaders, GLenum binaryFormat, const void *binary, GLsizei length);
 GLAPI void APIENTRY glGetShaderPrecisionFormat (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
 GLAPI void APIENTRY glDepthRangef (GLfloat n, GLfloat f);
 GLAPI void APIENTRY glClearDepthf (GLfloat d);
@@ -2191,7 +2172,7 @@ GLAPI void APIENTRY glGetDoublei_v (GLenum target, GLuint index, GLdouble *data)
 typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
 typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
 typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
-typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
+typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint *params);
 typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
 typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
 typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);
@@ -2204,7 +2185,7 @@ typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum m
 GLAPI void APIENTRY glDrawArraysInstancedBaseInstance (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
 GLAPI void APIENTRY glDrawElementsInstancedBaseInstance (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
 GLAPI void APIENTRY glDrawElementsInstancedBaseVertexBaseInstance (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
-GLAPI void APIENTRY glGetInternalformativ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
+GLAPI void APIENTRY glGetInternalformativ (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint *params);
 GLAPI void APIENTRY glGetActiveAtomicCounterBufferiv (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
 GLAPI void APIENTRY glBindImageTexture (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
 GLAPI void APIENTRY glMemoryBarrier (GLbitfield barriers);
@@ -2484,7 +2465,7 @@ typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
 typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
 typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);
 typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
-typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
+typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 *params);
 typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
 typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);
 typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);
@@ -2496,7 +2477,7 @@ typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum
 typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
 typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
 typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
-typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
+typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLint *params);
 typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
 typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
 typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
@@ -2528,7 +2509,7 @@ GLAPI void APIENTRY glDispatchComputeIndirect (GLintptr indirect);
 GLAPI void APIENTRY glCopyImageSubData (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
 GLAPI void APIENTRY glFramebufferParameteri (GLenum target, GLenum pname, GLint param);
 GLAPI void APIENTRY glGetFramebufferParameteriv (GLenum target, GLenum pname, GLint *params);
-GLAPI void APIENTRY glGetInternalformati64v (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
+GLAPI void APIENTRY glGetInternalformati64v (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 *params);
 GLAPI void APIENTRY glInvalidateTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
 GLAPI void APIENTRY glInvalidateTexImage (GLuint texture, GLint level);
 GLAPI void APIENTRY glInvalidateBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr length);
@@ -2540,7 +2521,7 @@ GLAPI void APIENTRY glMultiDrawElementsIndirect (GLenum mode, GLenum type, const
 GLAPI void APIENTRY glGetProgramInterfaceiv (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
 GLAPI GLuint APIENTRY glGetProgramResourceIndex (GLuint program, GLenum programInterface, const GLchar *name);
 GLAPI void APIENTRY glGetProgramResourceName (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
-GLAPI void APIENTRY glGetProgramResourceiv (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
+GLAPI void APIENTRY glGetProgramResourceiv (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLint *params);
 GLAPI GLint APIENTRY glGetProgramResourceLocation (GLuint program, GLenum programInterface, const GLchar *name);
 GLAPI GLint APIENTRY glGetProgramResourceLocationIndex (GLuint program, GLenum programInterface, const GLchar *name);
 GLAPI void APIENTRY glShaderStorageBlockBinding (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
@@ -3838,6 +3819,12 @@ GLAPI void APIENTRY glTexBufferARB (GLenum target, GLenum internalformat, GLuint
 
 #ifndef GL_ARB_viewport_array
 #define GL_ARB_viewport_array 1
+typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYDVNVPROC) (GLuint first, GLsizei count, const GLdouble *v);
+typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDDNVPROC) (GLuint index, GLdouble n, GLdouble f);
+#ifdef GL_GLEXT_PROTOTYPES
+GLAPI void APIENTRY glDepthRangeArraydvNV (GLuint first, GLsizei count, const GLdouble *v);
+GLAPI void APIENTRY glDepthRangeIndexeddNV (GLuint index, GLdouble n, GLdouble f);
+#endif
 #endif /* GL_ARB_viewport_array */
 
 #ifndef GL_KHR_blend_equation_advanced
@@ -4675,6 +4662,11 @@ GLAPI void APIENTRY glFramebufferFetchBarrierEXT (void);
 #define GL_SR8_EXT                        0x8FBD
 #endif /* GL_EXT_texture_sRGB_R8 */
 
+#ifndef GL_EXT_texture_sRGB_RG8
+#define GL_EXT_texture_sRGB_RG8 1
+#define GL_SRG8_EXT                       0x8FBE
+#endif /* GL_EXT_texture_sRGB_RG8 */
+
 #ifndef GL_EXT_texture_sRGB_decode
 #define GL_EXT_texture_sRGB_decode 1
 #define GL_TEXTURE_SRGB_DECODE_EXT        0x8A48
@@ -4686,6 +4678,41 @@ GLAPI void APIENTRY glFramebufferFetchBarrierEXT (void);
 #define GL_EXT_texture_shadow_lod 1
 #endif /* GL_EXT_texture_shadow_lod */
 
+#ifndef GL_EXT_texture_storage
+#define GL_EXT_texture_storage 1
+#define GL_TEXTURE_IMMUTABLE_FORMAT_EXT   0x912F
+#define GL_ALPHA8_EXT                     0x803C
+#define GL_LUMINANCE8_EXT                 0x8040
+#define GL_LUMINANCE8_ALPHA8_EXT          0x8045
+#define GL_RGBA32F_EXT                    0x8814
+#define GL_RGB32F_EXT                     0x8815
+#define GL_ALPHA32F_EXT                   0x8816
+#define GL_LUMINANCE32F_EXT               0x8818
+#define GL_LUMINANCE_ALPHA32F_EXT         0x8819
+#define GL_RGBA16F_EXT                    0x881A
+#define GL_RGB16F_EXT                     0x881B
+#define GL_ALPHA16F_EXT                   0x881C
+#define GL_LUMINANCE16F_EXT               0x881E
+#define GL_LUMINANCE_ALPHA16F_EXT         0x881F
+#define GL_RGB10_A2_EXT                   0x8059
+#define GL_RGB10_EXT                      0x8052
+#define GL_BGRA8_EXT                      0x93A1
+#define GL_R8_EXT                         0x8229
+#define GL_RG8_EXT                        0x822B
+#define GL_R32F_EXT                       0x822E
+#define GL_RG32F_EXT                      0x8230
+#define GL_R16F_EXT                       0x822D
+#define GL_RG16F_EXT                      0x822F
+typedef void (APIENTRYP PFNGLTEXSTORAGE1DEXTPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
+typedef void (APIENTRYP PFNGLTEXSTORAGE2DEXTPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
+typedef void (APIENTRYP PFNGLTEXSTORAGE3DEXTPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
+#ifdef GL_GLEXT_PROTOTYPES
+GLAPI void APIENTRY glTexStorage1DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
+GLAPI void APIENTRY glTexStorage2DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
+GLAPI void APIENTRY glTexStorage3DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
+#endif
+#endif /* GL_EXT_texture_storage */
+
 #ifndef GL_EXT_window_rectangles
 #define GL_EXT_window_rectangles 1
 #define GL_INCLUSIVE_EXT                  0x8F10
@@ -4764,6 +4791,11 @@ GLAPI void APIENTRY glGetPerfQueryInfoINTEL (GLuint queryId, GLuint queryNameLen
 #endif
 #endif /* GL_INTEL_performance_query */
 
+#ifndef GL_MESA_framebuffer_flip_x
+#define GL_MESA_framebuffer_flip_x 1
+#define GL_FRAMEBUFFER_FLIP_X_MESA        0x8BBC
+#endif /* GL_MESA_framebuffer_flip_x */
+
 #ifndef GL_MESA_framebuffer_flip_y
 #define GL_MESA_framebuffer_flip_y 1
 #define GL_FRAMEBUFFER_FLIP_Y_MESA        0x8BBB
@@ -4775,6 +4807,11 @@ GLAPI void APIENTRY glGetFramebufferParameterivMESA (GLenum target, GLenum pname
 #endif
 #endif /* GL_MESA_framebuffer_flip_y */
 
+#ifndef GL_MESA_framebuffer_swap_xy
+#define GL_MESA_framebuffer_swap_xy 1
+#define GL_FRAMEBUFFER_SWAP_XY_MESA       0x8BBD
+#endif /* GL_MESA_framebuffer_swap_xy */
+
 #ifndef GL_NV_bindless_multi_draw_indirect
 #define GL_NV_bindless_multi_draw_indirect 1
 typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
@@ -5028,6 +5065,22 @@ GLAPI void APIENTRY glConservativeRasterParameteriNV (GLenum pname, GLint param)
 #define GL_NV_conservative_raster_underestimation 1
 #endif /* GL_NV_conservative_raster_underestimation */
 
+#ifndef GL_NV_depth_buffer_float
+#define GL_NV_depth_buffer_float 1
+#define GL_DEPTH_COMPONENT32F_NV          0x8DAB
+#define GL_DEPTH32F_STENCIL8_NV           0x8DAC
+#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV 0x8DAD
+#define GL_DEPTH_BUFFER_FLOAT_MODE_NV     0x8DAF
+typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);
+typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);
+typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);
+#ifdef GL_GLEXT_PROTOTYPES
+GLAPI void APIENTRY glDepthRangedNV (GLdouble zNear, GLdouble zFar);
+GLAPI void APIENTRY glClearDepthdNV (GLdouble depth);
+GLAPI void APIENTRY glDepthBoundsdNV (GLdouble zmin, GLdouble zmax);
+#endif
+#endif /* GL_NV_depth_buffer_float */
+
 #ifndef GL_NV_draw_vulkan_image
 #define GL_NV_draw_vulkan_image 1
 typedef void (APIENTRY  *GLVULKANPROCNV)(void);
@@ -5079,11 +5132,11 @@ GLAPI void APIENTRY glFragmentCoverageColorNV (GLuint color);
 #define GL_COVERAGE_MODULATION_NV         0x9332
 #define GL_COVERAGE_MODULATION_TABLE_SIZE_NV 0x9333
 typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONTABLENVPROC) (GLsizei n, const GLfloat *v);
-typedef void (APIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) (GLsizei bufsize, GLfloat *v);
+typedef void (APIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) (GLsizei bufSize, GLfloat *v);
 typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONNVPROC) (GLenum components);
 #ifdef GL_GLEXT_PROTOTYPES
 GLAPI void APIENTRY glCoverageModulationTableNV (GLsizei n, const GLfloat *v);
-GLAPI void APIENTRY glGetCoverageModulationTableNV (GLsizei bufsize, GLfloat *v);
+GLAPI void APIENTRY glGetCoverageModulationTableNV (GLsizei bufSize, GLfloat *v);
 GLAPI void APIENTRY glCoverageModulationNV (GLenum components);
 #endif
 #endif /* GL_NV_framebuffer_mixed_samples */
@@ -5211,9 +5264,9 @@ GLAPI void APIENTRY glProgramUniform4ui64vNV (GLuint program, GLint location, GL
 #define GL_SUPERSAMPLE_SCALE_X_NV         0x9372
 #define GL_SUPERSAMPLE_SCALE_Y_NV         0x9373
 #define GL_CONFORMANT_NV                  0x9374
-typedef void (APIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);
+typedef void (APIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei count, GLint *params);
 #ifdef GL_GLEXT_PROTOTYPES
-GLAPI void APIENTRY glGetInternalformatSampleivNV (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);
+GLAPI void APIENTRY glGetInternalformatSampleivNV (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei count, GLint *params);
 #endif
 #endif /* GL_NV_internalformat_sample_query */
 
@@ -5245,6 +5298,20 @@ GLAPI void APIENTRY glNamedBufferAttachMemoryNV (GLuint buffer, GLuint memory, G
 #endif
 #endif /* GL_NV_memory_attachment */
 
+#ifndef GL_NV_memory_object_sparse
+#define GL_NV_memory_object_sparse 1
+typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTMEMNVPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
+typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTMEMNVPROC) (GLenum target, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
+typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
+typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC) (GLuint texture, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
+#ifdef GL_GLEXT_PROTOTYPES
+GLAPI void APIENTRY glBufferPageCommitmentMemNV (GLenum target, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
+GLAPI void APIENTRY glTexPageCommitmentMemNV (GLenum target, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
+GLAPI void APIENTRY glNamedBufferPageCommitmentMemNV (GLuint buffer, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
+GLAPI void APIENTRY glTexturePageCommitmentMemNV (GLuint texture, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
+#endif
+#endif /* GL_NV_memory_object_sparse */
+
 #ifndef GL_NV_mesh_shader
 #define GL_NV_mesh_shader 1
 #define GL_MESH_SHADER_NV                 0x9559
@@ -5514,11 +5581,11 @@ typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHNVPROC) (GLuint path, GLenu
 typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask, GLenum coverMode);
 typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
 typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
-typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
+typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint *baseAndCount);
 typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
 typedef GLenum (APIENTRYP PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
 typedef void (APIENTRYP PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);
-typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);
+typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLfloat *params);
 #ifdef GL_GLEXT_PROTOTYPES
 GLAPI GLuint APIENTRY glGenPathsNV (GLsizei range);
 GLAPI void APIENTRY glDeletePathsNV (GLuint path, GLsizei range);
@@ -5572,11 +5639,11 @@ GLAPI void APIENTRY glStencilThenCoverFillPathNV (GLuint path, GLenum fillMode,
 GLAPI void APIENTRY glStencilThenCoverStrokePathNV (GLuint path, GLint reference, GLuint mask, GLenum coverMode);
 GLAPI void APIENTRY glStencilThenCoverFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
 GLAPI void APIENTRY glStencilThenCoverStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
-GLAPI GLenum APIENTRY glPathGlyphIndexRangeNV (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
+GLAPI GLenum APIENTRY glPathGlyphIndexRangeNV (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint *baseAndCount);
 GLAPI GLenum APIENTRY glPathGlyphIndexArrayNV (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
 GLAPI GLenum APIENTRY glPathMemoryGlyphIndexArrayNV (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
 GLAPI void APIENTRY glProgramPathFragmentInputGenNV (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);
-GLAPI void APIENTRY glGetProgramResourcefvNV (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);
+GLAPI void APIENTRY glGetProgramResourcefvNV (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLfloat *params);
 #endif
 #endif /* GL_NV_path_rendering */
 
@@ -5585,6 +5652,12 @@ GLAPI void APIENTRY glGetProgramResourcefvNV (GLuint program, GLenum programInte
 #define GL_SHARED_EDGE_NV                 0xC0
 #endif /* GL_NV_path_rendering_shared_edge */
 
+#ifndef GL_NV_primitive_shading_rate
+#define GL_NV_primitive_shading_rate 1
+#define GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV 0x95B1
+#define GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV 0x95B2
+#endif /* GL_NV_primitive_shading_rate */
+
 #ifndef GL_NV_representative_fragment_test
 #define GL_NV_representative_fragment_test 1
 #define GL_REPRESENTATIVE_FRAGMENT_TEST_NV 0x937F
diff --git a/include/GL/glext.h b/include/GL/glext.h
index e8694ae0966..9149c286a36 100644
--- a/include/GL/glext.h
+++ b/include/GL/glext.h
@@ -6,28 +6,9 @@ extern "C" {
 #endif
 
 /*
-** Copyright (c) 2013-2018 The Khronos Group Inc.
+** Copyright 2013-2020 The Khronos Group Inc.
+** SPDX-License-Identifier: MIT
 **
-** Permission is hereby granted, free of charge, to any person obtaining a
-** copy of this software and/or associated documentation files (the
-** "Materials"), to deal in the Materials without restriction, including
-** without limitation the rights to use, copy, modify, merge, publish,
-** distribute, sublicense, and/or sell copies of the Materials, and to
-** permit persons to whom the Materials are furnished to do so, subject to
-** the following conditions:
-**
-** The above copyright notice and this permission notice shall be included
-** in all copies or substantial portions of the Materials.
-**
-** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
-** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
-** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
-** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
-*/
-/*
 ** This header is generated from the Khronos OpenGL / OpenGL ES XML
 ** API Registry. The current version of the Registry, generator scripts
 ** used to make the header, and the header can be found at
@@ -51,7 +32,7 @@ extern "C" {
 #define GLAPI extern
 #endif
 
-#define GL_GLEXT_VERSION 20190911
+#define GL_GLEXT_VERSION 20230309
 
 #include <KHR/khrplatform.h>
 
@@ -1461,7 +1442,7 @@ typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);
 typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
 typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
 typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);
-typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
+typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values);
 typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);
 typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);
 typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);
@@ -1481,7 +1462,7 @@ GLAPI void APIENTRY glDeleteSync (GLsync sync);
 GLAPI GLenum APIENTRY glClientWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);
 GLAPI void APIENTRY glWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);
 GLAPI void APIENTRY glGetInteger64v (GLenum pname, GLint64 *data);
-GLAPI void APIENTRY glGetSynciv (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
+GLAPI void APIENTRY glGetSynciv (GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values);
 GLAPI void APIENTRY glGetInteger64i_v (GLenum target, GLuint index, GLint64 *data);
 GLAPI void APIENTRY glGetBufferParameteri64v (GLenum target, GLenum pname, GLint64 *params);
 GLAPI void APIENTRY glFramebufferTexture (GLenum target, GLenum attachment, GLuint texture, GLint level);
@@ -1737,8 +1718,8 @@ typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location,
 typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);
 typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);
 typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
-typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
-typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
+typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
+typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
 typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);
 typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);
 typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
@@ -1784,8 +1765,8 @@ GLAPI void APIENTRY glGetUniformdv (GLuint program, GLint location, GLdouble *pa
 GLAPI GLint APIENTRY glGetSubroutineUniformLocation (GLuint program, GLenum shadertype, const GLchar *name);
 GLAPI GLuint APIENTRY glGetSubroutineIndex (GLuint program, GLenum shadertype, const GLchar *name);
 GLAPI void APIENTRY glGetActiveSubroutineUniformiv (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
-GLAPI void APIENTRY glGetActiveSubroutineUniformName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
-GLAPI void APIENTRY glGetActiveSubroutineName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
+GLAPI void APIENTRY glGetActiveSubroutineUniformName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
+GLAPI void APIENTRY glGetActiveSubroutineName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
 GLAPI void APIENTRY glUniformSubroutinesuiv (GLenum shadertype, GLsizei count, const GLuint *indices);
 GLAPI void APIENTRY glGetUniformSubroutineuiv (GLenum shadertype, GLint location, GLuint *params);
 GLAPI void APIENTRY glGetProgramStageiv (GLuint program, GLenum shadertype, GLenum pname, GLint *values);
@@ -1843,7 +1824,7 @@ GLAPI void APIENTRY glGetQueryIndexediv (GLenum target, GLuint index, GLenum pna
 #define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
 #define GL_UNDEFINED_VERTEX               0x8260
 typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);
-typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
+typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryFormat, const void *binary, GLsizei length);
 typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
 typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);
 typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);
@@ -1932,7 +1913,7 @@ typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfl
 typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);
 #ifdef GL_GLEXT_PROTOTYPES
 GLAPI void APIENTRY glReleaseShaderCompiler (void);
-GLAPI void APIENTRY glShaderBinary (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
+GLAPI void APIENTRY glShaderBinary (GLsizei count, const GLuint *shaders, GLenum binaryFormat, const void *binary, GLsizei length);
 GLAPI void APIENTRY glGetShaderPrecisionFormat (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
 GLAPI void APIENTRY glDepthRangef (GLfloat n, GLfloat f);
 GLAPI void APIENTRY glClearDepthf (GLfloat d);
@@ -2139,7 +2120,7 @@ GLAPI void APIENTRY glGetDoublei_v (GLenum target, GLuint index, GLdouble *data)
 typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
 typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
 typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
-typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
+typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint *params);
 typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
 typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
 typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);
@@ -2152,7 +2133,7 @@ typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum m
 GLAPI void APIENTRY glDrawArraysInstancedBaseInstance (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
 GLAPI void APIENTRY glDrawElementsInstancedBaseInstance (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
 GLAPI void APIENTRY glDrawElementsInstancedBaseVertexBaseInstance (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
-GLAPI void APIENTRY glGetInternalformativ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
+GLAPI void APIENTRY glGetInternalformativ (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint *params);
 GLAPI void APIENTRY glGetActiveAtomicCounterBufferiv (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
 GLAPI void APIENTRY glBindImageTexture (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
 GLAPI void APIENTRY glMemoryBarrier (GLbitfield barriers);
@@ -2433,7 +2414,7 @@ typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);
 typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
 typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);
 typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);
-typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
+typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 *params);
 typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
 typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);
 typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);
@@ -2445,7 +2426,7 @@ typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum
 typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
 typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
 typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
-typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
+typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLint *params);
 typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);
 typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);
 typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
@@ -2477,7 +2458,7 @@ GLAPI void APIENTRY glDispatchComputeIndirect (GLintptr indirect);
 GLAPI void APIENTRY glCopyImageSubData (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
 GLAPI void APIENTRY glFramebufferParameteri (GLenum target, GLenum pname, GLint param);
 GLAPI void APIENTRY glGetFramebufferParameteriv (GLenum target, GLenum pname, GLint *params);
-GLAPI void APIENTRY glGetInternalformati64v (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
+GLAPI void APIENTRY glGetInternalformati64v (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 *params);
 GLAPI void APIENTRY glInvalidateTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
 GLAPI void APIENTRY glInvalidateTexImage (GLuint texture, GLint level);
 GLAPI void APIENTRY glInvalidateBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr length);
@@ -2489,7 +2470,7 @@ GLAPI void APIENTRY glMultiDrawElementsIndirect (GLenum mode, GLenum type, const
 GLAPI void APIENTRY glGetProgramInterfaceiv (GLuint program, GLenum programInterface, GLenum pname, GLint *params);
 GLAPI GLuint APIENTRY glGetProgramResourceIndex (GLuint program, GLenum programInterface, const GLchar *name);
 GLAPI void APIENTRY glGetProgramResourceName (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
-GLAPI void APIENTRY glGetProgramResourceiv (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
+GLAPI void APIENTRY glGetProgramResourceiv (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLint *params);
 GLAPI GLint APIENTRY glGetProgramResourceLocation (GLuint program, GLenum programInterface, const GLchar *name);
 GLAPI GLint APIENTRY glGetProgramResourceLocationIndex (GLuint program, GLenum programInterface, const GLchar *name);
 GLAPI void APIENTRY glShaderStorageBlockBinding (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
@@ -2581,6 +2562,18 @@ GLAPI void APIENTRY glBindVertexBuffers (GLuint first, GLsizei count, const GLui
 #define GL_LOSE_CONTEXT_ON_RESET          0x8252
 #define GL_NO_RESET_NOTIFICATION          0x8261
 #define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT 0x00000004
+#define GL_COLOR_TABLE                    0x80D0
+#define GL_POST_CONVOLUTION_COLOR_TABLE   0x80D1
+#define GL_POST_COLOR_MATRIX_COLOR_TABLE  0x80D2
+#define GL_PROXY_COLOR_TABLE              0x80D3
+#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE 0x80D4
+#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE 0x80D5
+#define GL_CONVOLUTION_1D                 0x8010
+#define GL_CONVOLUTION_2D                 0x8011
+#define GL_SEPARABLE_2D                   0x8012
+#define GL_HISTOGRAM                      0x8024
+#define GL_PROXY_HISTOGRAM                0x8025
+#define GL_MINMAX                         0x802E
 #define GL_CONTEXT_RELEASE_BEHAVIOR       0x82FB
 #define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH 0x82FC
 typedef void (APIENTRYP PFNGLCLIPCONTROLPROC) (GLenum origin, GLenum depth);
@@ -3470,9 +3463,6 @@ typedef khronos_uint16_t GLhalfARB;
 
 #ifndef GL_ARB_imaging
 #define GL_ARB_imaging 1
-#define GL_CONVOLUTION_1D                 0x8010
-#define GL_CONVOLUTION_2D                 0x8011
-#define GL_SEPARABLE_2D                   0x8012
 #define GL_CONVOLUTION_BORDER_MODE        0x8013
 #define GL_CONVOLUTION_FILTER_SCALE       0x8014
 #define GL_CONVOLUTION_FILTER_BIAS        0x8015
@@ -3490,8 +3480,6 @@ typedef khronos_uint16_t GLhalfARB;
 #define GL_POST_CONVOLUTION_GREEN_BIAS    0x8021
 #define GL_POST_CONVOLUTION_BLUE_BIAS     0x8022
 #define GL_POST_CONVOLUTION_ALPHA_BIAS    0x8023
-#define GL_HISTOGRAM                      0x8024
-#define GL_PROXY_HISTOGRAM                0x8025
 #define GL_HISTOGRAM_WIDTH                0x8026
 #define GL_HISTOGRAM_FORMAT               0x8027
 #define GL_HISTOGRAM_RED_SIZE             0x8028
@@ -3500,7 +3488,6 @@ typedef khronos_uint16_t GLhalfARB;
 #define GL_HISTOGRAM_ALPHA_SIZE           0x802B
 #define GL_HISTOGRAM_LUMINANCE_SIZE       0x802C
 #define GL_HISTOGRAM_SINK                 0x802D
-#define GL_MINMAX                         0x802E
 #define GL_MINMAX_FORMAT                  0x802F
 #define GL_MINMAX_SINK                    0x8030
 #define GL_TABLE_TOO_LARGE                0x8031
@@ -3515,12 +3502,6 @@ typedef khronos_uint16_t GLhalfARB;
 #define GL_POST_COLOR_MATRIX_GREEN_BIAS   0x80B9
 #define GL_POST_COLOR_MATRIX_BLUE_BIAS    0x80BA
 #define GL_POST_COLOR_MATRIX_ALPHA_BIAS   0x80BB
-#define GL_COLOR_TABLE                    0x80D0
-#define GL_POST_CONVOLUTION_COLOR_TABLE   0x80D1
-#define GL_POST_COLOR_MATRIX_COLOR_TABLE  0x80D2
-#define GL_PROXY_COLOR_TABLE              0x80D3
-#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE 0x80D4
-#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE 0x80D5
 #define GL_COLOR_TABLE_SCALE              0x80D6
 #define GL_COLOR_TABLE_BIAS               0x80D7
 #define GL_COLOR_TABLE_FORMAT             0x80D8
@@ -4897,6 +4878,12 @@ GLAPI GLint APIENTRY glGetAttribLocationARB (GLhandleARB programObj, const GLcha
 
 #ifndef GL_ARB_viewport_array
 #define GL_ARB_viewport_array 1
+typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYDVNVPROC) (GLuint first, GLsizei count, const GLdouble *v);
+typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDDNVPROC) (GLuint index, GLdouble n, GLdouble f);
+#ifdef GL_GLEXT_PROTOTYPES
+GLAPI void APIENTRY glDepthRangeArraydvNV (GLuint first, GLsizei count, const GLdouble *v);
+GLAPI void APIENTRY glDepthRangeIndexeddNV (GLuint index, GLdouble n, GLdouble f);
+#endif
 #endif /* GL_ARB_viewport_array */
 
 #ifndef GL_ARB_window_pos
@@ -5415,12 +5402,12 @@ typedef void (APIENTRY  *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severi
 typedef void (APIENTRYP PFNGLDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
 typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
 typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, void *userParam);
-typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
+typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufSize, GLenum *categories, GLenum *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
 #ifdef GL_GLEXT_PROTOTYPES
 GLAPI void APIENTRY glDebugMessageEnableAMD (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
 GLAPI void APIENTRY glDebugMessageInsertAMD (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
 GLAPI void APIENTRY glDebugMessageCallbackAMD (GLDEBUGPROCAMD callback, void *userParam);
-GLAPI GLuint APIENTRY glGetDebugMessageLogAMD (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
+GLAPI GLuint APIENTRY glGetDebugMessageLogAMD (GLuint count, GLsizei bufSize, GLenum *categories, GLenum *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
 #endif
 #endif /* GL_AMD_debug_output */
 
@@ -7388,6 +7375,16 @@ GLAPI void APIENTRY glBlitFramebufferEXT (GLint srcX0, GLint srcY0, GLint srcX1,
 #endif
 #endif /* GL_EXT_framebuffer_blit */
 
+#ifndef GL_EXT_framebuffer_blit_layers
+#define GL_EXT_framebuffer_blit_layers 1
+typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERLAYERSEXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
+typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERLAYEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint srcLayer, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLint dstLayer, GLbitfield mask, GLenum filter);
+#ifdef GL_GLEXT_PROTOTYPES
+GLAPI void APIENTRY glBlitFramebufferLayersEXT (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
+GLAPI void APIENTRY glBlitFramebufferLayerEXT (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint srcLayer, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLint dstLayer, GLbitfield mask, GLenum filter);
+#endif
+#endif /* GL_EXT_framebuffer_blit_layers */
+
 #ifndef GL_EXT_framebuffer_multisample
 #define GL_EXT_framebuffer_multisample 1
 #define GL_RENDERBUFFER_SAMPLES_EXT       0x8CAB
@@ -7542,7 +7539,6 @@ GLAPI void APIENTRY glProgramLocalParameters4fvEXT (GLenum target, GLuint index,
 
 #ifndef GL_EXT_gpu_shader4
 #define GL_EXT_gpu_shader4 1
-#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT 0x88FD
 #define GL_SAMPLER_1D_ARRAY_EXT           0x8DC0
 #define GL_SAMPLER_2D_ARRAY_EXT           0x8DC1
 #define GL_SAMPLER_BUFFER_EXT             0x8DC2
@@ -7570,6 +7566,7 @@ GLAPI void APIENTRY glProgramLocalParameters4fvEXT (GLenum target, GLuint index,
 #define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT 0x8DD8
 #define GL_MIN_PROGRAM_TEXEL_OFFSET_EXT   0x8904
 #define GL_MAX_PROGRAM_TEXEL_OFFSET_EXT   0x8905
+#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT 0x88FD
 typedef void (APIENTRYP PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *params);
 typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const GLchar *name);
 typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name);
@@ -7581,6 +7578,29 @@ typedef void (APIENTRYP PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count,
 typedef void (APIENTRYP PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
 typedef void (APIENTRYP PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
 typedef void (APIENTRYP PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);
+typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
+typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *params);
+typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint *params);
 #ifdef GL_GLEXT_PROTOTYPES
 GLAPI void APIENTRY glGetUniformuivEXT (GLuint program, GLint location, GLuint *params);
 GLAPI void APIENTRY glBindFragDataLocationEXT (GLuint program, GLuint color, const GLchar *name);
@@ -7593,6 +7613,29 @@ GLAPI void APIENTRY glUniform1uivEXT (GLint location, GLsizei count, const GLuin
 GLAPI void APIENTRY glUniform2uivEXT (GLint location, GLsizei count, const GLuint *value);
 GLAPI void APIENTRY glUniform3uivEXT (GLint location, GLsizei count, const GLuint *value);
 GLAPI void APIENTRY glUniform4uivEXT (GLint location, GLsizei count, const GLuint *value);
+GLAPI void APIENTRY glVertexAttribI1iEXT (GLuint index, GLint x);
+GLAPI void APIENTRY glVertexAttribI2iEXT (GLuint index, GLint x, GLint y);
+GLAPI void APIENTRY glVertexAttribI3iEXT (GLuint index, GLint x, GLint y, GLint z);
+GLAPI void APIENTRY glVertexAttribI4iEXT (GLuint index, GLint x, GLint y, GLint z, GLint w);
+GLAPI void APIENTRY glVertexAttribI1uiEXT (GLuint index, GLuint x);
+GLAPI void APIENTRY glVertexAttribI2uiEXT (GLuint index, GLuint x, GLuint y);
+GLAPI void APIENTRY glVertexAttribI3uiEXT (GLuint index, GLuint x, GLuint y, GLuint z);
+GLAPI void APIENTRY glVertexAttribI4uiEXT (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
+GLAPI void APIENTRY glVertexAttribI1ivEXT (GLuint index, const GLint *v);
+GLAPI void APIENTRY glVertexAttribI2ivEXT (GLuint index, const GLint *v);
+GLAPI void APIENTRY glVertexAttribI3ivEXT (GLuint index, const GLint *v);
+GLAPI void APIENTRY glVertexAttribI4ivEXT (GLuint index, const GLint *v);
+GLAPI void APIENTRY glVertexAttribI1uivEXT (GLuint index, const GLuint *v);
+GLAPI void APIENTRY glVertexAttribI2uivEXT (GLuint index, const GLuint *v);
+GLAPI void APIENTRY glVertexAttribI3uivEXT (GLuint index, const GLuint *v);
+GLAPI void APIENTRY glVertexAttribI4uivEXT (GLuint index, const GLuint *v);
+GLAPI void APIENTRY glVertexAttribI4bvEXT (GLuint index, const GLbyte *v);
+GLAPI void APIENTRY glVertexAttribI4svEXT (GLuint index, const GLshort *v);
+GLAPI void APIENTRY glVertexAttribI4ubvEXT (GLuint index, const GLubyte *v);
+GLAPI void APIENTRY glVertexAttribI4usvEXT (GLuint index, const GLushort *v);
+GLAPI void APIENTRY glVertexAttribIPointerEXT (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
+GLAPI void APIENTRY glGetVertexAttribIivEXT (GLuint index, GLenum pname, GLint *params);
+GLAPI void APIENTRY glGetVertexAttribIuivEXT (GLuint index, GLenum pname, GLuint *params);
 #endif
 #endif /* GL_EXT_gpu_shader4 */
 
@@ -8186,6 +8229,10 @@ GLAPI void APIENTRY glMemoryBarrierEXT (GLbitfield barriers);
 #define GL_EXT_shader_integer_mix 1
 #endif /* GL_EXT_shader_integer_mix */
 
+#ifndef GL_EXT_shader_samples_identical
+#define GL_EXT_shader_samples_identical 1
+#endif /* GL_EXT_shader_samples_identical */
+
 #ifndef GL_EXT_shadow_funcs
 #define GL_EXT_shadow_funcs 1
 #endif /* GL_EXT_shadow_funcs */
@@ -8554,6 +8601,11 @@ GLAPI void APIENTRY glTextureNormalEXT (GLenum mode);
 #define GL_SR8_EXT                        0x8FBD
 #endif /* GL_EXT_texture_sRGB_R8 */
 
+#ifndef GL_EXT_texture_sRGB_RG8
+#define GL_EXT_texture_sRGB_RG8 1
+#define GL_SRG8_EXT                       0x8FBE
+#endif /* GL_EXT_texture_sRGB_RG8 */
+
 #ifndef GL_EXT_texture_sRGB_decode
 #define GL_EXT_texture_sRGB_decode 1
 #define GL_TEXTURE_SRGB_DECODE_EXT        0x8A48
@@ -8592,6 +8644,36 @@ GLAPI void APIENTRY glTextureNormalEXT (GLenum mode);
 #define GL_RGBA_SNORM                     0x8F93
 #endif /* GL_EXT_texture_snorm */
 
+#ifndef GL_EXT_texture_storage
+#define GL_EXT_texture_storage 1
+#define GL_TEXTURE_IMMUTABLE_FORMAT_EXT   0x912F
+#define GL_RGBA32F_EXT                    0x8814
+#define GL_RGB32F_EXT                     0x8815
+#define GL_ALPHA32F_EXT                   0x8816
+#define GL_LUMINANCE32F_EXT               0x8818
+#define GL_LUMINANCE_ALPHA32F_EXT         0x8819
+#define GL_RGBA16F_EXT                    0x881A
+#define GL_RGB16F_EXT                     0x881B
+#define GL_ALPHA16F_EXT                   0x881C
+#define GL_LUMINANCE16F_EXT               0x881E
+#define GL_LUMINANCE_ALPHA16F_EXT         0x881F
+#define GL_BGRA8_EXT                      0x93A1
+#define GL_R8_EXT                         0x8229
+#define GL_RG8_EXT                        0x822B
+#define GL_R32F_EXT                       0x822E
+#define GL_RG32F_EXT                      0x8230
+#define GL_R16F_EXT                       0x822D
+#define GL_RG16F_EXT                      0x822F
+typedef void (APIENTRYP PFNGLTEXSTORAGE1DEXTPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
+typedef void (APIENTRYP PFNGLTEXSTORAGE2DEXTPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
+typedef void (APIENTRYP PFNGLTEXSTORAGE3DEXTPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
+#ifdef GL_GLEXT_PROTOTYPES
+GLAPI void APIENTRY glTexStorage1DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
+GLAPI void APIENTRY glTexStorage2DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
+GLAPI void APIENTRY glTexStorage3DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
+#endif
+#endif /* GL_EXT_texture_storage */
+
 #ifndef GL_EXT_texture_swizzle
 #define GL_EXT_texture_swizzle 1
 #define GL_TEXTURE_SWIZZLE_R_EXT          0x8E42
@@ -9284,6 +9366,11 @@ GLAPI void APIENTRY glGetPerfQueryInfoINTEL (GLuint queryId, GLuint queryNameLen
 #define GL_TEXTURE_2D_STACK_BINDING_MESAX 0x875E
 #endif /* GL_MESAX_texture_stack */
 
+#ifndef GL_MESA_framebuffer_flip_x
+#define GL_MESA_framebuffer_flip_x 1
+#define GL_FRAMEBUFFER_FLIP_X_MESA        0x8BBC
+#endif /* GL_MESA_framebuffer_flip_x */
+
 #ifndef GL_MESA_framebuffer_flip_y
 #define GL_MESA_framebuffer_flip_y 1
 #define GL_FRAMEBUFFER_FLIP_Y_MESA        0x8BBB
@@ -9295,6 +9382,11 @@ GLAPI void APIENTRY glGetFramebufferParameterivMESA (GLenum target, GLenum pname
 #endif
 #endif /* GL_MESA_framebuffer_flip_y */
 
+#ifndef GL_MESA_framebuffer_swap_xy
+#define GL_MESA_framebuffer_swap_xy 1
+#define GL_FRAMEBUFFER_SWAP_XY_MESA       0x8BBD
+#endif /* GL_MESA_framebuffer_swap_xy */
+
 #ifndef GL_MESA_pack_invert
 #define GL_MESA_pack_invert 1
 #define GL_PACK_INVERT_MESA               0x8758
@@ -9988,11 +10080,11 @@ GLAPI void APIENTRY glGetProgramNamedParameterdvNV (GLuint id, GLsizei len, cons
 #define GL_COVERAGE_MODULATION_NV         0x9332
 #define GL_COVERAGE_MODULATION_TABLE_SIZE_NV 0x9333
 typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONTABLENVPROC) (GLsizei n, const GLfloat *v);
-typedef void (APIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) (GLsizei bufsize, GLfloat *v);
+typedef void (APIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) (GLsizei bufSize, GLfloat *v);
 typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONNVPROC) (GLenum components);
 #ifdef GL_GLEXT_PROTOTYPES
 GLAPI void APIENTRY glCoverageModulationTableNV (GLsizei n, const GLfloat *v);
-GLAPI void APIENTRY glGetCoverageModulationTableNV (GLsizei bufsize, GLfloat *v);
+GLAPI void APIENTRY glGetCoverageModulationTableNV (GLsizei bufSize, GLfloat *v);
 GLAPI void APIENTRY glCoverageModulationNV (GLenum components);
 #endif
 #endif /* GL_NV_framebuffer_mixed_samples */
@@ -10171,12 +10263,6 @@ typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s,
 typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);
 typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
 typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);
-typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);
-typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);
-typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
-typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);
-typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);
-typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);
 typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);
 typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);
 typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);
@@ -10189,6 +10275,12 @@ typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, c
 typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);
 typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);
 typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);
+typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);
+typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);
+typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
+typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);
+typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);
+typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);
 #ifdef GL_GLEXT_PROTOTYPES
 GLAPI void APIENTRY glVertex2hNV (GLhalfNV x, GLhalfNV y);
 GLAPI void APIENTRY glVertex2hvNV (const GLhalfNV *v);
@@ -10218,12 +10310,6 @@ GLAPI void APIENTRY glMultiTexCoord3hNV (GLenum target, GLhalfNV s, GLhalfNV t,
 GLAPI void APIENTRY glMultiTexCoord3hvNV (GLenum target, const GLhalfNV *v);
 GLAPI void APIENTRY glMultiTexCoord4hNV (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
 GLAPI void APIENTRY glMultiTexCoord4hvNV (GLenum target, const GLhalfNV *v);
-GLAPI void APIENTRY glFogCoordhNV (GLhalfNV fog);
-GLAPI void APIENTRY glFogCoordhvNV (const GLhalfNV *fog);
-GLAPI void APIENTRY glSecondaryColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
-GLAPI void APIENTRY glSecondaryColor3hvNV (const GLhalfNV *v);
-GLAPI void APIENTRY glVertexWeighthNV (GLhalfNV weight);
-GLAPI void APIENTRY glVertexWeighthvNV (const GLhalfNV *weight);
 GLAPI void APIENTRY glVertexAttrib1hNV (GLuint index, GLhalfNV x);
 GLAPI void APIENTRY glVertexAttrib1hvNV (GLuint index, const GLhalfNV *v);
 GLAPI void APIENTRY glVertexAttrib2hNV (GLuint index, GLhalfNV x, GLhalfNV y);
@@ -10236,6 +10322,12 @@ GLAPI void APIENTRY glVertexAttribs1hvNV (GLuint index, GLsizei n, const GLhalfN
 GLAPI void APIENTRY glVertexAttribs2hvNV (GLuint index, GLsizei n, const GLhalfNV *v);
 GLAPI void APIENTRY glVertexAttribs3hvNV (GLuint index, GLsizei n, const GLhalfNV *v);
 GLAPI void APIENTRY glVertexAttribs4hvNV (GLuint index, GLsizei n, const GLhalfNV *v);
+GLAPI void APIENTRY glFogCoordhNV (GLhalfNV fog);
+GLAPI void APIENTRY glFogCoordhvNV (const GLhalfNV *fog);
+GLAPI void APIENTRY glSecondaryColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue);
+GLAPI void APIENTRY glSecondaryColor3hvNV (const GLhalfNV *v);
+GLAPI void APIENTRY glVertexWeighthNV (GLhalfNV weight);
+GLAPI void APIENTRY glVertexWeighthvNV (const GLhalfNV *weight);
 #endif
 #endif /* GL_NV_half_float */
 
@@ -10245,9 +10337,9 @@ GLAPI void APIENTRY glVertexAttribs4hvNV (GLuint index, GLsizei n, const GLhalfN
 #define GL_SUPERSAMPLE_SCALE_X_NV         0x9372
 #define GL_SUPERSAMPLE_SCALE_Y_NV         0x9373
 #define GL_CONFORMANT_NV                  0x9374
-typedef void (APIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);
+typedef void (APIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei count, GLint *params);
 #ifdef GL_GLEXT_PROTOTYPES
-GLAPI void APIENTRY glGetInternalformatSampleivNV (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);
+GLAPI void APIENTRY glGetInternalformatSampleivNV (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei count, GLint *params);
 #endif
 #endif /* GL_NV_internalformat_sample_query */
 
@@ -10285,6 +10377,20 @@ GLAPI void APIENTRY glNamedBufferAttachMemoryNV (GLuint buffer, GLuint memory, G
 #endif
 #endif /* GL_NV_memory_attachment */
 
+#ifndef GL_NV_memory_object_sparse
+#define GL_NV_memory_object_sparse 1
+typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTMEMNVPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
+typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTMEMNVPROC) (GLenum target, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
+typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
+typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC) (GLuint texture, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
+#ifdef GL_GLEXT_PROTOTYPES
+GLAPI void APIENTRY glBufferPageCommitmentMemNV (GLenum target, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
+GLAPI void APIENTRY glTexPageCommitmentMemNV (GLenum target, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
+GLAPI void APIENTRY glNamedBufferPageCommitmentMemNV (GLuint buffer, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
+GLAPI void APIENTRY glTexturePageCommitmentMemNV (GLuint texture, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
+#endif
+#endif /* GL_NV_memory_object_sparse */
+
 #ifndef GL_NV_mesh_shader
 #define GL_NV_mesh_shader 1
 #define GL_MESH_SHADER_NV                 0x9559
@@ -10624,11 +10730,11 @@ typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHNVPROC) (GLuint path, GLenu
 typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask, GLenum coverMode);
 typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
 typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
-typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
+typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint *baseAndCount);
 typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
 typedef GLenum (APIENTRYP PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
 typedef void (APIENTRYP PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);
-typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);
+typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLfloat *params);
 typedef void (APIENTRYP PFNGLPATHCOLORGENNVPROC) (GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);
 typedef void (APIENTRYP PFNGLPATHTEXGENNVPROC) (GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);
 typedef void (APIENTRYP PFNGLPATHFOGGENNVPROC) (GLenum genMode);
@@ -10689,11 +10795,11 @@ GLAPI void APIENTRY glStencilThenCoverFillPathNV (GLuint path, GLenum fillMode,
 GLAPI void APIENTRY glStencilThenCoverStrokePathNV (GLuint path, GLint reference, GLuint mask, GLenum coverMode);
 GLAPI void APIENTRY glStencilThenCoverFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
 GLAPI void APIENTRY glStencilThenCoverStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
-GLAPI GLenum APIENTRY glPathGlyphIndexRangeNV (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
+GLAPI GLenum APIENTRY glPathGlyphIndexRangeNV (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint *baseAndCount);
 GLAPI GLenum APIENTRY glPathGlyphIndexArrayNV (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
 GLAPI GLenum APIENTRY glPathMemoryGlyphIndexArrayNV (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
 GLAPI void APIENTRY glProgramPathFragmentInputGenNV (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);
-GLAPI void APIENTRY glGetProgramResourcefvNV (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);
+GLAPI void APIENTRY glGetProgramResourcefvNV (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLfloat *params);
 GLAPI void APIENTRY glPathColorGenNV (GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);
 GLAPI void APIENTRY glPathTexGenNV (GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);
 GLAPI void APIENTRY glPathFogGenNV (GLenum genMode);
@@ -10774,6 +10880,12 @@ GLAPI void APIENTRY glPrimitiveRestartIndexNV (GLuint index);
 #endif
 #endif /* GL_NV_primitive_restart */
 
+#ifndef GL_NV_primitive_shading_rate
+#define GL_NV_primitive_shading_rate 1
+#define GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV 0x95B1
+#define GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV 0x95B2
+#endif /* GL_NV_primitive_shading_rate */
+
 #ifndef GL_NV_query_resource
 #define GL_NV_query_resource 1
 #define GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV 0x9540
@@ -10782,9 +10894,9 @@ GLAPI void APIENTRY glPrimitiveRestartIndexNV (GLuint index);
 #define GL_QUERY_RESOURCE_TEXTURE_NV      0x9545
 #define GL_QUERY_RESOURCE_RENDERBUFFER_NV 0x9546
 #define GL_QUERY_RESOURCE_BUFFEROBJECT_NV 0x9547
-typedef GLint (APIENTRYP PFNGLQUERYRESOURCENVPROC) (GLenum queryType, GLint tagId, GLuint bufSize, GLint *buffer);
+typedef GLint (APIENTRYP PFNGLQUERYRESOURCENVPROC) (GLenum queryType, GLint tagId, GLuint count, GLint *buffer);
 #ifdef GL_GLEXT_PROTOTYPES
-GLAPI GLint APIENTRY glQueryResourceNV (GLenum queryType, GLint tagId, GLuint bufSize, GLint *buffer);
+GLAPI GLint APIENTRY glQueryResourceNV (GLenum queryType, GLint tagId, GLuint count, GLint *buffer);
 #endif
 #endif /* GL_NV_query_resource */
 
@@ -11250,6 +11362,23 @@ GLAPI void APIENTRY glTextureImage3DMultisampleCoverageNV (GLuint texture, GLenu
 #define GL_FORCE_BLUE_TO_ONE_NV           0x8860
 #endif /* GL_NV_texture_shader3 */
 
+#ifndef GL_NV_timeline_semaphore
+#define GL_NV_timeline_semaphore 1
+#define GL_TIMELINE_SEMAPHORE_VALUE_NV    0x9595
+#define GL_SEMAPHORE_TYPE_NV              0x95B3
+#define GL_SEMAPHORE_TYPE_BINARY_NV       0x95B4
+#define GL_SEMAPHORE_TYPE_TIMELINE_NV     0x95B5
+#define GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV 0x95B6
+typedef void (APIENTRYP PFNGLCREATESEMAPHORESNVPROC) (GLsizei n, GLuint *semaphores);
+typedef void (APIENTRYP PFNGLSEMAPHOREPARAMETERIVNVPROC) (GLuint semaphore, GLenum pname, const GLint *params);
+typedef void (APIENTRYP PFNGLGETSEMAPHOREPARAMETERIVNVPROC) (GLuint semaphore, GLenum pname, GLint *params);
+#ifdef GL_GLEXT_PROTOTYPES
+GLAPI void APIENTRY glCreateSemaphoresNV (GLsizei n, GLuint *semaphores);
+GLAPI void APIENTRY glSemaphoreParameterivNV (GLuint semaphore, GLenum pname, const GLint *params);
+GLAPI void APIENTRY glGetSemaphoreParameterivNV (GLuint semaphore, GLenum pname, GLint *params);
+#endif
+#endif /* GL_NV_timeline_semaphore */
+
 #ifndef GL_NV_transform_feedback
 #define GL_NV_transform_feedback 1
 #define GL_BACK_PRIMARY_COLOR_NV          0x8C77
@@ -11355,7 +11484,7 @@ typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) (const
 typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) (const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
 typedef GLboolean (APIENTRYP PFNGLVDPAUISSURFACENVPROC) (GLvdpauSurfaceNV surface);
 typedef void (APIENTRYP PFNGLVDPAUUNREGISTERSURFACENVPROC) (GLvdpauSurfaceNV surface);
-typedef void (APIENTRYP PFNGLVDPAUGETSURFACEIVNVPROC) (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
+typedef void (APIENTRYP PFNGLVDPAUGETSURFACEIVNVPROC) (GLvdpauSurfaceNV surface, GLenum pname, GLsizei count, GLsizei *length, GLint *values);
 typedef void (APIENTRYP PFNGLVDPAUSURFACEACCESSNVPROC) (GLvdpauSurfaceNV surface, GLenum access);
 typedef void (APIENTRYP PFNGLVDPAUMAPSURFACESNVPROC) (GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);
 typedef void (APIENTRYP PFNGLVDPAUUNMAPSURFACESNVPROC) (GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);
@@ -11366,7 +11495,7 @@ GLAPI GLvdpauSurfaceNV APIENTRY glVDPAURegisterVideoSurfaceNV (const void *vdpSu
 GLAPI GLvdpauSurfaceNV APIENTRY glVDPAURegisterOutputSurfaceNV (const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
 GLAPI GLboolean APIENTRY glVDPAUIsSurfaceNV (GLvdpauSurfaceNV surface);
 GLAPI void APIENTRY glVDPAUUnregisterSurfaceNV (GLvdpauSurfaceNV surface);
-GLAPI void APIENTRY glVDPAUGetSurfaceivNV (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
+GLAPI void APIENTRY glVDPAUGetSurfaceivNV (GLvdpauSurfaceNV surface, GLenum pname, GLsizei count, GLsizei *length, GLint *values);
 GLAPI void APIENTRY glVDPAUSurfaceAccessNV (GLvdpauSurfaceNV surface, GLenum access);
 GLAPI void APIENTRY glVDPAUMapSurfacesNV (GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);
 GLAPI void APIENTRY glVDPAUUnmapSurfacesNV (GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);
@@ -11736,54 +11865,6 @@ GLAPI void APIENTRY glVertexAttribs4ubvNV (GLuint index, GLsizei count, const GL
 #ifndef GL_NV_vertex_program4
 #define GL_NV_vertex_program4 1
 #define GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV 0x88FD
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);
-typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
-typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *params);
-typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint *params);
-#ifdef GL_GLEXT_PROTOTYPES
-GLAPI void APIENTRY glVertexAttribI1iEXT (GLuint index, GLint x);
-GLAPI void APIENTRY glVertexAttribI2iEXT (GLuint index, GLint x, GLint y);
-GLAPI void APIENTRY glVertexAttribI3iEXT (GLuint index, GLint x, GLint y, GLint z);
-GLAPI void APIENTRY glVertexAttribI4iEXT (GLuint index, GLint x, GLint y, GLint z, GLint w);
-GLAPI void APIENTRY glVertexAttribI1uiEXT (GLuint index, GLuint x);
-GLAPI void APIENTRY glVertexAttribI2uiEXT (GLuint index, GLuint x, GLuint y);
-GLAPI void APIENTRY glVertexAttribI3uiEXT (GLuint index, GLuint x, GLuint y, GLuint z);
-GLAPI void APIENTRY glVertexAttribI4uiEXT (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
-GLAPI void APIENTRY glVertexAttribI1ivEXT (GLuint index, const GLint *v);
-GLAPI void APIENTRY glVertexAttribI2ivEXT (GLuint index, const GLint *v);
-GLAPI void APIENTRY glVertexAttribI3ivEXT (GLuint index, const GLint *v);
-GLAPI void APIENTRY glVertexAttribI4ivEXT (GLuint index, const GLint *v);
-GLAPI void APIENTRY glVertexAttribI1uivEXT (GLuint index, const GLuint *v);
-GLAPI void APIENTRY glVertexAttribI2uivEXT (GLuint index, const GLuint *v);
-GLAPI void APIENTRY glVertexAttribI3uivEXT (GLuint index, const GLuint *v);
-GLAPI void APIENTRY glVertexAttribI4uivEXT (GLuint index, const GLuint *v);
-GLAPI void APIENTRY glVertexAttribI4bvEXT (GLuint index, const GLbyte *v);
-GLAPI void APIENTRY glVertexAttribI4svEXT (GLuint index, const GLshort *v);
-GLAPI void APIENTRY glVertexAttribI4ubvEXT (GLuint index, const GLubyte *v);
-GLAPI void APIENTRY glVertexAttribI4usvEXT (GLuint index, const GLushort *v);
-GLAPI void APIENTRY glVertexAttribIPointerEXT (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
-GLAPI void APIENTRY glGetVertexAttribIivEXT (GLuint index, GLenum pname, GLint *params);
-GLAPI void APIENTRY glGetVertexAttribIuivEXT (GLuint index, GLenum pname, GLuint *params);
-#endif
 #endif /* GL_NV_vertex_program4 */
 
 #ifndef GL_NV_video_capture
diff --git a/include/GL/glxext.h b/include/GL/glxext.h
index 662c26546bd..3b5fcff7caf 100644
--- a/include/GL/glxext.h
+++ b/include/GL/glxext.h
@@ -34,7 +34,7 @@ extern "C" {
 **   https://github.com/KhronosGroup/OpenGL-Registry
 */
 
-#define GLX_GLXEXT_VERSION 20190911
+#define GLX_GLXEXT_VERSION 20220930
 
 /* Generated C header for:
  * API: glx
diff --git a/include/GL/wglext.h b/include/GL/wglext.h
index 10c3ce11193..cbae0e12231 100644
--- a/include/GL/wglext.h
+++ b/include/GL/wglext.h
@@ -6,28 +6,9 @@ extern "C" {
 #endif
 
 /*
-** Copyright (c) 2013-2018 The Khronos Group Inc.
+** Copyright 2013-2020 The Khronos Group Inc.
+** SPDX-License-Identifier: MIT
 **
-** Permission is hereby granted, free of charge, to any person obtaining a
-** copy of this software and/or associated documentation files (the
-** "Materials"), to deal in the Materials without restriction, including
-** without limitation the rights to use, copy, modify, merge, publish,
-** distribute, sublicense, and/or sell copies of the Materials, and to
-** permit persons to whom the Materials are furnished to do so, subject to
-** the following conditions:
-**
-** The above copyright notice and this permission notice shall be included
-** in all copies or substantial portions of the Materials.
-**
-** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
-** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
-** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
-** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
-*/
-/*
 ** This header is generated from the Khronos OpenGL / OpenGL ES XML
 ** API Registry. The current version of the Registry, generator scripts
 ** used to make the header, and the header can be found at
@@ -39,7 +20,7 @@ extern "C" {
 #include <windows.h>
 #endif
 
-#define WGL_WGLEXT_VERSION 20190728
+#define WGL_WGLEXT_VERSION 20230220
 
 /* Generated C header for:
  * API: wgl
diff --git a/include/GLES/egl.h b/include/GLES/egl.h
index 86f644c923b..4f8903d9425 100644
--- a/include/GLES/egl.h
+++ b/include/GLES/egl.h
@@ -1,17 +1,6 @@
 /*
-** Copyright (c) 2008-2017 The Khronos Group Inc.
-**
-** Licensed under the Apache License, Version 2.0 (the "License");
-** you may not use this file except in compliance with the License.
-** You may obtain a copy of the License at
-**
-**     http://www.apache.org/licenses/LICENSE-2.0
-**
-** Unless required by applicable law or agreed to in writing, software
-** distributed under the License is distributed on an "AS IS" BASIS,
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-** See the License for the specific language governing permissions and
-** limitations under the License.
+** Copyright 2008-2020 The Khronos Group Inc.
+** SPDX-License-Identifier: Apache-2.0
 */
 
 /*
diff --git a/include/GLES/gl.h b/include/GLES/gl.h
index 47ddc7eb2dd..df0372025ce 100644
--- a/include/GLES/gl.h
+++ b/include/GLES/gl.h
@@ -6,28 +6,9 @@ extern "C" {
 #endif
 
 /*
-** Copyright (c) 2013-2018 The Khronos Group Inc.
+** Copyright 2013-2020 The Khronos Group Inc.
+** SPDX-License-Identifier: MIT
 **
-** Permission is hereby granted, free of charge, to any person obtaining a
-** copy of this software and/or associated documentation files (the
-** "Materials"), to deal in the Materials without restriction, including
-** without limitation the rights to use, copy, modify, merge, publish,
-** distribute, sublicense, and/or sell copies of the Materials, and to
-** permit persons to whom the Materials are furnished to do so, subject to
-** the following conditions:
-**
-** The above copyright notice and this permission notice shall be included
-** in all copies or substantial portions of the Materials.
-**
-** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
-** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
-** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
-** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
-*/
-/*
 ** This header is generated from the Khronos OpenGL / OpenGL ES XML
 ** API Registry. The current version of the Registry, generator scripts
 ** used to make the header, and the header can be found at
@@ -36,7 +17,7 @@ extern "C" {
 
 #include <GLES/glplatform.h>
 
-/* Generated on date 20190611 */
+/* Generated on date 20230220 */
 
 /* Generated C header for:
  * API: gles1
diff --git a/include/GLES/glext.h b/include/GLES/glext.h
index ee65666645d..9c829484cfd 100644
--- a/include/GLES/glext.h
+++ b/include/GLES/glext.h
@@ -6,28 +6,9 @@ extern "C" {
 #endif
 
 /*
-** Copyright (c) 2013-2018 The Khronos Group Inc.
+** Copyright 2013-2020 The Khronos Group Inc.
+** SPDX-License-Identifier: MIT
 **
-** Permission is hereby granted, free of charge, to any person obtaining a
-** copy of this software and/or associated documentation files (the
-** "Materials"), to deal in the Materials without restriction, including
-** without limitation the rights to use, copy, modify, merge, publish,
-** distribute, sublicense, and/or sell copies of the Materials, and to
-** permit persons to whom the Materials are furnished to do so, subject to
-** the following conditions:
-**
-** The above copyright notice and this permission notice shall be included
-** in all copies or substantial portions of the Materials.
-**
-** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
-** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
-** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
-** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
-*/
-/*
 ** This header is generated from the Khronos OpenGL / OpenGL ES XML
 ** API Registry. The current version of the Registry, generator scripts
 ** used to make the header, and the header can be found at
@@ -38,7 +19,7 @@ extern "C" {
 #define GL_APIENTRYP GL_APIENTRY*
 #endif
 
-/* Generated on date 20190611 */
+/* Generated on date 20230220 */
 
 /* Generated C header for:
  * API: gles1
@@ -577,7 +558,7 @@ typedef void (GL_APIENTRYP PFNGLDELETESYNCAPPLEPROC) (GLsync sync);
 typedef GLenum (GL_APIENTRYP PFNGLCLIENTWAITSYNCAPPLEPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
 typedef void (GL_APIENTRYP PFNGLWAITSYNCAPPLEPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
 typedef void (GL_APIENTRYP PFNGLGETINTEGER64VAPPLEPROC) (GLenum pname, GLint64 *params);
-typedef void (GL_APIENTRYP PFNGLGETSYNCIVAPPLEPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
+typedef void (GL_APIENTRYP PFNGLGETSYNCIVAPPLEPROC) (GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values);
 #ifdef GL_GLEXT_PROTOTYPES
 GL_API GLsync GL_APIENTRY glFenceSyncAPPLE (GLenum condition, GLbitfield flags);
 GL_API GLboolean GL_APIENTRY glIsSyncAPPLE (GLsync sync);
@@ -585,7 +566,7 @@ GL_API void GL_APIENTRY glDeleteSyncAPPLE (GLsync sync);
 GL_API GLenum GL_APIENTRY glClientWaitSyncAPPLE (GLsync sync, GLbitfield flags, GLuint64 timeout);
 GL_API void GL_APIENTRY glWaitSyncAPPLE (GLsync sync, GLbitfield flags, GLuint64 timeout);
 GL_API void GL_APIENTRY glGetInteger64vAPPLE (GLenum pname, GLint64 *params);
-GL_API void GL_APIENTRY glGetSyncivAPPLE (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
+GL_API void GL_APIENTRY glGetSyncivAPPLE (GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values);
 #endif
 #endif /* GL_APPLE_sync */
 
diff --git a/include/GLES/glplatform.h b/include/GLES/glplatform.h
index 16060a9a73b..3155ef29d5e 100644
--- a/include/GLES/glplatform.h
+++ b/include/GLES/glplatform.h
@@ -2,19 +2,8 @@
 #define __glplatform_h_
 
 /*
-** Copyright (c) 2017 The Khronos Group Inc.
-**
-** Licensed under the Apache License, Version 2.0 (the "License");
-** you may not use this file except in compliance with the License.
-** You may obtain a copy of the License at
-**
-**     http://www.apache.org/licenses/LICENSE-2.0
-**
-** Unless required by applicable law or agreed to in writing, software
-** distributed under the License is distributed on an "AS IS" BASIS,
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-** See the License for the specific language governing permissions and
-** limitations under the License.
+** Copyright 2017-2020 The Khronos Group Inc.
+** SPDX-License-Identifier: Apache-2.0
 */
 
 /* Platform-specific types and definitions for OpenGL ES 1.X  gl.h
diff --git a/include/GLES2/gl2.h b/include/GLES2/gl2.h
index e43cd5d3ed8..bf399b00b44 100644
--- a/include/GLES2/gl2.h
+++ b/include/GLES2/gl2.h
@@ -6,28 +6,9 @@ extern "C" {
 #endif
 
 /*
-** Copyright (c) 2013-2018 The Khronos Group Inc.
+** Copyright 2013-2020 The Khronos Group Inc.
+** SPDX-License-Identifier: MIT
 **
-** Permission is hereby granted, free of charge, to any person obtaining a
-** copy of this software and/or associated documentation files (the
-** "Materials"), to deal in the Materials without restriction, including
-** without limitation the rights to use, copy, modify, merge, publish,
-** distribute, sublicense, and/or sell copies of the Materials, and to
-** permit persons to whom the Materials are furnished to do so, subject to
-** the following conditions:
-**
-** The above copyright notice and this permission notice shall be included
-** in all copies or substantial portions of the Materials.
-**
-** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
-** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
-** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
-** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
-*/
-/*
 ** This header is generated from the Khronos OpenGL / OpenGL ES XML
 ** API Registry. The current version of the Registry, generator scripts
 ** used to make the header, and the header can be found at
@@ -44,7 +25,7 @@ extern "C" {
 #define GL_GLES_PROTOTYPES 1
 #endif
 
-/* Generated on date 20190911 */
+/* Generated on date 20230220 */
 
 /* Generated C header for:
  * API: gles2
@@ -477,7 +458,7 @@ typedef void (GL_APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);
 typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
 typedef void (GL_APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);
 typedef void (GL_APIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);
-typedef void (GL_APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
+typedef void (GL_APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryFormat, const void *binary, GLsizei length);
 typedef void (GL_APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
 typedef void (GL_APIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);
 typedef void (GL_APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);
@@ -620,7 +601,7 @@ GL_APICALL void GL_APIENTRY glReleaseShaderCompiler (void);
 GL_APICALL void GL_APIENTRY glRenderbufferStorage (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
 GL_APICALL void GL_APIENTRY glSampleCoverage (GLfloat value, GLboolean invert);
 GL_APICALL void GL_APIENTRY glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
-GL_APICALL void GL_APIENTRY glShaderBinary (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
+GL_APICALL void GL_APIENTRY glShaderBinary (GLsizei count, const GLuint *shaders, GLenum binaryFormat, const void *binary, GLsizei length);
 GL_APICALL void GL_APIENTRY glShaderSource (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
 GL_APICALL void GL_APIENTRY glStencilFunc (GLenum func, GLint ref, GLuint mask);
 GL_APICALL void GL_APIENTRY glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask);
diff --git a/include/GLES2/gl2ext.h b/include/GLES2/gl2ext.h
index 141e4d6c167..2d0564ccc4e 100644
--- a/include/GLES2/gl2ext.h
+++ b/include/GLES2/gl2ext.h
@@ -6,28 +6,9 @@ extern "C" {
 #endif
 
 /*
-** Copyright (c) 2013-2018 The Khronos Group Inc.
+** Copyright 2013-2020 The Khronos Group Inc.
+** SPDX-License-Identifier: MIT
 **
-** Permission is hereby granted, free of charge, to any person obtaining a
-** copy of this software and/or associated documentation files (the
-** "Materials"), to deal in the Materials without restriction, including
-** without limitation the rights to use, copy, modify, merge, publish,
-** distribute, sublicense, and/or sell copies of the Materials, and to
-** permit persons to whom the Materials are furnished to do so, subject to
-** the following conditions:
-**
-** The above copyright notice and this permission notice shall be included
-** in all copies or substantial portions of the Materials.
-**
-** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
-** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
-** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
-** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
-*/
-/*
 ** This header is generated from the Khronos OpenGL / OpenGL ES XML
 ** API Registry. The current version of the Registry, generator scripts
 ** used to make the header, and the header can be found at
@@ -38,7 +19,7 @@ extern "C" {
 #define GL_APIENTRYP GL_APIENTRY*
 #endif
 
-/* Generated on date 20190911 */
+/* Generated on date 20230220 */
 
 /* Generated C header for:
  * API: gles2
@@ -350,12 +331,12 @@ GL_APICALL GLboolean GL_APIENTRY glIsEnablediOES (GLenum target, GLuint index);
 typedef void (GL_APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXOESPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
 typedef void (GL_APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
 typedef void (GL_APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
-typedef void (GL_APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, const GLint *basevertex);
+typedef void (GL_APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
 #ifdef GL_GLEXT_PROTOTYPES
 GL_APICALL void GL_APIENTRY glDrawElementsBaseVertexOES (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
 GL_APICALL void GL_APIENTRY glDrawRangeElementsBaseVertexOES (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
 GL_APICALL void GL_APIENTRY glDrawElementsInstancedBaseVertexOES (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
-GL_APICALL void GL_APIENTRY glMultiDrawElementsBaseVertexEXT (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, const GLint *basevertex);
+GL_APICALL void GL_APIENTRY glMultiDrawElementsBaseVertexEXT (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
 #endif
 #endif /* GL_OES_draw_elements_base_vertex */
 
@@ -946,9 +927,9 @@ GL_APICALL void GL_APIENTRY glVertexAttribDivisorANGLE (GLuint index, GLuint div
 #ifndef GL_ANGLE_translated_shader_source
 #define GL_ANGLE_translated_shader_source 1
 #define GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE 0x93A0
-typedef void (GL_APIENTRYP PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC) (GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *source);
+typedef void (GL_APIENTRYP PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
 #ifdef GL_GLEXT_PROTOTYPES
-GL_APICALL void GL_APIENTRY glGetTranslatedShaderSourceANGLE (GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *source);
+GL_APICALL void GL_APIENTRY glGetTranslatedShaderSourceANGLE (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
 #endif
 #endif /* GL_ANGLE_translated_shader_source */
 
@@ -1026,7 +1007,7 @@ typedef void (GL_APIENTRYP PFNGLDELETESYNCAPPLEPROC) (GLsync sync);
 typedef GLenum (GL_APIENTRYP PFNGLCLIENTWAITSYNCAPPLEPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
 typedef void (GL_APIENTRYP PFNGLWAITSYNCAPPLEPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
 typedef void (GL_APIENTRYP PFNGLGETINTEGER64VAPPLEPROC) (GLenum pname, GLint64 *params);
-typedef void (GL_APIENTRYP PFNGLGETSYNCIVAPPLEPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
+typedef void (GL_APIENTRYP PFNGLGETSYNCIVAPPLEPROC) (GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values);
 #ifdef GL_GLEXT_PROTOTYPES
 GL_APICALL GLsync GL_APIENTRY glFenceSyncAPPLE (GLenum condition, GLbitfield flags);
 GL_APICALL GLboolean GL_APIENTRY glIsSyncAPPLE (GLsync sync);
@@ -1034,7 +1015,7 @@ GL_APICALL void GL_APIENTRY glDeleteSyncAPPLE (GLsync sync);
 GL_APICALL GLenum GL_APIENTRY glClientWaitSyncAPPLE (GLsync sync, GLbitfield flags, GLuint64 timeout);
 GL_APICALL void GL_APIENTRY glWaitSyncAPPLE (GLsync sync, GLbitfield flags, GLuint64 timeout);
 GL_APICALL void GL_APIENTRY glGetInteger64vAPPLE (GLenum pname, GLint64 *params);
-GL_APICALL void GL_APIENTRY glGetSyncivAPPLE (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
+GL_APICALL void GL_APIENTRY glGetSyncivAPPLE (GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values);
 #endif
 #endif /* GL_APPLE_sync */
 
@@ -1081,6 +1062,11 @@ GL_APICALL void GL_APIENTRY glGetSyncivAPPLE (GLsync sync, GLenum pname, GLsizei
 #define GL_ARM_shader_framebuffer_fetch_depth_stencil 1
 #endif /* GL_ARM_shader_framebuffer_fetch_depth_stencil */
 
+#ifndef GL_ARM_texture_unnormalized_coordinates
+#define GL_ARM_texture_unnormalized_coordinates 1
+#define GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM 0x8F6A
+#endif /* GL_ARM_texture_unnormalized_coordinates */
+
 #ifndef GL_DMP_program_binary
 #define GL_DMP_program_binary 1
 #define GL_SMAPHS30_PROGRAM_BINARY_DMP    0x9251
@@ -1107,6 +1093,13 @@ GL_APICALL void GL_APIENTRY glEGLImageTargetTextureStorageEXT (GLuint texture, G
 #endif
 #endif /* GL_EXT_EGL_image_storage */
 
+#ifndef GL_EXT_EGL_image_storage_compression
+#define GL_EXT_EGL_image_storage_compression 1
+#define GL_SURFACE_COMPRESSION_EXT        0x96C0
+#define GL_SURFACE_COMPRESSION_FIXED_RATE_NONE_EXT 0x96C1
+#define GL_SURFACE_COMPRESSION_FIXED_RATE_DEFAULT_EXT 0x96C2
+#endif /* GL_EXT_EGL_image_storage_compression */
+
 #ifndef GL_EXT_YUV_target
 #define GL_EXT_YUV_target 1
 #define GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT    0x8BE7
@@ -1298,6 +1291,7 @@ typedef void (GL_APIENTRYP PFNGLGETQUERYOBJECTIVEXTPROC) (GLuint id, GLenum pnam
 typedef void (GL_APIENTRYP PFNGLGETQUERYOBJECTUIVEXTPROC) (GLuint id, GLenum pname, GLuint *params);
 typedef void (GL_APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64 *params);
 typedef void (GL_APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64 *params);
+typedef void (GL_APIENTRYP PFNGLGETINTEGER64VEXTPROC) (GLenum pname, GLint64 *data);
 #ifdef GL_GLEXT_PROTOTYPES
 GL_APICALL void GL_APIENTRY glGenQueriesEXT (GLsizei n, GLuint *ids);
 GL_APICALL void GL_APIENTRY glDeleteQueriesEXT (GLsizei n, const GLuint *ids);
@@ -1310,6 +1304,7 @@ GL_APICALL void GL_APIENTRY glGetQueryObjectivEXT (GLuint id, GLenum pname, GLin
 GL_APICALL void GL_APIENTRY glGetQueryObjectuivEXT (GLuint id, GLenum pname, GLuint *params);
 GL_APICALL void GL_APIENTRY glGetQueryObjecti64vEXT (GLuint id, GLenum pname, GLint64 *params);
 GL_APICALL void GL_APIENTRY glGetQueryObjectui64vEXT (GLuint id, GLenum pname, GLuint64 *params);
+GL_APICALL void GL_APIENTRY glGetInteger64vEXT (GLenum pname, GLint64 *data);
 #endif
 #endif /* GL_EXT_disjoint_timer_query */
 
@@ -1424,6 +1419,56 @@ GL_APICALL void GL_APIENTRY glNamedBufferStorageExternalEXT (GLuint buffer, GLin
 #define GL_EXT_float_blend 1
 #endif /* GL_EXT_float_blend */
 
+#ifndef GL_EXT_fragment_shading_rate
+#define GL_EXT_fragment_shading_rate 1
+#define GL_SHADING_RATE_1X1_PIXELS_EXT    0x96A6
+#define GL_SHADING_RATE_1X2_PIXELS_EXT    0x96A7
+#define GL_SHADING_RATE_2X1_PIXELS_EXT    0x96A8
+#define GL_SHADING_RATE_2X2_PIXELS_EXT    0x96A9
+#define GL_SHADING_RATE_1X4_PIXELS_EXT    0x96AA
+#define GL_SHADING_RATE_4X1_PIXELS_EXT    0x96AB
+#define GL_SHADING_RATE_4X2_PIXELS_EXT    0x96AC
+#define GL_SHADING_RATE_2X4_PIXELS_EXT    0x96AD
+#define GL_SHADING_RATE_4X4_PIXELS_EXT    0x96AE
+#define GL_SHADING_RATE_EXT               0x96D0
+#define GL_SHADING_RATE_ATTACHMENT_EXT    0x96D1
+#define GL_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_EXT 0x96D2
+#define GL_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_EXT 0x96D3
+#define GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_EXT 0x96D4
+#define GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_EXT 0x96D5
+#define GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_EXT 0x96D6
+#define GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT 0x96D7
+#define GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT 0x96D8
+#define GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT 0x96D9
+#define GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT 0x96DA
+#define GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_ASPECT_RATIO_EXT 0x96DB
+#define GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_LAYERS_EXT 0x96DC
+#define GL_FRAGMENT_SHADING_RATE_WITH_SHADER_DEPTH_STENCIL_WRITES_SUPPORTED_EXT 0x96DD
+#define GL_FRAGMENT_SHADING_RATE_WITH_SAMPLE_MASK_SUPPORTED_EXT 0x96DE
+#define GL_FRAGMENT_SHADING_RATE_ATTACHMENT_WITH_DEFAULT_FRAMEBUFFER_SUPPORTED_EXT 0x96DF
+#define GL_FRAGMENT_SHADING_RATE_NON_TRIVIAL_COMBINERS_SUPPORTED_EXT 0x8F6F
+typedef void (GL_APIENTRYP PFNGLGETFRAGMENTSHADINGRATESEXTPROC) (GLsizei samples, GLsizei maxCount, GLsizei *count, GLenum *shadingRates);
+typedef void (GL_APIENTRYP PFNGLSHADINGRATEEXTPROC) (GLenum rate);
+typedef void (GL_APIENTRYP PFNGLSHADINGRATECOMBINEROPSEXTPROC) (GLenum combinerOp0, GLenum combinerOp1);
+typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERSHADINGRATEEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint baseLayer, GLsizei numLayers, GLsizei texelWidth, GLsizei texelHeight);
+#ifdef GL_GLEXT_PROTOTYPES
+GL_APICALL void GL_APIENTRY glGetFragmentShadingRatesEXT (GLsizei samples, GLsizei maxCount, GLsizei *count, GLenum *shadingRates);
+GL_APICALL void GL_APIENTRY glShadingRateEXT (GLenum rate);
+GL_APICALL void GL_APIENTRY glShadingRateCombinerOpsEXT (GLenum combinerOp0, GLenum combinerOp1);
+GL_APICALL void GL_APIENTRY glFramebufferShadingRateEXT (GLenum target, GLenum attachment, GLuint texture, GLint baseLayer, GLsizei numLayers, GLsizei texelWidth, GLsizei texelHeight);
+#endif
+#endif /* GL_EXT_fragment_shading_rate */
+
+#ifndef GL_EXT_framebuffer_blit_layers
+#define GL_EXT_framebuffer_blit_layers 1
+typedef void (GL_APIENTRYP PFNGLBLITFRAMEBUFFERLAYERSEXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
+typedef void (GL_APIENTRYP PFNGLBLITFRAMEBUFFERLAYEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint srcLayer, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLint dstLayer, GLbitfield mask, GLenum filter);
+#ifdef GL_GLEXT_PROTOTYPES
+GL_APICALL void GL_APIENTRY glBlitFramebufferLayersEXT (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
+GL_APICALL void GL_APIENTRY glBlitFramebufferLayerEXT (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint srcLayer, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLint dstLayer, GLbitfield mask, GLenum filter);
+#endif
+#endif /* GL_EXT_framebuffer_blit_layers */
+
 #ifndef GL_EXT_geometry_point_size
 #define GL_EXT_geometry_point_size 1
 #endif /* GL_EXT_geometry_point_size */
@@ -1617,6 +1662,10 @@ GL_APICALL void GL_APIENTRY glFramebufferTexture2DMultisampleEXT (GLenum target,
 #endif
 #endif /* GL_EXT_multisampled_render_to_texture */
 
+#ifndef GL_EXT_multisampled_render_to_texture2
+#define GL_EXT_multisampled_render_to_texture2 1
+#endif /* GL_EXT_multisampled_render_to_texture2 */
+
 #ifndef GL_EXT_multiview_draw_buffers
 #define GL_EXT_multiview_draw_buffers 1
 #define GL_COLOR_ATTACHMENT_EXT           0x90F0
@@ -1803,6 +1852,10 @@ GL_APICALL void GL_APIENTRY glImportSemaphoreWin32NameEXT (GLuint semaphore, GLe
 #endif
 #endif /* GL_EXT_semaphore_win32 */
 
+#ifndef GL_EXT_separate_depth_stencil
+#define GL_EXT_separate_depth_stencil 1
+#endif /* GL_EXT_separate_depth_stencil */
+
 #ifndef GL_EXT_separate_shader_objects
 #define GL_EXT_separate_shader_objects 1
 #define GL_ACTIVE_PROGRAM_EXT             0x8259
@@ -1813,7 +1866,7 @@ GL_APICALL void GL_APIENTRY glImportSemaphoreWin32NameEXT (GLuint semaphore, GLe
 #define GL_PROGRAM_PIPELINE_BINDING_EXT   0x825A
 typedef void (GL_APIENTRYP PFNGLACTIVESHADERPROGRAMEXTPROC) (GLuint pipeline, GLuint program);
 typedef void (GL_APIENTRYP PFNGLBINDPROGRAMPIPELINEEXTPROC) (GLuint pipeline);
-typedef GLuint (GL_APIENTRYP PFNGLCREATESHADERPROGRAMVEXTPROC) (GLenum type, GLsizei count, const GLchar **strings);
+typedef GLuint (GL_APIENTRYP PFNGLCREATESHADERPROGRAMVEXTPROC) (GLenum type, GLsizei count, const GLchar *const*strings);
 typedef void (GL_APIENTRYP PFNGLDELETEPROGRAMPIPELINESEXTPROC) (GLsizei n, const GLuint *pipelines);
 typedef void (GL_APIENTRYP PFNGLGENPROGRAMPIPELINESEXTPROC) (GLsizei n, GLuint *pipelines);
 typedef void (GL_APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
@@ -1858,7 +1911,7 @@ typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint progra
 #ifdef GL_GLEXT_PROTOTYPES
 GL_APICALL void GL_APIENTRY glActiveShaderProgramEXT (GLuint pipeline, GLuint program);
 GL_APICALL void GL_APIENTRY glBindProgramPipelineEXT (GLuint pipeline);
-GL_APICALL GLuint GL_APIENTRY glCreateShaderProgramvEXT (GLenum type, GLsizei count, const GLchar **strings);
+GL_APICALL GLuint GL_APIENTRY glCreateShaderProgramvEXT (GLenum type, GLsizei count, const GLchar *const*strings);
 GL_APICALL void GL_APIENTRY glDeleteProgramPipelinesEXT (GLsizei n, const GLuint *pipelines);
 GL_APICALL void GL_APIENTRY glGenProgramPipelinesEXT (GLsizei n, GLuint *pipelines);
 GL_APICALL void GL_APIENTRY glGetProgramPipelineInfoLogEXT (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
@@ -1958,6 +2011,10 @@ GL_APICALL void GL_APIENTRY glClearPixelLocalStorageuiEXT (GLsizei offset, GLsiz
 #endif
 #endif /* GL_EXT_shader_pixel_local_storage2 */
 
+#ifndef GL_EXT_shader_samples_identical
+#define GL_EXT_shader_samples_identical 1
+#endif /* GL_EXT_shader_samples_identical */
+
 #ifndef GL_EXT_shader_texture_lod
 #define GL_EXT_shader_texture_lod 1
 #endif /* GL_EXT_shader_texture_lod */
@@ -2252,6 +2309,29 @@ GL_APICALL void GL_APIENTRY glTextureStorage3DEXT (GLuint texture, GLenum target
 #endif
 #endif /* GL_EXT_texture_storage */
 
+#ifndef GL_EXT_texture_storage_compression
+#define GL_EXT_texture_storage_compression 1
+#define GL_NUM_SURFACE_COMPRESSION_FIXED_RATES_EXT 0x8F6E
+#define GL_SURFACE_COMPRESSION_FIXED_RATE_1BPC_EXT 0x96C4
+#define GL_SURFACE_COMPRESSION_FIXED_RATE_2BPC_EXT 0x96C5
+#define GL_SURFACE_COMPRESSION_FIXED_RATE_3BPC_EXT 0x96C6
+#define GL_SURFACE_COMPRESSION_FIXED_RATE_4BPC_EXT 0x96C7
+#define GL_SURFACE_COMPRESSION_FIXED_RATE_5BPC_EXT 0x96C8
+#define GL_SURFACE_COMPRESSION_FIXED_RATE_6BPC_EXT 0x96C9
+#define GL_SURFACE_COMPRESSION_FIXED_RATE_7BPC_EXT 0x96CA
+#define GL_SURFACE_COMPRESSION_FIXED_RATE_8BPC_EXT 0x96CB
+#define GL_SURFACE_COMPRESSION_FIXED_RATE_9BPC_EXT 0x96CC
+#define GL_SURFACE_COMPRESSION_FIXED_RATE_10BPC_EXT 0x96CD
+#define GL_SURFACE_COMPRESSION_FIXED_RATE_11BPC_EXT 0x96CE
+#define GL_SURFACE_COMPRESSION_FIXED_RATE_12BPC_EXT 0x96CF
+typedef void (GL_APIENTRYP PFNGLTEXSTORAGEATTRIBS2DEXTPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, const GLint* attrib_list);
+typedef void (GL_APIENTRYP PFNGLTEXSTORAGEATTRIBS3DEXTPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, const GLint* attrib_list);
+#ifdef GL_GLEXT_PROTOTYPES
+GL_APICALL void GL_APIENTRY glTexStorageAttribs2DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, const GLint* attrib_list);
+GL_APICALL void GL_APIENTRY glTexStorageAttribs3DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, const GLint* attrib_list);
+#endif
+#endif /* GL_EXT_texture_storage_compression */
+
 #ifndef GL_EXT_texture_type_2_10_10_10_REV
 #define GL_EXT_texture_type_2_10_10_10_REV 1
 #define GL_UNSIGNED_INT_2_10_10_10_REV_EXT 0x8368
@@ -2452,6 +2532,16 @@ GL_APICALL void GL_APIENTRY glGetPerfQueryInfoINTEL (GLuint queryId, GLuint quer
 #endif
 #endif /* GL_INTEL_performance_query */
 
+#ifndef GL_MESA_bgra
+#define GL_MESA_bgra 1
+#define GL_BGR_EXT                        0x80E0
+#endif /* GL_MESA_bgra */
+
+#ifndef GL_MESA_framebuffer_flip_x
+#define GL_MESA_framebuffer_flip_x 1
+#define GL_FRAMEBUFFER_FLIP_X_MESA        0x8BBC
+#endif /* GL_MESA_framebuffer_flip_x */
+
 #ifndef GL_MESA_framebuffer_flip_y
 #define GL_MESA_framebuffer_flip_y 1
 #define GL_FRAMEBUFFER_FLIP_Y_MESA        0x8BBB
@@ -2463,6 +2553,11 @@ GL_APICALL void GL_APIENTRY glGetFramebufferParameterivMESA (GLenum target, GLen
 #endif
 #endif /* GL_MESA_framebuffer_flip_y */
 
+#ifndef GL_MESA_framebuffer_swap_xy
+#define GL_MESA_framebuffer_swap_xy 1
+#define GL_FRAMEBUFFER_SWAP_XY_MESA       0x8BBD
+#endif /* GL_MESA_framebuffer_swap_xy */
+
 #ifndef GL_MESA_program_binary_formats
 #define GL_MESA_program_binary_formats 1
 #define GL_PROGRAM_BINARY_FORMAT_MESA     0x875F
@@ -2815,11 +2910,11 @@ GL_APICALL void GL_APIENTRY glBlitFramebufferNV (GLint srcX0, GLint srcY0, GLint
 #define GL_COVERAGE_MODULATION_NV         0x9332
 #define GL_COVERAGE_MODULATION_TABLE_SIZE_NV 0x9333
 typedef void (GL_APIENTRYP PFNGLCOVERAGEMODULATIONTABLENVPROC) (GLsizei n, const GLfloat *v);
-typedef void (GL_APIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) (GLsizei bufsize, GLfloat *v);
+typedef void (GL_APIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) (GLsizei bufSize, GLfloat *v);
 typedef void (GL_APIENTRYP PFNGLCOVERAGEMODULATIONNVPROC) (GLenum components);
 #ifdef GL_GLEXT_PROTOTYPES
 GL_APICALL void GL_APIENTRY glCoverageModulationTableNV (GLsizei n, const GLfloat *v);
-GL_APICALL void GL_APIENTRY glGetCoverageModulationTableNV (GLsizei bufsize, GLfloat *v);
+GL_APICALL void GL_APIENTRY glGetCoverageModulationTableNV (GLsizei bufSize, GLfloat *v);
 GL_APICALL void GL_APIENTRY glCoverageModulationNV (GLenum components);
 #endif
 #endif /* GL_NV_framebuffer_mixed_samples */
@@ -2967,9 +3062,9 @@ GL_APICALL void GL_APIENTRY glVertexAttribDivisorNV (GLuint index, GLuint diviso
 #define GL_SUPERSAMPLE_SCALE_X_NV         0x9372
 #define GL_SUPERSAMPLE_SCALE_Y_NV         0x9373
 #define GL_CONFORMANT_NV                  0x9374
-typedef void (GL_APIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);
+typedef void (GL_APIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei count, GLint *params);
 #ifdef GL_GLEXT_PROTOTYPES
-GL_APICALL void GL_APIENTRY glGetInternalformatSampleivNV (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);
+GL_APICALL void GL_APIENTRY glGetInternalformatSampleivNV (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei count, GLint *params);
 #endif
 #endif /* GL_NV_internalformat_sample_query */
 
@@ -3001,6 +3096,20 @@ GL_APICALL void GL_APIENTRY glNamedBufferAttachMemoryNV (GLuint buffer, GLuint m
 #endif
 #endif /* GL_NV_memory_attachment */
 
+#ifndef GL_NV_memory_object_sparse
+#define GL_NV_memory_object_sparse 1
+typedef void (GL_APIENTRYP PFNGLBUFFERPAGECOMMITMENTMEMNVPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
+typedef void (GL_APIENTRYP PFNGLTEXPAGECOMMITMENTMEMNVPROC) (GLenum target, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
+typedef void (GL_APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
+typedef void (GL_APIENTRYP PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC) (GLuint texture, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
+#ifdef GL_GLEXT_PROTOTYPES
+GL_APICALL void GL_APIENTRY glBufferPageCommitmentMemNV (GLenum target, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
+GL_APICALL void GL_APIENTRY glTexPageCommitmentMemNV (GLenum target, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
+GL_APICALL void GL_APIENTRY glNamedBufferPageCommitmentMemNV (GLuint buffer, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
+GL_APICALL void GL_APIENTRY glTexturePageCommitmentMemNV (GLuint texture, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
+#endif
+#endif /* GL_NV_memory_object_sparse */
+
 #ifndef GL_NV_mesh_shader
 #define GL_NV_mesh_shader 1
 #define GL_MESH_SHADER_NV                 0x9559
@@ -3087,6 +3196,13 @@ GL_APICALL void GL_APIENTRY glUniformMatrix4x3fvNV (GLint location, GLsizei coun
 #endif
 #endif /* GL_NV_non_square_matrices */
 
+#ifndef GL_NV_pack_subimage
+#define GL_NV_pack_subimage 1
+#define GL_PACK_ROW_LENGTH_NV             0x0D02
+#define GL_PACK_SKIP_ROWS_NV              0x0D03
+#define GL_PACK_SKIP_PIXELS_NV            0x0D04
+#endif /* GL_NV_pack_subimage */
+
 #ifndef GL_NV_path_rendering
 #define GL_NV_path_rendering 1
 typedef double GLdouble;
@@ -3295,11 +3411,11 @@ typedef void (GL_APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHNVPROC) (GLuint path, GL
 typedef void (GL_APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask, GLenum coverMode);
 typedef void (GL_APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
 typedef void (GL_APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
-typedef GLenum (GL_APIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
+typedef GLenum (GL_APIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint *baseAndCount);
 typedef GLenum (GL_APIENTRYP PFNGLPATHGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
 typedef GLenum (GL_APIENTRYP PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
 typedef void (GL_APIENTRYP PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);
-typedef void (GL_APIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);
+typedef void (GL_APIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLfloat *params);
 typedef void (GL_APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
 typedef void (GL_APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);
 typedef void (GL_APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);
@@ -3372,11 +3488,11 @@ GL_APICALL void GL_APIENTRY glStencilThenCoverFillPathNV (GLuint path, GLenum fi
 GL_APICALL void GL_APIENTRY glStencilThenCoverStrokePathNV (GLuint path, GLint reference, GLuint mask, GLenum coverMode);
 GL_APICALL void GL_APIENTRY glStencilThenCoverFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
 GL_APICALL void GL_APIENTRY glStencilThenCoverStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
-GL_APICALL GLenum GL_APIENTRY glPathGlyphIndexRangeNV (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
+GL_APICALL GLenum GL_APIENTRY glPathGlyphIndexRangeNV (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint *baseAndCount);
 GL_APICALL GLenum GL_APIENTRY glPathGlyphIndexArrayNV (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
 GL_APICALL GLenum GL_APIENTRY glPathMemoryGlyphIndexArrayNV (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
 GL_APICALL void GL_APIENTRY glProgramPathFragmentInputGenNV (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);
-GL_APICALL void GL_APIENTRY glGetProgramResourcefvNV (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);
+GL_APICALL void GL_APIENTRY glGetProgramResourcefvNV (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLfloat *params);
 GL_APICALL void GL_APIENTRY glMatrixFrustumEXT (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
 GL_APICALL void GL_APIENTRY glMatrixLoadIdentityEXT (GLenum mode);
 GL_APICALL void GL_APIENTRY glMatrixLoadTransposefEXT (GLenum mode, const GLfloat *m);
@@ -3426,6 +3542,12 @@ GL_APICALL void GL_APIENTRY glPolygonModeNV (GLenum face, GLenum mode);
 #endif
 #endif /* GL_NV_polygon_mode */
 
+#ifndef GL_NV_primitive_shading_rate
+#define GL_NV_primitive_shading_rate 1
+#define GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV 0x95B1
+#define GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV 0x95B2
+#endif /* GL_NV_primitive_shading_rate */
+
 #ifndef GL_NV_read_buffer
 #define GL_NV_read_buffer 1
 #define GL_READ_BUFFER_NV                 0x0C02
@@ -3592,6 +3714,23 @@ GL_APICALL void GL_APIENTRY glShadingRateSampleOrderCustomNV (GLenum rate, GLuin
 #define GL_NV_texture_npot_2D_mipmap 1
 #endif /* GL_NV_texture_npot_2D_mipmap */
 
+#ifndef GL_NV_timeline_semaphore
+#define GL_NV_timeline_semaphore 1
+#define GL_TIMELINE_SEMAPHORE_VALUE_NV    0x9595
+#define GL_SEMAPHORE_TYPE_NV              0x95B3
+#define GL_SEMAPHORE_TYPE_BINARY_NV       0x95B4
+#define GL_SEMAPHORE_TYPE_TIMELINE_NV     0x95B5
+#define GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV 0x95B6
+typedef void (GL_APIENTRYP PFNGLCREATESEMAPHORESNVPROC) (GLsizei n, GLuint *semaphores);
+typedef void (GL_APIENTRYP PFNGLSEMAPHOREPARAMETERIVNVPROC) (GLuint semaphore, GLenum pname, const GLint *params);
+typedef void (GL_APIENTRYP PFNGLGETSEMAPHOREPARAMETERIVNVPROC) (GLuint semaphore, GLenum pname, GLint *params);
+#ifdef GL_GLEXT_PROTOTYPES
+GL_APICALL void GL_APIENTRY glCreateSemaphoresNV (GLsizei n, GLuint *semaphores);
+GL_APICALL void GL_APIENTRY glSemaphoreParameterivNV (GLuint semaphore, GLenum pname, const GLint *params);
+GL_APICALL void GL_APIENTRY glGetSemaphoreParameterivNV (GLuint semaphore, GLenum pname, GLint *params);
+#endif
+#endif /* GL_NV_timeline_semaphore */
+
 #ifndef GL_NV_viewport_array
 #define GL_NV_viewport_array 1
 #define GL_MAX_VIEWPORTS_NV               0x825B
@@ -3758,6 +3897,14 @@ GL_APICALL void GL_APIENTRY glExtGetProgramBinarySourceQCOM (GLuint program, GLe
 #endif
 #endif /* GL_QCOM_extended_get2 */
 
+#ifndef GL_QCOM_frame_extrapolation
+#define GL_QCOM_frame_extrapolation 1
+typedef void (GL_APIENTRYP PFNGLEXTRAPOLATETEX2DQCOMPROC) (GLuint src1, GLuint src2, GLuint output, GLfloat scaleFactor);
+#ifdef GL_GLEXT_PROTOTYPES
+GL_APICALL void GL_APIENTRY glExtrapolateTex2DQCOM (GLuint src1, GLuint src2, GLuint output, GLfloat scaleFactor);
+#endif
+#endif /* GL_QCOM_frame_extrapolation */
+
 #ifndef GL_QCOM_framebuffer_foveated
 #define GL_QCOM_framebuffer_foveated 1
 #define GL_FOVEATION_ENABLE_BIT_QCOM      0x00000001
@@ -3770,11 +3917,27 @@ GL_APICALL void GL_APIENTRY glFramebufferFoveationParametersQCOM (GLuint framebu
 #endif
 #endif /* GL_QCOM_framebuffer_foveated */
 
+#ifndef GL_QCOM_motion_estimation
+#define GL_QCOM_motion_estimation 1
+#define GL_MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM 0x8C90
+#define GL_MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM 0x8C91
+typedef void (GL_APIENTRYP PFNGLTEXESTIMATEMOTIONQCOMPROC) (GLuint ref, GLuint target, GLuint output);
+typedef void (GL_APIENTRYP PFNGLTEXESTIMATEMOTIONREGIONSQCOMPROC) (GLuint ref, GLuint target, GLuint output, GLuint mask);
+#ifdef GL_GLEXT_PROTOTYPES
+GL_APICALL void GL_APIENTRY glTexEstimateMotionQCOM (GLuint ref, GLuint target, GLuint output);
+GL_APICALL void GL_APIENTRY glTexEstimateMotionRegionsQCOM (GLuint ref, GLuint target, GLuint output, GLuint mask);
+#endif
+#endif /* GL_QCOM_motion_estimation */
+
 #ifndef GL_QCOM_perfmon_global_mode
 #define GL_QCOM_perfmon_global_mode 1
 #define GL_PERFMON_GLOBAL_MODE_QCOM       0x8FA0
 #endif /* GL_QCOM_perfmon_global_mode */
 
+#ifndef GL_QCOM_render_shared_exponent
+#define GL_QCOM_render_shared_exponent 1
+#endif /* GL_QCOM_render_shared_exponent */
+
 #ifndef GL_QCOM_shader_framebuffer_fetch_noncoherent
 #define GL_QCOM_shader_framebuffer_fetch_noncoherent 1
 #define GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM 0x96A2
@@ -3788,6 +3951,22 @@ GL_APICALL void GL_APIENTRY glFramebufferFetchBarrierQCOM (void);
 #define GL_QCOM_shader_framebuffer_fetch_rate 1
 #endif /* GL_QCOM_shader_framebuffer_fetch_rate */
 
+#ifndef GL_QCOM_shading_rate
+#define GL_QCOM_shading_rate 1
+#define GL_SHADING_RATE_QCOM              0x96A4
+#define GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM 0x96A5
+#define GL_SHADING_RATE_1X1_PIXELS_QCOM   0x96A6
+#define GL_SHADING_RATE_1X2_PIXELS_QCOM   0x96A7
+#define GL_SHADING_RATE_2X1_PIXELS_QCOM   0x96A8
+#define GL_SHADING_RATE_2X2_PIXELS_QCOM   0x96A9
+#define GL_SHADING_RATE_4X2_PIXELS_QCOM   0x96AC
+#define GL_SHADING_RATE_4X4_PIXELS_QCOM   0x96AE
+typedef void (GL_APIENTRYP PFNGLSHADINGRATEQCOMPROC) (GLenum rate);
+#ifdef GL_GLEXT_PROTOTYPES
+GL_APICALL void GL_APIENTRY glShadingRateQCOM (GLenum rate);
+#endif
+#endif /* GL_QCOM_shading_rate */
+
 #ifndef GL_QCOM_texture_foveated
 #define GL_QCOM_texture_foveated 1
 #define GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM 0x8BFB
@@ -3801,6 +3980,11 @@ GL_APICALL void GL_APIENTRY glTextureFoveationParametersQCOM (GLuint texture, GL
 #endif
 #endif /* GL_QCOM_texture_foveated */
 
+#ifndef GL_QCOM_texture_foveated2
+#define GL_QCOM_texture_foveated2 1
+#define GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM 0x96A0
+#endif /* GL_QCOM_texture_foveated2 */
+
 #ifndef GL_QCOM_texture_foveated_subsampled_layout
 #define GL_QCOM_texture_foveated_subsampled_layout 1
 #define GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM 0x00000004
diff --git a/include/GLES2/gl2platform.h b/include/GLES2/gl2platform.h
index eb318dc3a3c..5bcce6d89e0 100644
--- a/include/GLES2/gl2platform.h
+++ b/include/GLES2/gl2platform.h
@@ -2,19 +2,8 @@
 #define __gl2platform_h_
 
 /*
-** Copyright (c) 2017 The Khronos Group Inc.
-**
-** Licensed under the Apache License, Version 2.0 (the "License");
-** you may not use this file except in compliance with the License.
-** You may obtain a copy of the License at
-**
-**     http://www.apache.org/licenses/LICENSE-2.0
-**
-** Unless required by applicable law or agreed to in writing, software
-** distributed under the License is distributed on an "AS IS" BASIS,
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-** See the License for the specific language governing permissions and
-** limitations under the License.
+** Copyright 2017-2020 The Khronos Group Inc.
+** SPDX-License-Identifier: Apache-2.0
 */
 
 /* Platform-specific types and definitions for OpenGL ES 2.X  gl2.h
diff --git a/include/GLES3/gl3.h b/include/GLES3/gl3.h
index 0de18b6027e..4f8223f94f3 100644
--- a/include/GLES3/gl3.h
+++ b/include/GLES3/gl3.h
@@ -6,28 +6,9 @@ extern "C" {
 #endif
 
 /*
-** Copyright (c) 2013-2018 The Khronos Group Inc.
+** Copyright 2013-2020 The Khronos Group Inc.
+** SPDX-License-Identifier: MIT
 **
-** Permission is hereby granted, free of charge, to any person obtaining a
-** copy of this software and/or associated documentation files (the
-** "Materials"), to deal in the Materials without restriction, including
-** without limitation the rights to use, copy, modify, merge, publish,
-** distribute, sublicense, and/or sell copies of the Materials, and to
-** permit persons to whom the Materials are furnished to do so, subject to
-** the following conditions:
-**
-** The above copyright notice and this permission notice shall be included
-** in all copies or substantial portions of the Materials.
-**
-** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
-** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
-** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
-** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
-*/
-/*
 ** This header is generated from the Khronos OpenGL / OpenGL ES XML
 ** API Registry. The current version of the Registry, generator scripts
 ** used to make the header, and the header can be found at
@@ -44,7 +25,7 @@ extern "C" {
 #define GL_GLES_PROTOTYPES 1
 #endif
 
-/* Generated on date 20190611 */
+/* Generated on date 20230220 */
 
 /* Generated C header for:
  * API: gles2
@@ -477,7 +458,7 @@ typedef void (GL_APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);
 typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
 typedef void (GL_APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);
 typedef void (GL_APIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);
-typedef void (GL_APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
+typedef void (GL_APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryFormat, const void *binary, GLsizei length);
 typedef void (GL_APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
 typedef void (GL_APIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);
 typedef void (GL_APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);
@@ -620,7 +601,7 @@ GL_APICALL void GL_APIENTRY glReleaseShaderCompiler (void);
 GL_APICALL void GL_APIENTRY glRenderbufferStorage (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
 GL_APICALL void GL_APIENTRY glSampleCoverage (GLfloat value, GLboolean invert);
 GL_APICALL void GL_APIENTRY glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
-GL_APICALL void GL_APIENTRY glShaderBinary (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
+GL_APICALL void GL_APIENTRY glShaderBinary (GLsizei count, const GLuint *shaders, GLenum binaryFormat, const void *binary, GLsizei length);
 GL_APICALL void GL_APIENTRY glShaderSource (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
 GL_APICALL void GL_APIENTRY glStencilFunc (GLenum func, GLint ref, GLuint mask);
 GL_APICALL void GL_APIENTRY glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask);
@@ -1068,7 +1049,7 @@ typedef void (GL_APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);
 typedef GLenum (GL_APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
 typedef void (GL_APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);
 typedef void (GL_APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);
-typedef void (GL_APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
+typedef void (GL_APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values);
 typedef void (GL_APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);
 typedef void (GL_APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);
 typedef void (GL_APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);
@@ -1095,7 +1076,7 @@ typedef void (GL_APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsiz
 typedef void (GL_APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
 typedef void (GL_APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
 typedef void (GL_APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
-typedef void (GL_APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
+typedef void (GL_APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint *params);
 #if GL_GLES_PROTOTYPES
 GL_APICALL void GL_APIENTRY glReadBuffer (GLenum src);
 GL_APICALL void GL_APIENTRY glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
@@ -1173,7 +1154,7 @@ GL_APICALL void GL_APIENTRY glDeleteSync (GLsync sync);
 GL_APICALL GLenum GL_APIENTRY glClientWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);
 GL_APICALL void GL_APIENTRY glWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);
 GL_APICALL void GL_APIENTRY glGetInteger64v (GLenum pname, GLint64 *data);
-GL_APICALL void GL_APIENTRY glGetSynciv (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
+GL_APICALL void GL_APIENTRY glGetSynciv (GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values);
 GL_APICALL void GL_APIENTRY glGetInteger64i_v (GLenum target, GLuint index, GLint64 *data);
 GL_APICALL void GL_APIENTRY glGetBufferParameteri64v (GLenum target, GLenum pname, GLint64 *params);
 GL_APICALL void GL_APIENTRY glGenSamplers (GLsizei count, GLuint *samplers);
@@ -1200,7 +1181,7 @@ GL_APICALL void GL_APIENTRY glInvalidateFramebuffer (GLenum target, GLsizei numA
 GL_APICALL void GL_APIENTRY glInvalidateSubFramebuffer (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
 GL_APICALL void GL_APIENTRY glTexStorage2D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
 GL_APICALL void GL_APIENTRY glTexStorage3D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
-GL_APICALL void GL_APIENTRY glGetInternalformativ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
+GL_APICALL void GL_APIENTRY glGetInternalformativ (GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint *params);
 #endif
 #endif /* GL_ES_VERSION_3_0 */
 
diff --git a/include/GLES3/gl31.h b/include/GLES3/gl31.h
index b59a0db1a4e..502d6feec85 100644
--- a/include/GLES3/gl31.h
+++ b/include/GLES3/gl31.h
@@ -6,28 +6,9 @@ extern "C" {
 #endif
 
 /*
-** Copyright (c) 2013-2018 The Khronos Group Inc.
+** Copyright 2013-2020 The Khronos Group Inc.
+** SPDX-License-Identifier: MIT
 **
-** Permission is hereby granted, free of charge, to any person obtaining a
-** copy of this software and/or associated documentation files (the
-** "Materials"), to deal in the Materials without restriction, including
-** without limitation the rights to use, copy, modify, merge, publish,
-** distribute, sublicense, and/or sell copies of the Materials, and to
-** permit persons to whom the Materials are furnished to do so, subject to
-** the following conditions:
-**
-** The above copyright notice and this permission notice shall be included
-** in all copies or substantial portions of the Materials.
-**
-** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
-** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
-** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
-** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
-*/
-/*
 ** This header is generated from the Khronos OpenGL / OpenGL ES XML
 ** API Registry. The current version of the Registry, generator scripts
 ** used to make the header, and the header can be found at
@@ -44,7 +25,7 @@ extern "C" {
 #define GL_GLES_PROTOTYPES 1
 #endif
 
-/* Generated on date 20190611 */
+/* Generated on date 20191013 */
 
 /* Generated C header for:
  * API: gles2
diff --git a/include/GLES3/gl32.h b/include/GLES3/gl32.h
index 3fe5bdcde7a..ae56b0e95f2 100644
--- a/include/GLES3/gl32.h
+++ b/include/GLES3/gl32.h
@@ -6,28 +6,9 @@ extern "C" {
 #endif
 
 /*
-** Copyright (c) 2013-2018 The Khronos Group Inc.
+** Copyright 2013-2020 The Khronos Group Inc.
+** SPDX-License-Identifier: MIT
 **
-** Permission is hereby granted, free of charge, to any person obtaining a
-** copy of this software and/or associated documentation files (the
-** "Materials"), to deal in the Materials without restriction, including
-** without limitation the rights to use, copy, modify, merge, publish,
-** distribute, sublicense, and/or sell copies of the Materials, and to
-** permit persons to whom the Materials are furnished to do so, subject to
-** the following conditions:
-**
-** The above copyright notice and this permission notice shall be included
-** in all copies or substantial portions of the Materials.
-**
-** THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
-** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
-** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
-** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
-*/
-/*
 ** This header is generated from the Khronos OpenGL / OpenGL ES XML
 ** API Registry. The current version of the Registry, generator scripts
 ** used to make the header, and the header can be found at
@@ -44,7 +25,7 @@ extern "C" {
 #define GL_GLES_PROTOTYPES 1
 #endif
 
-/* Generated on date 20190611 */
+/* Generated on date 20191013 */
 
 /* Generated C header for:
  * API: gles2
diff --git a/include/GLES3/gl3platform.h b/include/GLES3/gl3platform.h
index ca9d7a6de88..8699212de64 100644
--- a/include/GLES3/gl3platform.h
+++ b/include/GLES3/gl3platform.h
@@ -2,19 +2,8 @@
 #define __gl3platform_h_
 
 /*
-** Copyright (c) 2017 The Khronos Group Inc.
-**
-** Licensed under the Apache License, Version 2.0 (the "License");
-** you may not use this file except in compliance with the License.
-** You may obtain a copy of the License at
-**
-**     http://www.apache.org/licenses/LICENSE-2.0
-**
-** Unless required by applicable law or agreed to in writing, software
-** distributed under the License is distributed on an "AS IS" BASIS,
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-** See the License for the specific language governing permissions and
-** limitations under the License.
+** Copyright 2017-2020 The Khronos Group Inc.
+** SPDX-License-Identifier: Apache-2.0
 */
 
 /* Platform-specific types and definitions for OpenGL ES 3.X  gl3.h
diff --git a/src/mapi/glapi/registry/gl.xml b/src/mapi/glapi/registry/gl.xml
index e2cd8c8c148..3683e0f5b3b 100644
--- a/src/mapi/glapi/registry/gl.xml
+++ b/src/mapi/glapi/registry/gl.xml
@@ -1,27 +1,14 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <registry>
     <comment>
-Copyright (c) 2013-2019 The Khronos Group Inc.
-
-Licensed under the Apache License, Version 2.0 (the "License");
-you may not use this file except in compliance with the License.
-You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-Unless required by applicable law or agreed to in writing, software
-distributed under the License is distributed on an "AS IS" BASIS,
-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-See the License for the specific language governing permissions and
-limitations under the License.
-
-------------------------------------------------------------------------
+Copyright 2013-2020 The Khronos Group Inc.
+SPDX-License-Identifier: Apache-2.0
 
 This file, gl.xml, is the OpenGL and OpenGL API Registry. The canonical
 version of the registry, together with documentation, schema, and Python
 generator scripts used to generate C header files for OpenGL and OpenGL ES,
 can always be found in the Khronos Registry at
-        https://github.com/KhronosGroup/OpenGL-Registry
+https://github.com/KhronosGroup/OpenGL-Registry
     </comment>
 
     <!-- SECTION: GL type definitions. -->
@@ -79,4500 +66,43 @@ typedef unsigned int GLhandleARB;
         <type>typedef void (<apientry/> *<name>GLVULKANPROCNV</name>)(void);</type>
     </types>
 
-    <!-- SECTION: GL parameter class type definitions.
-         The groups are intended to contain all the possible legal values
-         for corresponding function parameters, but it is likely that many
-         of the groups are out of date relative to current OpenGL and OpenGL
-         ES specifications, and the many extensions to those specifications.
-         As such, they may not be a reliable source for enumeration info.
-
-         We welcome assistance from the community in achieving and
-         maintaining the completeness of the enum groups. Khronos does not
-         use the enum group information, and the OpenGL Working Group does
-         not have internal resources to bring it up to date.
-    -->
-
-    <groups>
-        <group name="EvalMapsModeNV">
-            <enum name="GL_FILL_NV"/>
-        </group>
-
-        <group name="ProgramTarget">
-            <enum name="GL_TEXT_FRAGMENT_SHADER"/>
-        </group>
-
-        <group name="CombinerStageNV">
-            <enum name="GL_COMBINER0_NV"/>
-            <enum name="GL_COMBINER1_NV"/>
-            <enum name="GL_COMBINER2_NV"/>
-            <enum name="GL_COMBINER3_NV"/>
-            <enum name="GL_COMBINER4_NV"/>
-            <enum name="GL_COMBINER5_NV"/>
-            <enum name="GL_COMBINER6_NV"/>
-            <enum name="GL_COMBINER7_NV"/>
-        </group>
-
-        <group name="CombinerPortionNV">
-            <enum name="GL_RGB_NV"/>
-            <enum name="GL_ALPHA_NV"/>
-        </group>
-
-        <group name="MapTypeNV">
-            <enum name="GL_FLOAT_NV"/>
-            <enum name="GL_DOUBLE_NV"/>
-        </group>
-
-        <group name="ScalarType">
-            <enum name="GL_UNSIGNED_BYTE"/>
-            <enum name="GL_UNSIGNED_SHORT"/>
-            <enum name="GL_UNSIGNED_INT"/>
-        </group>
-
-        <group name="VertexShaderTextureUnitParameter">
-            <enum name="GL_CURRENT_TEXTURE_COORDS"/>
-            <enum name="GL_TEXTURE_MATRIX"/>
-        </group>
-
-        <group name="ProgramStringProperty">
-            <enum name="GL_PROGRAM_STRING"/>
-        </group>
-
-        <group name="ProgramFormat">
-            <enum name="GL_PROGRAM_FORMAT_ASCII"/>
-        </group>
-
-        <group name="PathColorFormat">
-            <enum name="GL_NONE"/>
-            <enum name="GL_LUMINANCE"/>
-            <enum name="GL_ALPHA"/>
-            <enum name="GL_INTENSITY"/>
-            <enum name="GL_LUMINANCE_ALPHA"/>
-            <enum name="GL_RGB"/>
-            <enum name="GL_RGBA"/>
-        </group>
-
-        <group name="ReplacementCodeTypeSUN">
-            <enum name="GL_UNSIGNED_BYTE_SUN"/>
-            <enum name="GL_UNSIGNED_SHORT_SUN"/>
-            <enum name="GL_UNSIGNED_INT_SUN"/>
-        </group>
-
-        <group name="SecondaryColorPointerTypeIBM">
-            <enum name="GL_SHORT_IBM"/>
-            <enum name="GL_INT_IBM"/>
-            <enum name="GL_FLOAT_IBM"/>
-            <enum name="GL_DOUBLE_IBM"/>
-        </group>
-
-        <group name="FragmentLightNameSGIX">
-            <enum name="GL_FRAGMENT_LIGHT0_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT1_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT2_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT3_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT4_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT5_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT6_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT7_SGIX"/>
-        </group>
-
-        <group name="FragmentLightParameterSGIX">
-            <enum name="GL_SPOT_EXPONENT_SGIX"/>
-            <enum name="GL_SPOT_CUTOFF_SGIX"/>
-            <enum name="GL_CONSTANT_ATTENUATION_SGIX"/>
-            <enum name="GL_LINEAR_ATTENUATION_SGIX"/>
-            <enum name="GL_QUADRATIC_ATTENUATION_SGIX"/>
-            <enum name="GL_AMBIENT_SGIX"/>
-            <enum name="GL_DIFFUSE_SGIX"/>
-            <enum name="GL_SPECULAR_SGIX"/>
-            <enum name="GL_POSITION_SGIX"/>
-            <enum name="GL_SPOT_DIRECTION_SGIX"/>
-            <enum name="GL_SPOT_EXPONENT_SGIX"/>
-            <enum name="GL_SPOT_CUTOFF_SGIX"/>
-            <enum name="GL_CONSTANT_ATTENUATION_SGIX"/>
-            <enum name="GL_LINEAR_ATTENUATION_SGIX"/>
-            <enum name="GL_QUADRATIC_ATTENUATION_SGIX"/>
-        </group>
-
-        <group name="ElementPointerTypeATI">
-            <enum name="GL_UNSIGNED_BYTE_ATI"/>
-            <enum name="GL_UNSIGNED_SHORT_ATI"/>
-            <enum name="GL_UNSIGNED_INT_ATI"/>
-        </group>
-
-        <group name="MatrixIndexPointerTypeARB">
-            <enum name="GL_UNSIGNED_BYTE_ARB"/>
-            <enum name="GL_UNSIGNED_SHORT_ARB"/>
-            <enum name="GL_UNSIGNED_INT_ARB"/>
-        </group>
-
-        <group name="WeightPointerTypeARB">
-            <enum name="GL_BYTE_ARB"/>
-            <enum name="GL_UNSIGNED_BYTE_ARB"/>
-            <enum name="GL_SHORT_ARB"/>
-            <enum name="GL_UNSIGNED_SHORT_ARB"/>
-            <enum name="GL_INT_ARB"/>
-            <enum name="GL_UNSIGNED_INT_ARB"/>
-            <enum name="GL_FLOAT_ARB"/>
-            <enum name="GL_DOUBLE_ARB"/>
-        </group>
-
-        <group name="CullParameterEXT">
-            <enum name="GL_CULL_VERTEX_EYE_POSITION_EXT"/>
-            <enum name="GL_CULL_VERTEX_OBJECT_POSITION_EXT"/>
-        </group>
-
-        <group name="DataTypeEXT">
-            <enum name="GL_SCALAR_EXT"/>
-            <enum name="GL_VECTOR_EXT"/>
-            <enum name="GL_MATRIX_EXT"/>
-        </group>
-
-        <group name="ParameterRangeEXT">
-            <enum name="GL_NORMALIZED_RANGE_EXT"/>
-            <enum name="GL_FULL_RANGE_EXT"/>
-        </group>
-
-        <group name="GetVariantValueEXT">
-            <enum name="GL_VARIANT_VALUE_EXT"/>
-            <enum name="GL_VARIANT_DATATYPE_EXT"/>
-            <enum name="GL_VARIANT_ARRAY_STRIDE_EXT"/>
-            <enum name="GL_VARIANT_ARRAY_TYPE_EXT"/>
-        </group>
-
-        <group name="IndexFunctionEXT">
-            <enum name="GL_NEVER_EXT"/>
-            <enum name="GL_ALWAYS_EXT"/>
-            <enum name="GL_LESS_EXT"/>
-            <enum name="GL_LEQUAL_EXT"/>
-            <enum name="GL_EQUAL_EXT"/>
-            <enum name="GL_GEQUAL_EXT"/>
-            <enum name="GL_GREATER_EXT"/>
-            <enum name="GL_NOTEQUAL_EXT"/>
-        </group>
-
-        <group name="IndexMaterialParameterEXT">
-            <enum name="GL_INDEX_OFFSET"/>
-        </group>
-
-        <group name="VariantCapEXT">
-            <enum name="GL_VARIANT_ARRAY_EXT"/>
-        </group>
-
-        <group name="PixelTransformTargetEXT">
-            <enum name="GL_PIXEL_TRANSFORM_2D_EXT"/>
-        </group>
-
-        <group name="PixelTransformPNameEXT">
-            <enum name="GL_PIXEL_MAG_FILTER_EXT"/>
-            <enum name="GL_PIXEL_MIN_FILTER_EXT"/>
-            <enum name="GL_PIXEL_CUBIC_WEIGHT_EXT"/>
-        </group>
-
-        <group name="VertexWeightPointerTypeEXT">
-            <enum name="GL_FLOAT_EXT"/>
-        </group>
-
-        <group name="VertexShaderWriteMaskEXT">
-            <enum name="GL_TRUE_EXT"/>
-            <enum name="GL_FALSE_EXT"/>
-        </group>
-
-        <group name="CombinerComponentUsageNV">
-            <enum name="GL_RGB_NV"/>
-            <enum name="GL_ALPHA_NV"/>
-            <enum name="GL_BLUE_NV"/>
-        </group>
-
-        <group name="TangentPointerTypeEXT">
-            <enum name="GL_BYTE_EXT"/>
-            <enum name="GL_SHORT_EXT"/>
-            <enum name="GL_FLOAT_EXT"/>
-            <enum name="GL_DOUBLE_EXT"/>
-        </group>
-
-        <group name="BinormalPointerTypeEXT">
-            <enum name="GL_BYTE_EXT"/>
-            <enum name="GL_SHORT_EXT"/>
-            <enum name="GL_FLOAT_EXT"/>
-            <enum name="GL_DOUBLE_EXT"/>
-        </group>
-
-        <group name="TextureNormalModeEXT">
-            <enum name="GL_PERTURB_EXT"/>
-        </group>
-
-        <group name="LightTexturePNameEXT">
-            <enum name="GL_ATTENUATION_EXT"/>
-            <enum name="GL_SHADOW_ATTENUATION_EXT"/>
-        </group>
-
-        <group name="VertexShaderCoordOutEXT">
-            <enum name="GL_X_EXT"/>
-            <enum name="GL_Y_EXT"/>
-            <enum name="GL_Z_EXT"/>
-            <enum name="GL_W_EXT"/>
-            <enum name="GL_NEGATIVE_X_EXT"/>
-            <enum name="GL_NEGATIVE_Y_EXT"/>
-            <enum name="GL_NEGATIVE_Z_EXT"/>
-            <enum name="GL_NEGATIVE_W_EXT"/>
-            <enum name="GL_ZERO_EXT"/>
-            <enum name="GL_ONE_EXT"/>
-            <enum name="GL_NEGATIVE_ONE_EXT"/>
-        </group>
-
-        <group name="SamplePatternEXT">
-            <enum name="GL_1PASS_EXT"/>
-            <enum name="GL_2PASS_0_EXT"/>
-            <enum name="GL_2PASS_1_EXT"/>
-            <enum name="GL_4PASS_0_EXT"/>
-            <enum name="GL_4PASS_1_EXT"/>
-            <enum name="GL_4PASS_2_EXT"/>
-            <enum name="GL_4PASS_3_EXT"/>
-        </group>
-
-        <group name="VertexShaderStorageTypeEXT">
-            <enum name="GL_VARIANT_EXT"/>
-            <enum name="GL_INVARIANT_EXT"/>
-            <enum name="GL_LOCAL_CONSTANT_EXT"/>
-            <enum name="GL_LOCAL_EXT"/>
-        </group>
-
-        <group name="VertexShaderParameterEXT">
-            <enum name="GL_CURRENT_VERTEX_EXT"/>
-            <enum name="GL_MVP_MATRIX_EXT"/>
-        </group>
-
-        <group name="LightTextureModeEXT">
-            <enum name="GL_FRAGMENT_MATERIAL_EXT"/>
-            <enum name="GL_FRAGMENT_NORMAL_EXT"/>
-            <enum name="GL_FRAGMENT_DEPTH_EXT"/>
-            <enum name="GL_FRAGMENT_COLOR_EXT"/>
-        </group>
-
-        <group name="VertexShaderOpEXT">
-            <enum name="GL_OP_INDEX_EXT"/>
-            <enum name="GL_OP_NEGATE_EXT"/>
-            <enum name="GL_OP_DOT3_EXT"/>
-            <enum name="GL_OP_DOT4_EXT"/>
-            <enum name="GL_OP_MUL_EXT"/>
-            <enum name="GL_OP_ADD_EXT"/>
-            <enum name="GL_OP_MADD_EXT"/>
-            <enum name="GL_OP_FRAC_EXT"/>
-            <enum name="GL_OP_MAX_EXT"/>
-            <enum name="GL_OP_MIN_EXT"/>
-            <enum name="GL_OP_SET_GE_EXT"/>
-            <enum name="GL_OP_SET_LT_EXT"/>
-            <enum name="GL_OP_CLAMP_EXT"/>
-            <enum name="GL_OP_FLOOR_EXT"/>
-            <enum name="GL_OP_ROUND_EXT"/>
-            <enum name="GL_OP_EXP_BASE_2_EXT"/>
-            <enum name="GL_OP_LOG_BASE_2_EXT"/>
-            <enum name="GL_OP_POWER_EXT"/>
-            <enum name="GL_OP_RECIP_EXT"/>
-            <enum name="GL_OP_RECIP_SQRT_EXT"/>
-            <enum name="GL_OP_SUB_EXT"/>
-            <enum name="GL_OP_CROSS_PRODUCT_EXT"/>
-            <enum name="GL_OP_MULTIPLY_MATRIX_EXT"/>
-            <enum name="GL_OP_MOV_EXT"/>
-        </group>
-
-        <group name="ProgramFormatARB">
-            <enum name="GL_PROGRAM_FORMAT_ASCII_ARB"/>
-        </group>
-
-        <group name="PointParameterNameARB">
-            <enum name="GL_POINT_SIZE_MIN_EXT"/>
-            <enum name="GL_POINT_SIZE_MAX_EXT"/>
-            <enum name="GL_POINT_FADE_THRESHOLD_SIZE_EXT"/>
-            <enum name="GL_POINT_FADE_THRESHOLD_SIZE"/>
-        </group>
-
-        <group name="VertexAttribPropertyARB">
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_ENABLED"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_SIZE"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_STRIDE"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_TYPE"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_NORMALIZED"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_INTEGER"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_LONG"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_DIVISOR"/>
-            <enum name="GL_VERTEX_ATTRIB_BINDING"/>
-            <enum name="GL_VERTEX_ATTRIB_RELATIVE_OFFSET"/>
-            <enum name="GL_CURRENT_VERTEX_ATTRIB"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT"/>
-        </group>
-
-        <group name="VertexAttribPointerPropertyARB">
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_POINTER"/>
-        </group>
-
-        <group name="ProgramStringPropertyARB">
-            <enum name="GL_PROGRAM_STRING_ARB"/>
-        </group>
-
-        <group name="BufferPointerNameARB">
-            <enum name="GL_BUFFER_MAP_POINTER_ARB"/>
-            <enum name="GL_BUFFER_MAP_POINTER"/>
-        </group>
-
-        <group name="BufferPNameARB">
-            <enum name="GL_BUFFER_SIZE_ARB"/>
-            <enum name="GL_BUFFER_USAGE_ARB"/>
-            <enum name="GL_BUFFER_ACCESS_ARB"/>
-            <enum name="GL_BUFFER_MAPPED_ARB"/>
-            <enum name="GL_BUFFER_SIZE"/>
-            <enum name="GL_BUFFER_USAGE"/>
-            <enum name="GL_BUFFER_ACCESS"/>
-            <enum name="GL_BUFFER_ACCESS_FLAGS"/>
-            <enum name="GL_BUFFER_IMMUTABLE_STORAGE"/>
-            <enum name="GL_BUFFER_MAPPED"/>
-            <enum name="GL_BUFFER_MAP_OFFSET"/>
-            <enum name="GL_BUFFER_MAP_LENGTH"/>
-            <enum name="GL_BUFFER_STORAGE_FLAGS"/>
-        </group>
-
-        <group name="ClampColorModeARB">
-            <enum name="GL_FIXED_ONLY_ARB"/>
-            <enum name="GL_FALSE"/>
-            <enum name="GL_TRUE"/>
-            <enum name="GL_TRUE"/>
-            <enum name="GL_FALSE"/>
-            <enum name="GL_FIXED_ONLY"/>
-        </group>
-
-        <group name="ClampColorTargetARB">
-            <enum name="GL_CLAMP_VERTEX_COLOR_ARB"/>
-            <enum name="GL_CLAMP_FRAGMENT_COLOR_ARB"/>
-            <enum name="GL_CLAMP_READ_COLOR_ARB"/>
-            <enum name="GL_CLAMP_READ_COLOR"/>
-        </group>
-
-        <group name="ProgramTargetARB">
-            <enum name="GL_TEXT_FRAGMENT_SHADER_ATI"/>
-        </group>
-
-        <group name="VertexArrayPNameAPPLE">
-            <enum name="GL_STORAGE_CLIENT_APPLE"/>
-            <enum name="GL_STORAGE_CACHED_APPLE"/>
-            <enum name="GL_STORAGE_SHARED_APPLE"/>
-        </group>
-
-        <group name="ObjectTypeAPPLE">
-            <enum name="GL_DRAW_PIXELS_APPLE"/>
-            <enum name="GL_FENCE_APPLE"/>
-        </group>
-
-        <group name="PreserveModeATI">
-            <enum name="GL_PRESERVE_ATI"/>
-            <enum name="GL_DISCARD_ATI"/>
-        </group>
-
-        <group name="TexBumpParameterATI">
-            <enum name="GL_BUMP_ROT_MATRIX_ATI"/>
-        </group>
-
-        <group name="SwizzleOpATI">
-            <enum name="GL_SWIZZLE_STR_ATI"/>
-            <enum name="GL_SWIZZLE_STQ_ATI"/>
-            <enum name="GL_SWIZZLE_STR_DR_ATI"/>
-            <enum name="GL_SWIZZLE_STQ_DQ_ATI"/>
-        </group>
-
-        <group name="PNTrianglesPNameATI">
-            <enum name="GL_PN_TRIANGLES_POINT_MODE_ATI"/>
-            <enum name="GL_PN_TRIANGLES_NORMAL_MODE_ATI"/>
-            <enum name="GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI"/>
-        </group>
-
-        <group name="ArrayObjectUsageATI">
-            <enum name="GL_STATIC_ATI"/>
-            <enum name="GL_DYNAMIC_ATI"/>
-        </group>
-
-        <group name="GetTexBumpParameterATI">
-            <enum name="GL_BUMP_ROT_MATRIX_ATI"/>
-            <enum name="GL_BUMP_ROT_MATRIX_SIZE_ATI"/>
-            <enum name="GL_BUMP_NUM_TEX_UNITS_ATI"/>
-            <enum name="GL_BUMP_TEX_UNITS_ATI"/>
-        </group>
-
-        <group name="ArrayObjectPNameATI">
-            <enum name="GL_OBJECT_BUFFER_SIZE_ATI"/>
-            <enum name="GL_OBJECT_BUFFER_USAGE_ATI"/>
-        </group>
-
-        <group name="DrawBufferModeATI">
-            <enum name="GL_COLOR_ATTACHMENT0_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT1_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT2_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT3_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT4_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT5_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT6_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT7_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT8_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT9_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT10_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT11_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT12_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT13_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT14_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT15_NV"/>
-        </group>
-
-        <group name="VertexStreamATI">
-            <enum name="GL_VERTEX_STREAM0_ATI"/>
-            <enum name="GL_VERTEX_STREAM1_ATI"/>
-            <enum name="GL_VERTEX_STREAM2_ATI"/>
-            <enum name="GL_VERTEX_STREAM3_ATI"/>
-            <enum name="GL_VERTEX_STREAM4_ATI"/>
-            <enum name="GL_VERTEX_STREAM5_ATI"/>
-            <enum name="GL_VERTEX_STREAM6_ATI"/>
-            <enum name="GL_VERTEX_STREAM7_ATI"/>
-        </group>
-
-        <group name="SpriteParameterNameSGIX">
-            <enum name="GL_SPRITE_MODE_SGIX"/>
-        </group>
-
-        <group name="PixelTexGenModeSGIX">
-            <enum name="GL_PIXEL_TEX_GEN_Q_CEILING_SGIX"/>
-            <enum name="GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX"/>
-            <enum name="GL_PIXEL_TEX_GEN_Q_ROUND_SGIX"/>
-            <enum name="GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX"/>
-            <enum name="GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX"/>
-        </group>
-
-        <group name="IglooFunctionSelectSGIX">
-            <enum name="GL_IGLOO_FULLSCREEN_SGIX"/>
-            <enum name="GL_IGLOO_VIEWPORT_OFFSET_SGIX"/>
-            <enum name="GL_IGLOO_SWAPTMESH_SGIX"/>
-            <enum name="GL_IGLOO_COLORNORMAL_SGIX"/>
-            <enum name="GL_IGLOO_IRISGL_MODE_SGIX"/>
-            <enum name="GL_IGLOO_LMC_COLOR_SGIX"/>
-            <enum name="GL_IGLOO_TMESHMODE_SGIX"/>
-        </group>
-
-        <group name="HintTargetPGI">
-            <enum name="GL_VERTEX_DATA_HINT_PGI"/>
-            <enum name="GL_VERTEX_CONSISTENT_HINT_PGI"/>
-            <enum name="GL_MATERIAL_SIDE_HINT_PGI"/>
-            <enum name="GL_MAX_VERTEX_HINT_PGI"/>
-        </group>
-
-        <group name="ImageTransformPNameHP">
-            <enum name="GL_IMAGE_SCALE_X_HP"/>
-            <enum name="GL_IMAGE_SCALE_Y_HP"/>
-            <enum name="GL_IMAGE_TRANSLATE_X_HP"/>
-            <enum name="GL_IMAGE_TRANSLATE_Y_HP"/>
-            <enum name="GL_IMAGE_ROTATE_ANGLE_HP"/>
-            <enum name="GL_IMAGE_ROTATE_ORIGIN_X_HP"/>
-            <enum name="GL_IMAGE_ROTATE_ORIGIN_Y_HP"/>
-            <enum name="GL_IMAGE_MAG_FILTER_HP"/>
-            <enum name="GL_IMAGE_MIN_FILTER_HP"/>
-            <enum name="GL_IMAGE_CUBIC_WEIGHT_HP"/>
-        </group>
-
-        <group name="ImageTransformTargetHP">
-            <enum name="GL_IMAGE_TRANSFORM_2D_HP"/>
-        </group>
-
-        <group name="TextureFilterSGIS">
-            <enum name="GL_FILTER4_SGIS"/>
-        </group>
-
-        <group name="OcclusionQueryParameterNameNV">
-            <enum name="GL_PIXEL_COUNT_NV"/>
-            <enum name="GL_PIXEL_COUNT_AVAILABLE_NV"/>
-        </group>
-
-        <group name="GetMultisamplePNameNV">
-            <enum name="GL_SAMPLE_POSITION"/>
-            <enum name="GL_SAMPLE_LOCATION_ARB"/>
-            <enum name="GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB"/>
-        </group>
-
-        <group name="MapParameterNV">
-            <enum name="GL_MAP_TESSELLATION_NV"/>
-        </group>
-
-        <group name="MapAttribParameterNV">
-            <enum name="GL_MAP_ATTRIB_U_ORDER_NV"/>
-            <enum name="GL_MAP_ATTRIB_V_ORDER_NV"/>
-        </group>
-
-        <group name="FenceParameterNameNV">
-            <enum name="GL_FENCE_STATUS_NV"/>
-            <enum name="GL_FENCE_CONDITION_NV"/>
-        </group>
-
-        <group name="CombinerParameterNV">
-            <enum name="GL_COMBINER_INPUT_NV"/>
-            <enum name="GL_COMBINER_MAPPING_NV"/>
-            <enum name="GL_COMBINER_COMPONENT_USAGE_NV"/>
-        </group>
-
-        <group name="CombinerBiasNV">
-            <enum name="GL_NONE"/>
-            <enum name="GL_BIAS_BY_NEGATIVE_ONE_HALF_NV"/>
-        </group>
-
-        <group name="CombinerScaleNV">
-            <enum name="GL_NONE"/>
-            <enum name="GL_SCALE_BY_TWO_NV"/>
-            <enum name="GL_SCALE_BY_FOUR_NV"/>
-            <enum name="GL_SCALE_BY_ONE_HALF_NV"/>
-        </group>
-
-        <group name="CombinerMappingNV">
-            <enum name="GL_UNSIGNED_IDENTITY_NV"/>
-            <enum name="GL_UNSIGNED_INVERT_NV"/>
-            <enum name="GL_EXPAND_NORMAL_NV"/>
-            <enum name="GL_EXPAND_NEGATE_NV"/>
-            <enum name="GL_HALF_BIAS_NORMAL_NV"/>
-            <enum name="GL_HALF_BIAS_NEGATE_NV"/>
-            <enum name="GL_SIGNED_IDENTITY_NV"/>
-            <enum name="GL_SIGNED_NEGATE_NV"/>
-        </group>
-
-        <group name="CombinerRegisterNV">
-            <enum name="GL_DISCARD_NV"/>
-            <enum name="GL_PRIMARY_COLOR_NV"/>
-            <enum name="GL_SECONDARY_COLOR_NV"/>
-            <enum name="GL_SPARE0_NV"/>
-            <enum name="GL_SPARE1_NV"/>
-            <enum name="GL_TEXTURE0_ARB"/>
-            <enum name="GL_TEXTURE1_ARB"/>
-        </group>
-
-        <group name="CombinerVariableNV">
-            <enum name="GL_VARIABLE_A_NV"/>
-            <enum name="GL_VARIABLE_B_NV"/>
-            <enum name="GL_VARIABLE_C_NV"/>
-            <enum name="GL_VARIABLE_D_NV"/>
-            <enum name="GL_VARIABLE_E_NV"/>
-            <enum name="GL_VARIABLE_F_NV"/>
-            <enum name="GL_VARIABLE_G_NV"/>
-        </group>
-
-        <group name="PixelDataRangeTargetNV">
-            <enum name="GL_WRITE_PIXEL_DATA_RANGE_NV"/>
-            <enum name="GL_READ_PIXEL_DATA_RANGE_NV"/>
-        </group>
-
-        <group name="EvalTargetNV">
-            <enum name="GL_EVAL_2D_NV"/>
-            <enum name="GL_EVAL_TRIANGULAR_2D_NV"/>
-        </group>
-
-        <group name="VertexAttribEnumNV">
-            <enum name="GL_PROGRAM_PARAMETER_NV"/>
-        </group>
-
-        <group name="FenceConditionNV">
-            <enum name="GL_ALL_COMPLETED_NV"/>
-        </group>
-
-        <group name="PathCoordType">
-            <enum name="GL_CLOSE_PATH_NV"/>
-            <enum name="GL_MOVE_TO_NV"/>
-            <enum name="GL_RELATIVE_MOVE_TO_NV"/>
-            <enum name="GL_LINE_TO_NV"/>
-            <enum name="GL_RELATIVE_LINE_TO_NV"/>
-            <enum name="GL_HORIZONTAL_LINE_TO_NV"/>
-            <enum name="GL_RELATIVE_HORIZONTAL_LINE_TO_NV"/>
-            <enum name="GL_VERTICAL_LINE_TO_NV"/>
-            <enum name="GL_RELATIVE_VERTICAL_LINE_TO_NV"/>
-            <enum name="GL_QUADRATIC_CURVE_TO_NV"/>
-            <enum name="GL_RELATIVE_QUADRATIC_CURVE_TO_NV"/>
-            <enum name="GL_CUBIC_CURVE_TO_NV"/>
-            <enum name="GL_RELATIVE_CUBIC_CURVE_TO_NV"/>
-            <enum name="GL_SMOOTH_QUADRATIC_CURVE_TO_NV"/>
-            <enum name="GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV"/>
-            <enum name="GL_SMOOTH_CUBIC_CURVE_TO_NV"/>
-            <enum name="GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV"/>
-            <enum name="GL_SMALL_CCW_ARC_TO_NV"/>
-            <enum name="GL_RELATIVE_SMALL_CCW_ARC_TO_NV"/>
-            <enum name="GL_SMALL_CW_ARC_TO_NV"/>
-            <enum name="GL_RELATIVE_SMALL_CW_ARC_TO_NV"/>
-            <enum name="GL_LARGE_CCW_ARC_TO_NV"/>
-            <enum name="GL_RELATIVE_LARGE_CCW_ARC_TO_NV"/>
-            <enum name="GL_LARGE_CW_ARC_TO_NV"/>
-            <enum name="GL_RELATIVE_LARGE_CW_ARC_TO_NV"/>
-            <enum name="GL_CONIC_CURVE_TO_NV"/>
-            <enum name="GL_RELATIVE_CONIC_CURVE_TO_NV"/>
-            <enum name="GL_ROUNDED_RECT_NV"/>
-            <enum name="GL_RELATIVE_ROUNDED_RECT_NV"/>
-            <enum name="GL_ROUNDED_RECT2_NV"/>
-            <enum name="GL_RELATIVE_ROUNDED_RECT2_NV"/>
-            <enum name="GL_ROUNDED_RECT4_NV"/>
-            <enum name="GL_RELATIVE_ROUNDED_RECT4_NV"/>
-            <enum name="GL_ROUNDED_RECT8_NV"/>
-            <enum name="GL_RELATIVE_ROUNDED_RECT8_NV"/>
-            <enum name="GL_RESTART_PATH_NV"/>
-            <enum name="GL_DUP_FIRST_CUBIC_CURVE_TO_NV"/>
-            <enum name="GL_DUP_LAST_CUBIC_CURVE_TO_NV"/>
-            <enum name="GL_RECT_NV"/>
-            <enum name="GL_RELATIVE_RECT_NV"/>
-            <enum name="GL_CIRCULAR_CCW_ARC_TO_NV"/>
-            <enum name="GL_CIRCULAR_CW_ARC_TO_NV"/>
-            <enum name="GL_CIRCULAR_TANGENT_ARC_TO_NV"/>
-            <enum name="GL_ARC_TO_NV"/>
-            <enum name="GL_RELATIVE_ARC_TO_NV"/>
-        </group>
-
-        <group name="AccumOp">
-            <enum name="GL_ACCUM"/>
-            <enum name="GL_LOAD"/>
-            <enum name="GL_RETURN"/>
-            <enum name="GL_MULT"/>
-            <enum name="GL_ADD"/>
-        </group>
-
-        <group name="AttribMask">
-            <enum name="GL_ACCUM_BUFFER_BIT"/>
-            <enum name="GL_ALL_ATTRIB_BITS"/>
-            <enum name="GL_COLOR_BUFFER_BIT"/>
-            <enum name="GL_CURRENT_BIT"/>
-            <enum name="GL_DEPTH_BUFFER_BIT"/>
-            <enum name="GL_ENABLE_BIT"/>
-            <enum name="GL_EVAL_BIT"/>
-            <enum name="GL_FOG_BIT"/>
-            <enum name="GL_HINT_BIT"/>
-            <enum name="GL_LIGHTING_BIT"/>
-            <enum name="GL_LINE_BIT"/>
-            <enum name="GL_LIST_BIT"/>
-            <enum name="GL_MULTISAMPLE_BIT"/>
-            <enum name="GL_MULTISAMPLE_BIT_3DFX"/>
-            <enum name="GL_MULTISAMPLE_BIT_ARB"/>
-            <enum name="GL_MULTISAMPLE_BIT_EXT"/>
-            <enum name="GL_PIXEL_MODE_BIT"/>
-            <enum name="GL_POINT_BIT"/>
-            <enum name="GL_POLYGON_BIT"/>
-            <enum name="GL_POLYGON_STIPPLE_BIT"/>
-            <enum name="GL_SCISSOR_BIT"/>
-            <enum name="GL_STENCIL_BUFFER_BIT"/>
-            <enum name="GL_TEXTURE_BIT"/>
-            <enum name="GL_TRANSFORM_BIT"/>
-            <enum name="GL_VIEWPORT_BIT"/>
-        </group>
-
-        <group name="AlphaFunction">
-            <enum name="GL_ALWAYS"/>
-            <enum name="GL_EQUAL"/>
-            <enum name="GL_GEQUAL"/>
-            <enum name="GL_GREATER"/>
-            <enum name="GL_LEQUAL"/>
-            <enum name="GL_LESS"/>
-            <enum name="GL_NEVER"/>
-            <enum name="GL_NOTEQUAL"/>
-        </group>
-
-        <group name="BlendEquationModeEXT">
-            <enum name="GL_ALPHA_MAX_SGIX"/>
-            <enum name="GL_ALPHA_MIN_SGIX"/>
-            <enum name="GL_FUNC_ADD"/>
-            <enum name="GL_FUNC_ADD_EXT"/>
-            <enum name="GL_FUNC_REVERSE_SUBTRACT"/>
-            <enum name="GL_FUNC_REVERSE_SUBTRACT_EXT"/>
-            <enum name="GL_FUNC_SUBTRACT"/>
-            <enum name="GL_FUNC_SUBTRACT_EXT"/>
-            <enum name="GL_MAX"/>
-            <enum name="GL_MAX_EXT"/>
-            <enum name="GL_MIN"/>
-            <enum name="GL_MIN_EXT"/>
-        </group>
-
-        <group name="Boolean">
-            <enum name="GL_FALSE"/>
-            <enum name="GL_TRUE"/>
-        </group>
-
-        <group name="BufferBitQCOM">
-            <enum name="GL_MULTISAMPLE_BUFFER_BIT7_QCOM"/>
-            <enum name="GL_MULTISAMPLE_BUFFER_BIT6_QCOM"/>
-            <enum name="GL_MULTISAMPLE_BUFFER_BIT5_QCOM"/>
-            <enum name="GL_MULTISAMPLE_BUFFER_BIT4_QCOM"/>
-            <enum name="GL_MULTISAMPLE_BUFFER_BIT3_QCOM"/>
-            <enum name="GL_MULTISAMPLE_BUFFER_BIT2_QCOM"/>
-            <enum name="GL_MULTISAMPLE_BUFFER_BIT1_QCOM"/>
-            <enum name="GL_MULTISAMPLE_BUFFER_BIT0_QCOM"/>
-            <enum name="GL_STENCIL_BUFFER_BIT7_QCOM"/>
-            <enum name="GL_STENCIL_BUFFER_BIT6_QCOM"/>
-            <enum name="GL_STENCIL_BUFFER_BIT5_QCOM"/>
-            <enum name="GL_STENCIL_BUFFER_BIT4_QCOM"/>
-            <enum name="GL_STENCIL_BUFFER_BIT3_QCOM"/>
-            <enum name="GL_STENCIL_BUFFER_BIT2_QCOM"/>
-            <enum name="GL_STENCIL_BUFFER_BIT1_QCOM"/>
-            <enum name="GL_STENCIL_BUFFER_BIT0_QCOM"/>
-            <enum name="GL_DEPTH_BUFFER_BIT7_QCOM"/>
-            <enum name="GL_DEPTH_BUFFER_BIT6_QCOM"/>
-            <enum name="GL_DEPTH_BUFFER_BIT5_QCOM"/>
-            <enum name="GL_DEPTH_BUFFER_BIT4_QCOM"/>
-            <enum name="GL_DEPTH_BUFFER_BIT3_QCOM"/>
-            <enum name="GL_DEPTH_BUFFER_BIT2_QCOM"/>
-            <enum name="GL_DEPTH_BUFFER_BIT1_QCOM"/>
-            <enum name="GL_DEPTH_BUFFER_BIT0_QCOM"/>
-            <enum name="GL_COLOR_BUFFER_BIT7_QCOM"/>
-            <enum name="GL_COLOR_BUFFER_BIT6_QCOM"/>
-            <enum name="GL_COLOR_BUFFER_BIT5_QCOM"/>
-            <enum name="GL_COLOR_BUFFER_BIT4_QCOM"/>
-            <enum name="GL_COLOR_BUFFER_BIT3_QCOM"/>
-            <enum name="GL_COLOR_BUFFER_BIT2_QCOM"/>
-            <enum name="GL_COLOR_BUFFER_BIT1_QCOM"/>
-            <enum name="GL_COLOR_BUFFER_BIT0_QCOM"/>
-        </group>
-
-        <group name="BufferTargetARB">
-          <enum name="GL_ARRAY_BUFFER"/>
-          <enum name="GL_ATOMIC_COUNTER_BUFFER" />
-          <enum name="GL_COPY_READ_BUFFER" />
-          <enum name="GL_COPY_WRITE_BUFFER" />
-          <enum name="GL_DISPATCH_INDIRECT_BUFFER" />
-          <enum name="GL_DRAW_INDIRECT_BUFFER" />
-          <enum name="GL_ELEMENT_ARRAY_BUFFER" />
-          <enum name="GL_PIXEL_PACK_BUFFER" />
-          <enum name="GL_PIXEL_UNPACK_BUFFER" />
-          <enum name="GL_QUERY_BUFFER" />
-          <enum name="GL_SHADER_STORAGE_BUFFER" />
-          <enum name="GL_TEXTURE_BUFFER" />
-          <enum name="GL_TRANSFORM_FEEDBACK_BUFFER" />
-          <enum name="GL_UNIFORM_BUFFER" />
-          <enum name="GL_PARAMETER_BUFFER" />
-        </group>
-
-        <group name="BufferUsageARB">
-          <enum name="GL_STREAM_DRAW"/>
-          <enum name="GL_STREAM_READ"/>
-          <enum name="GL_STREAM_COPY"/>
-          <enum name="GL_STATIC_DRAW"/>
-          <enum name="GL_STATIC_READ"/>
-          <enum name="GL_STATIC_COPY"/>
-          <enum name="GL_DYNAMIC_DRAW"/>
-          <enum name="GL_DYNAMIC_READ"/>
-          <enum name="GL_DYNAMIC_COPY"/>
-        </group>
-
-        <group name="BufferAccessARB">
-          <enum name="GL_READ_ONLY"/>
-          <enum name="GL_WRITE_ONLY"/>
-          <enum name="GL_READ_WRITE"/>
-        </group>
-
-        <group name="BufferStorageMask">
-            <enum name="GL_CLIENT_STORAGE_BIT"/>
-            <enum name="GL_CLIENT_STORAGE_BIT_EXT"/>
-            <enum name="GL_DYNAMIC_STORAGE_BIT"/>
-            <enum name="GL_DYNAMIC_STORAGE_BIT_EXT"/>
-            <enum name="GL_MAP_COHERENT_BIT"/>
-            <enum name="GL_MAP_COHERENT_BIT_EXT"/>
-            <enum name="GL_MAP_PERSISTENT_BIT"/>
-            <enum name="GL_MAP_PERSISTENT_BIT_EXT"/>
-            <enum name="GL_MAP_READ_BIT"/>
-            <enum name="GL_MAP_READ_BIT_EXT"/>
-            <enum name="GL_MAP_WRITE_BIT"/>
-            <enum name="GL_MAP_WRITE_BIT_EXT"/>
-            <enum name="GL_SPARSE_STORAGE_BIT_ARB"/>
-            <enum name="GL_LGPU_SEPARATE_STORAGE_BIT_NVX"/>
-            <enum name="GL_PER_GPU_STORAGE_BIT_NV"/>
-        </group>
-
-        <group name="ClearBufferMask">
-            <enum name="GL_ACCUM_BUFFER_BIT"/>
-            <enum name="GL_COLOR_BUFFER_BIT"/>
-            <enum name="GL_COVERAGE_BUFFER_BIT_NV"/>
-            <enum name="GL_DEPTH_BUFFER_BIT"/>
-            <enum name="GL_STENCIL_BUFFER_BIT"/>
-        </group>
-
-        <group name="ClientAttribMask">
-            <enum name="GL_CLIENT_ALL_ATTRIB_BITS"/>
-            <enum name="GL_CLIENT_PIXEL_STORE_BIT"/>
-            <enum name="GL_CLIENT_VERTEX_ARRAY_BIT"/>
-        </group>
-
-        <group name="ClipPlaneName">
-            <enum name="GL_CLIP_DISTANCE0"/>
-            <enum name="GL_CLIP_DISTANCE1"/>
-            <enum name="GL_CLIP_DISTANCE2"/>
-            <enum name="GL_CLIP_DISTANCE3"/>
-            <enum name="GL_CLIP_DISTANCE4"/>
-            <enum name="GL_CLIP_DISTANCE5"/>
-            <enum name="GL_CLIP_DISTANCE6"/>
-            <enum name="GL_CLIP_DISTANCE7"/>
-            <enum name="GL_CLIP_PLANE0"/>
-            <enum name="GL_CLIP_PLANE1"/>
-            <enum name="GL_CLIP_PLANE2"/>
-            <enum name="GL_CLIP_PLANE3"/>
-            <enum name="GL_CLIP_PLANE4"/>
-            <enum name="GL_CLIP_PLANE5"/>
-        </group>
-
-        <group name="ColorMaterialFace">
-            <enum name="GL_BACK"/>
-            <enum name="GL_FRONT"/>
-            <enum name="GL_FRONT_AND_BACK"/>
-        </group>
-
-        <group name="ColorMaterialParameter">
-            <enum name="GL_AMBIENT"/>
-            <enum name="GL_AMBIENT_AND_DIFFUSE"/>
-            <enum name="GL_DIFFUSE"/>
-            <enum name="GL_EMISSION"/>
-            <enum name="GL_SPECULAR"/>
-        </group>
-
-        <group name="ColorPointerType">
-            <enum name="GL_BYTE"/>
-            <enum name="GL_DOUBLE"/>
-            <enum name="GL_FLOAT"/>
-            <enum name="GL_INT"/>
-            <enum name="GL_SHORT"/>
-            <enum name="GL_UNSIGNED_BYTE"/>
-            <enum name="GL_UNSIGNED_INT"/>
-            <enum name="GL_UNSIGNED_SHORT"/>
-        </group>
-
-        <group name="ColorTableParameterPNameSGI">
-            <enum name="GL_COLOR_TABLE_BIAS"/>
-            <enum name="GL_COLOR_TABLE_BIAS_SGI"/>
-            <enum name="GL_COLOR_TABLE_SCALE"/>
-            <enum name="GL_COLOR_TABLE_SCALE_SGI"/>
-        </group>
-
-        <group name="ColorTableTargetSGI">
-            <enum name="GL_COLOR_TABLE"/>
-            <enum name="GL_COLOR_TABLE_SGI"/>
-            <enum name="GL_POST_COLOR_MATRIX_COLOR_TABLE"/>
-            <enum name="GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI"/>
-            <enum name="GL_POST_CONVOLUTION_COLOR_TABLE"/>
-            <enum name="GL_POST_CONVOLUTION_COLOR_TABLE_SGI"/>
-            <enum name="GL_PROXY_COLOR_TABLE"/>
-            <enum name="GL_PROXY_COLOR_TABLE_SGI"/>
-            <enum name="GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE"/>
-            <enum name="GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI"/>
-            <enum name="GL_PROXY_POST_CONVOLUTION_COLOR_TABLE"/>
-            <enum name="GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI"/>
-            <enum name="GL_PROXY_TEXTURE_COLOR_TABLE_SGI"/>
-            <enum name="GL_TEXTURE_COLOR_TABLE_SGI"/>
-        </group>
-
-        <group name="ContextFlagMask">
-            <enum name="GL_CONTEXT_FLAG_DEBUG_BIT"/>
-            <enum name="GL_CONTEXT_FLAG_DEBUG_BIT_KHR"/>
-            <enum name="GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT"/>
-            <enum name="GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT"/>
-            <enum name="GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB"/>
-            <enum name="GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT"/>
-            <enum name="GL_CONTEXT_FLAG_NO_ERROR_BIT"/>
-            <enum name="GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR"/>
-        </group>
-
-        <group name="ContextProfileMask">
-            <enum name="GL_CONTEXT_COMPATIBILITY_PROFILE_BIT"/>
-            <enum name="GL_CONTEXT_CORE_PROFILE_BIT"/>
-        </group>
-
-        <group name="ConvolutionBorderModeEXT">
-            <enum name="GL_REDUCE"/>
-            <enum name="GL_REDUCE_EXT"/>
-        </group>
-
-        <group name="ConvolutionParameterEXT">
-            <enum name="GL_CONVOLUTION_BORDER_MODE"/>
-            <enum name="GL_CONVOLUTION_BORDER_MODE_EXT"/>
-            <enum name="GL_CONVOLUTION_FILTER_BIAS"/>
-            <enum name="GL_CONVOLUTION_FILTER_BIAS_EXT"/>
-            <enum name="GL_CONVOLUTION_FILTER_SCALE"/>
-            <enum name="GL_CONVOLUTION_FILTER_SCALE_EXT"/>
-        </group>
-
-        <group name="ConvolutionTargetEXT">
-            <enum name="GL_CONVOLUTION_1D"/>
-            <enum name="GL_CONVOLUTION_1D_EXT"/>
-            <enum name="GL_CONVOLUTION_2D"/>
-            <enum name="GL_CONVOLUTION_2D_EXT"/>
-        </group>
-
-        <group name="CullFaceMode">
-            <enum name="GL_BACK"/>
-            <enum name="GL_FRONT"/>
-            <enum name="GL_FRONT_AND_BACK"/>
-        </group>
-
-        <group name="DataType" comment="See enums block below"/>
-
-        <group name="DepthFunction">
-            <enum name="GL_ALWAYS"/>
-            <enum name="GL_EQUAL"/>
-            <enum name="GL_GEQUAL"/>
-            <enum name="GL_GREATER"/>
-            <enum name="GL_LEQUAL"/>
-            <enum name="GL_LESS"/>
-            <enum name="GL_NEVER"/>
-            <enum name="GL_NOTEQUAL"/>
-        </group>
-
-        <group name="DrawBufferMode">
-            <enum name="GL_AUX0"/>
-            <enum name="GL_AUX1"/>
-            <enum name="GL_AUX2"/>
-            <enum name="GL_AUX3"/>
-            <enum name="GL_BACK"/>
-            <enum name="GL_BACK_LEFT"/>
-            <enum name="GL_BACK_RIGHT"/>
-            <enum name="GL_FRONT"/>
-            <enum name="GL_FRONT_AND_BACK"/>
-            <enum name="GL_FRONT_LEFT"/>
-            <enum name="GL_FRONT_RIGHT"/>
-            <enum name="GL_LEFT"/>
-            <enum name="GL_NONE"/>
-            <enum name="GL_NONE_OES"/>
-            <enum name="GL_RIGHT"/>
-            <enum name="GL_COLOR_ATTACHMENT0"/>
-            <enum name="GL_COLOR_ATTACHMENT1"/>
-            <enum name="GL_COLOR_ATTACHMENT2"/>
-            <enum name="GL_COLOR_ATTACHMENT3"/>
-            <enum name="GL_COLOR_ATTACHMENT4"/>
-            <enum name="GL_COLOR_ATTACHMENT5"/>
-            <enum name="GL_COLOR_ATTACHMENT6"/>
-            <enum name="GL_COLOR_ATTACHMENT7"/>
-            <enum name="GL_COLOR_ATTACHMENT8"/>
-            <enum name="GL_COLOR_ATTACHMENT9"/>
-            <enum name="GL_COLOR_ATTACHMENT10"/>
-            <enum name="GL_COLOR_ATTACHMENT11"/>
-            <enum name="GL_COLOR_ATTACHMENT12"/>
-            <enum name="GL_COLOR_ATTACHMENT13"/>
-            <enum name="GL_COLOR_ATTACHMENT14"/>
-            <enum name="GL_COLOR_ATTACHMENT15"/>
-            <enum name="GL_COLOR_ATTACHMENT16"/>
-            <enum name="GL_COLOR_ATTACHMENT17"/>
-            <enum name="GL_COLOR_ATTACHMENT18"/>
-            <enum name="GL_COLOR_ATTACHMENT19"/>
-            <enum name="GL_COLOR_ATTACHMENT20"/>
-            <enum name="GL_COLOR_ATTACHMENT21"/>
-            <enum name="GL_COLOR_ATTACHMENT22"/>
-            <enum name="GL_COLOR_ATTACHMENT23"/>
-            <enum name="GL_COLOR_ATTACHMENT24"/>
-            <enum name="GL_COLOR_ATTACHMENT25"/>
-            <enum name="GL_COLOR_ATTACHMENT26"/>
-            <enum name="GL_COLOR_ATTACHMENT27"/>
-            <enum name="GL_COLOR_ATTACHMENT28"/>
-            <enum name="GL_COLOR_ATTACHMENT29"/>
-            <enum name="GL_COLOR_ATTACHMENT30"/>
-            <enum name="GL_COLOR_ATTACHMENT31"/>
-        </group>
-
-        <group name="DrawElementsType">
-            <enum name="GL_UNSIGNED_BYTE"/>
-            <enum name="GL_UNSIGNED_SHORT"/>
-            <enum name="GL_UNSIGNED_INT"/>
-        </group>
-
-        <group name="EnableCap">
-            <enum name="GL_ALPHA_TEST"/>
-            <enum name="GL_ASYNC_DRAW_PIXELS_SGIX"/>
-            <enum name="GL_ASYNC_HISTOGRAM_SGIX"/>
-            <enum name="GL_ASYNC_READ_PIXELS_SGIX"/>
-            <enum name="GL_ASYNC_TEX_IMAGE_SGIX"/>
-            <enum name="GL_AUTO_NORMAL"/>
-            <enum name="GL_BLEND"/>
-            <enum name="GL_CALLIGRAPHIC_FRAGMENT_SGIX"/>
-            <enum name="GL_CLIP_DISTANCE0"/>
-            <enum name="GL_CLIP_DISTANCE1"/>
-            <enum name="GL_CLIP_DISTANCE2"/>
-            <enum name="GL_CLIP_DISTANCE3"/>
-            <enum name="GL_CLIP_DISTANCE4"/>
-            <enum name="GL_CLIP_DISTANCE5"/>
-            <enum name="GL_CLIP_DISTANCE6"/>
-            <enum name="GL_CLIP_DISTANCE7"/>
-            <enum name="GL_CLIP_PLANE0"/>
-            <enum name="GL_CLIP_PLANE1"/>
-            <enum name="GL_CLIP_PLANE2"/>
-            <enum name="GL_CLIP_PLANE3"/>
-            <enum name="GL_CLIP_PLANE4"/>
-            <enum name="GL_CLIP_PLANE5"/>
-            <enum name="GL_COLOR_ARRAY"/>
-            <enum name="GL_COLOR_LOGIC_OP"/>
-            <enum name="GL_COLOR_MATERIAL"/>
-            <enum name="GL_COLOR_TABLE_SGI"/>
-            <enum name="GL_CONVOLUTION_1D_EXT"/>
-            <enum name="GL_CONVOLUTION_2D_EXT"/>
-            <enum name="GL_CULL_FACE"/>
-            <enum name="GL_DEBUG_OUTPUT"/>
-            <enum name="GL_DEBUG_OUTPUT_SYNCHRONOUS"/>
-            <enum name="GL_DEPTH_CLAMP"/>
-            <enum name="GL_DEPTH_TEST"/>
-            <enum name="GL_DITHER"/>
-            <enum name="GL_EDGE_FLAG_ARRAY"/>
-            <enum name="GL_FOG"/>
-            <enum name="GL_FOG_OFFSET_SGIX"/>
-            <enum name="GL_FRAGMENT_COLOR_MATERIAL_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT0_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT1_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT2_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT3_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT4_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT5_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT6_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT7_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHTING_SGIX"/>
-            <enum name="GL_FRAMEBUFFER_SRGB"/>
-            <enum name="GL_FRAMEZOOM_SGIX"/>
-            <enum name="GL_HISTOGRAM_EXT"/>
-            <enum name="GL_INDEX_ARRAY"/>
-            <enum name="GL_INDEX_LOGIC_OP"/>
-            <enum name="GL_INTERLACE_SGIX"/>
-            <enum name="GL_IR_INSTRUMENT1_SGIX"/>
-            <enum name="GL_LIGHT0"/>
-            <enum name="GL_LIGHT1"/>
-            <enum name="GL_LIGHT2"/>
-            <enum name="GL_LIGHT3"/>
-            <enum name="GL_LIGHT4"/>
-            <enum name="GL_LIGHT5"/>
-            <enum name="GL_LIGHT6"/>
-            <enum name="GL_LIGHT7"/>
-            <enum name="GL_LIGHTING"/>
-            <enum name="GL_LINE_SMOOTH"/>
-            <enum name="GL_LINE_STIPPLE"/>
-            <enum name="GL_MAP1_COLOR_4"/>
-            <enum name="GL_MAP1_INDEX"/>
-            <enum name="GL_MAP1_NORMAL"/>
-            <enum name="GL_MAP1_TEXTURE_COORD_1"/>
-            <enum name="GL_MAP1_TEXTURE_COORD_2"/>
-            <enum name="GL_MAP1_TEXTURE_COORD_3"/>
-            <enum name="GL_MAP1_TEXTURE_COORD_4"/>
-            <enum name="GL_MAP1_VERTEX_3"/>
-            <enum name="GL_MAP1_VERTEX_4"/>
-            <enum name="GL_MAP2_COLOR_4"/>
-            <enum name="GL_MAP2_INDEX"/>
-            <enum name="GL_MAP2_NORMAL"/>
-            <enum name="GL_MAP2_TEXTURE_COORD_1"/>
-            <enum name="GL_MAP2_TEXTURE_COORD_2"/>
-            <enum name="GL_MAP2_TEXTURE_COORD_3"/>
-            <enum name="GL_MAP2_TEXTURE_COORD_4"/>
-            <enum name="GL_MAP2_VERTEX_3"/>
-            <enum name="GL_MAP2_VERTEX_4"/>
-            <enum name="GL_MINMAX_EXT"/>
-            <enum name="GL_MULTISAMPLE"/>
-            <enum name="GL_MULTISAMPLE_SGIS"/>
-            <enum name="GL_NORMALIZE"/>
-            <enum name="GL_NORMAL_ARRAY"/>
-            <enum name="GL_PIXEL_TEXTURE_SGIS"/>
-            <enum name="GL_PIXEL_TEX_GEN_SGIX"/>
-            <enum name="GL_POINT_SMOOTH"/>
-            <enum name="GL_POLYGON_OFFSET_FILL"/>
-            <enum name="GL_POLYGON_OFFSET_LINE"/>
-            <enum name="GL_POLYGON_OFFSET_POINT"/>
-            <enum name="GL_POLYGON_SMOOTH"/>
-            <enum name="GL_POLYGON_STIPPLE"/>
-            <enum name="GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI"/>
-            <enum name="GL_POST_CONVOLUTION_COLOR_TABLE_SGI"/>
-            <enum name="GL_PRIMITIVE_RESTART"/>
-            <enum name="GL_PRIMITIVE_RESTART_FIXED_INDEX"/>
-            <enum name="GL_PROGRAM_POINT_SIZE"/>
-            <enum name="GL_RASTERIZER_DISCARD"/>
-            <enum name="GL_REFERENCE_PLANE_SGIX"/>
-            <enum name="GL_RESCALE_NORMAL_EXT"/>
-            <enum name="GL_SAMPLE_ALPHA_TO_COVERAGE"/>
-            <enum name="GL_SAMPLE_ALPHA_TO_MASK_SGIS"/>
-            <enum name="GL_SAMPLE_ALPHA_TO_ONE"/>
-            <enum name="GL_SAMPLE_ALPHA_TO_ONE_SGIS"/>
-            <enum name="GL_SAMPLE_COVERAGE"/>
-            <enum name="GL_SAMPLE_MASK"/>
-            <enum name="GL_SAMPLE_MASK_SGIS"/>
-            <enum name="GL_SAMPLE_SHADING"/>
-            <enum name="GL_SCISSOR_TEST"/>
-            <enum name="GL_SEPARABLE_2D_EXT"/>
-            <enum name="GL_SHARED_TEXTURE_PALETTE_EXT"/>
-            <enum name="GL_SPRITE_SGIX"/>
-            <enum name="GL_STENCIL_TEST"/>
-            <enum name="GL_TEXTURE_1D"/>
-            <enum name="GL_TEXTURE_2D"/>
-            <enum name="GL_TEXTURE_3D_EXT"/>
-            <enum name="GL_TEXTURE_4D_SGIS"/>
-            <enum name="GL_TEXTURE_COLOR_TABLE_SGI"/>
-            <enum name="GL_TEXTURE_COORD_ARRAY"/>
-            <enum name="GL_TEXTURE_CUBE_MAP_SEAMLESS"/>
-            <enum name="GL_TEXTURE_GEN_Q"/>
-            <enum name="GL_TEXTURE_GEN_R"/>
-            <enum name="GL_TEXTURE_GEN_S"/>
-            <enum name="GL_TEXTURE_GEN_T"/>
-            <enum name="GL_VERTEX_ARRAY"/>
-        </group>
-
-        <group name="ErrorCode">
-            <enum name="GL_INVALID_ENUM"/>
-            <enum name="GL_INVALID_FRAMEBUFFER_OPERATION"/>
-            <enum name="GL_INVALID_FRAMEBUFFER_OPERATION_EXT"/>
-            <enum name="GL_INVALID_FRAMEBUFFER_OPERATION_OES"/>
-            <enum name="GL_INVALID_OPERATION"/>
-            <enum name="GL_INVALID_VALUE"/>
-            <enum name="GL_NO_ERROR"/>
-            <enum name="GL_OUT_OF_MEMORY"/>
-            <enum name="GL_STACK_OVERFLOW"/>
-            <enum name="GL_STACK_UNDERFLOW"/>
-            <enum name="GL_TABLE_TOO_LARGE"/>
-            <enum name="GL_TABLE_TOO_LARGE_EXT"/>
-            <enum name="GL_TEXTURE_TOO_LARGE_EXT"/>
-        </group>
-
-        <group name="ExternalHandleType">
-            <enum name="GL_HANDLE_TYPE_OPAQUE_FD_EXT"/>
-            <enum name="GL_HANDLE_TYPE_OPAQUE_WIN32_EXT"/>
-            <enum name="GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT"/>
-            <enum name="GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT"/>
-            <enum name="GL_HANDLE_TYPE_D3D12_RESOURCE_EXT"/>
-            <enum name="GL_HANDLE_TYPE_D3D11_IMAGE_EXT"/>
-            <enum name="GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT"/>
-            <enum name="GL_HANDLE_TYPE_D3D12_FENCE_EXT"/>
-        </group>
-
-        <group name="FeedbackType">
-            <enum name="GL_2D"/>
-            <enum name="GL_3D"/>
-            <enum name="GL_3D_COLOR"/>
-            <enum name="GL_3D_COLOR_TEXTURE"/>
-            <enum name="GL_4D_COLOR_TEXTURE"/>
-        </group>
-
-        <group name="FeedBackToken">
-            <enum name="GL_BITMAP_TOKEN"/>
-            <enum name="GL_COPY_PIXEL_TOKEN"/>
-            <enum name="GL_DRAW_PIXEL_TOKEN"/>
-            <enum name="GL_LINE_RESET_TOKEN"/>
-            <enum name="GL_LINE_TOKEN"/>
-            <enum name="GL_PASS_THROUGH_TOKEN"/>
-            <enum name="GL_POINT_TOKEN"/>
-            <enum name="GL_POLYGON_TOKEN"/>
-        </group>
-
-        <group name="FfdMaskSGIX" comment="See enums section below. Was SGIXFfdMask"/>
-
-        <group name="FfdTargetSGIX">
-            <enum name="GL_GEOMETRY_DEFORMATION_SGIX"/>
-            <enum name="GL_TEXTURE_DEFORMATION_SGIX"/>
-        </group>
-
-        <group name="FogCoordinatePointerType">
-            <enum name="GL_FLOAT"/>
-            <enum name="GL_DOUBLE"/>
-        </group>
-
-        <group name="FogMode">
-            <enum name="GL_EXP"/>
-            <enum name="GL_EXP2"/>
-            <enum name="GL_FOG_FUNC_SGIS"/>
-            <enum name="GL_LINEAR"/>
-        </group>
-
-        <group name="FogParameter">
-            <enum name="GL_FOG_COLOR"/>
-            <enum name="GL_FOG_DENSITY"/>
-            <enum name="GL_FOG_END"/>
-            <enum name="GL_FOG_INDEX"/>
-            <enum name="GL_FOG_MODE"/>
-            <enum name="GL_FOG_OFFSET_VALUE_SGIX"/>
-            <enum name="GL_FOG_START"/>
-        </group>
-
-        <group name="FogPointerTypeEXT">
-            <enum name="GL_FLOAT"/>
-            <enum name="GL_DOUBLE"/>
-        </group>
-
-        <group name="FogPointerTypeIBM">
-            <enum name="GL_FLOAT"/>
-            <enum name="GL_DOUBLE"/>
-        </group>
-
-        <group name="FragmentLightModelParameterSGIX">
-            <enum name="GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX"/>
-        </group>
-
-        <group name="FramebufferFetchNoncoherent">
-            <enum name="GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM"/>
-        </group>
-
-        <group name="FrontFaceDirection">
-            <enum name="GL_CCW"/>
-            <enum name="GL_CW"/>
-        </group>
-
-        <group name="GetColorTableParameterPNameSGI">
-            <enum name="GL_COLOR_TABLE_ALPHA_SIZE_SGI"/>
-            <enum name="GL_COLOR_TABLE_BIAS_SGI"/>
-            <enum name="GL_COLOR_TABLE_BLUE_SIZE_SGI"/>
-            <enum name="GL_COLOR_TABLE_FORMAT_SGI"/>
-            <enum name="GL_COLOR_TABLE_GREEN_SIZE_SGI"/>
-            <enum name="GL_COLOR_TABLE_INTENSITY_SIZE_SGI"/>
-            <enum name="GL_COLOR_TABLE_LUMINANCE_SIZE_SGI"/>
-            <enum name="GL_COLOR_TABLE_RED_SIZE_SGI"/>
-            <enum name="GL_COLOR_TABLE_SCALE_SGI"/>
-            <enum name="GL_COLOR_TABLE_WIDTH_SGI"/>
-            <enum name="GL_COLOR_TABLE_BIAS"/>
-            <enum name="GL_COLOR_TABLE_SCALE"/>
-            <enum name="GL_COLOR_TABLE_FORMAT"/>
-            <enum name="GL_COLOR_TABLE_WIDTH"/>
-            <enum name="GL_COLOR_TABLE_RED_SIZE"/>
-            <enum name="GL_COLOR_TABLE_GREEN_SIZE"/>
-            <enum name="GL_COLOR_TABLE_BLUE_SIZE"/>
-            <enum name="GL_COLOR_TABLE_ALPHA_SIZE"/>
-            <enum name="GL_COLOR_TABLE_LUMINANCE_SIZE"/>
-            <enum name="GL_COLOR_TABLE_INTENSITY_SIZE"/>
-        </group>
-
-        <group name="GetConvolutionParameter">
-            <enum name="GL_CONVOLUTION_BORDER_MODE_EXT"/>
-            <enum name="GL_CONVOLUTION_FILTER_BIAS_EXT"/>
-            <enum name="GL_CONVOLUTION_FILTER_SCALE_EXT"/>
-            <enum name="GL_CONVOLUTION_FORMAT_EXT"/>
-            <enum name="GL_CONVOLUTION_HEIGHT_EXT"/>
-            <enum name="GL_CONVOLUTION_WIDTH_EXT"/>
-            <enum name="GL_MAX_CONVOLUTION_HEIGHT_EXT"/>
-            <enum name="GL_MAX_CONVOLUTION_WIDTH_EXT"/>
-            <enum name="GL_CONVOLUTION_BORDER_MODE"/>
-            <enum name="GL_CONVOLUTION_BORDER_COLOR"/>
-            <enum name="GL_CONVOLUTION_FILTER_SCALE"/>
-            <enum name="GL_CONVOLUTION_FILTER_BIAS"/>
-            <enum name="GL_CONVOLUTION_FORMAT"/>
-            <enum name="GL_CONVOLUTION_WIDTH"/>
-            <enum name="GL_CONVOLUTION_HEIGHT"/>
-            <enum name="GL_MAX_CONVOLUTION_WIDTH"/>
-            <enum name="GL_MAX_CONVOLUTION_HEIGHT"/>
-        </group>
-
-        <group name="GetHistogramParameterPNameEXT">
-            <enum name="GL_HISTOGRAM_ALPHA_SIZE_EXT"/>
-            <enum name="GL_HISTOGRAM_BLUE_SIZE_EXT"/>
-            <enum name="GL_HISTOGRAM_FORMAT_EXT"/>
-            <enum name="GL_HISTOGRAM_GREEN_SIZE_EXT"/>
-            <enum name="GL_HISTOGRAM_LUMINANCE_SIZE_EXT"/>
-            <enum name="GL_HISTOGRAM_RED_SIZE_EXT"/>
-            <enum name="GL_HISTOGRAM_SINK_EXT"/>
-            <enum name="GL_HISTOGRAM_WIDTH_EXT"/>
-            <enum name="GL_HISTOGRAM_WIDTH"/>
-            <enum name="GL_HISTOGRAM_FORMAT"/>
-            <enum name="GL_HISTOGRAM_RED_SIZE"/>
-            <enum name="GL_HISTOGRAM_GREEN_SIZE"/>
-            <enum name="GL_HISTOGRAM_BLUE_SIZE"/>
-            <enum name="GL_HISTOGRAM_ALPHA_SIZE"/>
-            <enum name="GL_HISTOGRAM_LUMINANCE_SIZE"/>
-            <enum name="GL_HISTOGRAM_SINK"/>
-            <enum name="GL_HISTOGRAM_ALPHA_SIZE_EXT"/>
-            <enum name="GL_HISTOGRAM_BLUE_SIZE_EXT"/>
-            <enum name="GL_HISTOGRAM_FORMAT_EXT"/>
-            <enum name="GL_HISTOGRAM_GREEN_SIZE_EXT"/>
-            <enum name="GL_HISTOGRAM_LUMINANCE_SIZE_EXT"/>
-            <enum name="GL_HISTOGRAM_RED_SIZE_EXT"/>
-            <enum name="GL_HISTOGRAM_SINK_EXT"/>
-            <enum name="GL_HISTOGRAM_WIDTH_EXT"/>
-        </group>
-
-        <group name="GetMapQuery">
-            <enum name="GL_COEFF"/>
-            <enum name="GL_DOMAIN"/>
-            <enum name="GL_ORDER"/>
-        </group>
-
-        <group name="GetMinmaxParameterPNameEXT">
-            <enum name="GL_MINMAX_FORMAT"/>
-            <enum name="GL_MINMAX_FORMAT_EXT"/>
-            <enum name="GL_MINMAX_SINK"/>
-            <enum name="GL_MINMAX_SINK_EXT"/>
-            <enum name="GL_MINMAX_FORMAT"/>
-            <enum name="GL_MINMAX_SINK"/>
-        </group>
-
-        <group name="GetPixelMap">
-            <enum name="GL_PIXEL_MAP_A_TO_A"/>
-            <enum name="GL_PIXEL_MAP_B_TO_B"/>
-            <enum name="GL_PIXEL_MAP_G_TO_G"/>
-            <enum name="GL_PIXEL_MAP_I_TO_A"/>
-            <enum name="GL_PIXEL_MAP_I_TO_B"/>
-            <enum name="GL_PIXEL_MAP_I_TO_G"/>
-            <enum name="GL_PIXEL_MAP_I_TO_I"/>
-            <enum name="GL_PIXEL_MAP_I_TO_R"/>
-            <enum name="GL_PIXEL_MAP_R_TO_R"/>
-            <enum name="GL_PIXEL_MAP_S_TO_S"/>
-        </group>
-
-        <group name="GetPName">
-            <enum name="GL_ACCUM_ALPHA_BITS"/>
-            <enum name="GL_ACCUM_BLUE_BITS"/>
-            <enum name="GL_ACCUM_CLEAR_VALUE"/>
-            <enum name="GL_ACCUM_GREEN_BITS"/>
-            <enum name="GL_ACCUM_RED_BITS"/>
-            <enum name="GL_ACTIVE_TEXTURE"/>
-            <enum name="GL_ALIASED_LINE_WIDTH_RANGE"/>
-            <enum name="GL_ALIASED_POINT_SIZE_RANGE"/>
-            <enum name="GL_ALPHA_BIAS"/>
-            <enum name="GL_ALPHA_BITS"/>
-            <enum name="GL_ALPHA_SCALE"/>
-            <enum name="GL_ALPHA_TEST"/>
-            <enum name="GL_ALPHA_TEST_FUNC"/>
-            <enum name="GL_ALPHA_TEST_FUNC_QCOM"/>
-            <enum name="GL_ALPHA_TEST_QCOM"/>
-            <enum name="GL_ALPHA_TEST_REF"/>
-            <enum name="GL_ALPHA_TEST_REF_QCOM"/>
-            <enum name="GL_ARRAY_BUFFER_BINDING"/>
-            <enum name="GL_ASYNC_DRAW_PIXELS_SGIX"/>
-            <enum name="GL_ASYNC_HISTOGRAM_SGIX"/>
-            <enum name="GL_ASYNC_MARKER_SGIX"/>
-            <enum name="GL_ASYNC_READ_PIXELS_SGIX"/>
-            <enum name="GL_ASYNC_TEX_IMAGE_SGIX"/>
-            <enum name="GL_ATTRIB_STACK_DEPTH"/>
-            <enum name="GL_AUTO_NORMAL"/>
-            <enum name="GL_AUX_BUFFERS"/>
-            <enum name="GL_BLEND"/>
-            <enum name="GL_BLEND_COLOR"/>
-            <enum name="GL_BLEND_COLOR_EXT"/>
-            <enum name="GL_BLEND_DST"/>
-            <enum name="GL_BLEND_DST_ALPHA"/>
-            <enum name="GL_BLEND_DST_RGB"/>
-            <enum name="GL_BLEND_EQUATION_ALPHA"/>
-            <enum name="GL_BLEND_EQUATION_EXT"/>
-            <enum name="GL_BLEND_EQUATION_RGB"/>
-            <enum name="GL_BLEND_SRC"/>
-            <enum name="GL_BLEND_SRC_ALPHA"/>
-            <enum name="GL_BLEND_SRC_RGB"/>
-            <enum name="GL_BLUE_BIAS"/>
-            <enum name="GL_BLUE_BITS"/>
-            <enum name="GL_BLUE_SCALE"/>
-            <enum name="GL_CALLIGRAPHIC_FRAGMENT_SGIX"/>
-            <enum name="GL_CLIENT_ATTRIB_STACK_DEPTH"/>
-            <enum name="GL_CLIP_PLANE0"/>
-            <enum name="GL_CLIP_PLANE1"/>
-            <enum name="GL_CLIP_PLANE2"/>
-            <enum name="GL_CLIP_PLANE3"/>
-            <enum name="GL_CLIP_PLANE4"/>
-            <enum name="GL_CLIP_PLANE5"/>
-            <enum name="GL_COLOR_ARRAY"/>
-            <enum name="GL_COLOR_ARRAY_COUNT_EXT"/>
-            <enum name="GL_COLOR_ARRAY_SIZE"/>
-            <enum name="GL_COLOR_ARRAY_STRIDE"/>
-            <enum name="GL_COLOR_ARRAY_TYPE"/>
-            <enum name="GL_COLOR_CLEAR_VALUE"/>
-            <enum name="GL_COLOR_LOGIC_OP"/>
-            <enum name="GL_COLOR_MATERIAL"/>
-            <enum name="GL_COLOR_MATERIAL_FACE"/>
-            <enum name="GL_COLOR_MATERIAL_PARAMETER"/>
-            <enum name="GL_COLOR_MATRIX_SGI"/>
-            <enum name="GL_COLOR_MATRIX_STACK_DEPTH_SGI"/>
-            <enum name="GL_COLOR_TABLE_SGI"/>
-            <enum name="GL_COLOR_WRITEMASK"/>
-            <enum name="GL_COMPRESSED_TEXTURE_FORMATS"/>
-            <enum name="GL_CONTEXT_FLAGS"/>
-            <enum name="GL_CONVOLUTION_1D_EXT"/>
-            <enum name="GL_CONVOLUTION_2D_EXT"/>
-            <enum name="GL_CONVOLUTION_HINT_SGIX"/>
-            <enum name="GL_CULL_FACE"/>
-            <enum name="GL_CULL_FACE_MODE"/>
-            <enum name="GL_CURRENT_COLOR"/>
-            <enum name="GL_CURRENT_INDEX"/>
-            <enum name="GL_CURRENT_NORMAL"/>
-            <enum name="GL_CURRENT_PROGRAM"/>
-            <enum name="GL_CURRENT_RASTER_COLOR"/>
-            <enum name="GL_CURRENT_RASTER_DISTANCE"/>
-            <enum name="GL_CURRENT_RASTER_INDEX"/>
-            <enum name="GL_CURRENT_RASTER_POSITION"/>
-            <enum name="GL_CURRENT_RASTER_POSITION_VALID"/>
-            <enum name="GL_CURRENT_RASTER_TEXTURE_COORDS"/>
-            <enum name="GL_CURRENT_TEXTURE_COORDS"/>
-            <enum name="GL_DEBUG_GROUP_STACK_DEPTH"/>
-            <enum name="GL_DEFORMATIONS_MASK_SGIX"/>
-            <enum name="GL_DEPTH_BIAS"/>
-            <enum name="GL_DEPTH_BITS"/>
-            <enum name="GL_DEPTH_CLEAR_VALUE"/>
-            <enum name="GL_DEPTH_FUNC"/>
-            <enum name="GL_DEPTH_RANGE"/>
-            <enum name="GL_DEPTH_SCALE"/>
-            <enum name="GL_DEPTH_TEST"/>
-            <enum name="GL_DEPTH_WRITEMASK"/>
-            <enum name="GL_DETAIL_TEXTURE_2D_BINDING_SGIS"/>
-            <enum name="GL_DEVICE_LUID_EXT"/>
-            <enum name="GL_DEVICE_NODE_MASK_EXT"/>
-            <enum name="GL_DEVICE_UUID_EXT"/>
-            <enum name="GL_DISPATCH_INDIRECT_BUFFER_BINDING"/>
-            <enum name="GL_DISTANCE_ATTENUATION_SGIS"/>
-            <enum name="GL_DITHER"/>
-            <enum name="GL_DOUBLEBUFFER"/>
-            <enum name="GL_DRAW_BUFFER"/>
-            <enum name="GL_DRAW_BUFFER_EXT"/>
-            <enum name="GL_DRAW_FRAMEBUFFER_BINDING"/>
-            <enum name="GL_DRIVER_UUID_EXT"/>
-            <enum name="GL_EDGE_FLAG"/>
-            <enum name="GL_EDGE_FLAG_ARRAY"/>
-            <enum name="GL_EDGE_FLAG_ARRAY_COUNT_EXT"/>
-            <enum name="GL_EDGE_FLAG_ARRAY_STRIDE"/>
-            <enum name="GL_ELEMENT_ARRAY_BUFFER_BINDING"/>
-            <enum name="GL_FEEDBACK_BUFFER_SIZE"/>
-            <enum name="GL_FEEDBACK_BUFFER_TYPE"/>
-            <enum name="GL_FOG"/>
-            <enum name="GL_FOG_COLOR"/>
-            <enum name="GL_FOG_DENSITY"/>
-            <enum name="GL_FOG_END"/>
-            <enum name="GL_FOG_FUNC_POINTS_SGIS"/>
-            <enum name="GL_FOG_HINT"/>
-            <enum name="GL_FOG_INDEX"/>
-            <enum name="GL_FOG_MODE"/>
-            <enum name="GL_FOG_OFFSET_SGIX"/>
-            <enum name="GL_FOG_OFFSET_VALUE_SGIX"/>
-            <enum name="GL_FOG_START"/>
-            <enum name="GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX"/>
-            <enum name="GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX"/>
-            <enum name="GL_FRAGMENT_COLOR_MATERIAL_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT0_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHTING_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX"/>
-            <enum name="GL_FRAGMENT_SHADER_DERIVATIVE_HINT"/>
-            <enum name="GL_FRAMEZOOM_FACTOR_SGIX"/>
-            <enum name="GL_FRAMEZOOM_SGIX"/>
-            <enum name="GL_FRONT_FACE"/>
-            <enum name="GL_GENERATE_MIPMAP_HINT_SGIS"/>
-            <enum name="GL_GREEN_BIAS"/>
-            <enum name="GL_GREEN_BITS"/>
-            <enum name="GL_GREEN_SCALE"/>
-            <enum name="GL_HISTOGRAM_EXT"/>
-            <enum name="GL_IMPLEMENTATION_COLOR_READ_FORMAT"/>
-            <enum name="GL_IMPLEMENTATION_COLOR_READ_TYPE"/>
-            <enum name="GL_INDEX_ARRAY"/>
-            <enum name="GL_INDEX_ARRAY_COUNT_EXT"/>
-            <enum name="GL_INDEX_ARRAY_STRIDE"/>
-            <enum name="GL_INDEX_ARRAY_TYPE"/>
-            <enum name="GL_INDEX_BITS"/>
-            <enum name="GL_INDEX_CLEAR_VALUE"/>
-            <enum name="GL_INDEX_LOGIC_OP"/>
-            <enum name="GL_INDEX_MODE"/>
-            <enum name="GL_INDEX_OFFSET"/>
-            <enum name="GL_INDEX_SHIFT"/>
-            <enum name="GL_INDEX_WRITEMASK"/>
-            <enum name="GL_INSTRUMENT_MEASUREMENTS_SGIX"/>
-            <enum name="GL_INTERLACE_SGIX"/>
-            <enum name="GL_IR_INSTRUMENT1_SGIX"/>
-            <enum name="GL_LAYER_PROVOKING_VERTEX"/>
-            <enum name="GL_LIGHT0"/>
-            <enum name="GL_LIGHT1"/>
-            <enum name="GL_LIGHT2"/>
-            <enum name="GL_LIGHT3"/>
-            <enum name="GL_LIGHT4"/>
-            <enum name="GL_LIGHT5"/>
-            <enum name="GL_LIGHT6"/>
-            <enum name="GL_LIGHT7"/>
-            <enum name="GL_LIGHTING"/>
-            <enum name="GL_LIGHT_ENV_MODE_SGIX"/>
-            <enum name="GL_LIGHT_MODEL_AMBIENT"/>
-            <enum name="GL_LIGHT_MODEL_COLOR_CONTROL"/>
-            <enum name="GL_LIGHT_MODEL_LOCAL_VIEWER"/>
-            <enum name="GL_LIGHT_MODEL_TWO_SIDE"/>
-            <enum name="GL_LINE_SMOOTH"/>
-            <enum name="GL_LINE_SMOOTH_HINT"/>
-            <enum name="GL_LINE_STIPPLE"/>
-            <enum name="GL_LINE_STIPPLE_PATTERN"/>
-            <enum name="GL_LINE_STIPPLE_REPEAT"/>
-            <enum name="GL_LINE_WIDTH"/>
-            <enum name="GL_LINE_WIDTH_GRANULARITY"/>
-            <enum name="GL_LINE_WIDTH_RANGE"/>
-            <enum name="GL_LIST_BASE"/>
-            <enum name="GL_LIST_INDEX"/>
-            <enum name="GL_LIST_MODE"/>
-            <enum name="GL_LOGIC_OP"/>
-            <enum name="GL_LOGIC_OP_MODE"/>
-            <enum name="GL_MAJOR_VERSION"/>
-            <enum name="GL_MAP1_COLOR_4"/>
-            <enum name="GL_MAP1_GRID_DOMAIN"/>
-            <enum name="GL_MAP1_GRID_SEGMENTS"/>
-            <enum name="GL_MAP1_INDEX"/>
-            <enum name="GL_MAP1_NORMAL"/>
-            <enum name="GL_MAP1_TEXTURE_COORD_1"/>
-            <enum name="GL_MAP1_TEXTURE_COORD_2"/>
-            <enum name="GL_MAP1_TEXTURE_COORD_3"/>
-            <enum name="GL_MAP1_TEXTURE_COORD_4"/>
-            <enum name="GL_MAP1_VERTEX_3"/>
-            <enum name="GL_MAP1_VERTEX_4"/>
-            <enum name="GL_MAP2_COLOR_4"/>
-            <enum name="GL_MAP2_GRID_DOMAIN"/>
-            <enum name="GL_MAP2_GRID_SEGMENTS"/>
-            <enum name="GL_MAP2_INDEX"/>
-            <enum name="GL_MAP2_NORMAL"/>
-            <enum name="GL_MAP2_TEXTURE_COORD_1"/>
-            <enum name="GL_MAP2_TEXTURE_COORD_2"/>
-            <enum name="GL_MAP2_TEXTURE_COORD_3"/>
-            <enum name="GL_MAP2_TEXTURE_COORD_4"/>
-            <enum name="GL_MAP2_VERTEX_3"/>
-            <enum name="GL_MAP2_VERTEX_4"/>
-            <enum name="GL_MAP_COLOR"/>
-            <enum name="GL_MAP_STENCIL"/>
-            <enum name="GL_MATRIX_MODE"/>
-            <enum name="GL_MAX_3D_TEXTURE_SIZE"/>
-            <enum name="GL_MAX_3D_TEXTURE_SIZE_EXT"/>
-            <enum name="GL_MAX_4D_TEXTURE_SIZE_SGIS"/>
-            <enum name="GL_MAX_ACTIVE_LIGHTS_SGIX"/>
-            <enum name="GL_MAX_ARRAY_TEXTURE_LAYERS"/>
-            <enum name="GL_MAX_ASYNC_DRAW_PIXELS_SGIX"/>
-            <enum name="GL_MAX_ASYNC_HISTOGRAM_SGIX"/>
-            <enum name="GL_MAX_ASYNC_READ_PIXELS_SGIX"/>
-            <enum name="GL_MAX_ASYNC_TEX_IMAGE_SGIX"/>
-            <enum name="GL_MAX_ATTRIB_STACK_DEPTH"/>
-            <enum name="GL_MAX_CLIENT_ATTRIB_STACK_DEPTH"/>
-            <enum name="GL_MAX_CLIPMAP_DEPTH_SGIX"/>
-            <enum name="GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX"/>
-            <enum name="GL_MAX_CLIP_DISTANCES"/>
-            <enum name="GL_MAX_CLIP_PLANES"/>
-            <enum name="GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI"/>
-            <enum name="GL_MAX_COLOR_TEXTURE_SAMPLES"/>
-            <enum name="GL_MAX_COMBINED_ATOMIC_COUNTERS"/>
-            <enum name="GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS"/>
-            <enum name="GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS"/>
-            <enum name="GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS"/>
-            <enum name="GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS"/>
-            <enum name="GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS"/>
-            <enum name="GL_MAX_COMBINED_UNIFORM_BLOCKS"/>
-            <enum name="GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS"/>
-            <enum name="GL_MAX_COMPUTE_ATOMIC_COUNTERS"/>
-            <enum name="GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS"/>
-            <enum name="GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS"/>
-            <enum name="GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS"/>
-            <enum name="GL_MAX_COMPUTE_UNIFORM_BLOCKS"/>
-            <enum name="GL_MAX_COMPUTE_UNIFORM_COMPONENTS"/>
-            <enum name="GL_MAX_COMPUTE_WORK_GROUP_COUNT"/>
-            <enum name="GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS"/>
-            <enum name="GL_MAX_COMPUTE_WORK_GROUP_SIZE"/>
-            <enum name="GL_MAX_CUBE_MAP_TEXTURE_SIZE"/>
-            <enum name="GL_MAX_DEBUG_GROUP_STACK_DEPTH"/>
-            <enum name="GL_MAX_DEPTH_TEXTURE_SAMPLES"/>
-            <enum name="GL_MAX_DRAW_BUFFERS"/>
-            <enum name="GL_MAX_DUAL_SOURCE_DRAW_BUFFERS"/>
-            <enum name="GL_MAX_ELEMENTS_INDICES"/>
-            <enum name="GL_MAX_ELEMENTS_VERTICES"/>
-            <enum name="GL_MAX_ELEMENT_INDEX"/>
-            <enum name="GL_MAX_EVAL_ORDER"/>
-            <enum name="GL_MAX_FOG_FUNC_POINTS_SGIS"/>
-            <enum name="GL_MAX_FRAGMENT_ATOMIC_COUNTERS"/>
-            <enum name="GL_MAX_FRAGMENT_INPUT_COMPONENTS"/>
-            <enum name="GL_MAX_FRAGMENT_LIGHTS_SGIX"/>
-            <enum name="GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS"/>
-            <enum name="GL_MAX_FRAGMENT_UNIFORM_BLOCKS"/>
-            <enum name="GL_MAX_FRAGMENT_UNIFORM_COMPONENTS"/>
-            <enum name="GL_MAX_FRAGMENT_UNIFORM_VECTORS"/>
-            <enum name="GL_MAX_FRAMEBUFFER_HEIGHT"/>
-            <enum name="GL_MAX_FRAMEBUFFER_LAYERS"/>
-            <enum name="GL_MAX_FRAMEBUFFER_SAMPLES"/>
-            <enum name="GL_MAX_FRAMEBUFFER_WIDTH"/>
-            <enum name="GL_MAX_FRAMEZOOM_FACTOR_SGIX"/>
-            <enum name="GL_MAX_GEOMETRY_ATOMIC_COUNTERS"/>
-            <enum name="GL_MAX_GEOMETRY_INPUT_COMPONENTS"/>
-            <enum name="GL_MAX_GEOMETRY_OUTPUT_COMPONENTS"/>
-            <enum name="GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS"/>
-            <enum name="GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS"/>
-            <enum name="GL_MAX_GEOMETRY_UNIFORM_BLOCKS"/>
-            <enum name="GL_MAX_GEOMETRY_UNIFORM_COMPONENTS"/>
-            <enum name="GL_MAX_INTEGER_SAMPLES"/>
-            <enum name="GL_MAX_LABEL_LENGTH"/>
-            <enum name="GL_MAX_LIGHTS"/>
-            <enum name="GL_MAX_LIST_NESTING"/>
-            <enum name="GL_MAX_MODELVIEW_STACK_DEPTH"/>
-            <enum name="GL_MAX_NAME_STACK_DEPTH"/>
-            <enum name="GL_MAX_PIXEL_MAP_TABLE"/>
-            <enum name="GL_MAX_PROGRAM_TEXEL_OFFSET"/>
-            <enum name="GL_MAX_PROJECTION_STACK_DEPTH"/>
-            <enum name="GL_MAX_RECTANGLE_TEXTURE_SIZE"/>
-            <enum name="GL_MAX_RENDERBUFFER_SIZE"/>
-            <enum name="GL_MAX_SAMPLE_MASK_WORDS"/>
-            <enum name="GL_MAX_SERVER_WAIT_TIMEOUT"/>
-            <enum name="GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS"/>
-            <enum name="GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS"/>
-            <enum name="GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS"/>
-            <enum name="GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS"/>
-            <enum name="GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS"/>
-            <enum name="GL_MAX_TEXTURE_BUFFER_SIZE"/>
-            <enum name="GL_MAX_TEXTURE_IMAGE_UNITS"/>
-            <enum name="GL_MAX_TEXTURE_LOD_BIAS"/>
-            <enum name="GL_MAX_TEXTURE_SIZE"/>
-            <enum name="GL_MAX_TEXTURE_STACK_DEPTH"/>
-            <enum name="GL_MAX_UNIFORM_BLOCK_SIZE"/>
-            <enum name="GL_MAX_UNIFORM_BUFFER_BINDINGS"/>
-            <enum name="GL_MAX_UNIFORM_LOCATIONS"/>
-            <enum name="GL_MAX_VARYING_COMPONENTS"/>
-            <enum name="GL_MAX_VARYING_FLOATS"/>
-            <enum name="GL_MAX_VARYING_VECTORS"/>
-            <enum name="GL_MAX_VERTEX_ATOMIC_COUNTERS"/>
-            <enum name="GL_MAX_VERTEX_ATTRIBS"/>
-            <enum name="GL_MAX_VERTEX_ATTRIB_BINDINGS"/>
-            <enum name="GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET"/>
-            <enum name="GL_MAX_VERTEX_OUTPUT_COMPONENTS"/>
-            <enum name="GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS"/>
-            <enum name="GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS"/>
-            <enum name="GL_MAX_VERTEX_UNIFORM_BLOCKS"/>
-            <enum name="GL_MAX_VERTEX_UNIFORM_COMPONENTS"/>
-            <enum name="GL_MAX_VERTEX_UNIFORM_VECTORS"/>
-            <enum name="GL_MAX_VIEWPORTS"/>
-            <enum name="GL_MAX_VIEWPORT_DIMS"/>
-            <enum name="GL_MINMAX_EXT"/>
-            <enum name="GL_MINOR_VERSION"/>
-            <enum name="GL_MIN_MAP_BUFFER_ALIGNMENT"/>
-            <enum name="GL_MIN_PROGRAM_TEXEL_OFFSET"/>
-            <enum name="GL_MODELVIEW0_MATRIX_EXT"/>
-            <enum name="GL_MODELVIEW0_STACK_DEPTH_EXT"/>
-            <enum name="GL_MODELVIEW_MATRIX"/>
-            <enum name="GL_MODELVIEW_STACK_DEPTH"/>
-            <enum name="GL_MULTISAMPLE_SGIS"/>
-            <enum name="GL_NAME_STACK_DEPTH"/>
-            <enum name="GL_NORMALIZE"/>
-            <enum name="GL_NORMAL_ARRAY"/>
-            <enum name="GL_NORMAL_ARRAY_COUNT_EXT"/>
-            <enum name="GL_NORMAL_ARRAY_STRIDE"/>
-            <enum name="GL_NORMAL_ARRAY_TYPE"/>
-            <enum name="GL_NUM_COMPRESSED_TEXTURE_FORMATS"/>
-            <enum name="GL_NUM_DEVICE_UUIDS_EXT"/>
-            <enum name="GL_NUM_EXTENSIONS"/>
-            <enum name="GL_NUM_PROGRAM_BINARY_FORMATS"/>
-            <enum name="GL_NUM_SHADER_BINARY_FORMATS"/>
-            <enum name="GL_PACK_ALIGNMENT"/>
-            <enum name="GL_PACK_CMYK_HINT_EXT"/>
-            <enum name="GL_PACK_IMAGE_DEPTH_SGIS"/>
-            <enum name="GL_PACK_IMAGE_HEIGHT"/>
-            <enum name="GL_PACK_IMAGE_HEIGHT_EXT"/>
-            <enum name="GL_PACK_LSB_FIRST"/>
-            <enum name="GL_PACK_RESAMPLE_SGIX"/>
-            <enum name="GL_PACK_ROW_LENGTH"/>
-            <enum name="GL_PACK_SKIP_IMAGES"/>
-            <enum name="GL_PACK_SKIP_IMAGES_EXT"/>
-            <enum name="GL_PACK_SKIP_PIXELS"/>
-            <enum name="GL_PACK_SKIP_ROWS"/>
-            <enum name="GL_PACK_SKIP_VOLUMES_SGIS"/>
-            <enum name="GL_PACK_SUBSAMPLE_RATE_SGIX"/>
-            <enum name="GL_PACK_SWAP_BYTES"/>
-            <enum name="GL_PERSPECTIVE_CORRECTION_HINT"/>
-            <enum name="GL_PIXEL_MAP_A_TO_A_SIZE"/>
-            <enum name="GL_PIXEL_MAP_B_TO_B_SIZE"/>
-            <enum name="GL_PIXEL_MAP_G_TO_G_SIZE"/>
-            <enum name="GL_PIXEL_MAP_I_TO_A_SIZE"/>
-            <enum name="GL_PIXEL_MAP_I_TO_B_SIZE"/>
-            <enum name="GL_PIXEL_MAP_I_TO_G_SIZE"/>
-            <enum name="GL_PIXEL_MAP_I_TO_I_SIZE"/>
-            <enum name="GL_PIXEL_MAP_I_TO_R_SIZE"/>
-            <enum name="GL_PIXEL_MAP_R_TO_R_SIZE"/>
-            <enum name="GL_PIXEL_MAP_S_TO_S_SIZE"/>
-            <enum name="GL_PIXEL_PACK_BUFFER_BINDING"/>
-            <enum name="GL_PIXEL_TEXTURE_SGIS"/>
-            <enum name="GL_PIXEL_TEX_GEN_MODE_SGIX"/>
-            <enum name="GL_PIXEL_TEX_GEN_SGIX"/>
-            <enum name="GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX"/>
-            <enum name="GL_PIXEL_TILE_CACHE_INCREMENT_SGIX"/>
-            <enum name="GL_PIXEL_TILE_CACHE_SIZE_SGIX"/>
-            <enum name="GL_PIXEL_TILE_GRID_DEPTH_SGIX"/>
-            <enum name="GL_PIXEL_TILE_GRID_HEIGHT_SGIX"/>
-            <enum name="GL_PIXEL_TILE_GRID_WIDTH_SGIX"/>
-            <enum name="GL_PIXEL_TILE_HEIGHT_SGIX"/>
-            <enum name="GL_PIXEL_TILE_WIDTH_SGIX"/>
-            <enum name="GL_PIXEL_UNPACK_BUFFER_BINDING"/>
-            <enum name="GL_POINT_FADE_THRESHOLD_SIZE"/>
-            <enum name="GL_POINT_FADE_THRESHOLD_SIZE_SGIS"/>
-            <enum name="GL_POINT_SIZE"/>
-            <enum name="GL_POINT_SIZE_GRANULARITY"/>
-            <enum name="GL_POINT_SIZE_MAX_SGIS"/>
-            <enum name="GL_POINT_SIZE_MIN_SGIS"/>
-            <enum name="GL_POINT_SIZE_RANGE"/>
-            <enum name="GL_POINT_SMOOTH"/>
-            <enum name="GL_POINT_SMOOTH_HINT"/>
-            <enum name="GL_POLYGON_MODE"/>
-            <enum name="GL_POLYGON_OFFSET_BIAS_EXT"/>
-            <enum name="GL_POLYGON_OFFSET_FACTOR"/>
-            <enum name="GL_POLYGON_OFFSET_FILL"/>
-            <enum name="GL_POLYGON_OFFSET_LINE"/>
-            <enum name="GL_POLYGON_OFFSET_POINT"/>
-            <enum name="GL_POLYGON_OFFSET_UNITS"/>
-            <enum name="GL_POLYGON_SMOOTH"/>
-            <enum name="GL_POLYGON_SMOOTH_HINT"/>
-            <enum name="GL_POLYGON_STIPPLE"/>
-            <enum name="GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI"/>
-            <enum name="GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI"/>
-            <enum name="GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI"/>
-            <enum name="GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI"/>
-            <enum name="GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI"/>
-            <enum name="GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI"/>
-            <enum name="GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI"/>
-            <enum name="GL_POST_COLOR_MATRIX_RED_BIAS_SGI"/>
-            <enum name="GL_POST_COLOR_MATRIX_RED_SCALE_SGI"/>
-            <enum name="GL_POST_CONVOLUTION_ALPHA_BIAS_EXT"/>
-            <enum name="GL_POST_CONVOLUTION_ALPHA_SCALE_EXT"/>
-            <enum name="GL_POST_CONVOLUTION_BLUE_BIAS_EXT"/>
-            <enum name="GL_POST_CONVOLUTION_BLUE_SCALE_EXT"/>
-            <enum name="GL_POST_CONVOLUTION_COLOR_TABLE_SGI"/>
-            <enum name="GL_POST_CONVOLUTION_GREEN_BIAS_EXT"/>
-            <enum name="GL_POST_CONVOLUTION_GREEN_SCALE_EXT"/>
-            <enum name="GL_POST_CONVOLUTION_RED_BIAS_EXT"/>
-            <enum name="GL_POST_CONVOLUTION_RED_SCALE_EXT"/>
-            <enum name="GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX"/>
-            <enum name="GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX"/>
-            <enum name="GL_PRIMITIVE_RESTART_INDEX"/>
-            <enum name="GL_PROGRAM_BINARY_FORMATS"/>
-            <enum name="GL_PROGRAM_PIPELINE_BINDING"/>
-            <enum name="GL_PROGRAM_POINT_SIZE"/>
-            <enum name="GL_PROJECTION_MATRIX"/>
-            <enum name="GL_PROJECTION_STACK_DEPTH"/>
-            <enum name="GL_PROVOKING_VERTEX"/>
-            <enum name="GL_READ_BUFFER"/>
-            <enum name="GL_READ_BUFFER_EXT"/>
-            <enum name="GL_READ_BUFFER_NV"/>
-            <enum name="GL_READ_FRAMEBUFFER_BINDING"/>
-            <enum name="GL_RED_BIAS"/>
-            <enum name="GL_RED_BITS"/>
-            <enum name="GL_RED_SCALE"/>
-            <enum name="GL_REFERENCE_PLANE_EQUATION_SGIX"/>
-            <enum name="GL_REFERENCE_PLANE_SGIX"/>
-            <enum name="GL_RENDERBUFFER_BINDING"/>
-            <enum name="GL_RENDER_MODE"/>
-            <enum name="GL_RESCALE_NORMAL_EXT"/>
-            <enum name="GL_RGBA_MODE"/>
-            <enum name="GL_SAMPLER_BINDING"/>
-            <enum name="GL_SAMPLES"/>
-            <enum name="GL_SAMPLES_SGIS"/>
-            <enum name="GL_SAMPLE_ALPHA_TO_MASK_SGIS"/>
-            <enum name="GL_SAMPLE_ALPHA_TO_ONE_SGIS"/>
-            <enum name="GL_SAMPLE_BUFFERS"/>
-            <enum name="GL_SAMPLE_BUFFERS_SGIS"/>
-            <enum name="GL_SAMPLE_COVERAGE_INVERT"/>
-            <enum name="GL_SAMPLE_COVERAGE_VALUE"/>
-            <enum name="GL_SAMPLE_MASK_INVERT_SGIS"/>
-            <enum name="GL_SAMPLE_MASK_SGIS"/>
-            <enum name="GL_SAMPLE_MASK_VALUE_SGIS"/>
-            <enum name="GL_SAMPLE_PATTERN_SGIS"/>
-            <enum name="GL_SCISSOR_BOX"/>
-            <enum name="GL_SCISSOR_TEST"/>
-            <enum name="GL_SELECTION_BUFFER_SIZE"/>
-            <enum name="GL_SEPARABLE_2D_EXT"/>
-            <enum name="GL_SHADER_COMPILER"/>
-            <enum name="GL_SHADER_STORAGE_BUFFER_BINDING"/>
-            <enum name="GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT"/>
-            <enum name="GL_SHADER_STORAGE_BUFFER_SIZE"/>
-            <enum name="GL_SHADER_STORAGE_BUFFER_START"/>
-            <enum name="GL_SHADE_MODEL"/>
-            <enum name="GL_SHARED_TEXTURE_PALETTE_EXT"/>
-            <enum name="GL_SMOOTH_LINE_WIDTH_GRANULARITY"/>
-            <enum name="GL_SMOOTH_LINE_WIDTH_RANGE"/>
-            <enum name="GL_SMOOTH_POINT_SIZE_GRANULARITY"/>
-            <enum name="GL_SMOOTH_POINT_SIZE_RANGE"/>
-            <enum name="GL_SPRITE_AXIS_SGIX"/>
-            <enum name="GL_SPRITE_MODE_SGIX"/>
-            <enum name="GL_SPRITE_SGIX"/>
-            <enum name="GL_SPRITE_TRANSLATION_SGIX"/>
-            <enum name="GL_STENCIL_BACK_FAIL"/>
-            <enum name="GL_STENCIL_BACK_FUNC"/>
-            <enum name="GL_STENCIL_BACK_PASS_DEPTH_FAIL"/>
-            <enum name="GL_STENCIL_BACK_PASS_DEPTH_PASS"/>
-            <enum name="GL_STENCIL_BACK_REF"/>
-            <enum name="GL_STENCIL_BACK_VALUE_MASK"/>
-            <enum name="GL_STENCIL_BACK_WRITEMASK"/>
-            <enum name="GL_STENCIL_BITS"/>
-            <enum name="GL_STENCIL_CLEAR_VALUE"/>
-            <enum name="GL_STENCIL_FAIL"/>
-            <enum name="GL_STENCIL_FUNC"/>
-            <enum name="GL_STENCIL_PASS_DEPTH_FAIL"/>
-            <enum name="GL_STENCIL_PASS_DEPTH_PASS"/>
-            <enum name="GL_STENCIL_REF"/>
-            <enum name="GL_STENCIL_TEST"/>
-            <enum name="GL_STENCIL_VALUE_MASK"/>
-            <enum name="GL_STENCIL_WRITEMASK"/>
-            <enum name="GL_STEREO"/>
-            <enum name="GL_SUBPIXEL_BITS"/>
-            <enum name="GL_TEXTURE_1D"/>
-            <enum name="GL_TEXTURE_2D"/>
-            <enum name="GL_TEXTURE_3D_BINDING_EXT"/>
-            <enum name="GL_TEXTURE_3D_EXT"/>
-            <enum name="GL_TEXTURE_4D_BINDING_SGIS"/>
-            <enum name="GL_TEXTURE_4D_SGIS"/>
-            <enum name="GL_TEXTURE_BINDING_1D"/>
-            <enum name="GL_TEXTURE_BINDING_1D_ARRAY"/>
-            <enum name="GL_TEXTURE_BINDING_2D"/>
-            <enum name="GL_TEXTURE_BINDING_2D_ARRAY"/>
-            <enum name="GL_TEXTURE_BINDING_2D_MULTISAMPLE"/>
-            <enum name="GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY"/>
-            <enum name="GL_TEXTURE_BINDING_3D"/>
-            <enum name="GL_TEXTURE_BINDING_BUFFER"/>
-            <enum name="GL_TEXTURE_BINDING_CUBE_MAP"/>
-            <enum name="GL_TEXTURE_BINDING_RECTANGLE"/>
-            <enum name="GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT"/>
-            <enum name="GL_TEXTURE_COLOR_TABLE_SGI"/>
-            <enum name="GL_TEXTURE_COMPRESSION_HINT"/>
-            <enum name="GL_TEXTURE_COORD_ARRAY"/>
-            <enum name="GL_TEXTURE_COORD_ARRAY_COUNT_EXT"/>
-            <enum name="GL_TEXTURE_COORD_ARRAY_SIZE"/>
-            <enum name="GL_TEXTURE_COORD_ARRAY_STRIDE"/>
-            <enum name="GL_TEXTURE_COORD_ARRAY_TYPE"/>
-            <enum name="GL_TEXTURE_GEN_Q"/>
-            <enum name="GL_TEXTURE_GEN_R"/>
-            <enum name="GL_TEXTURE_GEN_S"/>
-            <enum name="GL_TEXTURE_GEN_T"/>
-            <enum name="GL_TEXTURE_MATRIX"/>
-            <enum name="GL_TEXTURE_STACK_DEPTH"/>
-            <enum name="GL_TIMESTAMP"/>
-            <enum name="GL_TRANSFORM_FEEDBACK_BUFFER_BINDING"/>
-            <enum name="GL_TRANSFORM_FEEDBACK_BUFFER_SIZE"/>
-            <enum name="GL_TRANSFORM_FEEDBACK_BUFFER_START"/>
-            <enum name="GL_UNIFORM_BUFFER_BINDING"/>
-            <enum name="GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT"/>
-            <enum name="GL_UNIFORM_BUFFER_SIZE"/>
-            <enum name="GL_UNIFORM_BUFFER_START"/>
-            <enum name="GL_UNPACK_ALIGNMENT"/>
-            <enum name="GL_UNPACK_CMYK_HINT_EXT"/>
-            <enum name="GL_UNPACK_IMAGE_DEPTH_SGIS"/>
-            <enum name="GL_UNPACK_IMAGE_HEIGHT"/>
-            <enum name="GL_UNPACK_IMAGE_HEIGHT_EXT"/>
-            <enum name="GL_UNPACK_LSB_FIRST"/>
-            <enum name="GL_UNPACK_RESAMPLE_SGIX"/>
-            <enum name="GL_UNPACK_ROW_LENGTH"/>
-            <enum name="GL_UNPACK_SKIP_IMAGES"/>
-            <enum name="GL_UNPACK_SKIP_IMAGES_EXT"/>
-            <enum name="GL_UNPACK_SKIP_PIXELS"/>
-            <enum name="GL_UNPACK_SKIP_ROWS"/>
-            <enum name="GL_UNPACK_SKIP_VOLUMES_SGIS"/>
-            <enum name="GL_UNPACK_SUBSAMPLE_RATE_SGIX"/>
-            <enum name="GL_UNPACK_SWAP_BYTES"/>
-            <enum name="GL_VERTEX_ARRAY"/>
-            <enum name="GL_VERTEX_ARRAY_BINDING"/>
-            <enum name="GL_VERTEX_ARRAY_COUNT_EXT"/>
-            <enum name="GL_VERTEX_ARRAY_SIZE"/>
-            <enum name="GL_VERTEX_ARRAY_STRIDE"/>
-            <enum name="GL_VERTEX_ARRAY_TYPE"/>
-            <enum name="GL_VERTEX_BINDING_DIVISOR"/>
-            <enum name="GL_VERTEX_BINDING_OFFSET"/>
-            <enum name="GL_VERTEX_BINDING_STRIDE"/>
-            <enum name="GL_VERTEX_PRECLIP_HINT_SGIX"/>
-            <enum name="GL_VERTEX_PRECLIP_SGIX"/>
-            <enum name="GL_VIEWPORT"/>
-            <enum name="GL_VIEWPORT_BOUNDS_RANGE"/>
-            <enum name="GL_VIEWPORT_INDEX_PROVOKING_VERTEX"/>
-            <enum name="GL_VIEWPORT_SUBPIXEL_BITS"/>
-            <enum name="GL_ZOOM_X"/>
-            <enum name="GL_ZOOM_Y"/>
-        </group>
-
-        <group name="GetPointervPName">
-            <enum name="GL_COLOR_ARRAY_POINTER"/>
-            <enum name="GL_COLOR_ARRAY_POINTER_EXT"/>
-            <enum name="GL_EDGE_FLAG_ARRAY_POINTER"/>
-            <enum name="GL_EDGE_FLAG_ARRAY_POINTER_EXT"/>
-            <enum name="GL_FEEDBACK_BUFFER_POINTER"/>
-            <enum name="GL_INDEX_ARRAY_POINTER"/>
-            <enum name="GL_INDEX_ARRAY_POINTER_EXT"/>
-            <enum name="GL_INSTRUMENT_BUFFER_POINTER_SGIX"/>
-            <enum name="GL_NORMAL_ARRAY_POINTER"/>
-            <enum name="GL_NORMAL_ARRAY_POINTER_EXT"/>
-            <enum name="GL_SELECTION_BUFFER_POINTER"/>
-            <enum name="GL_TEXTURE_COORD_ARRAY_POINTER"/>
-            <enum name="GL_TEXTURE_COORD_ARRAY_POINTER_EXT"/>
-            <enum name="GL_VERTEX_ARRAY_POINTER"/>
-            <enum name="GL_VERTEX_ARRAY_POINTER_EXT"/>
-            <enum name="GL_DEBUG_CALLBACK_FUNCTION"/>
-            <enum name="GL_DEBUG_CALLBACK_USER_PARAM"/>
-        </group>
-
-        <group name="GetTextureParameter">
-            <enum name="GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS"/>
-            <enum name="GL_DETAIL_TEXTURE_LEVEL_SGIS"/>
-            <enum name="GL_DETAIL_TEXTURE_MODE_SGIS"/>
-            <enum name="GL_DUAL_TEXTURE_SELECT_SGIS"/>
-            <enum name="GL_GENERATE_MIPMAP_SGIS"/>
-            <enum name="GL_POST_TEXTURE_FILTER_BIAS_SGIX"/>
-            <enum name="GL_POST_TEXTURE_FILTER_SCALE_SGIX"/>
-            <enum name="GL_QUAD_TEXTURE_SELECT_SGIS"/>
-            <enum name="GL_SHADOW_AMBIENT_SGIX"/>
-            <enum name="GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS"/>
-            <enum name="GL_TEXTURE_4DSIZE_SGIS"/>
-            <enum name="GL_TEXTURE_ALPHA_SIZE"/>
-            <enum name="GL_TEXTURE_BASE_LEVEL_SGIS"/>
-            <enum name="GL_TEXTURE_BLUE_SIZE"/>
-            <enum name="GL_TEXTURE_BORDER"/>
-            <enum name="GL_TEXTURE_BORDER_COLOR"/>
-            <enum name="GL_TEXTURE_BORDER_COLOR_NV"/>
-            <enum name="GL_TEXTURE_CLIPMAP_CENTER_SGIX"/>
-            <enum name="GL_TEXTURE_CLIPMAP_DEPTH_SGIX"/>
-            <enum name="GL_TEXTURE_CLIPMAP_FRAME_SGIX"/>
-            <enum name="GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX"/>
-            <enum name="GL_TEXTURE_CLIPMAP_OFFSET_SGIX"/>
-            <enum name="GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX"/>
-            <enum name="GL_TEXTURE_COMPARE_OPERATOR_SGIX"/>
-            <enum name="GL_TEXTURE_COMPARE_SGIX"/>
-            <enum name="GL_TEXTURE_COMPONENTS"/>
-            <enum name="GL_TEXTURE_DEPTH_EXT"/>
-            <enum name="GL_TEXTURE_FILTER4_SIZE_SGIS"/>
-            <enum name="GL_TEXTURE_GEQUAL_R_SGIX"/>
-            <enum name="GL_TEXTURE_GREEN_SIZE"/>
-            <enum name="GL_TEXTURE_HEIGHT"/>
-            <enum name="GL_TEXTURE_INTENSITY_SIZE"/>
-            <enum name="GL_TEXTURE_INTERNAL_FORMAT"/>
-            <enum name="GL_TEXTURE_LEQUAL_R_SGIX"/>
-            <enum name="GL_TEXTURE_LOD_BIAS_R_SGIX"/>
-            <enum name="GL_TEXTURE_LOD_BIAS_S_SGIX"/>
-            <enum name="GL_TEXTURE_LOD_BIAS_T_SGIX"/>
-            <enum name="GL_TEXTURE_LUMINANCE_SIZE"/>
-            <enum name="GL_TEXTURE_MAG_FILTER"/>
-            <enum name="GL_TEXTURE_MAX_CLAMP_R_SGIX"/>
-            <enum name="GL_TEXTURE_MAX_CLAMP_S_SGIX"/>
-            <enum name="GL_TEXTURE_MAX_CLAMP_T_SGIX"/>
-            <enum name="GL_TEXTURE_MAX_LEVEL_SGIS"/>
-            <enum name="GL_TEXTURE_MAX_LOD_SGIS"/>
-            <enum name="GL_TEXTURE_MIN_FILTER"/>
-            <enum name="GL_TEXTURE_MIN_LOD_SGIS"/>
-            <enum name="GL_TEXTURE_PRIORITY"/>
-            <enum name="GL_TEXTURE_RED_SIZE"/>
-            <enum name="GL_TEXTURE_RESIDENT"/>
-            <enum name="GL_TEXTURE_WIDTH"/>
-            <enum name="GL_TEXTURE_WRAP_Q_SGIS"/>
-            <enum name="GL_TEXTURE_WRAP_R_EXT"/>
-            <enum name="GL_TEXTURE_WRAP_S"/>
-            <enum name="GL_TEXTURE_WRAP_T"/>
-        </group>
-
-        <group name="HintMode">
-            <enum name="GL_DONT_CARE"/>
-            <enum name="GL_FASTEST"/>
-            <enum name="GL_NICEST"/>
-        </group>
-
-        <group name="HintTarget">
-            <enum name="GL_ALLOW_DRAW_FRG_HINT_PGI"/>
-            <enum name="GL_ALLOW_DRAW_MEM_HINT_PGI"/>
-            <enum name="GL_ALLOW_DRAW_OBJ_HINT_PGI"/>
-            <enum name="GL_ALLOW_DRAW_WIN_HINT_PGI"/>
-            <enum name="GL_ALWAYS_FAST_HINT_PGI"/>
-            <enum name="GL_ALWAYS_SOFT_HINT_PGI"/>
-            <enum name="GL_BACK_NORMALS_HINT_PGI"/>
-            <enum name="GL_BINNING_CONTROL_HINT_QCOM"/>
-            <enum name="GL_CLIP_FAR_HINT_PGI"/>
-            <enum name="GL_CLIP_NEAR_HINT_PGI"/>
-            <enum name="GL_CLIP_VOLUME_CLIPPING_HINT_EXT"/>
-            <enum name="GL_CONSERVE_MEMORY_HINT_PGI"/>
-            <enum name="GL_CONVOLUTION_HINT_SGIX"/>
-            <enum name="GL_FOG_HINT"/>
-            <enum name="GL_FRAGMENT_SHADER_DERIVATIVE_HINT"/>
-            <enum name="GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB"/>
-            <enum name="GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES"/>
-            <enum name="GL_FULL_STIPPLE_HINT_PGI"/>
-            <enum name="GL_GENERATE_MIPMAP_HINT"/>
-            <enum name="GL_GENERATE_MIPMAP_HINT_SGIS"/>
-            <enum name="GL_LINE_QUALITY_HINT_SGIX"/>
-            <enum name="GL_LINE_SMOOTH_HINT"/>
-            <enum name="GL_MATERIAL_SIDE_HINT_PGI"/>
-            <enum name="GL_MAX_VERTEX_HINT_PGI"/>
-            <enum name="GL_MULTISAMPLE_FILTER_HINT_NV"/>
-            <enum name="GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI"/>
-            <enum name="GL_NATIVE_GRAPHICS_END_HINT_PGI"/>
-            <enum name="GL_PACK_CMYK_HINT_EXT"/>
-            <enum name="GL_PERSPECTIVE_CORRECTION_HINT"/>
-            <enum name="GL_PHONG_HINT_WIN"/>
-            <enum name="GL_POINT_SMOOTH_HINT"/>
-            <enum name="GL_POLYGON_SMOOTH_HINT"/>
-            <enum name="GL_PREFER_DOUBLEBUFFER_HINT_PGI"/>
-            <enum name="GL_PROGRAM_BINARY_RETRIEVABLE_HINT"/>
-            <enum name="GL_RECLAIM_MEMORY_HINT_PGI"/>
-            <enum name="GL_SCALEBIAS_HINT_SGIX"/>
-            <enum name="GL_STRICT_DEPTHFUNC_HINT_PGI"/>
-            <enum name="GL_STRICT_LIGHTING_HINT_PGI"/>
-            <enum name="GL_STRICT_SCISSOR_HINT_PGI"/>
-            <enum name="GL_TEXTURE_COMPRESSION_HINT"/>
-            <enum name="GL_TEXTURE_COMPRESSION_HINT_ARB"/>
-            <enum name="GL_TEXTURE_MULTI_BUFFER_HINT_SGIX"/>
-            <enum name="GL_TEXTURE_STORAGE_HINT_APPLE"/>
-            <enum name="GL_TRANSFORM_HINT_APPLE"/>
-            <enum name="GL_UNPACK_CMYK_HINT_EXT"/>
-            <enum name="GL_VERTEX_ARRAY_STORAGE_HINT_APPLE"/>
-            <enum name="GL_VERTEX_CONSISTENT_HINT_PGI"/>
-            <enum name="GL_VERTEX_DATA_HINT_PGI"/>
-            <enum name="GL_VERTEX_PRECLIP_HINT_SGIX"/>
-            <enum name="GL_VERTEX_PRECLIP_SGIX"/>
-            <enum name="GL_WIDE_LINE_HINT_PGI"/>
-        </group>
-
-        <group name="HistogramTargetEXT">
-            <enum name="GL_HISTOGRAM"/>
-            <enum name="GL_HISTOGRAM_EXT"/>
-            <enum name="GL_PROXY_HISTOGRAM"/>
-            <enum name="GL_PROXY_HISTOGRAM_EXT"/>
-        </group>
-
-        <group name="IndexPointerType">
-            <enum name="GL_DOUBLE"/>
-            <enum name="GL_FLOAT"/>
-            <enum name="GL_INT"/>
-            <enum name="GL_SHORT"/>
-        </group>
-
-        <group name="InterleavedArrayFormat">
-            <enum name="GL_C3F_V3F"/>
-            <enum name="GL_C4F_N3F_V3F"/>
-            <enum name="GL_C4UB_V2F"/>
-            <enum name="GL_C4UB_V3F"/>
-            <enum name="GL_N3F_V3F"/>
-            <enum name="GL_T2F_C3F_V3F"/>
-            <enum name="GL_T2F_C4F_N3F_V3F"/>
-            <enum name="GL_T2F_C4UB_V3F"/>
-            <enum name="GL_T2F_N3F_V3F"/>
-            <enum name="GL_T2F_V3F"/>
-            <enum name="GL_T4F_C4F_N3F_V4F"/>
-            <enum name="GL_T4F_V4F"/>
-            <enum name="GL_V2F"/>
-            <enum name="GL_V3F"/>
-        </group>
-
-        <group name="LightEnvModeSGIX">
-            <enum name="GL_ADD"/>
-            <enum name="GL_MODULATE"/>
-            <enum name="GL_REPLACE"/>
-        </group>
-
-        <group name="LightEnvParameterSGIX">
-            <enum name="GL_LIGHT_ENV_MODE_SGIX"/>
-        </group>
-
-        <group name="LightModelColorControl">
-            <enum name="GL_SEPARATE_SPECULAR_COLOR"/>
-            <enum name="GL_SEPARATE_SPECULAR_COLOR_EXT"/>
-            <enum name="GL_SINGLE_COLOR"/>
-            <enum name="GL_SINGLE_COLOR_EXT"/>
-        </group>
-
-        <group name="LightModelParameter">
-            <enum name="GL_LIGHT_MODEL_AMBIENT"/>
-            <enum name="GL_LIGHT_MODEL_COLOR_CONTROL"/>
-            <enum name="GL_LIGHT_MODEL_COLOR_CONTROL_EXT"/>
-            <enum name="GL_LIGHT_MODEL_LOCAL_VIEWER"/>
-            <enum name="GL_LIGHT_MODEL_TWO_SIDE"/>
-        </group>
-
-        <group name="LightName">
-            <enum name="GL_FRAGMENT_LIGHT0_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT1_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT2_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT3_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT4_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT5_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT6_SGIX"/>
-            <enum name="GL_FRAGMENT_LIGHT7_SGIX"/>
-            <enum name="GL_LIGHT0"/>
-            <enum name="GL_LIGHT1"/>
-            <enum name="GL_LIGHT2"/>
-            <enum name="GL_LIGHT3"/>
-            <enum name="GL_LIGHT4"/>
-            <enum name="GL_LIGHT5"/>
-            <enum name="GL_LIGHT6"/>
-            <enum name="GL_LIGHT7"/>
-        </group>
-
-        <group name="LightParameter">
-            <enum name="GL_AMBIENT"/>
-            <enum name="GL_CONSTANT_ATTENUATION"/>
-            <enum name="GL_DIFFUSE"/>
-            <enum name="GL_LINEAR_ATTENUATION"/>
-            <enum name="GL_POSITION"/>
-            <enum name="GL_QUADRATIC_ATTENUATION"/>
-            <enum name="GL_SPECULAR"/>
-            <enum name="GL_SPOT_CUTOFF"/>
-            <enum name="GL_SPOT_DIRECTION"/>
-            <enum name="GL_SPOT_EXPONENT"/>
-        </group>
-
-        <group name="ListMode">
-            <enum name="GL_COMPILE"/>
-            <enum name="GL_COMPILE_AND_EXECUTE"/>
-        </group>
-
-        <group name="ListNameType">
-            <enum name="GL_2_BYTES"/>
-            <enum name="GL_3_BYTES"/>
-            <enum name="GL_4_BYTES"/>
-            <enum name="GL_BYTE"/>
-            <enum name="GL_FLOAT"/>
-            <enum name="GL_INT"/>
-            <enum name="GL_SHORT"/>
-            <enum name="GL_UNSIGNED_BYTE"/>
-            <enum name="GL_UNSIGNED_INT"/>
-            <enum name="GL_UNSIGNED_SHORT"/>
-        </group>
-
-        <group name="ListParameterName">
-            <enum name="GL_LIST_PRIORITY_SGIX"/>
-        </group>
-
-        <group name="LogicOp">
-            <enum name="GL_AND"/>
-            <enum name="GL_AND_INVERTED"/>
-            <enum name="GL_AND_REVERSE"/>
-            <enum name="GL_CLEAR"/>
-            <enum name="GL_COPY"/>
-            <enum name="GL_COPY_INVERTED"/>
-            <enum name="GL_EQUIV"/>
-            <enum name="GL_INVERT"/>
-            <enum name="GL_NAND"/>
-            <enum name="GL_NOOP"/>
-            <enum name="GL_NOR"/>
-            <enum name="GL_OR"/>
-            <enum name="GL_OR_INVERTED"/>
-            <enum name="GL_OR_REVERSE"/>
-            <enum name="GL_SET"/>
-            <enum name="GL_XOR"/>
-        </group>
-
-        <group name="MapBufferAccessMask">
-            <enum name="GL_MAP_COHERENT_BIT"/>
-            <enum name="GL_MAP_COHERENT_BIT_EXT"/>
-            <enum name="GL_MAP_FLUSH_EXPLICIT_BIT"/>
-            <enum name="GL_MAP_FLUSH_EXPLICIT_BIT_EXT"/>
-            <enum name="GL_MAP_INVALIDATE_BUFFER_BIT"/>
-            <enum name="GL_MAP_INVALIDATE_BUFFER_BIT_EXT"/>
-            <enum name="GL_MAP_INVALIDATE_RANGE_BIT"/>
-            <enum name="GL_MAP_INVALIDATE_RANGE_BIT_EXT"/>
-            <enum name="GL_MAP_PERSISTENT_BIT"/>
-            <enum name="GL_MAP_PERSISTENT_BIT_EXT"/>
-            <enum name="GL_MAP_READ_BIT"/>
-            <enum name="GL_MAP_READ_BIT_EXT"/>
-            <enum name="GL_MAP_UNSYNCHRONIZED_BIT"/>
-            <enum name="GL_MAP_UNSYNCHRONIZED_BIT_EXT"/>
-            <enum name="GL_MAP_WRITE_BIT"/>
-            <enum name="GL_MAP_WRITE_BIT_EXT"/>
-        </group>
-
-        <group name="MapTarget">
-            <enum name="GL_GEOMETRY_DEFORMATION_SGIX"/>
-            <enum name="GL_MAP1_COLOR_4"/>
-            <enum name="GL_MAP1_INDEX"/>
-            <enum name="GL_MAP1_NORMAL"/>
-            <enum name="GL_MAP1_TEXTURE_COORD_1"/>
-            <enum name="GL_MAP1_TEXTURE_COORD_2"/>
-            <enum name="GL_MAP1_TEXTURE_COORD_3"/>
-            <enum name="GL_MAP1_TEXTURE_COORD_4"/>
-            <enum name="GL_MAP1_VERTEX_3"/>
-            <enum name="GL_MAP1_VERTEX_4"/>
-            <enum name="GL_MAP2_COLOR_4"/>
-            <enum name="GL_MAP2_INDEX"/>
-            <enum name="GL_MAP2_NORMAL"/>
-            <enum name="GL_MAP2_TEXTURE_COORD_1"/>
-            <enum name="GL_MAP2_TEXTURE_COORD_2"/>
-            <enum name="GL_MAP2_TEXTURE_COORD_3"/>
-            <enum name="GL_MAP2_TEXTURE_COORD_4"/>
-            <enum name="GL_MAP2_VERTEX_3"/>
-            <enum name="GL_MAP2_VERTEX_4"/>
-            <enum name="GL_TEXTURE_DEFORMATION_SGIX"/>
-        </group>
-
-        <group name="MapTextureFormatINTEL">
-            <enum name="GL_LAYOUT_DEFAULT_INTEL"/>
-            <enum name="GL_LAYOUT_LINEAR_CPU_CACHED_INTEL"/>
-            <enum name="GL_LAYOUT_LINEAR_INTEL"/>
-        </group>
-
-        <group name="MaterialFace">
-            <enum name="GL_BACK"/>
-            <enum name="GL_FRONT"/>
-            <enum name="GL_FRONT_AND_BACK"/>
-        </group>
-
-        <group name="MaterialParameter">
-            <enum name="GL_AMBIENT"/>
-            <enum name="GL_AMBIENT_AND_DIFFUSE"/>
-            <enum name="GL_COLOR_INDEXES"/>
-            <enum name="GL_DIFFUSE"/>
-            <enum name="GL_EMISSION"/>
-            <enum name="GL_SHININESS"/>
-            <enum name="GL_SPECULAR"/>
-        </group>
-
-        <group name="MatrixMode">
-            <enum name="GL_MODELVIEW"/>
-            <enum name="GL_MODELVIEW0_EXT"/>
-            <enum name="GL_PROJECTION"/>
-            <enum name="GL_TEXTURE"/>
-        </group>
-
-        <group name="MemoryBarrierMask">
-            <enum name="GL_ALL_BARRIER_BITS"/>
-            <enum name="GL_ALL_BARRIER_BITS_EXT"/>
-            <enum name="GL_ATOMIC_COUNTER_BARRIER_BIT"/>
-            <enum name="GL_ATOMIC_COUNTER_BARRIER_BIT_EXT"/>
-            <enum name="GL_BUFFER_UPDATE_BARRIER_BIT"/>
-            <enum name="GL_BUFFER_UPDATE_BARRIER_BIT_EXT"/>
-            <enum name="GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT"/>
-            <enum name="GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT"/>
-            <enum name="GL_COMMAND_BARRIER_BIT"/>
-            <enum name="GL_COMMAND_BARRIER_BIT_EXT"/>
-            <enum name="GL_ELEMENT_ARRAY_BARRIER_BIT"/>
-            <enum name="GL_ELEMENT_ARRAY_BARRIER_BIT_EXT"/>
-            <enum name="GL_FRAMEBUFFER_BARRIER_BIT"/>
-            <enum name="GL_FRAMEBUFFER_BARRIER_BIT_EXT"/>
-            <enum name="GL_PIXEL_BUFFER_BARRIER_BIT"/>
-            <enum name="GL_PIXEL_BUFFER_BARRIER_BIT_EXT"/>
-            <enum name="GL_QUERY_BUFFER_BARRIER_BIT"/>
-            <enum name="GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV"/>
-            <enum name="GL_SHADER_IMAGE_ACCESS_BARRIER_BIT"/>
-            <enum name="GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT"/>
-            <enum name="GL_SHADER_STORAGE_BARRIER_BIT"/>
-            <enum name="GL_TEXTURE_FETCH_BARRIER_BIT"/>
-            <enum name="GL_TEXTURE_FETCH_BARRIER_BIT_EXT"/>
-            <enum name="GL_TEXTURE_UPDATE_BARRIER_BIT"/>
-            <enum name="GL_TEXTURE_UPDATE_BARRIER_BIT_EXT"/>
-            <enum name="GL_TRANSFORM_FEEDBACK_BARRIER_BIT"/>
-            <enum name="GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT"/>
-            <enum name="GL_UNIFORM_BARRIER_BIT"/>
-            <enum name="GL_UNIFORM_BARRIER_BIT_EXT"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT"/>
-        </group>
-
-        <group name="MemoryObjectParameterName">
-            <enum name="GL_DEDICATED_MEMORY_OBJECT_EXT"/>
-            <enum name="GL_PROTECTED_MEMORY_OBJECT_EXT"/>
-        </group>
-
-        <group name="MeshMode1">
-            <enum name="GL_LINE"/>
-            <enum name="GL_POINT"/>
-        </group>
-
-        <group name="MeshMode2">
-            <enum name="GL_FILL"/>
-            <enum name="GL_LINE"/>
-            <enum name="GL_POINT"/>
-        </group>
-
-        <group name="MinmaxTargetEXT">
-            <enum name="GL_MINMAX"/>
-            <enum name="GL_MINMAX_EXT"/>
-        </group>
-
-        <group name="NormalPointerType">
-            <enum name="GL_BYTE"/>
-            <enum name="GL_DOUBLE"/>
-            <enum name="GL_FLOAT"/>
-            <enum name="GL_INT"/>
-            <enum name="GL_SHORT"/>
-        </group>
-
-        <group name="PixelCopyType">
-            <enum name="GL_COLOR"/>
-            <enum name="GL_COLOR_EXT"/>
-            <enum name="GL_DEPTH"/>
-            <enum name="GL_DEPTH_EXT"/>
-            <enum name="GL_STENCIL"/>
-            <enum name="GL_STENCIL_EXT"/>
-        </group>
-
-        <group name="PixelFormat">
-            <enum name="GL_ABGR_EXT"/>
-            <enum name="GL_ALPHA"/>
-            <enum name="GL_BGR"/>
-            <enum name="GL_BGR_INTEGER"/>
-            <enum name="GL_BGRA"/>
-            <enum name="GL_BGRA_INTEGER"/>
-            <enum name="GL_BLUE"/>
-            <enum name="GL_BLUE_INTEGER"/>
-            <enum name="GL_CMYKA_EXT"/>
-            <enum name="GL_CMYK_EXT"/>
-            <enum name="GL_COLOR_INDEX"/>
-            <enum name="GL_DEPTH_COMPONENT"/>
-            <enum name="GL_DEPTH_STENCIL"/>
-            <enum name="GL_GREEN"/>
-            <enum name="GL_GREEN_INTEGER"/>
-            <enum name="GL_LUMINANCE"/>
-            <enum name="GL_LUMINANCE_ALPHA"/>
-            <enum name="GL_RED"/>
-            <enum name="GL_RED_EXT"/>
-            <enum name="GL_RED_INTEGER"/>
-            <enum name="GL_RG"/>
-            <enum name="GL_RG_INTEGER"/>
-            <enum name="GL_RGB"/>
-            <enum name="GL_RGB_INTEGER"/>
-            <enum name="GL_RGBA"/>
-            <enum name="GL_RGBA_INTEGER"/>
-            <enum name="GL_STENCIL_INDEX"/>
-            <enum name="GL_UNSIGNED_INT"/>
-            <enum name="GL_UNSIGNED_SHORT"/>
-            <enum name="GL_YCRCB_422_SGIX"/>
-            <enum name="GL_YCRCB_444_SGIX"/>
-        </group>
-
-        <group name="InternalFormat" comment="Was PixelInternalFormat">
-            <!-- Compatibility -->
-            <enum name="GL_ALPHA12"/>
-            <enum name="GL_ALPHA16"/>
-            <!-- <enum name="GL_ALPHA16_ICC_SGIX" comment="Incomplete extension SGIX_icc_texture"/> -->
-            <enum name="GL_ALPHA4"/>
-            <enum name="GL_ALPHA8"/>
-            <!-- <enum name="GL_ALPHA_ICC_SGIX" comment="Incomplete extension SGIX_icc_texture"/> -->
-            <enum name="GL_DUAL_ALPHA12_SGIS"/>
-            <enum name="GL_DUAL_ALPHA16_SGIS"/>
-            <enum name="GL_DUAL_ALPHA4_SGIS"/>
-            <enum name="GL_DUAL_ALPHA8_SGIS"/>
-            <enum name="GL_DUAL_INTENSITY12_SGIS"/>
-            <enum name="GL_DUAL_INTENSITY16_SGIS"/>
-            <enum name="GL_DUAL_INTENSITY4_SGIS"/>
-            <enum name="GL_DUAL_INTENSITY8_SGIS"/>
-            <enum name="GL_DUAL_LUMINANCE12_SGIS"/>
-            <enum name="GL_DUAL_LUMINANCE16_SGIS"/>
-            <enum name="GL_DUAL_LUMINANCE4_SGIS"/>
-            <enum name="GL_DUAL_LUMINANCE8_SGIS"/>
-            <enum name="GL_DUAL_LUMINANCE_ALPHA4_SGIS"/>
-            <enum name="GL_DUAL_LUMINANCE_ALPHA8_SGIS"/>
-            <enum name="GL_INTENSITY"/>
-            <enum name="GL_INTENSITY12"/>
-            <enum name="GL_INTENSITY16"/>
-            <!-- <enum name="GL_INTENSITY16_ICC_SGIX" comment="Incomplete extension SGIX_icc_texture"/> -->
-            <enum name="GL_INTENSITY4"/>
-            <enum name="GL_INTENSITY8"/>
-            <!-- <enum name="GL_INTENSITY_ICC_SGIX" comment="Incomplete extension SGIX_icc_texture"/> -->
-            <enum name="GL_LUMINANCE12"/>
-            <enum name="GL_LUMINANCE12_ALPHA12"/>
-            <enum name="GL_LUMINANCE12_ALPHA4"/>
-            <enum name="GL_LUMINANCE16"/>
-            <enum name="GL_LUMINANCE16_ALPHA16"/>
-            <!-- <enum name="GL_LUMINANCE16_ALPHA8_ICC_SGIX" comment="Incomplete extension SGIX_icc_texture"/> -->
-            <!-- <enum name="GL_LUMINANCE16_ICC_SGIX" comment="Incomplete extension SGIX_icc_texture"/> -->
-            <enum name="GL_LUMINANCE4"/>
-            <enum name="GL_LUMINANCE4_ALPHA4"/>
-            <enum name="GL_LUMINANCE6_ALPHA2"/>
-            <enum name="GL_LUMINANCE8"/>
-            <enum name="GL_LUMINANCE8_ALPHA8"/>
-            <!-- <enum name="GL_LUMINANCE_ALPHA_ICC_SGIX" comment="Incomplete extension SGIX_icc_texture"/> -->
-            <!-- <enum name="GL_LUMINANCE_ICC_SGIX" comment="Incomplete extension SGIX_icc_texture"/> -->
-            <enum name="GL_QUAD_ALPHA4_SGIS"/>
-            <enum name="GL_QUAD_ALPHA8_SGIS"/>
-            <enum name="GL_QUAD_INTENSITY4_SGIS"/>
-            <enum name="GL_QUAD_INTENSITY8_SGIS"/>
-            <enum name="GL_QUAD_LUMINANCE4_SGIS"/>
-            <enum name="GL_QUAD_LUMINANCE8_SGIS"/>
-            <!-- <enum name="GL_R5_G6_B5_A8_ICC_SGIX" comment="Incomplete extension SGIX_icc_texture"/> -->
-            <!-- <enum name="GL_R5_G6_B5_ICC_SGIX" comment="Incomplete extension SGIX_icc_texture"/> -->
-            <!-- <enum name="GL_RGBA_ICC_SGIX" comment="Incomplete extension SGIX_icc_texture"/> -->
-            <!-- <enum name="GL_RGB_ICC_SGIX" comment="Incomplete extension SGIX_icc_texture"/> -->
-            <!-- Base internal format: GL_RED -->
-            <enum name="GL_RED"/>
-            <enum name="GL_RED_EXT"/>
-            <enum name="GL_R8"/>
-            <enum name="GL_R8_EXT"/>
-            <enum name="GL_R8_SNORM"/>
-            <enum name="GL_R16"/>
-            <enum name="GL_R16_EXT"/>
-            <enum name="GL_R16_SNORM"/>
-            <enum name="GL_R16_SNORM_EXT"/>
-            <!-- <enum name="GL_R32" comment="cut & paste error?"/> -->
-            <!-- <enum name="GL_R32_EXT" comment="cut & paste error?"/> -->
-            <enum name="GL_R16F"/>
-            <enum name="GL_R16F_EXT"/>
-            <enum name="GL_R32F"/>
-            <enum name="GL_R32F_EXT"/>
-            <enum name="GL_R8I"/>
-            <enum name="GL_R16I"/>
-            <enum name="GL_R32I"/>
-            <enum name="GL_R8UI"/>
-            <enum name="GL_R16UI"/>
-            <enum name="GL_R32UI"/>
-            <!-- Base internal format: GL_RG -->
-            <enum name="GL_RG"/>
-            <enum name="GL_RG8"/>
-            <enum name="GL_RG8_EXT"/>
-            <enum name="GL_RG8_SNORM"/>
-            <enum name="GL_RG16"/>
-            <enum name="GL_RG16_EXT"/>
-            <enum name="GL_RG16_SNORM"/>
-            <enum name="GL_RG16_SNORM_EXT"/>
-            <enum name="GL_RG16F"/>
-            <enum name="GL_RG16F_EXT"/>
-            <enum name="GL_RG32F"/>
-            <enum name="GL_RG32F_EXT"/>
-            <enum name="GL_RG8I"/>
-            <enum name="GL_RG16I"/>
-            <enum name="GL_RG32I"/>
-            <enum name="GL_RG8UI"/>
-            <enum name="GL_RG16UI"/>
-            <enum name="GL_RG32UI"/>
-            <!-- Base internal format: GL_RGB -->
-            <enum name="GL_RGB"/>
-            <!-- <enum name="GL_RGB2" comment="Never actually added to core"/> -->
-            <enum name="GL_RGB2_EXT"/>
-            <enum name="GL_RGB4"/>
-            <enum name="GL_RGB4_EXT"/>
-            <enum name="GL_RGB5"/>
-            <enum name="GL_RGB5_EXT"/>
-            <enum name="GL_RGB8"/>
-            <enum name="GL_RGB8_EXT"/>
-            <enum name="GL_RGB8_OES"/>
-            <enum name="GL_RGB8_SNORM"/>
-            <enum name="GL_RGB10"/>
-            <enum name="GL_RGB10_EXT"/>
-            <enum name="GL_RGB12"/>
-            <enum name="GL_RGB12_EXT"/>
-            <enum name="GL_RGB16"/>
-            <enum name="GL_RGB16_EXT"/>
-            <enum name="GL_RGB16F"/>
-            <enum name="GL_RGB16F_ARB"/>
-            <enum name="GL_RGB16F_EXT"/>
-            <enum name="GL_RGB16_SNORM"/>
-            <enum name="GL_RGB16_SNORM_EXT"/>
-            <enum name="GL_RGB32F"/>
-            <enum name="GL_RGB8I"/>
-            <enum name="GL_RGB16I"/>
-            <enum name="GL_RGB32I"/>
-            <enum name="GL_RGB8UI"/>
-            <enum name="GL_RGB16UI"/>
-            <enum name="GL_RGB32UI"/>
-            <enum name="GL_SRGB"/>
-            <enum name="GL_SRGB_EXT"/>
-            <enum name="GL_SRGB_ALPHA"/>
-            <enum name="GL_SRGB_ALPHA_EXT"/>
-            <enum name="GL_SRGB8"/>
-            <enum name="GL_SRGB8_EXT"/>
-            <enum name="GL_SRGB8_NV"/>
-            <enum name="GL_SRGB8_ALPHA8"/>
-            <enum name="GL_SRGB8_ALPHA8_EXT"/>
-            <enum name="GL_R3_G3_B2"/>
-            <enum name="GL_R11F_G11F_B10F"/>
-            <enum name="GL_R11F_G11F_B10F_APPLE"/>
-            <enum name="GL_R11F_G11F_B10F_EXT"/>
-            <enum name="GL_RGB9_E5"/>
-            <enum name="GL_RGB9_E5_APPLE"/>
-            <enum name="GL_RGB9_E5_EXT"/>
-            <!-- Base internal format: GL_RGBA -->
-            <enum name="GL_RGBA"/>
-            <enum name="GL_RGBA4"/>
-            <enum name="GL_RGBA4_EXT"/>
-            <enum name="GL_RGBA4_OES"/>
-            <enum name="GL_RGB5_A1"/>
-            <enum name="GL_RGB5_A1_EXT"/>
-            <enum name="GL_RGB5_A1_OES"/>
-            <enum name="GL_RGBA8"/>
-            <enum name="GL_RGBA8_EXT"/>
-            <enum name="GL_RGBA8_OES"/>
-            <enum name="GL_RGBA8_SNORM"/>
-            <enum name="GL_RGB10_A2"/>
-            <enum name="GL_RGB10_A2_EXT"/>
-            <enum name="GL_RGBA12"/>
-            <enum name="GL_RGBA12_EXT"/>
-            <enum name="GL_RGBA16"/>
-            <enum name="GL_RGBA16_EXT"/>
-            <enum name="GL_RGBA16F"/>
-            <enum name="GL_RGBA16F_ARB"/>
-            <enum name="GL_RGBA16F_EXT"/>
-            <enum name="GL_RGBA32F"/>
-            <enum name="GL_RGBA32F_ARB"/>
-            <enum name="GL_RGBA32F_EXT"/>
-            <enum name="GL_RGBA8I"/>
-            <enum name="GL_RGBA16I"/>
-            <enum name="GL_RGBA32I"/>
-            <enum name="GL_RGBA8UI"/>
-            <enum name="GL_RGBA16UI"/>
-            <enum name="GL_RGBA32UI"/>
-            <enum name="GL_RGB10_A2UI"/>
-            <!-- Base internal format: GL_DEPTH_COMPONENT -->
-            <enum name="GL_DEPTH_COMPONENT"/>
-            <enum name="GL_DEPTH_COMPONENT16"/>
-            <enum name="GL_DEPTH_COMPONENT16_ARB"/>
-            <enum name="GL_DEPTH_COMPONENT16_OES"/>
-            <enum name="GL_DEPTH_COMPONENT16_SGIX"/>
-            <enum name="GL_DEPTH_COMPONENT24_ARB"/>
-            <enum name="GL_DEPTH_COMPONENT24_OES"/>
-            <enum name="GL_DEPTH_COMPONENT24_SGIX"/>
-            <enum name="GL_DEPTH_COMPONENT32_ARB"/>
-            <enum name="GL_DEPTH_COMPONENT32_OES"/>
-            <enum name="GL_DEPTH_COMPONENT32_SGIX"/>
-            <enum name="GL_DEPTH_COMPONENT32F"/>
-            <enum name="GL_DEPTH_COMPONENT32F_NV"/>
-            <!-- Base internal format: GL_DEPTH_STENCIL -->
-            <enum name="GL_DEPTH_STENCIL"/>
-            <enum name="GL_DEPTH_STENCIL_EXT"/>
-            <enum name="GL_DEPTH_STENCIL_MESA"/>
-            <enum name="GL_DEPTH_STENCIL_NV"/>
-            <enum name="GL_DEPTH_STENCIL_OES"/>
-            <enum name="GL_DEPTH24_STENCIL8"/>
-            <enum name="GL_DEPTH24_STENCIL8_EXT"/>
-            <enum name="GL_DEPTH24_STENCIL8_OES"/>
-            <enum name="GL_DEPTH32F_STENCIL8"/>
-            <enum name="GL_DEPTH32F_STENCIL8_NV"/>
-            <!-- Base internal format: GL_STENCIL_INDEX -->
-            <enum name="GL_STENCIL_INDEX"/>
-            <enum name="GL_STENCIL_INDEX_OES"/>
-            <enum name="GL_STENCIL_INDEX1"/>
-            <enum name="GL_STENCIL_INDEX1_OES"/>
-            <enum name="GL_STENCIL_INDEX1_EXT"/>
-            <enum name="GL_STENCIL_INDEX4"/>
-            <enum name="GL_STENCIL_INDEX4_OES"/>
-            <enum name="GL_STENCIL_INDEX4_EXT"/>
-            <enum name="GL_STENCIL_INDEX8"/>
-            <enum name="GL_STENCIL_INDEX8_OES"/>
-            <enum name="GL_STENCIL_INDEX8_EXT"/>
-            <enum name="GL_STENCIL_INDEX16"/>
-            <enum name="GL_STENCIL_INDEX16_EXT"/>
-            <!-- Compressed base internal formats -->
-            <enum name="GL_COMPRESSED_RED"/>
-            <enum name="GL_COMPRESSED_RG"/>
-            <enum name="GL_COMPRESSED_RGB"/>
-            <enum name="GL_COMPRESSED_RGBA"/>
-            <enum name="GL_COMPRESSED_SRGB"/>
-            <enum name="GL_COMPRESSED_SRGB_ALPHA"/>
-            <enum name="GL_COMPRESSED_RED_RGTC1"/>
-            <enum name="GL_COMPRESSED_RED_RGTC1_EXT"/>
-            <enum name="GL_COMPRESSED_SIGNED_RED_RGTC1"/>
-            <enum name="GL_COMPRESSED_SIGNED_RED_RGTC1_EXT"/>
-            <enum name="GL_COMPRESSED_R11_EAC"/>
-            <enum name="GL_COMPRESSED_SIGNED_R11_EAC"/>
-            <enum name="GL_COMPRESSED_RG_RGTC2"/>
-            <enum name="GL_COMPRESSED_SIGNED_RG_RGTC2"/>
-            <enum name="GL_COMPRESSED_RGBA_BPTC_UNORM"/>
-            <enum name="GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM"/>
-            <enum name="GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT"/>
-            <enum name="GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT"/>
-            <enum name="GL_COMPRESSED_RGB8_ETC2"/>
-            <enum name="GL_COMPRESSED_SRGB8_ETC2"/>
-            <enum name="GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2"/>
-            <enum name="GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2"/>
-            <enum name="GL_COMPRESSED_RGBA8_ETC2_EAC"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC"/>
-            <enum name="GL_COMPRESSED_RG11_EAC"/>
-            <enum name="GL_COMPRESSED_SIGNED_RG11_EAC"/>
-            <enum name="GL_COMPRESSED_RGB_S3TC_DXT1_EXT"/>
-            <enum name="GL_COMPRESSED_SRGB_S3TC_DXT1_EXT"/>
-            <enum name="GL_COMPRESSED_RGBA_S3TC_DXT1_EXT"/>
-            <enum name="GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT"/>
-            <enum name="GL_COMPRESSED_RGBA_S3TC_DXT3_EXT"/>
-            <enum name="GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT"/>
-            <enum name="GL_COMPRESSED_RGBA_S3TC_DXT5_EXT"/>
-            <enum name="GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT"/>
-            <!-- Compressed ASTC internal formats -->
-            <enum name="GL_COMPRESSED_RGBA_ASTC_3x3x3_OES"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_4x3x3_OES"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_4x4"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_4x4_KHR"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_4x4x3_OES"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_4x4x4_OES"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_5x4"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_5x4_KHR"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_5x4x4_OES"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_5x5"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_5x5_KHR"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_5x5x4_OES"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_5x5x5_OES"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_6x5"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_6x5_KHR"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_6x5x5_OES"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_6x6"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_6x6_KHR"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_6x6x5_OES"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_6x6x6_OES"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_8x5"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_8x5_KHR"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_8x6"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_8x6_KHR"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_8x8"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_8x8_KHR"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_10x10"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_10x10_KHR"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_10x5"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_10x5_KHR"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_10x6"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_10x6_KHR"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_10x8"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_10x8_KHR"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_12x10"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_12x10_KHR"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_12x12"/>
-            <enum name="GL_COMPRESSED_RGBA_ASTC_12x12_KHR"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12"/>
-            <enum name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR"/>
-        </group>
-
-        <group name="PixelMap">
-            <enum name="GL_PIXEL_MAP_A_TO_A"/>
-            <enum name="GL_PIXEL_MAP_B_TO_B"/>
-            <enum name="GL_PIXEL_MAP_G_TO_G"/>
-            <enum name="GL_PIXEL_MAP_I_TO_A"/>
-            <enum name="GL_PIXEL_MAP_I_TO_B"/>
-            <enum name="GL_PIXEL_MAP_I_TO_G"/>
-            <enum name="GL_PIXEL_MAP_I_TO_I"/>
-            <enum name="GL_PIXEL_MAP_I_TO_R"/>
-            <enum name="GL_PIXEL_MAP_R_TO_R"/>
-            <enum name="GL_PIXEL_MAP_S_TO_S"/>
-        </group>
-
-        <group name="PixelStoreParameter">
-            <enum name="GL_PACK_ALIGNMENT"/>
-            <enum name="GL_PACK_IMAGE_DEPTH_SGIS"/>
-            <enum name="GL_PACK_IMAGE_HEIGHT"/>
-            <enum name="GL_PACK_IMAGE_HEIGHT_EXT"/>
-            <enum name="GL_PACK_LSB_FIRST"/>
-            <enum name="GL_PACK_RESAMPLE_OML"/>
-            <enum name="GL_PACK_RESAMPLE_SGIX"/>
-            <enum name="GL_PACK_ROW_LENGTH"/>
-            <enum name="GL_PACK_SKIP_IMAGES"/>
-            <enum name="GL_PACK_SKIP_IMAGES_EXT"/>
-            <enum name="GL_PACK_SKIP_PIXELS"/>
-            <enum name="GL_PACK_SKIP_ROWS"/>
-            <enum name="GL_PACK_SKIP_VOLUMES_SGIS"/>
-            <enum name="GL_PACK_SUBSAMPLE_RATE_SGIX"/>
-            <enum name="GL_PACK_SWAP_BYTES"/>
-            <enum name="GL_PIXEL_TILE_CACHE_SIZE_SGIX"/>
-            <enum name="GL_PIXEL_TILE_GRID_DEPTH_SGIX"/>
-            <enum name="GL_PIXEL_TILE_GRID_HEIGHT_SGIX"/>
-            <enum name="GL_PIXEL_TILE_GRID_WIDTH_SGIX"/>
-            <enum name="GL_PIXEL_TILE_HEIGHT_SGIX"/>
-            <enum name="GL_PIXEL_TILE_WIDTH_SGIX"/>
-            <enum name="GL_UNPACK_ALIGNMENT"/>
-            <enum name="GL_UNPACK_IMAGE_DEPTH_SGIS"/>
-            <enum name="GL_UNPACK_IMAGE_HEIGHT"/>
-            <enum name="GL_UNPACK_IMAGE_HEIGHT_EXT"/>
-            <enum name="GL_UNPACK_LSB_FIRST"/>
-            <enum name="GL_UNPACK_RESAMPLE_OML"/>
-            <enum name="GL_UNPACK_RESAMPLE_SGIX"/>
-            <enum name="GL_UNPACK_ROW_LENGTH"/>
-            <enum name="GL_UNPACK_ROW_LENGTH_EXT"/>
-            <enum name="GL_UNPACK_SKIP_IMAGES"/>
-            <enum name="GL_UNPACK_SKIP_IMAGES_EXT"/>
-            <enum name="GL_UNPACK_SKIP_PIXELS"/>
-            <enum name="GL_UNPACK_SKIP_PIXELS_EXT"/>
-            <enum name="GL_UNPACK_SKIP_ROWS"/>
-            <enum name="GL_UNPACK_SKIP_ROWS_EXT"/>
-            <enum name="GL_UNPACK_SKIP_VOLUMES_SGIS"/>
-            <enum name="GL_UNPACK_SUBSAMPLE_RATE_SGIX"/>
-            <enum name="GL_UNPACK_SWAP_BYTES"/>
-        </group>
-
-        <group name="PixelStoreResampleMode">
-            <enum name="GL_RESAMPLE_DECIMATE_SGIX"/>
-            <enum name="GL_RESAMPLE_REPLICATE_SGIX"/>
-            <enum name="GL_RESAMPLE_ZERO_FILL_SGIX"/>
-        </group>
-
-        <group name="PixelStoreSubsampleRate">
-            <enum name="GL_PIXEL_SUBSAMPLE_2424_SGIX"/>
-            <enum name="GL_PIXEL_SUBSAMPLE_4242_SGIX"/>
-            <enum name="GL_PIXEL_SUBSAMPLE_4444_SGIX"/>
-        </group>
-
-        <group name="PixelTexGenMode">
-            <enum name="GL_LUMINANCE"/>
-            <enum name="GL_LUMINANCE_ALPHA"/>
-            <enum name="GL_NONE"/>
-            <enum name="GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX"/>
-            <enum name="GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX"/>
-            <enum name="GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX"/>
-            <enum name="GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX"/>
-            <enum name="GL_RGB"/>
-            <enum name="GL_RGBA"/>
-        </group>
-
-        <group name="PixelTexGenParameterNameSGIS">
-            <enum name="GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS"/>
-            <enum name="GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS"/>
-        </group>
-
-        <group name="PixelTransferParameter">
-            <enum name="GL_ALPHA_BIAS"/>
-            <enum name="GL_ALPHA_SCALE"/>
-            <enum name="GL_BLUE_BIAS"/>
-            <enum name="GL_BLUE_SCALE"/>
-            <enum name="GL_DEPTH_BIAS"/>
-            <enum name="GL_DEPTH_SCALE"/>
-            <enum name="GL_GREEN_BIAS"/>
-            <enum name="GL_GREEN_SCALE"/>
-            <enum name="GL_INDEX_OFFSET"/>
-            <enum name="GL_INDEX_SHIFT"/>
-            <enum name="GL_MAP_COLOR"/>
-            <enum name="GL_MAP_STENCIL"/>
-            <enum name="GL_POST_COLOR_MATRIX_ALPHA_BIAS"/>
-            <enum name="GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI"/>
-            <enum name="GL_POST_COLOR_MATRIX_ALPHA_SCALE"/>
-            <enum name="GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI"/>
-            <enum name="GL_POST_COLOR_MATRIX_BLUE_BIAS"/>
-            <enum name="GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI"/>
-            <enum name="GL_POST_COLOR_MATRIX_BLUE_SCALE"/>
-            <enum name="GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI"/>
-            <enum name="GL_POST_COLOR_MATRIX_GREEN_BIAS"/>
-            <enum name="GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI"/>
-            <enum name="GL_POST_COLOR_MATRIX_GREEN_SCALE"/>
-            <enum name="GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI"/>
-            <enum name="GL_POST_COLOR_MATRIX_RED_BIAS"/>
-            <enum name="GL_POST_COLOR_MATRIX_RED_BIAS_SGI"/>
-            <enum name="GL_POST_COLOR_MATRIX_RED_SCALE"/>
-            <enum name="GL_POST_COLOR_MATRIX_RED_SCALE_SGI"/>
-            <enum name="GL_POST_CONVOLUTION_ALPHA_BIAS"/>
-            <enum name="GL_POST_CONVOLUTION_ALPHA_BIAS_EXT"/>
-            <enum name="GL_POST_CONVOLUTION_ALPHA_SCALE"/>
-            <enum name="GL_POST_CONVOLUTION_ALPHA_SCALE_EXT"/>
-            <enum name="GL_POST_CONVOLUTION_BLUE_BIAS"/>
-            <enum name="GL_POST_CONVOLUTION_BLUE_BIAS_EXT"/>
-            <enum name="GL_POST_CONVOLUTION_BLUE_SCALE"/>
-            <enum name="GL_POST_CONVOLUTION_BLUE_SCALE_EXT"/>
-            <enum name="GL_POST_CONVOLUTION_GREEN_BIAS"/>
-            <enum name="GL_POST_CONVOLUTION_GREEN_BIAS_EXT"/>
-            <enum name="GL_POST_CONVOLUTION_GREEN_SCALE"/>
-            <enum name="GL_POST_CONVOLUTION_GREEN_SCALE_EXT"/>
-            <enum name="GL_POST_CONVOLUTION_RED_BIAS"/>
-            <enum name="GL_POST_CONVOLUTION_RED_BIAS_EXT"/>
-            <enum name="GL_POST_CONVOLUTION_RED_SCALE"/>
-            <enum name="GL_POST_CONVOLUTION_RED_SCALE_EXT"/>
-            <enum name="GL_RED_BIAS"/>
-            <enum name="GL_RED_SCALE"/>
-        </group>
-
-        <group name="PixelType">
-            <enum name="GL_BITMAP"/>
-            <enum name="GL_BYTE"/>
-            <enum name="GL_FLOAT"/>
-            <enum name="GL_INT"/>
-            <enum name="GL_SHORT"/>
-            <enum name="GL_UNSIGNED_BYTE"/>
-            <enum name="GL_UNSIGNED_BYTE_3_3_2"/>
-            <enum name="GL_UNSIGNED_BYTE_3_3_2_EXT"/>
-            <enum name="GL_UNSIGNED_INT"/>
-            <enum name="GL_UNSIGNED_INT_10_10_10_2"/>
-            <enum name="GL_UNSIGNED_INT_10_10_10_2_EXT"/>
-            <enum name="GL_UNSIGNED_INT_8_8_8_8"/>
-            <enum name="GL_UNSIGNED_INT_8_8_8_8_EXT"/>
-            <enum name="GL_UNSIGNED_SHORT"/>
-            <enum name="GL_UNSIGNED_SHORT_4_4_4_4"/>
-            <enum name="GL_UNSIGNED_SHORT_4_4_4_4_EXT"/>
-            <enum name="GL_UNSIGNED_SHORT_5_5_5_1"/>
-            <enum name="GL_UNSIGNED_SHORT_5_5_5_1_EXT"/>
-        </group>
-
-        <group name="PointParameterNameSGIS">
-            <enum name="GL_DISTANCE_ATTENUATION_EXT"/>
-            <enum name="GL_DISTANCE_ATTENUATION_SGIS"/>
-            <enum name="GL_POINT_DISTANCE_ATTENUATION"/>
-            <enum name="GL_POINT_DISTANCE_ATTENUATION_ARB"/>
-            <enum name="GL_POINT_FADE_THRESHOLD_SIZE"/>
-            <enum name="GL_POINT_FADE_THRESHOLD_SIZE_ARB"/>
-            <enum name="GL_POINT_FADE_THRESHOLD_SIZE_EXT"/>
-            <enum name="GL_POINT_FADE_THRESHOLD_SIZE_SGIS"/>
-            <enum name="GL_POINT_SIZE_MAX"/>
-            <enum name="GL_POINT_SIZE_MAX_ARB"/>
-            <enum name="GL_POINT_SIZE_MAX_EXT"/>
-            <enum name="GL_POINT_SIZE_MAX_SGIS"/>
-            <enum name="GL_POINT_SIZE_MIN"/>
-            <enum name="GL_POINT_SIZE_MIN_ARB"/>
-            <enum name="GL_POINT_SIZE_MIN_EXT"/>
-            <enum name="GL_POINT_SIZE_MIN_SGIS"/>
-        </group>
-
-        <group name="PolygonMode">
-            <enum name="GL_FILL"/>
-            <enum name="GL_LINE"/>
-            <enum name="GL_POINT"/>
-        </group>
-
-        <group name="PrimitiveType">
-            <enum name="GL_LINES"/>
-            <enum name="GL_LINES_ADJACENCY"/>
-            <enum name="GL_LINES_ADJACENCY_ARB"/>
-            <enum name="GL_LINES_ADJACENCY_EXT"/>
-            <enum name="GL_LINE_LOOP"/>
-            <enum name="GL_LINE_STRIP"/>
-            <enum name="GL_LINE_STRIP_ADJACENCY"/>
-            <enum name="GL_LINE_STRIP_ADJACENCY_ARB"/>
-            <enum name="GL_LINE_STRIP_ADJACENCY_EXT"/>
-            <enum name="GL_PATCHES"/>
-            <enum name="GL_PATCHES_EXT"/>
-            <enum name="GL_POINTS"/>
-            <enum name="GL_POLYGON"/>
-            <enum name="GL_QUADS"/>
-            <enum name="GL_QUADS_EXT"/>
-            <enum name="GL_QUAD_STRIP"/>
-            <enum name="GL_TRIANGLES"/>
-            <enum name="GL_TRIANGLES_ADJACENCY"/>
-            <enum name="GL_TRIANGLES_ADJACENCY_ARB"/>
-            <enum name="GL_TRIANGLES_ADJACENCY_EXT"/>
-            <enum name="GL_TRIANGLE_FAN"/>
-            <enum name="GL_TRIANGLE_STRIP"/>
-            <enum name="GL_TRIANGLE_STRIP_ADJACENCY"/>
-            <enum name="GL_TRIANGLE_STRIP_ADJACENCY_ARB"/>
-            <enum name="GL_TRIANGLE_STRIP_ADJACENCY_EXT"/>
-        </group>
-
-        <group name="OcclusionQueryEventMaskAMD">
-            <enum name="GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD"/>
-            <enum name="GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD"/>
-            <enum name="GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD"/>
-            <enum name="GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD"/>
-            <enum name="GL_QUERY_ALL_EVENT_BITS_AMD"/>
-        </group>
-
-        <group name="ReadBufferMode">
-            <enum name="GL_AUX0"/>
-            <enum name="GL_AUX1"/>
-            <enum name="GL_AUX2"/>
-            <enum name="GL_AUX3"/>
-            <enum name="GL_BACK"/>
-            <enum name="GL_BACK_LEFT"/>
-            <enum name="GL_BACK_RIGHT"/>
-            <enum name="GL_FRONT"/>
-            <enum name="GL_FRONT_LEFT"/>
-            <enum name="GL_FRONT_RIGHT"/>
-            <enum name="GL_LEFT"/>
-            <enum name="GL_RIGHT"/>
-            <enum name="GL_COLOR_ATTACHMENT0"/>
-            <enum name="GL_COLOR_ATTACHMENT1"/>
-            <enum name="GL_COLOR_ATTACHMENT2"/>
-            <enum name="GL_COLOR_ATTACHMENT3"/>
-            <enum name="GL_COLOR_ATTACHMENT4"/>
-            <enum name="GL_COLOR_ATTACHMENT5"/>
-            <enum name="GL_COLOR_ATTACHMENT6"/>
-            <enum name="GL_COLOR_ATTACHMENT7"/>
-            <enum name="GL_COLOR_ATTACHMENT8"/>
-            <enum name="GL_COLOR_ATTACHMENT9"/>
-            <enum name="GL_COLOR_ATTACHMENT10"/>
-            <enum name="GL_COLOR_ATTACHMENT11"/>
-            <enum name="GL_COLOR_ATTACHMENT12"/>
-            <enum name="GL_COLOR_ATTACHMENT13"/>
-            <enum name="GL_COLOR_ATTACHMENT14"/>
-            <enum name="GL_COLOR_ATTACHMENT15"/>
-        </group>
-
-        <group name="RenderingMode">
-            <enum name="GL_FEEDBACK"/>
-            <enum name="GL_RENDER"/>
-            <enum name="GL_SELECT"/>
-        </group>
-
-        <group name="SamplePatternSGIS">
-            <enum name="GL_1PASS_EXT"/>
-            <enum name="GL_1PASS_SGIS"/>
-            <enum name="GL_2PASS_0_EXT"/>
-            <enum name="GL_2PASS_0_SGIS"/>
-            <enum name="GL_2PASS_1_EXT"/>
-            <enum name="GL_2PASS_1_SGIS"/>
-            <enum name="GL_4PASS_0_EXT"/>
-            <enum name="GL_4PASS_0_SGIS"/>
-            <enum name="GL_4PASS_1_EXT"/>
-            <enum name="GL_4PASS_1_SGIS"/>
-            <enum name="GL_4PASS_2_EXT"/>
-            <enum name="GL_4PASS_2_SGIS"/>
-            <enum name="GL_4PASS_3_EXT"/>
-            <enum name="GL_4PASS_3_SGIS"/>
-        </group>
-
-        <group name="SemaphoreParameterName">
-            <enum name="GL_D3D12_FENCE_VALUE_EXT"/>
-        </group>
-
-        <group name="SeparableTargetEXT">
-            <enum name="GL_SEPARABLE_2D"/>
-            <enum name="GL_SEPARABLE_2D_EXT"/>
-        </group>
-
-        <group name="ShadingModel">
-            <enum name="GL_FLAT"/>
-            <enum name="GL_SMOOTH"/>
-        </group>
-
-        <group name="StencilFaceDirection">
-             <enum name="GL_FRONT"/>
-             <enum name="GL_BACK"/>
-             <enum name="GL_FRONT_AND_BACK"/>
-        </group>
-
-        <group name="StencilFunction">
-            <enum name="GL_ALWAYS"/>
-            <enum name="GL_EQUAL"/>
-            <enum name="GL_GEQUAL"/>
-            <enum name="GL_GREATER"/>
-            <enum name="GL_LEQUAL"/>
-            <enum name="GL_LESS"/>
-            <enum name="GL_NEVER"/>
-            <enum name="GL_NOTEQUAL"/>
-        </group>
-
-        <group name="StencilOp">
-            <enum name="GL_DECR"/>
-            <enum name="GL_DECR_WRAP"/>
-            <enum name="GL_INCR"/>
-            <enum name="GL_INCR_WRAP"/>
-            <enum name="GL_INVERT"/>
-            <enum name="GL_KEEP"/>
-            <enum name="GL_REPLACE"/>
-            <enum name="GL_ZERO"/>
-        </group>
-
-        <group name="StringName">
-            <enum name="GL_EXTENSIONS"/>
-            <enum name="GL_RENDERER"/>
-            <enum name="GL_VENDOR"/>
-            <enum name="GL_VERSION"/>
-            <enum name="GL_SHADING_LANGUAGE_VERSION"/>
-        </group>
-
-        <group name="SyncObjectMask">
-            <enum name="GL_SYNC_FLUSH_COMMANDS_BIT"/>
-            <enum name="GL_SYNC_FLUSH_COMMANDS_BIT_APPLE"/>
-        </group>
-
-        <group name="TexCoordPointerType">
-            <enum name="GL_DOUBLE"/>
-            <enum name="GL_FLOAT"/>
-            <enum name="GL_INT"/>
-            <enum name="GL_SHORT"/>
-        </group>
-
-        <group name="TextureCoordName">
-            <enum name="GL_S"/>
-            <enum name="GL_T"/>
-            <enum name="GL_R"/>
-            <enum name="GL_Q"/>
-        </group>
-
-        <group name="TextureEnvMode">
-            <enum name="GL_ADD"/>
-            <enum name="GL_BLEND"/>
-            <enum name="GL_DECAL"/>
-            <enum name="GL_MODULATE"/>
-            <enum name="GL_REPLACE_EXT"/>
-            <enum name="GL_TEXTURE_ENV_BIAS_SGIX"/>
-        </group>
-
-        <group name="TextureEnvParameter">
-            <enum name="GL_TEXTURE_ENV_COLOR"/>
-            <enum name="GL_TEXTURE_ENV_MODE"/>
-        </group>
-
-        <group name="TextureEnvTarget">
-            <enum name="GL_TEXTURE_ENV"/>
-        </group>
-
-        <group name="TextureFilterFuncSGIS">
-            <enum name="GL_FILTER4_SGIS"/>
-        </group>
-
-        <group name="TextureGenMode">
-            <enum name="GL_EYE_DISTANCE_TO_LINE_SGIS"/>
-            <enum name="GL_EYE_DISTANCE_TO_POINT_SGIS"/>
-            <enum name="GL_EYE_LINEAR"/>
-            <enum name="GL_OBJECT_DISTANCE_TO_LINE_SGIS"/>
-            <enum name="GL_OBJECT_DISTANCE_TO_POINT_SGIS"/>
-            <enum name="GL_OBJECT_LINEAR"/>
-            <enum name="GL_SPHERE_MAP"/>
-        </group>
-
-        <group name="TextureGenParameter">
-            <enum name="GL_EYE_LINE_SGIS"/>
-            <enum name="GL_EYE_PLANE"/>
-            <enum name="GL_EYE_POINT_SGIS"/>
-            <enum name="GL_OBJECT_LINE_SGIS"/>
-            <enum name="GL_OBJECT_PLANE"/>
-            <enum name="GL_OBJECT_POINT_SGIS"/>
-            <enum name="GL_TEXTURE_GEN_MODE"/>
-        </group>
-
-        <group name="TextureMagFilter">
-            <enum name="GL_FILTER4_SGIS"/>
-            <enum name="GL_LINEAR"/>
-            <enum name="GL_LINEAR_DETAIL_ALPHA_SGIS"/>
-            <enum name="GL_LINEAR_DETAIL_COLOR_SGIS"/>
-            <enum name="GL_LINEAR_DETAIL_SGIS"/>
-            <enum name="GL_LINEAR_SHARPEN_ALPHA_SGIS"/>
-            <enum name="GL_LINEAR_SHARPEN_COLOR_SGIS"/>
-            <enum name="GL_LINEAR_SHARPEN_SGIS"/>
-            <enum name="GL_NEAREST"/>
-            <enum name="GL_PIXEL_TEX_GEN_Q_CEILING_SGIX"/>
-            <enum name="GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX"/>
-            <enum name="GL_PIXEL_TEX_GEN_Q_ROUND_SGIX"/>
-        </group>
-
-        <group name="TextureMinFilter">
-            <enum name="GL_FILTER4_SGIS"/>
-            <enum name="GL_LINEAR"/>
-            <enum name="GL_LINEAR_CLIPMAP_LINEAR_SGIX"/>
-            <enum name="GL_LINEAR_CLIPMAP_NEAREST_SGIX"/>
-            <enum name="GL_LINEAR_MIPMAP_LINEAR"/>
-            <enum name="GL_LINEAR_MIPMAP_NEAREST"/>
-            <enum name="GL_NEAREST"/>
-            <enum name="GL_NEAREST_CLIPMAP_LINEAR_SGIX"/>
-            <enum name="GL_NEAREST_CLIPMAP_NEAREST_SGIX"/>
-            <enum name="GL_NEAREST_MIPMAP_LINEAR"/>
-            <enum name="GL_NEAREST_MIPMAP_NEAREST"/>
-            <enum name="GL_PIXEL_TEX_GEN_Q_CEILING_SGIX"/>
-            <enum name="GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX"/>
-            <enum name="GL_PIXEL_TEX_GEN_Q_ROUND_SGIX"/>
-        </group>
-
-        <group name="TextureParameterName">
-            <enum name="GL_DETAIL_TEXTURE_LEVEL_SGIS"/>
-            <enum name="GL_DETAIL_TEXTURE_MODE_SGIS"/>
-            <enum name="GL_DUAL_TEXTURE_SELECT_SGIS"/>
-            <enum name="GL_GENERATE_MIPMAP"/>
-            <enum name="GL_GENERATE_MIPMAP_SGIS"/>
-            <enum name="GL_POST_TEXTURE_FILTER_BIAS_SGIX"/>
-            <enum name="GL_POST_TEXTURE_FILTER_SCALE_SGIX"/>
-            <enum name="GL_QUAD_TEXTURE_SELECT_SGIS"/>
-            <enum name="GL_SHADOW_AMBIENT_SGIX"/>
-            <enum name="GL_TEXTURE_BORDER_COLOR"/>
-            <enum name="GL_TEXTURE_CLIPMAP_CENTER_SGIX"/>
-            <enum name="GL_TEXTURE_CLIPMAP_DEPTH_SGIX"/>
-            <enum name="GL_TEXTURE_CLIPMAP_FRAME_SGIX"/>
-            <enum name="GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX"/>
-            <enum name="GL_TEXTURE_CLIPMAP_OFFSET_SGIX"/>
-            <enum name="GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX"/>
-            <enum name="GL_TEXTURE_COMPARE_SGIX"/>
-            <enum name="GL_TEXTURE_LOD_BIAS_R_SGIX"/>
-            <enum name="GL_TEXTURE_LOD_BIAS_S_SGIX"/>
-            <enum name="GL_TEXTURE_LOD_BIAS_T_SGIX"/>
-            <enum name="GL_TEXTURE_MAG_FILTER"/>
-            <enum name="GL_TEXTURE_MAX_CLAMP_R_SGIX"/>
-            <enum name="GL_TEXTURE_MAX_CLAMP_S_SGIX"/>
-            <enum name="GL_TEXTURE_MAX_CLAMP_T_SGIX"/>
-            <enum name="GL_TEXTURE_MIN_FILTER"/>
-            <enum name="GL_TEXTURE_PRIORITY"/>
-            <enum name="GL_TEXTURE_PRIORITY_EXT"/>
-            <enum name="GL_TEXTURE_WRAP_Q_SGIS"/>
-            <enum name="GL_TEXTURE_WRAP_R"/>
-            <enum name="GL_TEXTURE_WRAP_R_EXT"/>
-            <enum name="GL_TEXTURE_WRAP_R_OES"/>
-            <enum name="GL_TEXTURE_WRAP_S"/>
-            <enum name="GL_TEXTURE_WRAP_T"/>
-            <enum name="GL_TEXTURE_BASE_LEVEL"/>
-            <enum name="GL_TEXTURE_COMPARE_MODE"/>
-            <enum name="GL_TEXTURE_COMPARE_FUNC"/>
-            <enum name="GL_TEXTURE_LOD_BIAS"/>
-            <enum name="GL_TEXTURE_MIN_LOD"/>
-            <enum name="GL_TEXTURE_MAX_LOD"/>
-            <enum name="GL_TEXTURE_MAX_LEVEL"/>
-            <enum name="GL_TEXTURE_SWIZZLE_R"/>
-            <enum name="GL_TEXTURE_SWIZZLE_G"/>
-            <enum name="GL_TEXTURE_SWIZZLE_B"/>
-            <enum name="GL_TEXTURE_SWIZZLE_A"/>
-            <enum name="GL_TEXTURE_SWIZZLE_RGBA"/>
-            <enum name="GL_TEXTURE_TILING_EXT"/>
-            <enum name="GL_DEPTH_STENCIL_TEXTURE_MODE"/>
-            <enum name="GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS"/>
-            <enum name="GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS"/>
-            <enum name="GL_TEXTURE_4DSIZE_SGIS"/>
-            <enum name="GL_TEXTURE_ALPHA_SIZE"/>
-            <enum name="GL_TEXTURE_BASE_LEVEL_SGIS"/>
-            <enum name="GL_TEXTURE_BLUE_SIZE"/>
-            <enum name="GL_TEXTURE_BORDER"/>
-            <enum name="GL_TEXTURE_BORDER_COLOR_NV"/>
-            <enum name="GL_TEXTURE_COMPARE_OPERATOR_SGIX"/>
-            <enum name="GL_TEXTURE_COMPONENTS"/>
-            <enum name="GL_TEXTURE_DEPTH_EXT"/>
-            <enum name="GL_TEXTURE_FILTER4_SIZE_SGIS"/>
-            <enum name="GL_TEXTURE_GEQUAL_R_SGIX"/>
-            <enum name="GL_TEXTURE_GREEN_SIZE"/>
-            <enum name="GL_TEXTURE_HEIGHT"/>
-            <enum name="GL_TEXTURE_INTENSITY_SIZE"/>
-            <enum name="GL_TEXTURE_INTERNAL_FORMAT"/>
-            <enum name="GL_TEXTURE_LEQUAL_R_SGIX"/>
-            <enum name="GL_TEXTURE_LUMINANCE_SIZE"/>
-            <enum name="GL_TEXTURE_MAX_LEVEL_SGIS"/>
-            <enum name="GL_TEXTURE_MAX_LOD_SGIS"/>
-            <enum name="GL_TEXTURE_MIN_LOD_SGIS"/>
-            <enum name="GL_TEXTURE_RED_SIZE"/>
-            <enum name="GL_TEXTURE_RESIDENT"/>
-            <enum name="GL_TEXTURE_WIDTH"/>
-        </group>
-
-        <group name="TextureStorageMaskAMD">
-            <enum name="GL_TEXTURE_STORAGE_SPARSE_BIT_AMD"/>
-        </group>
-
-        <group name="TextureTarget">
-            <enum name="GL_DETAIL_TEXTURE_2D_SGIS"/>
-            <enum name="GL_PROXY_TEXTURE_1D"/>
-            <enum name="GL_PROXY_TEXTURE_1D_ARRAY"/>
-            <enum name="GL_PROXY_TEXTURE_1D_ARRAY_EXT"/>
-            <enum name="GL_PROXY_TEXTURE_1D_EXT"/>
-            <enum name="GL_PROXY_TEXTURE_2D"/>
-            <enum name="GL_PROXY_TEXTURE_2D_ARRAY"/>
-            <enum name="GL_PROXY_TEXTURE_2D_ARRAY_EXT"/>
-            <enum name="GL_PROXY_TEXTURE_2D_EXT"/>
-            <enum name="GL_PROXY_TEXTURE_2D_MULTISAMPLE"/>
-            <enum name="GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY"/>
-            <enum name="GL_PROXY_TEXTURE_3D"/>
-            <enum name="GL_PROXY_TEXTURE_3D_EXT"/>
-            <enum name="GL_PROXY_TEXTURE_4D_SGIS"/>
-            <enum name="GL_PROXY_TEXTURE_CUBE_MAP"/>
-            <enum name="GL_PROXY_TEXTURE_CUBE_MAP_ARB"/>
-            <enum name="GL_PROXY_TEXTURE_CUBE_MAP_EXT"/>
-            <enum name="GL_PROXY_TEXTURE_CUBE_MAP_ARRAY"/>
-            <enum name="GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB"/>
-            <enum name="GL_PROXY_TEXTURE_RECTANGLE"/>
-            <enum name="GL_PROXY_TEXTURE_RECTANGLE_ARB"/>
-            <enum name="GL_PROXY_TEXTURE_RECTANGLE_NV"/>
-            <enum name="GL_TEXTURE_1D"/>
-            <enum name="GL_TEXTURE_2D"/>
-            <enum name="GL_TEXTURE_3D"/>
-            <enum name="GL_TEXTURE_3D_EXT"/>
-            <enum name="GL_TEXTURE_3D_OES"/>
-            <enum name="GL_TEXTURE_4D_SGIS"/>
-            <enum name="GL_TEXTURE_RECTANGLE"/>
-            <enum name="GL_TEXTURE_CUBE_MAP"/>
-            <enum name="GL_TEXTURE_CUBE_MAP_POSITIVE_X"/>
-            <enum name="GL_TEXTURE_CUBE_MAP_NEGATIVE_X"/>
-            <enum name="GL_TEXTURE_CUBE_MAP_POSITIVE_Y"/>
-            <enum name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Y"/>
-            <enum name="GL_TEXTURE_CUBE_MAP_POSITIVE_Z"/>
-            <enum name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Z"/>
-            <enum name="GL_TEXTURE_CUBE_MAP_ARRAY"/>
-            <enum name="GL_TEXTURE_CUBE_MAP_ARRAY_ARB"/>
-            <enum name="GL_TEXTURE_CUBE_MAP_ARRAY_EXT"/>
-            <enum name="GL_TEXTURE_CUBE_MAP_ARRAY_OES"/>
-            <enum name="GL_TEXTURE_1D_ARRAY"/>
-            <enum name="GL_TEXTURE_2D_ARRAY"/>
-            <enum name="GL_TEXTURE_2D_MULTISAMPLE"/>
-            <enum name="GL_TEXTURE_2D_MULTISAMPLE_ARRAY"/>
-        </group>
-
-        <group name="TextureWrapMode">
-            <enum name="GL_CLAMP"/>
-            <enum name="GL_CLAMP_TO_BORDER"/>
-            <enum name="GL_CLAMP_TO_BORDER_ARB"/>
-            <enum name="GL_CLAMP_TO_BORDER_NV"/>
-            <enum name="GL_CLAMP_TO_BORDER_SGIS"/>
-            <enum name="GL_CLAMP_TO_EDGE"/>
-            <enum name="GL_CLAMP_TO_EDGE_SGIS"/>
-            <enum name="GL_REPEAT"/>
-            <enum name="GL_LINEAR_MIPMAP_LINEAR"/>
-            <enum name="GL_MIRRORED_REPEAT"/>
-        </group>
-
-        <group name="UseProgramStageMask">
-            <enum name="GL_VERTEX_SHADER_BIT"/>
-            <enum name="GL_VERTEX_SHADER_BIT_EXT"/>
-            <enum name="GL_FRAGMENT_SHADER_BIT"/>
-            <enum name="GL_FRAGMENT_SHADER_BIT_EXT"/>
-            <enum name="GL_GEOMETRY_SHADER_BIT"/>
-            <enum name="GL_GEOMETRY_SHADER_BIT_EXT"/>
-            <enum name="GL_GEOMETRY_SHADER_BIT_OES"/>
-            <enum name="GL_TESS_CONTROL_SHADER_BIT"/>
-            <enum name="GL_TESS_CONTROL_SHADER_BIT_EXT"/>
-            <enum name="GL_TESS_CONTROL_SHADER_BIT_OES"/>
-            <enum name="GL_TESS_EVALUATION_SHADER_BIT"/>
-            <enum name="GL_TESS_EVALUATION_SHADER_BIT_EXT"/>
-            <enum name="GL_TESS_EVALUATION_SHADER_BIT_OES"/>
-            <enum name="GL_COMPUTE_SHADER_BIT"/>
-            <enum name="GL_MESH_SHADER_BIT_NV"/>
-            <enum name="GL_TASK_SHADER_BIT_NV"/>
-            <enum name="GL_ALL_SHADER_BITS"/>
-            <enum name="GL_ALL_SHADER_BITS_EXT"/>
-        </group>
-
-        <group name="SubgroupSupportedFeatures">
-            <enum name="GL_SUBGROUP_FEATURE_BASIC_BIT_KHR"/>
-            <enum name="GL_SUBGROUP_FEATURE_VOTE_BIT_KHR"/>
-            <enum name="GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR"/>
-            <enum name="GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR"/>
-            <enum name="GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR"/>
-            <enum name="GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR"/>
-            <enum name="GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR"/>
-            <enum name="GL_SUBGROUP_FEATURE_QUAD_BIT_KHR"/>
-            <enum name="GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV"/>
-        </group>
-
-        <group name="VertexPointerType">
-            <enum name="GL_DOUBLE"/>
-            <enum name="GL_FLOAT"/>
-            <enum name="GL_INT"/>
-            <enum name="GL_SHORT"/>
-        </group>
-
-        <group name="FramebufferAttachment">
-            <enum name="GL_MAX_COLOR_ATTACHMENTS"/>
-            <enum name="GL_MAX_COLOR_ATTACHMENTS_EXT"/>
-            <enum name="GL_MAX_COLOR_ATTACHMENTS_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT0"/>
-            <enum name="GL_COLOR_ATTACHMENT0_EXT"/>
-            <enum name="GL_COLOR_ATTACHMENT0_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT0_OES"/>
-            <enum name="GL_COLOR_ATTACHMENT1"/>
-            <enum name="GL_COLOR_ATTACHMENT1_EXT"/>
-            <enum name="GL_COLOR_ATTACHMENT1_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT2"/>
-            <enum name="GL_COLOR_ATTACHMENT2_EXT"/>
-            <enum name="GL_COLOR_ATTACHMENT2_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT3"/>
-            <enum name="GL_COLOR_ATTACHMENT3_EXT"/>
-            <enum name="GL_COLOR_ATTACHMENT3_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT4"/>
-            <enum name="GL_COLOR_ATTACHMENT4_EXT"/>
-            <enum name="GL_COLOR_ATTACHMENT4_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT5"/>
-            <enum name="GL_COLOR_ATTACHMENT5_EXT"/>
-            <enum name="GL_COLOR_ATTACHMENT5_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT6"/>
-            <enum name="GL_COLOR_ATTACHMENT6_EXT"/>
-            <enum name="GL_COLOR_ATTACHMENT6_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT7"/>
-            <enum name="GL_COLOR_ATTACHMENT7_EXT"/>
-            <enum name="GL_COLOR_ATTACHMENT7_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT8"/>
-            <enum name="GL_COLOR_ATTACHMENT8_EXT"/>
-            <enum name="GL_COLOR_ATTACHMENT8_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT9"/>
-            <enum name="GL_COLOR_ATTACHMENT9_EXT"/>
-            <enum name="GL_COLOR_ATTACHMENT9_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT10"/>
-            <enum name="GL_COLOR_ATTACHMENT10_EXT"/>
-            <enum name="GL_COLOR_ATTACHMENT10_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT11"/>
-            <enum name="GL_COLOR_ATTACHMENT11_EXT"/>
-            <enum name="GL_COLOR_ATTACHMENT11_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT12"/>
-            <enum name="GL_COLOR_ATTACHMENT12_EXT"/>
-            <enum name="GL_COLOR_ATTACHMENT12_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT13"/>
-            <enum name="GL_COLOR_ATTACHMENT13_EXT"/>
-            <enum name="GL_COLOR_ATTACHMENT13_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT14"/>
-            <enum name="GL_COLOR_ATTACHMENT14_EXT"/>
-            <enum name="GL_COLOR_ATTACHMENT14_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT15"/>
-            <enum name="GL_COLOR_ATTACHMENT15_EXT"/>
-            <enum name="GL_COLOR_ATTACHMENT15_NV"/>
-            <enum name="GL_COLOR_ATTACHMENT16"/>
-            <enum name="GL_COLOR_ATTACHMENT17"/>
-            <enum name="GL_COLOR_ATTACHMENT18"/>
-            <enum name="GL_COLOR_ATTACHMENT19"/>
-            <enum name="GL_COLOR_ATTACHMENT20"/>
-            <enum name="GL_COLOR_ATTACHMENT21"/>
-            <enum name="GL_COLOR_ATTACHMENT22"/>
-            <enum name="GL_COLOR_ATTACHMENT23"/>
-            <enum name="GL_COLOR_ATTACHMENT24"/>
-            <enum name="GL_COLOR_ATTACHMENT25"/>
-            <enum name="GL_COLOR_ATTACHMENT26"/>
-            <enum name="GL_COLOR_ATTACHMENT27"/>
-            <enum name="GL_COLOR_ATTACHMENT28"/>
-            <enum name="GL_COLOR_ATTACHMENT29"/>
-            <enum name="GL_COLOR_ATTACHMENT30"/>
-            <enum name="GL_COLOR_ATTACHMENT31"/>
-            <enum name="GL_DEPTH_ATTACHMENT"/>
-            <enum name="GL_DEPTH_STENCIL_ATTACHMENT"/>
-            <enum name="GL_DEPTH_ATTACHMENT_EXT"/>
-            <enum name="GL_DEPTH_ATTACHMENT_OES"/>
-        </group>
-
-        <group name="RenderbufferTarget">
-            <enum name="GL_RENDERBUFFER" />
-        </group>
-
-        <group name="FramebufferTarget">
-            <enum name="GL_FRAMEBUFFER" />
-            <enum name="GL_DRAW_FRAMEBUFFER" />
-            <enum name="GL_READ_FRAMEBUFFER" />
-        </group>
-
-        <group name="TextureUnit">
-            <enum name="GL_TEXTURE0"/>
-            <enum name="GL_TEXTURE1"/>
-            <enum name="GL_TEXTURE2"/>
-            <enum name="GL_TEXTURE3"/>
-            <enum name="GL_TEXTURE4"/>
-            <enum name="GL_TEXTURE5"/>
-            <enum name="GL_TEXTURE6"/>
-            <enum name="GL_TEXTURE7"/>
-            <enum name="GL_TEXTURE8"/>
-            <enum name="GL_TEXTURE9"/>
-            <enum name="GL_TEXTURE10"/>
-            <enum name="GL_TEXTURE11"/>
-            <enum name="GL_TEXTURE12"/>
-            <enum name="GL_TEXTURE13"/>
-            <enum name="GL_TEXTURE14"/>
-            <enum name="GL_TEXTURE15"/>
-            <enum name="GL_TEXTURE16"/>
-            <enum name="GL_TEXTURE17"/>
-            <enum name="GL_TEXTURE18"/>
-            <enum name="GL_TEXTURE19"/>
-            <enum name="GL_TEXTURE20"/>
-            <enum name="GL_TEXTURE21"/>
-            <enum name="GL_TEXTURE22"/>
-            <enum name="GL_TEXTURE23"/>
-            <enum name="GL_TEXTURE24"/>
-            <enum name="GL_TEXTURE25"/>
-            <enum name="GL_TEXTURE26"/>
-            <enum name="GL_TEXTURE27"/>
-            <enum name="GL_TEXTURE28"/>
-            <enum name="GL_TEXTURE29"/>
-            <enum name="GL_TEXTURE30"/>
-            <enum name="GL_TEXTURE31"/>
-        </group>
-
-        <group name="ConditionalRenderMode">
-            <enum name="GL_QUERY_WAIT"/>
-            <enum name="GL_QUERY_NO_WAIT"/>
-            <enum name="GL_QUERY_BY_REGION_WAIT"/>
-            <enum name="GL_QUERY_BY_REGION_NO_WAIT"/>
-            <enum name="GL_QUERY_WAIT_INVERTED"/>
-            <enum name="GL_QUERY_NO_WAIT_INVERTED"/>
-            <enum name="GL_QUERY_BY_REGION_WAIT_INVERTED"/>
-            <enum name="GL_QUERY_BY_REGION_NO_WAIT_INVERTED"/>
-        </group>
-
-        <group name="FragmentOpATI">
-            <enum name="GL_MOV_ATI"/>
-            <enum name="GL_ADD_ATI"/>
-            <enum name="GL_MUL_ATI"/>
-            <enum name="GL_SUB_ATI"/>
-            <enum name="GL_DOT3_ATI"/>
-            <enum name="GL_DOT4_ATI"/>
-            <enum name="GL_MAD_ATI"/>
-            <enum name="GL_LERP_ATI"/>
-            <enum name="GL_CND_ATI"/>
-            <enum name="GL_CND0_ATI"/>
-            <enum name="GL_DOT2_ADD_ATI"/>
-        </group>
-
-        <group name="FramebufferStatus">
-            <enum name="GL_FRAMEBUFFER_COMPLETE"/>
-            <enum name="GL_FRAMEBUFFER_UNDEFINED"/>
-            <enum name="GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT"/>
-            <enum name="GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"/>
-            <enum name="GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER"/>
-            <enum name="GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER"/>
-            <enum name="GL_FRAMEBUFFER_UNSUPPORTED"/>
-            <enum name="GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE"/>
-            <enum name="GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE"/>
-            <enum name="GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS"/>
-        </group>
-
-        <group name="GraphicsResetStatus">
-            <enum name="GL_NO_ERROR"/>
-            <enum name="GL_GUILTY_CONTEXT_RESET"/>
-            <enum name="GL_INNOCENT_CONTEXT_RESET"/>
-            <enum name="GL_UNKNOWN_CONTEXT_RESET"/>
-        </group>
-
-        <group name="SyncStatus">
-            <enum name="GL_ALREADY_SIGNALED"/>
-            <enum name="GL_TIMEOUT_EXPIRED"/>
-            <enum name="GL_CONDITION_SATISFIED"/>
-            <enum name="GL_WAIT_FAILED"/>
-        </group>
-
-        <group name="QueryTarget">
-            <enum name="GL_SAMPLES_PASSED"/>
-            <enum name="GL_ANY_SAMPLES_PASSED"/>
-            <enum name="GL_ANY_SAMPLES_PASSED_CONSERVATIVE"/>
-            <enum name="GL_PRIMITIVES_GENERATED"/>
-            <enum name="GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN"/>
-            <enum name="GL_TIME_ELAPSED"/>
-            <enum name="GL_TRANSFORM_FEEDBACK_OVERFLOW"/>
-            <enum name="GL_VERTICES_SUBMITTED"/>
-            <enum name="GL_PRIMITIVES_SUBMITTED"/>
-            <enum name="GL_VERTEX_SHADER_INVOCATIONS"/>
-        </group>
-
-        <group name="QueryCounterTarget">
-            <enum name="GL_TIMESTAMP"/>
-        </group>
-
-        <group name="ConvolutionTarget">
-            <enum name="GL_CONVOLUTION_1D"/>
-            <enum name="GL_CONVOLUTION_2D"/>
-        </group>
-
-        <group name="PathFillMode">
-            <enum name="GL_INVERT"/>
-            <enum name="GL_COUNT_UP_NV"/>
-            <enum name="GL_COUNT_DOWN_NV"/>
-            <enum name="GL_PATH_FILL_MODE_NV"/>
-        </group>
-
-        <group name="ColorTableTarget">
-            <enum name="GL_COLOR_TABLE"/>
-            <enum name="GL_POST_CONVOLUTION_COLOR_TABLE"/>
-            <enum name="GL_POST_COLOR_MATRIX_COLOR_TABLE"/>
-        </group>
-
-        <group name="VertexBufferObjectParameter">
-            <enum name="GL_BUFFER_ACCESS"/>
-            <enum name="GL_BUFFER_ACCESS_FLAGS"/>
-            <enum name="GL_BUFFER_IMMUTABLE_STORAGE"/>
-            <enum name="GL_BUFFER_MAPPED"/>
-            <enum name="GL_BUFFER_MAP_LENGTH"/>
-            <enum name="GL_BUFFER_MAP_OFFSET"/>
-            <enum name="GL_BUFFER_SIZE"/>
-            <enum name="GL_BUFFER_STORAGE_FLAGS"/>
-            <enum name="GL_BUFFER_USAGE"/>
-        </group>
-
-        <group name="RenderbufferParameterName">
-            <enum name="GL_RENDERBUFFER_WIDTH"/>
-            <enum name="GL_RENDERBUFFER_HEIGHT"/>
-            <enum name="GL_RENDERBUFFER_INTERNAL_FORMAT"/>
-            <enum name="GL_RENDERBUFFER_SAMPLES"/>
-            <enum name="GL_RENDERBUFFER_RED_SIZE"/>
-            <enum name="GL_RENDERBUFFER_GREEN_SIZE"/>
-            <enum name="GL_RENDERBUFFER_BLUE_SIZE"/>
-            <enum name="GL_RENDERBUFFER_ALPHA_SIZE"/>
-            <enum name="GL_RENDERBUFFER_DEPTH_SIZE"/>
-            <enum name="GL_RENDERBUFFER_STENCIL_SIZE"/>
-        </group>
-
-        <group name="VertexBufferObjectUsage">
-            <enum name="GL_STREAM_DRAW"/>
-            <enum name="GL_STREAM_READ"/>
-            <enum name="GL_STREAM_COPY"/>
-            <enum name="GL_STATIC_DRAW"/>
-            <enum name="GL_STATIC_READ"/>
-            <enum name="GL_STATIC_COPY"/>
-            <enum name="GL_DYNAMIC_DRAW"/>
-            <enum name="GL_DYNAMIC_READ"/>
-            <enum name="GL_DYNAMIC_COPY"/>
-        </group>
-
-        <group name="FramebufferParameterName">
-            <enum name="GL_FRAMEBUFFER_DEFAULT_WIDTH"/>
-            <enum name="GL_FRAMEBUFFER_DEFAULT_HEIGHT"/>
-            <enum name="GL_FRAMEBUFFER_DEFAULT_LAYERS"/>
-            <enum name="GL_FRAMEBUFFER_DEFAULT_SAMPLES"/>
-            <enum name="GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS"/>
-        </group>
-
-        <group name="ProgramParameterPName">
-            <enum name="GL_PROGRAM_BINARY_RETRIEVABLE_HINT"/>
-            <enum name="GL_PROGRAM_SEPARABLE"/>
-        </group>
-
-        <group name="BlendingFactor">
-            <enum name="GL_ZERO"/>
-            <enum name="GL_ONE"/>
-            <enum name="GL_SRC_COLOR"/>
-            <enum name="GL_ONE_MINUS_SRC_COLOR"/>
-            <enum name="GL_DST_COLOR"/>
-            <enum name="GL_ONE_MINUS_DST_COLOR"/>
-            <enum name="GL_SRC_ALPHA"/>
-            <enum name="GL_ONE_MINUS_SRC_ALPHA"/>
-            <enum name="GL_DST_ALPHA"/>
-            <enum name="GL_ONE_MINUS_DST_ALPHA"/>
-            <enum name="GL_CONSTANT_COLOR"/>
-            <enum name="GL_ONE_MINUS_CONSTANT_COLOR"/>
-            <enum name="GL_CONSTANT_ALPHA"/>
-            <enum name="GL_ONE_MINUS_CONSTANT_ALPHA"/>
-            <enum name="GL_SRC_ALPHA_SATURATE"/>
-            <enum name="GL_SRC1_COLOR"/>
-            <enum name="GL_ONE_MINUS_SRC1_COLOR"/>
-            <enum name="GL_SRC1_ALPHA"/>
-            <enum name="GL_ONE_MINUS_SRC1_ALPHA"/>
-        </group>
-
-        <group name="BindTransformFeedbackTarget">
-            <enum name="GL_TRANSFORM_FEEDBACK"/>
-        </group>
-
-        <group name="BlitFramebufferFilter">
-            <enum name="GL_NEAREST"/>
-            <enum name="GL_LINEAR"/>
-        </group>
-
-        <group name="BufferStorageTarget">
-            <enum name="GL_ARRAY_BUFFER"/>
-            <enum name="GL_ATOMIC_COUNTER_BUFFER"/>
-            <enum name="GL_COPY_READ_BUFFER"/>
-            <enum name="GL_COPY_WRITE_BUFFER"/>
-            <enum name="GL_DISPATCH_INDIRECT_BUFFER"/>
-            <enum name="GL_DRAW_INDIRECT_BUFFER"/>
-            <enum name="GL_ELEMENT_ARRAY_BUFFER"/>
-            <enum name="GL_PIXEL_PACK_BUFFER"/>
-            <enum name="GL_PIXEL_UNPACK_BUFFER"/>
-            <enum name="GL_QUERY_BUFFER"/>
-            <enum name="GL_SHADER_STORAGE_BUFFER"/>
-            <enum name="GL_TEXTURE_BUFFER"/>
-            <enum name="GL_TRANSFORM_FEEDBACK_BUFFER"/>
-            <enum name="GL_UNIFORM_BUFFER"/>
-        </group>
-
-        <group name="CheckFramebufferStatusTarget">
-            <enum name="GL_DRAW_FRAMEBUFFER"/>
-            <enum name="GL_READ_FRAMEBUFFER"/>
-            <enum name="GL_FRAMEBUFFER"/>
-        </group>
-
-        <group name="Buffer">
-            <enum name="GL_COLOR"/>
-            <enum name="GL_DEPTH"/>
-            <enum name="GL_STENCIL"/>
-        </group>
-
-        <group name="ClipControlOrigin">
-            <enum name="GL_LOWER_LEFT"/>
-            <enum name="GL_UPPER_LEFT"/>
-        </group>
-
-        <group name="ClipControlDepth">
-            <enum name="GL_NEGATIVE_ONE_TO_ONE"/>
-            <enum name="GL_ZERO_TO_ONE"/>
-        </group>
-
-        <group name="CopyBufferSubDataTarget">
-            <enum name="GL_ARRAY_BUFFER"/>
-            <enum name="GL_ATOMIC_COUNTER_BUFFER"/>
-            <enum name="GL_COPY_READ_BUFFER"/>
-            <enum name="GL_COPY_WRITE_BUFFER"/>
-            <enum name="GL_DISPATCH_INDIRECT_BUFFER"/>
-            <enum name="GL_DRAW_INDIRECT_BUFFER"/>
-            <enum name="GL_ELEMENT_ARRAY_BUFFER"/>
-            <enum name="GL_PIXEL_PACK_BUFFER"/>
-            <enum name="GL_PIXEL_UNPACK_BUFFER"/>
-            <enum name="GL_QUERY_BUFFER"/>
-            <enum name="GL_SHADER_STORAGE_BUFFER"/>
-            <enum name="GL_TEXTURE_BUFFER"/>
-            <enum name="GL_TRANSFORM_FEEDBACK_BUFFER"/>
-            <enum name="GL_UNIFORM_BUFFER"/>
-        </group>
-
-        <group name="CopyImageSubDataTarget">
-            <enum name="GL_RENDERBUFFER"/>
-            <enum name="GL_TEXTURE_1D"/>
-            <enum name="GL_TEXTURE_2D"/>
-            <enum name="GL_TEXTURE_3D"/>
-            <enum name="GL_TEXTURE_RECTANGLE"/>
-            <enum name="GL_TEXTURE_CUBE_MAP"/>
-            <enum name="GL_TEXTURE_CUBE_MAP_ARRAY"/>
-            <enum name="GL_TEXTURE_1D_ARRAY"/>
-            <enum name="GL_TEXTURE_2D_ARRAY"/>
-            <enum name="GL_TEXTURE_2D_MULTISAMPLE"/>
-            <enum name="GL_TEXTURE_2D_MULTISAMPLE_ARRAY"/>
-        </group>
-
-        <group name="ShaderType">
-            <enum name="GL_COMPUTE_SHADER"/>
-            <enum name="GL_VERTEX_SHADER"/>
-            <enum name="GL_TESS_CONTROL_SHADER"/>
-            <enum name="GL_TESS_EVALUATION_SHADER"/>
-            <enum name="GL_GEOMETRY_SHADER"/>
-            <enum name="GL_FRAGMENT_SHADER"/>
-            <enum name="GL_FRAGMENT_SHADER_ARB"/>
-            <enum name="GL_VERTEX_SHADER_ARB"/>
-        </group>
-
-        <group name="DebugSource">
-            <enum name="GL_DEBUG_SOURCE_API"/>
-            <enum name="GL_DEBUG_SOURCE_WINDOW_SYSTEM"/>
-            <enum name="GL_DEBUG_SOURCE_SHADER_COMPILER"/>
-            <enum name="GL_DEBUG_SOURCE_THIRD_PARTY"/>
-            <enum name="GL_DEBUG_SOURCE_APPLICATION"/>
-            <enum name="GL_DEBUG_SOURCE_OTHER"/>
-            <enum name="GL_DONT_CARE"/>
-        </group>
-
-        <group name="DebugType">
-            <enum name="GL_DEBUG_TYPE_ERROR"/>
-            <enum name="GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR"/>
-            <enum name="GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR"/>
-            <enum name="GL_DEBUG_TYPE_PORTABILITY"/>
-            <enum name="GL_DEBUG_TYPE_PERFORMANCE"/>
-            <enum name="GL_DEBUG_TYPE_MARKER"/>
-            <enum name="GL_DEBUG_TYPE_PUSH_GROUP"/>
-            <enum name="GL_DEBUG_TYPE_POP_GROUP"/>
-            <enum name="GL_DEBUG_TYPE_OTHER"/>
-            <enum name="GL_DONT_CARE"/>
-        </group>
-
-        <group name="DebugSeverity">
-            <enum name="GL_DEBUG_SEVERITY_LOW"/>
-            <enum name="GL_DEBUG_SEVERITY_MEDIUM"/>
-            <enum name="GL_DEBUG_SEVERITY_HIGH"/>
-            <enum name="GL_DEBUG_SEVERITY_NOTIFICATION"/>
-            <enum name="GL_DONT_CARE"/>
-        </group>
-
-        <group name="SyncCondition">
-            <enum name="GL_SYNC_GPU_COMMANDS_COMPLETE"/>
-        </group>
-
-        <group name="FogPName">
-            <enum name="GL_FOG_MODE"/>
-            <enum name="GL_FOG_DENSITY"/>
-            <enum name="GL_FOG_START"/>
-            <enum name="GL_FOG_END"/>
-            <enum name="GL_FOG_INDEX"/>
-            <enum name="GL_FOG_COORD_SRC"/>
-        </group>
-
-        <group name="AtomicCounterBufferPName">
-            <enum name="GL_ATOMIC_COUNTER_BUFFER_BINDING"/>
-            <enum name="GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE"/>
-            <enum name="GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS"/>
-            <enum name="GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES"/>
-            <enum name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER"/>
-            <enum name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER"/>
-            <enum name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER"/>
-            <enum name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER"/>
-            <enum name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER"/>
-            <enum name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER"/>
-        </group>
-
-        <group name="UniformBlockPName">
-            <enum name="GL_UNIFORM_BLOCK_BINDING"/>
-            <enum name="GL_UNIFORM_BLOCK_DATA_SIZE"/>
-            <enum name="GL_UNIFORM_BLOCK_NAME_LENGTH"/>
-            <enum name="GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS"/>
-            <enum name="GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES"/>
-            <enum name="GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER"/>
-            <enum name="GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER"/>
-            <enum name="GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER"/>
-            <enum name="GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER"/>
-            <enum name="GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER"/>
-            <enum name="GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER"/>
-        </group>
-
-        <group name="UniformPName">
-            <enum name="GL_UNIFORM_TYPE"/>
-            <enum name="GL_UNIFORM_SIZE"/>
-            <enum name="GL_UNIFORM_NAME_LENGTH"/>
-            <enum name="GL_UNIFORM_BLOCK_INDEX"/>
-            <enum name="GL_UNIFORM_OFFSET"/>
-            <enum name="GL_UNIFORM_ARRAY_STRIDE"/>
-            <enum name="GL_UNIFORM_MATRIX_STRIDE"/>
-            <enum name="GL_UNIFORM_IS_ROW_MAJOR"/>
-            <enum name="GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX"/>
-        </group>
-
-        <group name="SamplerParameterI">
-            <enum name="GL_TEXTURE_WRAP_S"/>
-            <enum name="GL_TEXTURE_WRAP_T"/>
-            <enum name="GL_TEXTURE_WRAP_R"/>
-            <enum name="GL_TEXTURE_MIN_FILTER"/>
-            <enum name="GL_TEXTURE_MAG_FILTER"/>
-            <enum name="GL_TEXTURE_COMPARE_MODE"/>
-            <enum name="GL_TEXTURE_COMPARE_FUNC"/>
-        </group>
-
-        <group name="SamplerParameterF">
-            <enum name="GL_TEXTURE_BORDER_COLOR"/>
-            <enum name="GL_TEXTURE_MIN_LOD"/>
-            <enum name="GL_TEXTURE_MAX_LOD"/>
-            <enum name="GL_TEXTURE_MAX_ANISOTROPY"/>
-        </group>
-
-        <group name="VertexProvokingMode">
-            <enum name="GL_FIRST_VERTEX_CONVENTION"/>
-            <enum name="GL_LAST_VERTEX_CONVENTION"/>
-        </group>
-
-        <group name="PatchParameterName">
-            <enum name="GL_PATCH_VERTICES"/>
-            <enum name="GL_PATCH_DEFAULT_OUTER_LEVEL"/>
-            <enum name="GL_PATCH_DEFAULT_INNER_LEVEL"/>
-        </group>
-
-        <group name="ObjectIdentifier">
-            <enum name="GL_BUFFER"/>
-            <enum name="GL_SHADER"/>
-            <enum name="GL_PROGRAM"/>
-            <enum name="GL_VERTEX_ARRAY"/>
-            <enum name="GL_QUERY"/>
-            <enum name="GL_PROGRAM_PIPELINE"/>
-            <enum name="GL_TRANSFORM_FEEDBACK"/>
-            <enum name="GL_SAMPLER"/>
-            <enum name="GL_TEXTURE"/>
-            <enum name="GL_RENDERBUFFER"/>
-            <enum name="GL_FRAMEBUFFER"/>
-        </group>
-
-        <group name="ColorBuffer">
-            <enum name="GL_NONE"/>
-            <enum name="GL_FRONT_LEFT"/>
-            <enum name="GL_FRONT_RIGHT"/>
-            <enum name="GL_BACK_LEFT"/>
-            <enum name="GL_BACK_RIGHT"/>
-            <enum name="GL_FRONT"/>
-            <enum name="GL_BACK"/>
-            <enum name="GL_LEFT"/>
-            <enum name="GL_RIGHT"/>
-            <enum name="GL_FRONT_AND_BACK"/>
-            <enum name="GL_COLOR_ATTACHMENT0"/>
-            <enum name="GL_COLOR_ATTACHMENT1"/>
-            <enum name="GL_COLOR_ATTACHMENT2"/>
-            <enum name="GL_COLOR_ATTACHMENT3"/>
-            <enum name="GL_COLOR_ATTACHMENT4"/>
-            <enum name="GL_COLOR_ATTACHMENT5"/>
-            <enum name="GL_COLOR_ATTACHMENT6"/>
-            <enum name="GL_COLOR_ATTACHMENT7"/>
-            <enum name="GL_COLOR_ATTACHMENT8"/>
-            <enum name="GL_COLOR_ATTACHMENT9"/>
-            <enum name="GL_COLOR_ATTACHMENT10"/>
-            <enum name="GL_COLOR_ATTACHMENT11"/>
-            <enum name="GL_COLOR_ATTACHMENT12"/>
-            <enum name="GL_COLOR_ATTACHMENT13"/>
-            <enum name="GL_COLOR_ATTACHMENT14"/>
-            <enum name="GL_COLOR_ATTACHMENT15"/>
-            <enum name="GL_COLOR_ATTACHMENT16"/>
-            <enum name="GL_COLOR_ATTACHMENT17"/>
-            <enum name="GL_COLOR_ATTACHMENT18"/>
-            <enum name="GL_COLOR_ATTACHMENT19"/>
-            <enum name="GL_COLOR_ATTACHMENT20"/>
-            <enum name="GL_COLOR_ATTACHMENT21"/>
-            <enum name="GL_COLOR_ATTACHMENT22"/>
-            <enum name="GL_COLOR_ATTACHMENT23"/>
-            <enum name="GL_COLOR_ATTACHMENT24"/>
-            <enum name="GL_COLOR_ATTACHMENT25"/>
-            <enum name="GL_COLOR_ATTACHMENT26"/>
-            <enum name="GL_COLOR_ATTACHMENT27"/>
-            <enum name="GL_COLOR_ATTACHMENT28"/>
-            <enum name="GL_COLOR_ATTACHMENT29"/>
-            <enum name="GL_COLOR_ATTACHMENT30"/>
-            <enum name="GL_COLOR_ATTACHMENT31"/>
-        </group>
-
-        <group name="MapQuery">
-            <enum name="GL_COEFF"/>
-            <enum name="GL_ORDER"/>
-            <enum name="GL_DOMAIN"/>
-        </group>
-
-        <group name="VertexArrayPName">
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_ENABLED"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_SIZE"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_STRIDE"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_TYPE"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_NORMALIZED"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_INTEGER"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_LONG"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_DIVISOR"/>
-            <enum name="GL_VERTEX_ATTRIB_RELATIVE_OFFSET"/>
-        </group>
-
-        <group name="TransformFeedbackPName">
-            <enum name="GL_TRANSFORM_FEEDBACK_BUFFER_BINDING"/>
-            <enum name="GL_TRANSFORM_FEEDBACK_BUFFER_START"/>
-            <enum name="GL_TRANSFORM_FEEDBACK_BUFFER_SIZE"/>
-            <enum name="GL_TRANSFORM_FEEDBACK_PAUSED"/>
-            <enum name="GL_TRANSFORM_FEEDBACK_ACTIVE"/>
-        </group>
-
-        <group name="SyncParameterName">
-            <enum name="GL_OBJECT_TYPE"/>
-            <enum name="GL_SYNC_STATUS"/>
-            <enum name="GL_SYNC_CONDITION"/>
-            <enum name="GL_SYNC_FLAGS"/>
-        </group>
-
-        <group name="ShaderParameterName">
-            <enum name="GL_SHADER_TYPE"/>
-            <enum name="GL_DELETE_STATUS"/>
-            <enum name="GL_COMPILE_STATUS"/>
-            <enum name="GL_INFO_LOG_LENGTH"/>
-            <enum name="GL_SHADER_SOURCE_LENGTH"/>
-        </group>
-
-        <group name="QueryObjectParameterName">
-            <enum name="GL_QUERY_RESULT_AVAILABLE"/>
-            <enum name="GL_QUERY_RESULT"/>
-            <enum name="GL_QUERY_RESULT_NO_WAIT"/>
-            <enum name="GL_QUERY_TARGET"/>
-        </group>
-
-        <group name="QueryParameterName">
-            <enum name="GL_CURRENT_QUERY"/>
-            <enum name="GL_QUERY_COUNTER_BITS"/>
-        </group>
-
-        <group name="ProgramStagePName">
-            <enum name="GL_ACTIVE_SUBROUTINE_UNIFORMS"/>
-            <enum name="GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS"/>
-            <enum name="GL_ACTIVE_SUBROUTINES"/>
-            <enum name="GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH"/>
-            <enum name="GL_ACTIVE_SUBROUTINE_MAX_LENGTH"/>
-        </group>
-
-        <group name="PipelineParameterName">
-            <enum name="GL_ACTIVE_PROGRAM"/>
-            <enum name="GL_VERTEX_SHADER"/>
-            <enum name="GL_TESS_CONTROL_SHADER"/>
-            <enum name="GL_TESS_EVALUATION_SHADER"/>
-            <enum name="GL_GEOMETRY_SHADER"/>
-            <enum name="GL_FRAGMENT_SHADER"/>
-            <enum name="GL_INFO_LOG_LENGTH"/>
-        </group>
-
-        <group name="ProgramInterface">
-            <enum name="GL_UNIFORM"/>
-            <enum name="GL_UNIFORM_BLOCK"/>
-            <enum name="GL_PROGRAM_INPUT"/>
-            <enum name="GL_PROGRAM_OUTPUT"/>
-            <enum name="GL_VERTEX_SUBROUTINE"/>
-            <enum name="GL_TESS_CONTROL_SUBROUTINE"/>
-            <enum name="GL_TESS_EVALUATION_SUBROUTINE"/>
-            <enum name="GL_GEOMETRY_SUBROUTINE"/>
-            <enum name="GL_FRAGMENT_SUBROUTINE"/>
-            <enum name="GL_COMPUTE_SUBROUTINE"/>
-            <enum name="GL_VERTEX_SUBROUTINE_UNIFORM"/>
-            <enum name="GL_TESS_CONTROL_SUBROUTINE_UNIFORM"/>
-            <enum name="GL_TESS_EVALUATION_SUBROUTINE_UNIFORM"/>
-            <enum name="GL_GEOMETRY_SUBROUTINE_UNIFORM"/>
-            <enum name="GL_FRAGMENT_SUBROUTINE_UNIFORM"/>
-            <enum name="GL_COMPUTE_SUBROUTINE_UNIFORM"/>
-            <enum name="GL_TRANSFORM_FEEDBACK_VARYING"/>
-            <enum name="GL_TRANSFORM_FEEDBACK_BUFFER"/>
-            <enum name="GL_BUFFER_VARIABLE"/>
-            <enum name="GL_SHADER_STORAGE_BLOCK"/>
-        </group>
-
-        <group name="VertexAttribEnum">
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_ENABLED"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_SIZE"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_STRIDE"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_TYPE"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_NORMALIZED"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_INTEGER"/>
-            <enum name="GL_VERTEX_ATTRIB_ARRAY_DIVISOR"/>
-            <enum name="GL_CURRENT_VERTEX_ATTRIB"/>
-        </group>
-
-        <group name="VertexAttribType">
-            <enum name="GL_BYTE"/>
-            <enum name="GL_SHORT"/>
-            <enum name="GL_INT"/>
-            <enum name="GL_FIXED"/>
-            <enum name="GL_FLOAT"/>
-            <enum name="GL_HALF_FLOAT"/>
-            <enum name="GL_DOUBLE"/>
-            <enum name="GL_UNSIGNED_BYTE"/>
-            <enum name="GL_UNSIGNED_SHORT"/>
-            <enum name="GL_UNSIGNED_INT"/>
-            <enum name="GL_INT_2_10_10_10_REV"/>
-            <enum name="GL_UNSIGNED_INT_2_10_10_10_REV"/>
-            <enum name="GL_UNSIGNED_INT_10F_11F_11F_REV"/>
-        </group>
-
-        <group name="AttributeType">
-            <enum name="GL_FLOAT_VEC2"/>
-            <enum name="GL_FLOAT_VEC2_ARB"/>
-            <enum name="GL_FLOAT_VEC3"/>
-            <enum name="GL_FLOAT_VEC3_ARB"/>
-            <enum name="GL_FLOAT_VEC4"/>
-            <enum name="GL_FLOAT_VEC4_ARB"/>
-            <enum name="GL_INT_VEC2"/>
-            <enum name="GL_INT_VEC2_ARB"/>
-            <enum name="GL_INT_VEC3"/>
-            <enum name="GL_INT_VEC3_ARB"/>
-            <enum name="GL_INT_VEC4"/>
-            <enum name="GL_INT_VEC4_ARB"/>
-            <enum name="GL_BOOL"/>
-            <enum name="GL_BOOL_ARB"/>
-            <enum name="GL_BOOL_VEC2"/>
-            <enum name="GL_BOOL_VEC2_ARB"/>
-            <enum name="GL_BOOL_VEC3"/>
-            <enum name="GL_BOOL_VEC3_ARB"/>
-            <enum name="GL_BOOL_VEC4"/>
-            <enum name="GL_BOOL_VEC4_ARB"/>
-            <enum name="GL_FLOAT_MAT2"/>
-            <enum name="GL_FLOAT_MAT2_ARB"/>
-            <enum name="GL_FLOAT_MAT3"/>
-            <enum name="GL_FLOAT_MAT3_ARB"/>
-            <enum name="GL_FLOAT_MAT4"/>
-            <enum name="GL_FLOAT_MAT4_ARB"/>
-            <enum name="GL_FLOAT_MAT2x3"/>
-            <enum name="GL_FLOAT_MAT2x3_NV"/>
-            <enum name="GL_FLOAT_MAT2x4"/>
-            <enum name="GL_FLOAT_MAT2x4_NV"/>
-            <enum name="GL_FLOAT_MAT3x2"/>
-            <enum name="GL_FLOAT_MAT3x2_NV"/>
-            <enum name="GL_FLOAT_MAT3x4"/>
-            <enum name="GL_FLOAT_MAT3x4_NV"/>
-            <enum name="GL_FLOAT_MAT4x2"/>
-            <enum name="GL_FLOAT_MAT4x2_NV"/>
-            <enum name="GL_FLOAT_MAT4x3"/>
-            <enum name="GL_FLOAT_MAT4x3_NV"/>
-        </group>
-
-        <group name="UniformType">
-            <enum name="GL_INT"/>
-            <enum name="GL_UNSIGNED_INT"/>
-            <enum name="GL_FLOAT"/>
-            <enum name="GL_DOUBLE"/>
-            <enum name="GL_FLOAT_VEC2"/>
-            <enum name="GL_FLOAT_VEC3"/>
-            <enum name="GL_FLOAT_VEC4"/>
-            <enum name="GL_INT_VEC2"/>
-            <enum name="GL_INT_VEC3"/>
-            <enum name="GL_INT_VEC4"/>
-            <enum name="GL_BOOL"/>
-            <enum name="GL_BOOL_VEC2"/>
-            <enum name="GL_BOOL_VEC3"/>
-            <enum name="GL_BOOL_VEC4"/>
-            <enum name="GL_FLOAT_MAT2"/>
-            <enum name="GL_FLOAT_MAT3"/>
-            <enum name="GL_FLOAT_MAT4"/>
-            <enum name="GL_SAMPLER_1D"/>
-            <enum name="GL_SAMPLER_2D"/>
-            <enum name="GL_SAMPLER_3D"/>
-            <enum name="GL_SAMPLER_CUBE"/>
-            <enum name="GL_SAMPLER_1D_SHADOW"/>
-            <enum name="GL_SAMPLER_2D_SHADOW"/>
-            <enum name="GL_SAMPLER_2D_RECT"/>
-            <enum name="GL_SAMPLER_2D_RECT_SHADOW"/>
-            <enum name="GL_FLOAT_MAT2X3"/>
-            <enum name="GL_FLOAT_MAT2X4"/>
-            <enum name="GL_FLOAT_MAT3X2"/>
-            <enum name="GL_FLOAT_MAT3X4"/>
-            <enum name="GL_FLOAT_MAT4X2"/>
-            <enum name="GL_FLOAT_MAT4X3"/>
-            <enum name="GL_SAMPLER_1D_ARRAY"/>
-            <enum name="GL_SAMPLER_2D_ARRAY"/>
-            <enum name="GL_SAMPLER_BUFFER"/>
-            <enum name="GL_SAMPLER_1D_ARRAY_SHADOW"/>
-            <enum name="GL_SAMPLER_2D_ARRAY_SHADOW"/>
-            <enum name="GL_SAMPLER_CUBE_SHADOW"/>
-            <enum name="GL_UNSIGNED_INT_VEC2"/>
-            <enum name="GL_UNSIGNED_INT_VEC3"/>
-            <enum name="GL_UNSIGNED_INT_VEC4"/>
-            <enum name="GL_INT_SAMPLER_1D"/>
-            <enum name="GL_INT_SAMPLER_2D"/>
-            <enum name="GL_INT_SAMPLER_3D"/>
-            <enum name="GL_INT_SAMPLER_CUBE"/>
-            <enum name="GL_INT_SAMPLER_2D_RECT"/>
-            <enum name="GL_INT_SAMPLER_1D_ARRAY"/>
-            <enum name="GL_INT_SAMPLER_2D_ARRAY"/>
-            <enum name="GL_INT_SAMPLER_BUFFER"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_1D"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_2D"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_3D"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_CUBE"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_2D_RECT"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_1D_ARRAY"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_2D_ARRAY"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_BUFFER"/>
-            <enum name="GL_DOUBLE_MAT2"/>
-            <enum name="GL_DOUBLE_MAT3"/>
-            <enum name="GL_DOUBLE_MAT4"/>
-            <enum name="GL_DOUBLE_MAT2x3"/>
-            <enum name="GL_DOUBLE_MAT2x4"/>
-            <enum name="GL_DOUBLE_MAT3x2"/>
-            <enum name="GL_DOUBLE_MAT3x4"/>
-            <enum name="GL_DOUBLE_MAT4x2"/>
-            <enum name="GL_DOUBLE_MAT4x3"/>
-            <enum name="GL_DOUBLE_VEC2"/>
-            <enum name="GL_DOUBLE_VEC3"/>
-            <enum name="GL_DOUBLE_VEC4"/>
-            <enum name="GL_SAMPLER_CUBE_MAP_ARRAY"/>
-            <enum name="GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW"/>
-            <enum name="GL_INT_SAMPLER_CUBE_MAP_ARRAY"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY"/>
-            <enum name="GL_SAMPLER_2D_MULTISAMPLE"/>
-            <enum name="GL_INT_SAMPLER_2D_MULTISAMPLE"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE"/>
-            <enum name="GL_SAMPLER_2D_MULTISAMPLE_ARRAY"/>
-            <enum name="GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY"/>
-        </group>
-
-        <group name="InternalFormatPName">
-            <enum name="GL_NUM_SAMPLE_COUNTS"/>
-            <enum name="GL_SAMPLES"/>
-            <enum name="GL_INTERNALFORMAT_SUPPORTED"/>
-            <enum name="GL_INTERNALFORMAT_PREFERRED"/>
-            <enum name="GL_INTERNALFORMAT_RED_SIZE"/>
-            <enum name="GL_INTERNALFORMAT_GREEN_SIZE"/>
-            <enum name="GL_INTERNALFORMAT_BLUE_SIZE"/>
-            <enum name="GL_INTERNALFORMAT_ALPHA_SIZE"/>
-            <enum name="GL_INTERNALFORMAT_DEPTH_SIZE"/>
-            <enum name="GL_INTERNALFORMAT_STENCIL_SIZE"/>
-            <enum name="GL_INTERNALFORMAT_SHARED_SIZE"/>
-            <enum name="GL_INTERNALFORMAT_RED_TYPE"/>
-            <enum name="GL_INTERNALFORMAT_GREEN_TYPE"/>
-            <enum name="GL_INTERNALFORMAT_BLUE_TYPE"/>
-            <enum name="GL_INTERNALFORMAT_ALPHA_TYPE"/>
-            <enum name="GL_INTERNALFORMAT_DEPTH_TYPE"/>
-            <enum name="GL_INTERNALFORMAT_STENCIL_TYPE"/>
-            <enum name="GL_MAX_WIDTH"/>
-            <enum name="GL_MAX_HEIGHT"/>
-            <enum name="GL_MAX_DEPTH"/>
-            <enum name="GL_MAX_LAYERS"/>
-            <enum name="GL_COLOR_COMPONENTS"/>
-            <enum name="GL_COLOR_RENDERABLE"/>
-            <enum name="GL_DEPTH_RENDERABLE"/>
-            <enum name="GL_STENCIL_RENDERABLE"/>
-            <enum name="GL_FRAMEBUFFER_RENDERABLE"/>
-            <enum name="GL_FRAMEBUFFER_RENDERABLE_LAYERED"/>
-            <enum name="GL_FRAMEBUFFER_BLEND"/>
-            <enum name="GL_READ_PIXELS"/>
-            <enum name="GL_READ_PIXELS_FORMAT"/>
-            <enum name="GL_READ_PIXELS_TYPE"/>
-            <enum name="GL_TEXTURE_IMAGE_FORMAT"/>
-            <enum name="GL_TEXTURE_IMAGE_TYPE"/>
-            <enum name="GL_GET_TEXTURE_IMAGE_FORMAT"/>
-            <enum name="GL_GET_TEXTURE_IMAGE_TYPE"/>
-            <enum name="GL_MIPMAP"/>
-            <enum name="GL_GENERATE_MIPMAP"/>
-            <enum name="GL_AUTO_GENERATE_MIPMAP"/>
-            <enum name="GL_COLOR_ENCODING"/>
-            <enum name="GL_SRGB_READ"/>
-            <enum name="GL_SRGB_WRITE"/>
-            <enum name="GL_FILTER"/>
-            <enum name="GL_VERTEX_TEXTURE"/>
-            <enum name="GL_TESS_CONTROL_TEXTURE"/>
-            <enum name="GL_TESS_EVALUATION_TEXTURE"/>
-            <enum name="GL_GEOMETRY_TEXTURE"/>
-            <enum name="GL_FRAGMENT_TEXTURE"/>
-            <enum name="GL_COMPUTE_TEXTURE"/>
-            <enum name="GL_TEXTURE_SHADOW"/>
-            <enum name="GL_TEXTURE_GATHER"/>
-            <enum name="GL_TEXTURE_GATHER_SHADOW"/>
-            <enum name="GL_SHADER_IMAGE_LOAD"/>
-            <enum name="GL_SHADER_IMAGE_STORE"/>
-            <enum name="GL_SHADER_IMAGE_ATOMIC"/>
-            <enum name="GL_IMAGE_TEXEL_SIZE"/>
-            <enum name="GL_IMAGE_COMPATIBILITY_CLASS"/>
-            <enum name="GL_IMAGE_PIXEL_FORMAT"/>
-            <enum name="GL_IMAGE_PIXEL_TYPE"/>
-            <enum name="GL_IMAGE_FORMAT_COMPATIBILITY_TYPE"/>
-            <enum name="GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST"/>
-            <enum name="GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST"/>
-            <enum name="GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE"/>
-            <enum name="GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE"/>
-            <enum name="GL_TEXTURE_COMPRESSED"/>
-            <enum name="GL_TEXTURE_COMPRESSED_BLOCK_WIDTH"/>
-            <enum name="GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT"/>
-            <enum name="GL_TEXTURE_COMPRESSED_BLOCK_SIZE"/>
-            <enum name="GL_CLEAR_BUFFER"/>
-            <enum name="GL_TEXTURE_VIEW"/>
-            <enum name="GL_VIEW_COMPATIBILITY_CLASS"/>
-            <enum name="GL_CLEAR_TEXTURE"/>
-        </group>
-
-        <group name="FramebufferAttachmentParameterName">
-            <enum name="GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE"/>
-            <enum name="GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE"/>
-            <enum name="GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE"/>
-            <enum name="GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE"/>
-            <enum name="GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE"/>
-            <enum name="GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE"/>
-            <enum name="GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE"/>
-            <enum name="GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING"/>
-            <enum name="GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME"/>
-            <enum name="GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME"/>
-            <enum name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL"/>
-            <enum name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE"/>
-            <enum name="GL_FRAMEBUFFER_ATTACHMENT_LAYERED"/>
-            <enum name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER"/>
-        </group>
-
-        <group name="ProgramInterfacePName">
-            <enum name="GL_ACTIVE_RESOURCES"/>
-            <enum name="GL_MAX_NAME_LENGTH"/>
-            <enum name="GL_MAX_NUM_ACTIVE_VARIABLES"/>
-            <enum name="GL_MAX_NUM_COMPATIBLE_SUBROUTINES"/>
-        </group>
-
-        <group name="PrecisionType">
-            <enum name="GL_LOW_FLOAT"/>
-            <enum name="GL_MEDIUM_FLOAT"/>
-            <enum name="GL_HIGH_FLOAT"/>
-            <enum name="GL_LOW_INT"/>
-            <enum name="GL_MEDIUM_INT"/>
-            <enum name="GL_HIGH_INT"/>
-        </group>
-
-        <group name="VertexAttribPointerType">
-            <enum name="GL_BYTE"/>
-            <enum name="GL_UNSIGNED_BYTE"/>
-            <enum name="GL_SHORT"/>
-            <enum name="GL_UNSIGNED_SHORT"/>
-            <enum name="GL_INT"/>
-            <enum name="GL_UNSIGNED_INT"/>
-            <enum name="GL_FLOAT"/>
-            <enum name="GL_DOUBLE"/>
-            <enum name="GL_HALF_FLOAT"/>
-            <enum name="GL_FIXED"/>
-            <enum name="GL_INT_2_10_10_10_REV"/>
-            <enum name="GL_UNSIGNED_INT_2_10_10_10_REV"/>
-            <enum name="GL_UNSIGNED_INT_10F_11F_11F_REV"/>
-        </group>
-
-        <group name="SubroutineParameterName">
-            <enum name="GL_NUM_COMPATIBLE_SUBROUTINES"/>
-            <enum name="GL_COMPATIBLE_SUBROUTINES"/>
-            <enum name="GL_UNIFORM_SIZE"/>
-            <enum name="GL_UNIFORM_NAME_LENGTH"/>
-        </group>
-
-        <group name="GetFramebufferParameter">
-            <enum name="GL_FRAMEBUFFER_DEFAULT_WIDTH"/>
-            <enum name="GL_FRAMEBUFFER_DEFAULT_HEIGHT"/>
-            <enum name="GL_FRAMEBUFFER_DEFAULT_LAYERS"/>
-            <enum name="GL_FRAMEBUFFER_DEFAULT_SAMPLES"/>
-            <enum name="GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS"/>
-            <enum name="GL_DOUBLEBUFFER"/>
-            <enum name="GL_IMPLEMENTATION_COLOR_READ_FORMAT"/>
-            <enum name="GL_IMPLEMENTATION_COLOR_READ_TYPE"/>
-            <enum name="GL_SAMPLES"/>
-            <enum name="GL_SAMPLE_BUFFERS"/>
-            <enum name="GL_STEREO"/>
-        </group>
-
-        <group name="PathStringFormat">
-            <enum name="GL_PATH_FORMAT_SVG_NV" />
-            <enum name="GL_PATH_FORMAT_PS_NV" />
-        </group>
-
-        <group name="PathFontTarget">
-            <enum name="GL_STANDARD_FONT_NAME_NV" />
-            <enum name="GL_SYSTEM_FONT_NAME_NV" />
-            <enum name="GL_FILE_NAME_NV" />
-        </group>
-
-        <group name="PathHandleMissingGlyphs">
-            <enum name="GL_SKIP_MISSING_GLYPH_NV" />
-            <enum name="GL_USE_MISSING_GLYPH_NV" />
-        </group>
-
-        <group name="PathParameter">
-            <enum name="GL_PATH_STROKE_WIDTH_NV" />
-            <enum name="GL_PATH_INITIAL_END_CAP_NV" />
-            <enum name="GL_PATH_TERMINAL_END_CAP_NV" />
-            <enum name="GL_PATH_JOIN_STYLE_NV" />
-            <enum name="GL_PATH_MITER_LIMIT_NV" />
-            <enum name="GL_PATH_INITIAL_DASH_CAP_NV" />
-            <enum name="GL_PATH_TERMINAL_DASH_CAP_NV" />
-            <enum name="GL_PATH_DASH_OFFSET_NV" />
-            <enum name="GL_PATH_CLIENT_LENGTH_NV" />
-            <enum name="GL_PATH_DASH_OFFSET_RESET_NV" />
-            <enum name="GL_PATH_FILL_MODE_NV" />
-            <enum name="GL_PATH_FILL_MASK_NV" />
-            <enum name="GL_PATH_FILL_COVER_MODE_NV" />
-            <enum name="GL_PATH_STROKE_COVER_MODE_NV" />
-            <enum name="GL_PATH_STROKE_MASK_NV" />
-            <!-- <enum name="GL_PATH_STROKE_BOUND_NV" comment="Removed from extension"/> -->
-            <enum name="GL_PATH_END_CAPS_NV" />
-            <enum name="GL_PATH_DASH_CAPS_NV" />
-            <enum name="GL_PATH_COMMAND_COUNT_NV" />
-            <enum name="GL_PATH_COORD_COUNT_NV" />
-            <enum name="GL_PATH_DASH_ARRAY_COUNT_NV" />
-            <enum name="GL_PATH_COMPUTED_LENGTH_NV" />
-            <enum name="GL_PATH_OBJECT_BOUNDING_BOX_NV" />
-            <enum name="GL_PATH_FILL_BOUNDING_BOX_NV" />
-            <enum name="GL_PATH_STROKE_BOUNDING_BOX_NV" />
-        </group>
-
-        <group name="PathColor">
-            <enum name="GL_PRIMARY_COLOR" />
-            <enum name="GL_PRIMARY_COLOR_NV" />
-            <enum name="GL_SECONDARY_COLOR_NV" />
-        </group>
-
-        <group name="PathGenMode">
-            <enum name="GL_NONE" />
-            <enum name="GL_EYE_LINEAR" />
-            <enum name="GL_OBJECT_LINEAR" />
-            <enum name="GL_PATH_OBJECT_BOUNDING_BOX_NV" />
-            <enum name="GL_CONSTANT" />
-        </group>
-
-        <group name="TextureLayout">
-            <enum name="GL_LAYOUT_GENERAL_EXT"/>
-            <enum name="GL_LAYOUT_COLOR_ATTACHMENT_EXT"/>
-            <enum name="GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT"/>
-            <enum name="GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT"/>
-            <enum name="GL_LAYOUT_SHADER_READ_ONLY_EXT"/>
-            <enum name="GL_LAYOUT_TRANSFER_SRC_EXT"/>
-            <enum name="GL_LAYOUT_TRANSFER_DST_EXT"/>
-            <enum name="GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT"/>
-            <enum name="GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT"/>
-        </group>
-
-        <group name="PathTransformType">
-            <enum name="GL_NONE" />
-            <enum name="GL_TRANSLATE_X_NV" />
-            <enum name="GL_TRANSLATE_Y_NV" />
-            <enum name="GL_TRANSLATE_2D_NV" />
-            <enum name="GL_TRANSLATE_3D_NV" />
-            <enum name="GL_AFFINE_2D_NV" />
-            <enum name="GL_AFFINE_3D_NV" />
-            <enum name="GL_TRANSPOSE_AFFINE_2D_NV" />
-            <enum name="GL_TRANSPOSE_AFFINE_3D_NV" />
-        </group>
-
-        <group name="PathElementType">
-            <enum name="GL_UTF8_NV" />
-            <enum name="GL_UTF16_NV" />
-        </group>
-
-        <group name="PathCoverMode">
-            <enum name="GL_CONVEX_HULL_NV" />
-            <enum name="GL_BOUNDING_BOX_NV" />
-            <enum name="GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV" />
-            <enum name="GL_PATH_FILL_COVER_MODE_NV" />
-        </group>
-
-        <group name="PathFontStyle">
-            <enum name="GL_NONE" />
-            <enum name="GL_BOLD_BIT_NV" />
-            <enum name="GL_ITALIC_BIT_NV" />
-        </group>
-
-        <group name="PathMetricMask">
-            <enum name="GL_GLYPH_WIDTH_BIT_NV" />
-            <enum name="GL_GLYPH_HEIGHT_BIT_NV" />
-            <enum name="GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV" />
-            <enum name="GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV" />
-            <enum name="GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV" />
-            <enum name="GL_GLYPH_VERTICAL_BEARING_X_BIT_NV" />
-            <enum name="GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV" />
-            <enum name="GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV" />
-            <enum name="GL_GLYPH_HAS_KERNING_BIT_NV" />
-            <enum name="GL_FONT_X_MIN_BOUNDS_BIT_NV" />
-            <enum name="GL_FONT_Y_MIN_BOUNDS_BIT_NV" />
-            <enum name="GL_FONT_X_MAX_BOUNDS_BIT_NV" />
-            <enum name="GL_FONT_Y_MAX_BOUNDS_BIT_NV" />
-            <enum name="GL_FONT_UNITS_PER_EM_BIT_NV" />
-            <enum name="GL_FONT_ASCENDER_BIT_NV" />
-            <enum name="GL_FONT_DESCENDER_BIT_NV" />
-            <enum name="GL_FONT_HEIGHT_BIT_NV" />
-            <enum name="GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV" />
-            <enum name="GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV" />
-            <enum name="GL_FONT_UNDERLINE_POSITION_BIT_NV" />
-            <enum name="GL_FONT_UNDERLINE_THICKNESS_BIT_NV" />
-            <enum name="GL_FONT_HAS_KERNING_BIT_NV" />
-            <enum name="GL_FONT_NUM_GLYPH_INDICES_BIT_NV" />
-        </group>
-
-        <group name="PathListMode">
-            <enum name="GL_ACCUM_ADJACENT_PAIRS_NV" />
-            <enum name="GL_ADJACENT_PAIRS_NV" />
-            <enum name="GL_FIRST_TO_REST_NV" />
-        </group>
-
-        <group name="ProgramPropertyARB">
-            <enum name="GL_DELETE_STATUS" />
-            <enum name="GL_LINK_STATUS" />
-            <enum name="GL_VALIDATE_STATUS" />
-            <enum name="GL_INFO_LOG_LENGTH" />
-            <enum name="GL_ATTACHED_SHADERS" />
-            <enum name="GL_ACTIVE_ATOMIC_COUNTER_BUFFERS" />
-            <enum name="GL_ACTIVE_ATTRIBUTES" />
-            <enum name="GL_ACTIVE_ATTRIBUTE_MAX_LENGTH" />
-            <enum name="GL_ACTIVE_UNIFORMS" />
-            <enum name="GL_ACTIVE_UNIFORM_BLOCKS" />
-            <enum name="GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH" />
-            <enum name="GL_ACTIVE_UNIFORM_MAX_LENGTH" />
-            <enum name="GL_COMPUTE_WORK_GROUP_SIZE" />
-            <enum name="GL_PROGRAM_BINARY_LENGTH" />
-            <enum name="GL_TRANSFORM_FEEDBACK_BUFFER_MODE" />
-            <enum name="GL_TRANSFORM_FEEDBACK_VARYINGS" />
-            <enum name="GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH" />
-            <enum name="GL_GEOMETRY_VERTICES_OUT" />
-            <enum name="GL_GEOMETRY_INPUT_TYPE" />
-            <enum name="GL_GEOMETRY_OUTPUT_TYPE" />
-        </group>
-
-        <group name="GlslTypeToken" comment="OpenGL 4.6 Table 7.3: OpenGL Shading Language type tokens">
-            <enum name="GL_FLOAT"/>
-            <enum name="GL_FLOAT_VEC2"/>
-            <enum name="GL_FLOAT_VEC3"/>
-            <enum name="GL_FLOAT_VEC4"/>
-            <enum name="GL_DOUBLE"/>
-            <enum name="GL_DOUBLE_VEC2"/>
-            <enum name="GL_DOUBLE_VEC3"/>
-            <enum name="GL_DOUBLE_VEC4"/>
-            <enum name="GL_INT"/>
-            <enum name="GL_INT_VEC2"/>
-            <enum name="GL_INT_VEC3"/>
-            <enum name="GL_INT_VEC4"/>
-            <enum name="GL_UNSIGNED_INT"/>
-            <enum name="GL_UNSIGNED_INT_VEC2"/>
-            <enum name="GL_UNSIGNED_INT_VEC3"/>
-            <enum name="GL_UNSIGNED_INT_VEC4"/>
-            <enum name="GL_BOOL"/>
-            <enum name="GL_BOOL_VEC2"/>
-            <enum name="GL_BOOL_VEC3"/>
-            <enum name="GL_BOOL_VEC4"/>
-            <enum name="GL_FLOAT_MAT2"/>
-            <enum name="GL_FLOAT_MAT3"/>
-            <enum name="GL_FLOAT_MAT4"/>
-            <enum name="GL_FLOAT_MAT2x3"/>
-            <enum name="GL_FLOAT_MAT2x4"/>
-            <enum name="GL_FLOAT_MAT3x2"/>
-            <enum name="GL_FLOAT_MAT3x4"/>
-            <enum name="GL_FLOAT_MAT4x2"/>
-            <enum name="GL_FLOAT_MAT4x3"/>
-            <enum name="GL_DOUBLE_MAT2"/>
-            <enum name="GL_DOUBLE_MAT3"/>
-            <enum name="GL_DOUBLE_MAT4"/>
-            <enum name="GL_SAMPLER_1D"/>
-            <enum name="GL_SAMPLER_2D"/>
-            <enum name="GL_SAMPLER_3D"/>
-            <enum name="GL_SAMPLER_CUBE"/>
-            <enum name="GL_SAMPLER_1D_SHADOW"/>
-            <enum name="GL_SAMPLER_2D_SHADOW"/>
-            <enum name="GL_SAMPLER_1D_ARRAY"/>
-            <enum name="GL_SAMPLER_2D_ARRAY"/>
-            <enum name="GL_SAMPLER_CUBE_MAP_ARRAY"/>
-            <enum name="GL_SAMPLER_1D_ARRAY_SHADOW"/>
-            <enum name="GL_SAMPLER_2D_ARRAY_SHADOW"/>
-            <enum name="GL_SAMPLER_2D_MULTISAMPLE"/>
-            <enum name="GL_SAMPLER_2D_MULTISAMPLE_ARRAY"/>
-            <enum name="GL_SAMPLER_CUBE_SHADOW"/>
-            <enum name="GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW"/>
-            <enum name="GL_SAMPLER_BUFFER"/>
-            <enum name="GL_SAMPLER_2D_RECT"/>
-            <enum name="GL_SAMPLER_2D_RECT_SHADOW"/>
-            <enum name="GL_INT_SAMPLER_1D"/>
-            <enum name="GL_INT_SAMPLER_2D"/>
-            <enum name="GL_INT_SAMPLER_3D"/>
-            <enum name="GL_INT_SAMPLER_CUBE"/>
-            <enum name="GL_INT_SAMPLER_1D_ARRAY"/>
-            <enum name="GL_INT_SAMPLER_2D_ARRAY"/>
-            <enum name="GL_INT_SAMPLER_CUBE_MAP_ARRAY"/>
-            <enum name="GL_INT_SAMPLER_2D_MULTISAMPLE"/>
-            <enum name="GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY"/>
-            <enum name="GL_INT_SAMPLER_BUFFER"/>
-            <enum name="GL_INT_SAMPLER_2D_RECT"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_1D"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_2D"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_3D"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_CUBE"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_1D_ARRAY"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_2D_ARRAY"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_BUFFER"/>
-            <enum name="GL_UNSIGNED_INT_SAMPLER_2D_RECT"/>
-            <enum name="GL_IMAGE_1D"/>
-            <enum name="GL_IMAGE_2D"/>
-            <enum name="GL_IMAGE_3D"/>
-            <enum name="GL_IMAGE_2D_RECT"/>
-            <enum name="GL_IMAGE_CUBE"/>
-            <enum name="GL_IMAGE_BUFFER"/>
-            <enum name="GL_IMAGE_1D_ARRAY"/>
-            <enum name="GL_IMAGE_2D_ARRAY"/>
-            <enum name="GL_IMAGE_CUBE_MAP_ARRAY"/>
-            <enum name="GL_IMAGE_2D_MULTISAMPLE"/>
-            <enum name="GL_IMAGE_2D_MULTISAMPLE_ARRAY"/>
-            <enum name="GL_INT_IMAGE_1D"/>
-            <enum name="GL_INT_IMAGE_2D"/>
-            <enum name="GL_INT_IMAGE_3D"/>
-            <enum name="GL_INT_IMAGE_2D_RECT"/>
-            <enum name="GL_INT_IMAGE_CUBE"/>
-            <enum name="GL_INT_IMAGE_BUFFER"/>
-            <enum name="GL_INT_IMAGE_1D_ARRAY"/>
-            <enum name="GL_INT_IMAGE_2D_ARRAY"/>
-            <enum name="GL_INT_IMAGE_CUBE_MAP_ARRAY"/>
-            <enum name="GL_INT_IMAGE_2D_MULTISAMPLE"/>
-            <enum name="GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY"/>
-            <enum name="GL_UNSIGNED_INT_IMAGE_1D"/>
-            <enum name="GL_UNSIGNED_INT_IMAGE_2D"/>
-            <enum name="GL_UNSIGNED_INT_IMAGE_3D"/>
-            <enum name="GL_UNSIGNED_INT_IMAGE_2D_RECT"/>
-            <enum name="GL_UNSIGNED_INT_IMAGE_CUBE"/>
-            <enum name="GL_UNSIGNED_INT_IMAGE_BUFFER"/>
-            <enum name="GL_UNSIGNED_INT_IMAGE_1D_ARRAY"/>
-            <enum name="GL_UNSIGNED_INT_IMAGE_2D_ARRAY"/>
-            <enum name="GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY"/>
-            <enum name="GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE"/>
-            <enum name="GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY"/>
-            <enum name="GL_UNSIGNED_INT_ATOMIC_COUNTER"/>
-        </group>
-
-        <group name="TransformFeedbackBufferMode" comment="See glTransformFeedbackVaryings()">
-            <enum name="GL_INTERLEAVED_ATTRIBS"/>
-            <enum name="GL_SEPARATE_ATTRIBS"/>
-        </group>
-
-        <group name="VertexAttribIType">
-            <enum name="GL_BYTE"/>
-            <enum name="GL_UNSIGNED_BYTE"/>
-            <enum name="GL_SHORT"/>
-            <enum name="GL_UNSIGNED_SHORT"/>
-            <enum name="GL_INT"/>
-            <enum name="GL_UNSIGNED_INT"/>
-        </group>
-
-        <group name="VertexAttribLType">
-            <enum name="GL_DOUBLE"/>
-        </group>
-
-        <group name="ProgramResourceProperty">
-            <enum name="GL_ACTIVE_VARIABLES"/>
-            <enum name="GL_BUFFER_BINDING"/>
-            <enum name="GL_NUM_ACTIVE_VARIABLES"/>
-            <enum name="GL_ARRAY_SIZE"/>
-            <enum name="GL_ARRAY_STRIDE"/>
-            <enum name="GL_BLOCK_INDEX"/>
-            <enum name="GL_IS_ROW_MAJOR"/>
-            <enum name="GL_MATRIX_STRIDE"/>
-            <enum name="GL_ATOMIC_COUNTER_BUFFER_INDEX"/>
-            <enum name="GL_BUFFER_DATA_SIZE"/>
-            <enum name="GL_NUM_COMPATIBLE_SUBROUTINES"/>
-            <enum name="GL_COMPATIBLE_SUBROUTINES"/>
-            <enum name="GL_IS_PER_PATCH"/>
-            <enum name="GL_LOCATION"/>
-            <enum name="GL_UNIFORM"/>
-            <enum name="GL_LOCATION_COMPONENT"/>
-            <enum name="GL_LOCATION_INDEX"/>
-            <enum name="GL_NAME_LENGTH"/>
-            <enum name="GL_OFFSET"/>
-            <enum name="GL_REFERENCED_BY_VERTEX_SHADER"/>
-            <enum name="GL_REFERENCED_BY_TESS_CONTROL_SHADER"/>
-            <enum name="GL_REFERENCED_BY_TESS_EVALUATION_SHADER"/>
-            <enum name="GL_REFERENCED_BY_GEOMETRY_SHADER"/>
-            <enum name="GL_REFERENCED_BY_FRAGMENT_SHADER"/>
-            <enum name="GL_REFERENCED_BY_COMPUTE_SHADER"/>
-            <enum name="GL_TRANSFORM_FEEDBACK_BUFFER_INDEX"/>
-            <enum name="GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE"/>
-            <enum name="GL_TOP_LEVEL_ARRAY_SIZE"/>
-            <enum name="GL_TOP_LEVEL_ARRAY_STRIDE"/>
-            <enum name="GL_TYPE"/>
-        </group>
-
-        <group name="TextureCompareMode">
-            <enum name="GL_NONE"/>
-            <enum name="GL_COMPARE_REF_TO_TEXTURE"/>
-            <enum name="GL_COMPARE_R_TO_TEXTURE"/>
-        </group>
-
-        <group name="TextureSwizzle">
-            <enum name="GL_RED"/>
-            <enum name="GL_GREEN"/>
-            <enum name="GL_BLUE"/>
-            <enum name="GL_ALPHA"/>
-            <enum name="GL_ZERO"/>
-            <enum name="GL_ONE"/>
-        </group>
-
-    </groups>
+    <kinds>
+        <kind name="Color" desc="This parameter represents part of or a complete color."/>
+        <kind name="Coord" desc="This parameter represents a coordinate."/>
+        <kind name="WinCoord" desc="This parameter represents a window coordinate."/>
+        <kind name="Clamped[0; 1]" desc="This parameter will get clamped to the 0 to 1 range."/>
+        <kind name="Clamped[-1; 1]" desc="This parameter will get clamped to the -1 to 1 range."/>
+        <kind name="StencilValue" desc="This parameter represents an unmasked stencil value."/>
+        <kind name="StencilMask" desc="This parameter represents mask to apply to stencil values."/>
+        <kind name="CompressedTextureARB" desc="This parameter contains compressed texture data."/>
+        <kind name="BufferOffset" desc="This parameter represents an offset into a buffer."/>
+        <kind name="BufferSize" desc="This parameter represents the size of a buffer."/>
+        <kind name="String" desc="This parameter represents a string of characters. A GLubyte parameter should be treated as GLchar."/>
+        <kind name="DrawBufferIndex" desc="This parameter represents an index to a draw buffer in the range 0 to the value of GL_MAX_COLOR_ATTACHMENTS"/>
+        
+        <kind name="Matrix2x2" desc="This parameter represents a 2x2 matrix."/>
+        <kind name="Matrix2x3" desc="This parameter represents a 2x3 matrix."/>
+        <kind name="Matrix2x4" desc="This parameter represents a 2x4 matrix."/>
+
+        <kind name="Matrix3x2" desc="This parameter represents a 3x2 matrix."/>
+        <kind name="Matrix3x3" desc="This parameter represents a 3x3 matrix."/>
+        <kind name="Matrix3x4" desc="This parameter represents a 3x4 matrix."/>
+
+        <kind name="Matrix4x2" desc="This parameter represents a 4x2 matrix."/>
+        <kind name="Matrix4x3" desc="This parameter represents a 4x3 matrix."/>
+        <kind name="Matrix4x4" desc="This parameter represents a 4x4 matrix."/>
+
+        <kind name="Vector1" desc="This parameter represents a vector with 1 components"/>
+        <kind name="Vector2" desc="This parameter represents a vector with 2 components"/>
+        <kind name="Vector3" desc="This parameter represents a vector with 3 components"/>
+        <kind name="Vector4" desc="This parameter represents a vector with 4 components"/>
+        
+        <!-- Applicable to legacy OpenGL functions -->
+        <kind name="ColorIndexValue" desc="This parameter represents a color in the color index."/>
+        <kind name="ColorIndexMask" desc="This parameter represents a color index mask. A color index value will be masked using this parameter."/>
+        <kind name="SelectName" desc="This parameter represents a name on the name stack used in the GL_SELECT render mode."/>
+        <kind name="FeedbackElement" desc="This parameter represents a marker to be placed in the feedback buffer."/>
+    </kinds>
 
     <!-- SECTION: GL enumerant (token) definitions. -->
 
@@ -4580,309 +110,309 @@ typedef unsigned int GLhandleARB;
          sometimes reused for other purposes -->
 
     <enums namespace="GL" group="AttribMask" type="bitmask">
-        <enum value="0x00000001" name="GL_CURRENT_BIT"/>
-        <enum value="0x00000002" name="GL_POINT_BIT"/>
-        <enum value="0x00000004" name="GL_LINE_BIT"/>
-        <enum value="0x00000008" name="GL_POLYGON_BIT"/>
-        <enum value="0x00000010" name="GL_POLYGON_STIPPLE_BIT"/>
-        <enum value="0x00000020" name="GL_PIXEL_MODE_BIT"/>
-        <enum value="0x00000040" name="GL_LIGHTING_BIT"/>
-        <enum value="0x00000080" name="GL_FOG_BIT"/>
-        <enum value="0x00000100" name="GL_DEPTH_BUFFER_BIT"/>
-        <enum value="0x00000200" name="GL_ACCUM_BUFFER_BIT"/>
-        <enum value="0x00000400" name="GL_STENCIL_BUFFER_BIT"/>
-        <enum value="0x00000800" name="GL_VIEWPORT_BIT"/>
-        <enum value="0x00001000" name="GL_TRANSFORM_BIT"/>
-        <enum value="0x00002000" name="GL_ENABLE_BIT"/>
-        <enum value="0x00004000" name="GL_COLOR_BUFFER_BIT"/>
-        <enum value="0x00008000" name="GL_HINT_BIT"/>
-        <enum value="0x00010000" name="GL_EVAL_BIT"/>
-        <enum value="0x00020000" name="GL_LIST_BIT"/>
-        <enum value="0x00040000" name="GL_TEXTURE_BIT"/>
-        <enum value="0x00080000" name="GL_SCISSOR_BIT"/>
-        <enum value="0x20000000" name="GL_MULTISAMPLE_BIT"/>
-        <enum value="0x20000000" name="GL_MULTISAMPLE_BIT_ARB"/>
-        <enum value="0x20000000" name="GL_MULTISAMPLE_BIT_EXT"/>
-        <enum value="0x20000000" name="GL_MULTISAMPLE_BIT_3DFX"/>
-        <enum value="0xFFFFFFFF" name="GL_ALL_ATTRIB_BITS" comment="Guaranteed to mark all attribute groups at once"/>
+        <enum value="0x00000001" name="GL_CURRENT_BIT" group="AttribMask"/>
+        <enum value="0x00000002" name="GL_POINT_BIT" group="AttribMask"/>
+        <enum value="0x00000004" name="GL_LINE_BIT" group="AttribMask"/>
+        <enum value="0x00000008" name="GL_POLYGON_BIT" group="AttribMask"/>
+        <enum value="0x00000010" name="GL_POLYGON_STIPPLE_BIT" group="AttribMask"/>
+        <enum value="0x00000020" name="GL_PIXEL_MODE_BIT" group="AttribMask"/>
+        <enum value="0x00000040" name="GL_LIGHTING_BIT" group="AttribMask"/>
+        <enum value="0x00000080" name="GL_FOG_BIT" group="AttribMask"/>
+        <enum value="0x00000100" name="GL_DEPTH_BUFFER_BIT" group="ClearBufferMask,AttribMask"/>
+        <enum value="0x00000200" name="GL_ACCUM_BUFFER_BIT" group="ClearBufferMask,AttribMask"/>
+        <enum value="0x00000400" name="GL_STENCIL_BUFFER_BIT" group="ClearBufferMask,AttribMask"/>
+        <enum value="0x00000800" name="GL_VIEWPORT_BIT" group="AttribMask"/>
+        <enum value="0x00001000" name="GL_TRANSFORM_BIT" group="AttribMask"/>
+        <enum value="0x00002000" name="GL_ENABLE_BIT" group="AttribMask"/>
+        <enum value="0x00004000" name="GL_COLOR_BUFFER_BIT" group="ClearBufferMask,AttribMask"/>
+        <enum value="0x00008000" name="GL_HINT_BIT" group="AttribMask"/>
+        <enum value="0x00010000" name="GL_EVAL_BIT" group="AttribMask"/>
+        <enum value="0x00020000" name="GL_LIST_BIT" group="AttribMask"/>
+        <enum value="0x00040000" name="GL_TEXTURE_BIT" group="AttribMask"/>
+        <enum value="0x00080000" name="GL_SCISSOR_BIT" group="AttribMask"/>
+        <enum value="0x20000000" name="GL_MULTISAMPLE_BIT" group="AttribMask"/>
+        <enum value="0x20000000" name="GL_MULTISAMPLE_BIT_ARB" group="AttribMask"/>
+        <enum value="0x20000000" name="GL_MULTISAMPLE_BIT_EXT" group="AttribMask"/>
+        <enum value="0x20000000" name="GL_MULTISAMPLE_BIT_3DFX" group="AttribMask"/>
+        <enum value="0xFFFFFFFF" name="GL_ALL_ATTRIB_BITS" comment="Guaranteed to mark all attribute groups at once" group="AttribMask"/>
     </enums>
 
     <enums namespace="GL" group="BufferStorageMask" type="bitmask" comment="GL_MAP_{COHERENT,PERSISTENT,READ,WRITE}_{BIT,BIT_EXT} also lie in this namespace">
-        <enum value="0x0100" name="GL_DYNAMIC_STORAGE_BIT"/>
-        <enum value="0x0100" name="GL_DYNAMIC_STORAGE_BIT_EXT"/>
-        <enum value="0x0200" name="GL_CLIENT_STORAGE_BIT"/>
-        <enum value="0x0200" name="GL_CLIENT_STORAGE_BIT_EXT"/>
-        <enum value="0x0400" name="GL_SPARSE_STORAGE_BIT_ARB"/>
-        <enum value="0x0800" name="GL_LGPU_SEPARATE_STORAGE_BIT_NVX"/>
-        <enum value="0x0800" name="GL_PER_GPU_STORAGE_BIT_NV"/>
+        <enum value="0x0100" name="GL_DYNAMIC_STORAGE_BIT" group="BufferStorageMask"/>
+        <enum value="0x0100" name="GL_DYNAMIC_STORAGE_BIT_EXT" group="BufferStorageMask"/>
+        <enum value="0x0200" name="GL_CLIENT_STORAGE_BIT" group="BufferStorageMask"/>
+        <enum value="0x0200" name="GL_CLIENT_STORAGE_BIT_EXT" group="BufferStorageMask"/>
+        <enum value="0x0400" name="GL_SPARSE_STORAGE_BIT_ARB" group="BufferStorageMask"/>
+        <enum value="0x0800" name="GL_LGPU_SEPARATE_STORAGE_BIT_NVX" group="BufferStorageMask"/>
+        <enum value="0x0800" name="GL_PER_GPU_STORAGE_BIT_NV" group="BufferStorageMask"/>
             <unused start="0x1000" end="0x1000" comment="Reserved for NVIDIA"/>
-        <enum value="0x2000" name="GL_EXTERNAL_STORAGE_BIT_NVX"/>
+        <enum value="0x2000" name="GL_EXTERNAL_STORAGE_BIT_NVX" group="BufferStorageMask"/>
             <!-- Also used: 0x000000ff for bits reused from MapBufferAccessMask below -->
     </enums>
 
     <enums namespace="GL" group="ClearBufferMask" type="bitmask" comment="GL_{DEPTH,ACCUM,STENCIL,COLOR}_BUFFER_BIT also lie in this namespace">
-        <enum value="0x00008000" name="GL_COVERAGE_BUFFER_BIT_NV" comment="Collides with AttribMask bit GL_HINT_BIT. OK since this token is for OpenGL ES 2, which doesn't have attribute groups."/>
+        <enum value="0x00008000" name="GL_COVERAGE_BUFFER_BIT_NV" comment="Collides with AttribMask bit GL_HINT_BIT. OK since this token is for OpenGL ES 2, which doesn't have attribute groups." group="ClearBufferMask"/>
             <!-- Also used: 0x00004700 for bits reused from AttribMask above -->
     </enums>
 
     <enums namespace="GL" group="ClientAttribMask" type="bitmask">
-        <enum value="0x00000001" name="GL_CLIENT_PIXEL_STORE_BIT"/>
-        <enum value="0x00000002" name="GL_CLIENT_VERTEX_ARRAY_BIT"/>
-        <enum value="0xFFFFFFFF" name="GL_CLIENT_ALL_ATTRIB_BITS"/>
+        <enum value="0x00000001" name="GL_CLIENT_PIXEL_STORE_BIT" group="ClientAttribMask"/>
+        <enum value="0x00000002" name="GL_CLIENT_VERTEX_ARRAY_BIT" group="ClientAttribMask"/>
+        <enum value="0xFFFFFFFF" name="GL_CLIENT_ALL_ATTRIB_BITS" group="ClientAttribMask"/>
     </enums>
 
     <enums namespace="GL" group="ContextFlagMask" type="bitmask" comment="Should be shared with WGL/GLX, but aren't since the FORWARD_COMPATIBLE and DEBUG values are swapped vs. WGL/GLX.">
-        <enum value="0x00000001" name="GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT"/>
-        <enum value="0x00000002" name="GL_CONTEXT_FLAG_DEBUG_BIT"/>
-        <enum value="0x00000002" name="GL_CONTEXT_FLAG_DEBUG_BIT_KHR"/>
-        <enum value="0x00000004" name="GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT"/>
-        <enum value="0x00000004" name="GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB"/>
-        <enum value="0x00000008" name="GL_CONTEXT_FLAG_NO_ERROR_BIT"/>
-        <enum value="0x00000008" name="GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR" alias="GL_CONTEXT_FLAG_NO_ERROR_BIT"/>
-        <enum value="0x00000010" name="GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT"/>
+        <enum value="0x00000001" name="GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT" group="ContextFlagMask"/>
+        <enum value="0x00000002" name="GL_CONTEXT_FLAG_DEBUG_BIT" group="ContextFlagMask"/>
+        <enum value="0x00000002" name="GL_CONTEXT_FLAG_DEBUG_BIT_KHR" group="ContextFlagMask"/>
+        <enum value="0x00000004" name="GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT" group="ContextFlagMask"/>
+        <enum value="0x00000004" name="GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB" group="ContextFlagMask"/>
+        <enum value="0x00000008" name="GL_CONTEXT_FLAG_NO_ERROR_BIT" group="ContextFlagMask"/>
+        <enum value="0x00000008" name="GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR" alias="GL_CONTEXT_FLAG_NO_ERROR_BIT" group="ContextFlagMask"/>
+        <enum value="0x00000010" name="GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT" group="ContextFlagMask"/>
     </enums>
 
     <enums namespace="GL" group="ContextProfileMask" type="bitmask">
-        <enum value="0x00000001" name="GL_CONTEXT_CORE_PROFILE_BIT"/>
-        <enum value="0x00000002" name="GL_CONTEXT_COMPATIBILITY_PROFILE_BIT"/>
+        <enum value="0x00000001" name="GL_CONTEXT_CORE_PROFILE_BIT" group="ContextProfileMask"/>
+        <enum value="0x00000002" name="GL_CONTEXT_COMPATIBILITY_PROFILE_BIT" group="ContextProfileMask"/>
     </enums>
 
     <enums namespace="GL" group="MapBufferAccessMask" type="bitmask">
-        <enum value="0x0001" name="GL_MAP_READ_BIT"/>
-        <enum value="0x0001" name="GL_MAP_READ_BIT_EXT"/>
-        <enum value="0x0002" name="GL_MAP_WRITE_BIT"/>
-        <enum value="0x0002" name="GL_MAP_WRITE_BIT_EXT"/>
-        <enum value="0x0004" name="GL_MAP_INVALIDATE_RANGE_BIT"/>
-        <enum value="0x0004" name="GL_MAP_INVALIDATE_RANGE_BIT_EXT"/>
-        <enum value="0x0008" name="GL_MAP_INVALIDATE_BUFFER_BIT"/>
-        <enum value="0x0008" name="GL_MAP_INVALIDATE_BUFFER_BIT_EXT"/>
-        <enum value="0x0010" name="GL_MAP_FLUSH_EXPLICIT_BIT"/>
-        <enum value="0x0010" name="GL_MAP_FLUSH_EXPLICIT_BIT_EXT"/>
-        <enum value="0x0020" name="GL_MAP_UNSYNCHRONIZED_BIT"/>
-        <enum value="0x0020" name="GL_MAP_UNSYNCHRONIZED_BIT_EXT"/>
-        <enum value="0x0040" name="GL_MAP_PERSISTENT_BIT"/>
-        <enum value="0x0040" name="GL_MAP_PERSISTENT_BIT_EXT"/>
-        <enum value="0x0080" name="GL_MAP_COHERENT_BIT"/>
-        <enum value="0x0080" name="GL_MAP_COHERENT_BIT_EXT"/>
+        <enum value="0x0001" name="GL_MAP_READ_BIT" group="MapBufferAccessMask,BufferStorageMask"/>
+        <enum value="0x0001" name="GL_MAP_READ_BIT_EXT" group="MapBufferAccessMask,BufferStorageMask"/>
+        <enum value="0x0002" name="GL_MAP_WRITE_BIT" group="MapBufferAccessMask,BufferStorageMask"/>
+        <enum value="0x0002" name="GL_MAP_WRITE_BIT_EXT" group="MapBufferAccessMask,BufferStorageMask"/>
+        <enum value="0x0004" name="GL_MAP_INVALIDATE_RANGE_BIT" group="MapBufferAccessMask"/>
+        <enum value="0x0004" name="GL_MAP_INVALIDATE_RANGE_BIT_EXT" group="MapBufferAccessMask"/>
+        <enum value="0x0008" name="GL_MAP_INVALIDATE_BUFFER_BIT" group="MapBufferAccessMask"/>
+        <enum value="0x0008" name="GL_MAP_INVALIDATE_BUFFER_BIT_EXT" group="MapBufferAccessMask"/>
+        <enum value="0x0010" name="GL_MAP_FLUSH_EXPLICIT_BIT" group="MapBufferAccessMask"/>
+        <enum value="0x0010" name="GL_MAP_FLUSH_EXPLICIT_BIT_EXT" group="MapBufferAccessMask"/>
+        <enum value="0x0020" name="GL_MAP_UNSYNCHRONIZED_BIT" group="MapBufferAccessMask"/>
+        <enum value="0x0020" name="GL_MAP_UNSYNCHRONIZED_BIT_EXT" group="MapBufferAccessMask"/>
+        <enum value="0x0040" name="GL_MAP_PERSISTENT_BIT" group="MapBufferAccessMask,BufferStorageMask"/>
+        <enum value="0x0040" name="GL_MAP_PERSISTENT_BIT_EXT" group="MapBufferAccessMask,BufferStorageMask"/>
+        <enum value="0x0080" name="GL_MAP_COHERENT_BIT" group="MapBufferAccessMask,BufferStorageMask"/>
+        <enum value="0x0080" name="GL_MAP_COHERENT_BIT_EXT" group="MapBufferAccessMask,BufferStorageMask"/>
     </enums>
 
     <enums namespace="GL" group="MemoryBarrierMask" type="bitmask">
-        <enum value="0x00000001" name="GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT"/>
-        <enum value="0x00000001" name="GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT"/>
-        <enum value="0x00000002" name="GL_ELEMENT_ARRAY_BARRIER_BIT"/>
-        <enum value="0x00000002" name="GL_ELEMENT_ARRAY_BARRIER_BIT_EXT"/>
-        <enum value="0x00000004" name="GL_UNIFORM_BARRIER_BIT"/>
-        <enum value="0x00000004" name="GL_UNIFORM_BARRIER_BIT_EXT"/>
-        <enum value="0x00000008" name="GL_TEXTURE_FETCH_BARRIER_BIT"/>
-        <enum value="0x00000008" name="GL_TEXTURE_FETCH_BARRIER_BIT_EXT"/>
-        <enum value="0x00000010" name="GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV"/>
-        <enum value="0x00000020" name="GL_SHADER_IMAGE_ACCESS_BARRIER_BIT"/>
-        <enum value="0x00000020" name="GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT"/>
-        <enum value="0x00000040" name="GL_COMMAND_BARRIER_BIT"/>
-        <enum value="0x00000040" name="GL_COMMAND_BARRIER_BIT_EXT"/>
-        <enum value="0x00000080" name="GL_PIXEL_BUFFER_BARRIER_BIT"/>
-        <enum value="0x00000080" name="GL_PIXEL_BUFFER_BARRIER_BIT_EXT"/>
-        <enum value="0x00000100" name="GL_TEXTURE_UPDATE_BARRIER_BIT"/>
-        <enum value="0x00000100" name="GL_TEXTURE_UPDATE_BARRIER_BIT_EXT"/>
-        <enum value="0x00000200" name="GL_BUFFER_UPDATE_BARRIER_BIT"/>
-        <enum value="0x00000200" name="GL_BUFFER_UPDATE_BARRIER_BIT_EXT"/>
-        <enum value="0x00000400" name="GL_FRAMEBUFFER_BARRIER_BIT"/>
-        <enum value="0x00000400" name="GL_FRAMEBUFFER_BARRIER_BIT_EXT"/>
-        <enum value="0x00000800" name="GL_TRANSFORM_FEEDBACK_BARRIER_BIT"/>
-        <enum value="0x00000800" name="GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT"/>
-        <enum value="0x00001000" name="GL_ATOMIC_COUNTER_BARRIER_BIT"/>
-        <enum value="0x00001000" name="GL_ATOMIC_COUNTER_BARRIER_BIT_EXT"/>
-        <enum value="0x00002000" name="GL_SHADER_STORAGE_BARRIER_BIT"/>
-        <enum value="0x00004000" name="GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT"/>
-        <enum value="0x00004000" name="GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT"/>
-        <enum value="0x00008000" name="GL_QUERY_BUFFER_BARRIER_BIT"/>
-        <enum value="0xFFFFFFFF" name="GL_ALL_BARRIER_BITS"/>
-        <enum value="0xFFFFFFFF" name="GL_ALL_BARRIER_BITS_EXT"/>
+        <enum value="0x00000001" name="GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT" group="MemoryBarrierMask"/>
+        <enum value="0x00000001" name="GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT" group="MemoryBarrierMask"/>
+        <enum value="0x00000002" name="GL_ELEMENT_ARRAY_BARRIER_BIT" group="MemoryBarrierMask"/>
+        <enum value="0x00000002" name="GL_ELEMENT_ARRAY_BARRIER_BIT_EXT" group="MemoryBarrierMask"/>
+        <enum value="0x00000004" name="GL_UNIFORM_BARRIER_BIT" group="MemoryBarrierMask"/>
+        <enum value="0x00000004" name="GL_UNIFORM_BARRIER_BIT_EXT" group="MemoryBarrierMask"/>
+        <enum value="0x00000008" name="GL_TEXTURE_FETCH_BARRIER_BIT" group="MemoryBarrierMask"/>
+        <enum value="0x00000008" name="GL_TEXTURE_FETCH_BARRIER_BIT_EXT" group="MemoryBarrierMask"/>
+        <enum value="0x00000010" name="GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV" group="MemoryBarrierMask"/>
+        <enum value="0x00000020" name="GL_SHADER_IMAGE_ACCESS_BARRIER_BIT" group="MemoryBarrierMask"/>
+        <enum value="0x00000020" name="GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT" group="MemoryBarrierMask"/>
+        <enum value="0x00000040" name="GL_COMMAND_BARRIER_BIT" group="MemoryBarrierMask"/>
+        <enum value="0x00000040" name="GL_COMMAND_BARRIER_BIT_EXT" group="MemoryBarrierMask"/>
+        <enum value="0x00000080" name="GL_PIXEL_BUFFER_BARRIER_BIT" group="MemoryBarrierMask"/>
+        <enum value="0x00000080" name="GL_PIXEL_BUFFER_BARRIER_BIT_EXT" group="MemoryBarrierMask"/>
+        <enum value="0x00000100" name="GL_TEXTURE_UPDATE_BARRIER_BIT" group="MemoryBarrierMask"/>
+        <enum value="0x00000100" name="GL_TEXTURE_UPDATE_BARRIER_BIT_EXT" group="MemoryBarrierMask"/>
+        <enum value="0x00000200" name="GL_BUFFER_UPDATE_BARRIER_BIT" group="MemoryBarrierMask"/>
+        <enum value="0x00000200" name="GL_BUFFER_UPDATE_BARRIER_BIT_EXT" group="MemoryBarrierMask"/>
+        <enum value="0x00000400" name="GL_FRAMEBUFFER_BARRIER_BIT" group="MemoryBarrierMask"/>
+        <enum value="0x00000400" name="GL_FRAMEBUFFER_BARRIER_BIT_EXT" group="MemoryBarrierMask"/>
+        <enum value="0x00000800" name="GL_TRANSFORM_FEEDBACK_BARRIER_BIT" group="MemoryBarrierMask"/>
+        <enum value="0x00000800" name="GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT" group="MemoryBarrierMask"/>
+        <enum value="0x00001000" name="GL_ATOMIC_COUNTER_BARRIER_BIT" group="MemoryBarrierMask"/>
+        <enum value="0x00001000" name="GL_ATOMIC_COUNTER_BARRIER_BIT_EXT" group="MemoryBarrierMask"/>
+        <enum value="0x00002000" name="GL_SHADER_STORAGE_BARRIER_BIT" group="MemoryBarrierMask"/>
+        <enum value="0x00004000" name="GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT" group="MemoryBarrierMask"/>
+        <enum value="0x00004000" name="GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT" group="MemoryBarrierMask"/>
+        <enum value="0x00008000" name="GL_QUERY_BUFFER_BARRIER_BIT" group="MemoryBarrierMask"/>
+        <enum value="0xFFFFFFFF" name="GL_ALL_BARRIER_BITS" group="MemoryBarrierMask"/>
+        <enum value="0xFFFFFFFF" name="GL_ALL_BARRIER_BITS_EXT" group="MemoryBarrierMask"/>
     </enums>
 
     <enums namespace="GL" group="OcclusionQueryEventMaskAMD" type="bitmask">
-        <enum value="0x00000001" name="GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD"/>
-        <enum value="0x00000002" name="GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD"/>
-        <enum value="0x00000004" name="GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD"/>
-        <enum value="0x00000008" name="GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD"/>
-        <enum value="0xFFFFFFFF" name="GL_QUERY_ALL_EVENT_BITS_AMD"/>
+        <enum value="0x00000001" name="GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD" group="OcclusionQueryEventMaskAMD"/>
+        <enum value="0x00000002" name="GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD" group="OcclusionQueryEventMaskAMD"/>
+        <enum value="0x00000004" name="GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD" group="OcclusionQueryEventMaskAMD"/>
+        <enum value="0x00000008" name="GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD" group="OcclusionQueryEventMaskAMD"/>
+        <enum value="0xFFFFFFFF" name="GL_QUERY_ALL_EVENT_BITS_AMD" group="OcclusionQueryEventMaskAMD"/>
     </enums>
 
     <enums namespace="GL" group="SyncObjectMask" type="bitmask">
-        <enum value="0x00000001" name="GL_SYNC_FLUSH_COMMANDS_BIT"/>
-        <enum value="0x00000001" name="GL_SYNC_FLUSH_COMMANDS_BIT_APPLE"/>
+        <enum value="0x00000001" name="GL_SYNC_FLUSH_COMMANDS_BIT" group="SyncObjectMask"/>
+        <enum value="0x00000001" name="GL_SYNC_FLUSH_COMMANDS_BIT_APPLE" group="SyncObjectMask"/>
     </enums>
 
     <enums namespace="GL" group="UseProgramStageMask" type="bitmask">
-        <enum value="0x00000001" name="GL_VERTEX_SHADER_BIT"/>
-        <enum value="0x00000001" name="GL_VERTEX_SHADER_BIT_EXT"/>
-        <enum value="0x00000002" name="GL_FRAGMENT_SHADER_BIT"/>
-        <enum value="0x00000002" name="GL_FRAGMENT_SHADER_BIT_EXT"/>
-        <enum value="0x00000004" name="GL_GEOMETRY_SHADER_BIT"/>
-        <enum value="0x00000004" name="GL_GEOMETRY_SHADER_BIT_EXT"/>
-        <enum value="0x00000004" name="GL_GEOMETRY_SHADER_BIT_OES"/>
-        <enum value="0x00000008" name="GL_TESS_CONTROL_SHADER_BIT"/>
-        <enum value="0x00000008" name="GL_TESS_CONTROL_SHADER_BIT_EXT"/>
-        <enum value="0x00000008" name="GL_TESS_CONTROL_SHADER_BIT_OES"/>
-        <enum value="0x00000010" name="GL_TESS_EVALUATION_SHADER_BIT"/>
-        <enum value="0x00000010" name="GL_TESS_EVALUATION_SHADER_BIT_EXT"/>
-        <enum value="0x00000010" name="GL_TESS_EVALUATION_SHADER_BIT_OES"/>
-        <enum value="0x00000020" name="GL_COMPUTE_SHADER_BIT"/>
-        <enum value="0x00000040" name="GL_MESH_SHADER_BIT_NV"/>
-        <enum value="0x00000080" name="GL_TASK_SHADER_BIT_NV"/>
-        <enum value="0xFFFFFFFF" name="GL_ALL_SHADER_BITS"/>
-        <enum value="0xFFFFFFFF" name="GL_ALL_SHADER_BITS_EXT"/>
+        <enum value="0x00000001" name="GL_VERTEX_SHADER_BIT" group="UseProgramStageMask"/>
+        <enum value="0x00000001" name="GL_VERTEX_SHADER_BIT_EXT" group="UseProgramStageMask"/>
+        <enum value="0x00000002" name="GL_FRAGMENT_SHADER_BIT" group="UseProgramStageMask"/>
+        <enum value="0x00000002" name="GL_FRAGMENT_SHADER_BIT_EXT" group="UseProgramStageMask"/>
+        <enum value="0x00000004" name="GL_GEOMETRY_SHADER_BIT" group="UseProgramStageMask"/>
+        <enum value="0x00000004" name="GL_GEOMETRY_SHADER_BIT_EXT" group="UseProgramStageMask"/>
+        <enum value="0x00000004" name="GL_GEOMETRY_SHADER_BIT_OES" group="UseProgramStageMask"/>
+        <enum value="0x00000008" name="GL_TESS_CONTROL_SHADER_BIT" group="UseProgramStageMask"/>
+        <enum value="0x00000008" name="GL_TESS_CONTROL_SHADER_BIT_EXT" group="UseProgramStageMask"/>
+        <enum value="0x00000008" name="GL_TESS_CONTROL_SHADER_BIT_OES" group="UseProgramStageMask"/>
+        <enum value="0x00000010" name="GL_TESS_EVALUATION_SHADER_BIT" group="UseProgramStageMask"/>
+        <enum value="0x00000010" name="GL_TESS_EVALUATION_SHADER_BIT_EXT" group="UseProgramStageMask"/>
+        <enum value="0x00000010" name="GL_TESS_EVALUATION_SHADER_BIT_OES" group="UseProgramStageMask"/>
+        <enum value="0x00000020" name="GL_COMPUTE_SHADER_BIT" group="UseProgramStageMask"/>
+        <enum value="0x00000040" name="GL_MESH_SHADER_BIT_NV" group="UseProgramStageMask"/>
+        <enum value="0x00000080" name="GL_TASK_SHADER_BIT_NV" group="UseProgramStageMask"/>
+        <enum value="0xFFFFFFFF" name="GL_ALL_SHADER_BITS" group="UseProgramStageMask"/>
+        <enum value="0xFFFFFFFF" name="GL_ALL_SHADER_BITS_EXT" group="UseProgramStageMask"/>
     </enums>
 
     <enums namespace="GL" group="SubgroupSupportedFeatures" type="bitmask">
-        <enum value="0x00000001" name="GL_SUBGROUP_FEATURE_BASIC_BIT_KHR"/>
-        <enum value="0x00000002" name="GL_SUBGROUP_FEATURE_VOTE_BIT_KHR"/>
-        <enum value="0x00000004" name="GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR"/>
-        <enum value="0x00000008" name="GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR"/>
-        <enum value="0x00000010" name="GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR"/>
-        <enum value="0x00000020" name="GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR"/>
-        <enum value="0x00000040" name="GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR"/>
-        <enum value="0x00000080" name="GL_SUBGROUP_FEATURE_QUAD_BIT_KHR"/>
-        <enum value="0x00000100" name="GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV"/>
+        <enum value="0x00000001" name="GL_SUBGROUP_FEATURE_BASIC_BIT_KHR" group="SubgroupSupportedFeatures"/>
+        <enum value="0x00000002" name="GL_SUBGROUP_FEATURE_VOTE_BIT_KHR" group="SubgroupSupportedFeatures"/>
+        <enum value="0x00000004" name="GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR" group="SubgroupSupportedFeatures"/>
+        <enum value="0x00000008" name="GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR" group="SubgroupSupportedFeatures"/>
+        <enum value="0x00000010" name="GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR" group="SubgroupSupportedFeatures"/>
+        <enum value="0x00000020" name="GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR" group="SubgroupSupportedFeatures"/>
+        <enum value="0x00000040" name="GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR" group="SubgroupSupportedFeatures"/>
+        <enum value="0x00000080" name="GL_SUBGROUP_FEATURE_QUAD_BIT_KHR" group="SubgroupSupportedFeatures"/>
+        <enum value="0x00000100" name="GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV" group="SubgroupSupportedFeatures"/>
     </enums>
 
     <!-- Bitmasks defined by vendor extensions -->
 
     <enums namespace="GL" group="TextureStorageMaskAMD" type="bitmask">
-        <enum value="0x00000001" name="GL_TEXTURE_STORAGE_SPARSE_BIT_AMD"/>
+        <enum value="0x00000001" name="GL_TEXTURE_STORAGE_SPARSE_BIT_AMD" group="TextureStorageMaskAMD"/>
     </enums>
 
     <enums namespace="GL" group="FragmentShaderDestMaskATI" type="bitmask">
-        <enum value="0x00000001" name="GL_RED_BIT_ATI"/>
-        <enum value="0x00000002" name="GL_GREEN_BIT_ATI"/>
-        <enum value="0x00000004" name="GL_BLUE_BIT_ATI"/>
+        <enum value="0x00000001" name="GL_RED_BIT_ATI" group="FragmentShaderDestMaskATI"/>
+        <enum value="0x00000002" name="GL_GREEN_BIT_ATI" group="FragmentShaderDestMaskATI"/>
+        <enum value="0x00000004" name="GL_BLUE_BIT_ATI" group="FragmentShaderDestMaskATI"/>
     </enums>
 
     <enums namespace="GL" group="FragmentShaderDestModMaskATI" type="bitmask">
-        <enum value="0x00000001" name="GL_2X_BIT_ATI"/>
-        <enum value="0x00000002" name="GL_4X_BIT_ATI"/>
-        <enum value="0x00000004" name="GL_8X_BIT_ATI"/>
-        <enum value="0x00000008" name="GL_HALF_BIT_ATI"/>
-        <enum value="0x00000010" name="GL_QUARTER_BIT_ATI"/>
-        <enum value="0x00000020" name="GL_EIGHTH_BIT_ATI"/>
-        <enum value="0x00000040" name="GL_SATURATE_BIT_ATI"/>
+        <enum value="0x00000001" name="GL_2X_BIT_ATI" group="FragmentShaderDestModMaskATI,FragmentShaderColorModMaskATI"/>
+        <enum value="0x00000002" name="GL_4X_BIT_ATI" group="FragmentShaderDestModMaskATI"/>
+        <enum value="0x00000004" name="GL_8X_BIT_ATI" group="FragmentShaderDestModMaskATI"/>
+        <enum value="0x00000008" name="GL_HALF_BIT_ATI" group="FragmentShaderDestModMaskATI"/>
+        <enum value="0x00000010" name="GL_QUARTER_BIT_ATI" group="FragmentShaderDestModMaskATI"/>
+        <enum value="0x00000020" name="GL_EIGHTH_BIT_ATI" group="FragmentShaderDestModMaskATI"/>
+        <enum value="0x00000040" name="GL_SATURATE_BIT_ATI" group="FragmentShaderDestModMaskATI"/>
     </enums>
 
     <enums namespace="GL" group="FragmentShaderColorModMaskATI" type="bitmask">
             <!-- Also used: 0x00000001 for GL_2X_BIT_ATI reused from FragmentShaderDestModMaskAT above -->
-        <enum value="0x00000002" name="GL_COMP_BIT_ATI"/>
-        <enum value="0x00000004" name="GL_NEGATE_BIT_ATI"/>
-        <enum value="0x00000008" name="GL_BIAS_BIT_ATI"/>
+        <enum value="0x00000002" name="GL_COMP_BIT_ATI" group="FragmentShaderColorModMaskATI"/>
+        <enum value="0x00000004" name="GL_NEGATE_BIT_ATI" group="FragmentShaderColorModMaskATI"/>
+        <enum value="0x00000008" name="GL_BIAS_BIT_ATI" group="FragmentShaderColorModMaskATI"/>
     </enums>
 
     <enums namespace="GL" group="TraceMaskMESA" type="bitmask">
-        <enum value="0x0001" name="GL_TRACE_OPERATIONS_BIT_MESA"/>
-        <enum value="0x0002" name="GL_TRACE_PRIMITIVES_BIT_MESA"/>
-        <enum value="0x0004" name="GL_TRACE_ARRAYS_BIT_MESA"/>
-        <enum value="0x0008" name="GL_TRACE_TEXTURES_BIT_MESA"/>
-        <enum value="0x0010" name="GL_TRACE_PIXELS_BIT_MESA"/>
-        <enum value="0x0020" name="GL_TRACE_ERRORS_BIT_MESA"/>
-        <enum value="0xFFFF" name="GL_TRACE_ALL_BITS_MESA"/>
+        <enum value="0x0001" name="GL_TRACE_OPERATIONS_BIT_MESA" group="TraceMaskMESA"/>
+        <enum value="0x0002" name="GL_TRACE_PRIMITIVES_BIT_MESA" group="TraceMaskMESA"/>
+        <enum value="0x0004" name="GL_TRACE_ARRAYS_BIT_MESA" group="TraceMaskMESA"/>
+        <enum value="0x0008" name="GL_TRACE_TEXTURES_BIT_MESA" group="TraceMaskMESA"/>
+        <enum value="0x0010" name="GL_TRACE_PIXELS_BIT_MESA" group="TraceMaskMESA"/>
+        <enum value="0x0020" name="GL_TRACE_ERRORS_BIT_MESA" group="TraceMaskMESA"/>
+        <enum value="0xFFFF" name="GL_TRACE_ALL_BITS_MESA" group="TraceMaskMESA"/>
     </enums>
 
     <enums namespace="GL" group="PathRenderingMaskNV" type="bitmask">
-        <enum value="0x01" name="GL_BOLD_BIT_NV"/>
-        <enum value="0x02" name="GL_ITALIC_BIT_NV"/>
-        <enum value="0x01" name="GL_GLYPH_WIDTH_BIT_NV"/>
-        <enum value="0x02" name="GL_GLYPH_HEIGHT_BIT_NV"/>
-        <enum value="0x04" name="GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV"/>
-        <enum value="0x08" name="GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV"/>
-        <enum value="0x10" name="GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV"/>
-        <enum value="0x20" name="GL_GLYPH_VERTICAL_BEARING_X_BIT_NV"/>
-        <enum value="0x40" name="GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV"/>
-        <enum value="0x80" name="GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV"/>
-        <enum value="0x100" name="GL_GLYPH_HAS_KERNING_BIT_NV"/>
-        <enum value="0x00010000" name="GL_FONT_X_MIN_BOUNDS_BIT_NV"/>
-        <enum value="0x00020000" name="GL_FONT_Y_MIN_BOUNDS_BIT_NV"/>
-        <enum value="0x00040000" name="GL_FONT_X_MAX_BOUNDS_BIT_NV"/>
-        <enum value="0x00080000" name="GL_FONT_Y_MAX_BOUNDS_BIT_NV"/>
-        <enum value="0x00100000" name="GL_FONT_UNITS_PER_EM_BIT_NV"/>
-        <enum value="0x00200000" name="GL_FONT_ASCENDER_BIT_NV"/>
-        <enum value="0x00400000" name="GL_FONT_DESCENDER_BIT_NV"/>
-        <enum value="0x00800000" name="GL_FONT_HEIGHT_BIT_NV"/>
-        <enum value="0x01000000" name="GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV"/>
-        <enum value="0x02000000" name="GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV"/>
-        <enum value="0x04000000" name="GL_FONT_UNDERLINE_POSITION_BIT_NV"/>
-        <enum value="0x08000000" name="GL_FONT_UNDERLINE_THICKNESS_BIT_NV"/>
-        <enum value="0x10000000" name="GL_FONT_HAS_KERNING_BIT_NV"/>
-        <enum value="0x20000000" name="GL_FONT_NUM_GLYPH_INDICES_BIT_NV"/>
+        <enum value="0x01" name="GL_BOLD_BIT_NV" group="PathFontStyle"/>
+        <enum value="0x02" name="GL_ITALIC_BIT_NV" group="PathFontStyle"/>
+        <enum value="0x01" name="GL_GLYPH_WIDTH_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x02" name="GL_GLYPH_HEIGHT_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x04" name="GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x08" name="GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x10" name="GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x20" name="GL_GLYPH_VERTICAL_BEARING_X_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x40" name="GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x80" name="GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x100" name="GL_GLYPH_HAS_KERNING_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x00010000" name="GL_FONT_X_MIN_BOUNDS_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x00020000" name="GL_FONT_Y_MIN_BOUNDS_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x00040000" name="GL_FONT_X_MAX_BOUNDS_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x00080000" name="GL_FONT_Y_MAX_BOUNDS_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x00100000" name="GL_FONT_UNITS_PER_EM_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x00200000" name="GL_FONT_ASCENDER_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x00400000" name="GL_FONT_DESCENDER_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x00800000" name="GL_FONT_HEIGHT_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x01000000" name="GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x02000000" name="GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x04000000" name="GL_FONT_UNDERLINE_POSITION_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x08000000" name="GL_FONT_UNDERLINE_THICKNESS_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x10000000" name="GL_FONT_HAS_KERNING_BIT_NV" group="PathMetricMask"/>
+        <enum value="0x20000000" name="GL_FONT_NUM_GLYPH_INDICES_BIT_NV" group="PathMetricMask"/>
     </enums>
 
     <enums namespace="GL" group="PerformanceQueryCapsMaskINTEL" type="bitmask">
-        <enum value="0x00000000" name="GL_PERFQUERY_SINGLE_CONTEXT_INTEL"/>
-        <enum value="0x00000001" name="GL_PERFQUERY_GLOBAL_CONTEXT_INTEL"/>
+        <enum value="0x00000000" name="GL_PERFQUERY_SINGLE_CONTEXT_INTEL" group="PerformanceQueryCapsMaskINTEL"/>
+        <enum value="0x00000001" name="GL_PERFQUERY_GLOBAL_CONTEXT_INTEL" group="PerformanceQueryCapsMaskINTEL"/>
     </enums>
 
     <enums namespace="GL" group="VertexHintsMaskPGI" type="bitmask">
-        <enum value="0x00000004" name="GL_VERTEX23_BIT_PGI"/>
-        <enum value="0x00000008" name="GL_VERTEX4_BIT_PGI"/>
-        <enum value="0x00010000" name="GL_COLOR3_BIT_PGI"/>
-        <enum value="0x00020000" name="GL_COLOR4_BIT_PGI"/>
-        <enum value="0x00040000" name="GL_EDGEFLAG_BIT_PGI"/>
-        <enum value="0x00080000" name="GL_INDEX_BIT_PGI"/>
-        <enum value="0x00100000" name="GL_MAT_AMBIENT_BIT_PGI"/>
-        <enum value="0x00200000" name="GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI"/>
-        <enum value="0x00400000" name="GL_MAT_DIFFUSE_BIT_PGI"/>
-        <enum value="0x00800000" name="GL_MAT_EMISSION_BIT_PGI"/>
-        <enum value="0x01000000" name="GL_MAT_COLOR_INDEXES_BIT_PGI"/>
-        <enum value="0x02000000" name="GL_MAT_SHININESS_BIT_PGI"/>
-        <enum value="0x04000000" name="GL_MAT_SPECULAR_BIT_PGI"/>
-        <enum value="0x08000000" name="GL_NORMAL_BIT_PGI"/>
-        <enum value="0x10000000" name="GL_TEXCOORD1_BIT_PGI"/>
-        <enum value="0x20000000" name="GL_TEXCOORD2_BIT_PGI"/>
-        <enum value="0x40000000" name="GL_TEXCOORD3_BIT_PGI"/>
-        <enum value="0x80000000" name="GL_TEXCOORD4_BIT_PGI"/>
+        <enum value="0x00000004" name="GL_VERTEX23_BIT_PGI" group="VertexHintsMaskPGI"/>
+        <enum value="0x00000008" name="GL_VERTEX4_BIT_PGI" group="VertexHintsMaskPGI"/>
+        <enum value="0x00010000" name="GL_COLOR3_BIT_PGI" group="VertexHintsMaskPGI"/>
+        <enum value="0x00020000" name="GL_COLOR4_BIT_PGI" group="VertexHintsMaskPGI"/>
+        <enum value="0x00040000" name="GL_EDGEFLAG_BIT_PGI" group="VertexHintsMaskPGI"/>
+        <enum value="0x00080000" name="GL_INDEX_BIT_PGI" group="VertexHintsMaskPGI"/>
+        <enum value="0x00100000" name="GL_MAT_AMBIENT_BIT_PGI" group="VertexHintsMaskPGI"/>
+        <enum value="0x00200000" name="GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI" group="VertexHintsMaskPGI"/>
+        <enum value="0x00400000" name="GL_MAT_DIFFUSE_BIT_PGI" group="VertexHintsMaskPGI"/>
+        <enum value="0x00800000" name="GL_MAT_EMISSION_BIT_PGI" group="VertexHintsMaskPGI"/>
+        <enum value="0x01000000" name="GL_MAT_COLOR_INDEXES_BIT_PGI" group="VertexHintsMaskPGI"/>
+        <enum value="0x02000000" name="GL_MAT_SHININESS_BIT_PGI" group="VertexHintsMaskPGI"/>
+        <enum value="0x04000000" name="GL_MAT_SPECULAR_BIT_PGI" group="VertexHintsMaskPGI"/>
+        <enum value="0x08000000" name="GL_NORMAL_BIT_PGI" group="VertexHintsMaskPGI"/>
+        <enum value="0x10000000" name="GL_TEXCOORD1_BIT_PGI" group="VertexHintsMaskPGI"/>
+        <enum value="0x20000000" name="GL_TEXCOORD2_BIT_PGI" group="VertexHintsMaskPGI"/>
+        <enum value="0x40000000" name="GL_TEXCOORD3_BIT_PGI" group="VertexHintsMaskPGI"/>
+        <enum value="0x80000000" name="GL_TEXCOORD4_BIT_PGI" group="VertexHintsMaskPGI"/>
     </enums>
 
     <enums namespace="GL" group="BufferBitQCOM" type="bitmask">
-        <enum value="0x00000001" name="GL_COLOR_BUFFER_BIT0_QCOM"/>
-        <enum value="0x00000002" name="GL_COLOR_BUFFER_BIT1_QCOM"/>
-        <enum value="0x00000004" name="GL_COLOR_BUFFER_BIT2_QCOM"/>
-        <enum value="0x00000008" name="GL_COLOR_BUFFER_BIT3_QCOM"/>
-        <enum value="0x00000010" name="GL_COLOR_BUFFER_BIT4_QCOM"/>
-        <enum value="0x00000020" name="GL_COLOR_BUFFER_BIT5_QCOM"/>
-        <enum value="0x00000040" name="GL_COLOR_BUFFER_BIT6_QCOM"/>
-        <enum value="0x00000080" name="GL_COLOR_BUFFER_BIT7_QCOM"/>
-        <enum value="0x00000100" name="GL_DEPTH_BUFFER_BIT0_QCOM"/>
-        <enum value="0x00000200" name="GL_DEPTH_BUFFER_BIT1_QCOM"/>
-        <enum value="0x00000400" name="GL_DEPTH_BUFFER_BIT2_QCOM"/>
-        <enum value="0x00000800" name="GL_DEPTH_BUFFER_BIT3_QCOM"/>
-        <enum value="0x00001000" name="GL_DEPTH_BUFFER_BIT4_QCOM"/>
-        <enum value="0x00002000" name="GL_DEPTH_BUFFER_BIT5_QCOM"/>
-        <enum value="0x00004000" name="GL_DEPTH_BUFFER_BIT6_QCOM"/>
-        <enum value="0x00008000" name="GL_DEPTH_BUFFER_BIT7_QCOM"/>
-        <enum value="0x00010000" name="GL_STENCIL_BUFFER_BIT0_QCOM"/>
-        <enum value="0x00020000" name="GL_STENCIL_BUFFER_BIT1_QCOM"/>
-        <enum value="0x00040000" name="GL_STENCIL_BUFFER_BIT2_QCOM"/>
-        <enum value="0x00080000" name="GL_STENCIL_BUFFER_BIT3_QCOM"/>
-        <enum value="0x00100000" name="GL_STENCIL_BUFFER_BIT4_QCOM"/>
-        <enum value="0x00200000" name="GL_STENCIL_BUFFER_BIT5_QCOM"/>
-        <enum value="0x00400000" name="GL_STENCIL_BUFFER_BIT6_QCOM"/>
-        <enum value="0x00800000" name="GL_STENCIL_BUFFER_BIT7_QCOM"/>
-        <enum value="0x01000000" name="GL_MULTISAMPLE_BUFFER_BIT0_QCOM"/>
-        <enum value="0x02000000" name="GL_MULTISAMPLE_BUFFER_BIT1_QCOM"/>
-        <enum value="0x04000000" name="GL_MULTISAMPLE_BUFFER_BIT2_QCOM"/>
-        <enum value="0x08000000" name="GL_MULTISAMPLE_BUFFER_BIT3_QCOM"/>
-        <enum value="0x10000000" name="GL_MULTISAMPLE_BUFFER_BIT4_QCOM"/>
-        <enum value="0x20000000" name="GL_MULTISAMPLE_BUFFER_BIT5_QCOM"/>
-        <enum value="0x40000000" name="GL_MULTISAMPLE_BUFFER_BIT6_QCOM"/>
-        <enum value="0x80000000" name="GL_MULTISAMPLE_BUFFER_BIT7_QCOM"/>
+        <enum value="0x00000001" name="GL_COLOR_BUFFER_BIT0_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00000002" name="GL_COLOR_BUFFER_BIT1_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00000004" name="GL_COLOR_BUFFER_BIT2_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00000008" name="GL_COLOR_BUFFER_BIT3_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00000010" name="GL_COLOR_BUFFER_BIT4_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00000020" name="GL_COLOR_BUFFER_BIT5_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00000040" name="GL_COLOR_BUFFER_BIT6_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00000080" name="GL_COLOR_BUFFER_BIT7_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00000100" name="GL_DEPTH_BUFFER_BIT0_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00000200" name="GL_DEPTH_BUFFER_BIT1_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00000400" name="GL_DEPTH_BUFFER_BIT2_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00000800" name="GL_DEPTH_BUFFER_BIT3_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00001000" name="GL_DEPTH_BUFFER_BIT4_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00002000" name="GL_DEPTH_BUFFER_BIT5_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00004000" name="GL_DEPTH_BUFFER_BIT6_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00008000" name="GL_DEPTH_BUFFER_BIT7_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00010000" name="GL_STENCIL_BUFFER_BIT0_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00020000" name="GL_STENCIL_BUFFER_BIT1_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00040000" name="GL_STENCIL_BUFFER_BIT2_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00080000" name="GL_STENCIL_BUFFER_BIT3_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00100000" name="GL_STENCIL_BUFFER_BIT4_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00200000" name="GL_STENCIL_BUFFER_BIT5_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00400000" name="GL_STENCIL_BUFFER_BIT6_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x00800000" name="GL_STENCIL_BUFFER_BIT7_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x01000000" name="GL_MULTISAMPLE_BUFFER_BIT0_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x02000000" name="GL_MULTISAMPLE_BUFFER_BIT1_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x04000000" name="GL_MULTISAMPLE_BUFFER_BIT2_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x08000000" name="GL_MULTISAMPLE_BUFFER_BIT3_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x10000000" name="GL_MULTISAMPLE_BUFFER_BIT4_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x20000000" name="GL_MULTISAMPLE_BUFFER_BIT5_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x40000000" name="GL_MULTISAMPLE_BUFFER_BIT6_QCOM" group="BufferBitQCOM"/>
+        <enum value="0x80000000" name="GL_MULTISAMPLE_BUFFER_BIT7_QCOM" group="BufferBitQCOM"/>
     </enums>
 
     <enums namespace="GL" group="FoveationConfigBitQCOM" type="bitmask">
-        <enum value="0x00000001" name="GL_FOVEATION_ENABLE_BIT_QCOM"/>
-        <enum value="0x00000002" name="GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM"/>
-        <enum value="0x00000004" name="GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM"/>
+        <enum value="0x00000001" name="GL_FOVEATION_ENABLE_BIT_QCOM" group="FoveationConfigBitQCOM"/>
+        <enum value="0x00000002" name="GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM" group="FoveationConfigBitQCOM"/>
+        <enum value="0x00000004" name="GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM" group="FoveationConfigBitQCOM"/>
     </enums>
 
     <enums namespace="GL" group="FfdMaskSGIX" type="bitmask">
-        <enum value="0x00000001" name="GL_TEXTURE_DEFORMATION_BIT_SGIX"/>
-        <enum value="0x00000002" name="GL_GEOMETRY_DEFORMATION_BIT_SGIX"/>
+        <enum value="0x00000001" name="GL_TEXTURE_DEFORMATION_BIT_SGIX" group="FfdMaskSGIX"/>
+        <enum value="0x00000002" name="GL_GEOMETRY_DEFORMATION_BIT_SGIX" group="FfdMaskSGIX"/>
     </enums>
 
 
@@ -4890,96 +420,96 @@ typedef unsigned int GLhandleARB;
          used for indexed access. -->
 
     <enums namespace="GL" group="CommandOpcodesNV" vendor="NV" comment="For NV_command_list.">
-        <enum value="0x0000" name="GL_TERMINATE_SEQUENCE_COMMAND_NV"/>
-        <enum value="0x0001" name="GL_NOP_COMMAND_NV"/>
-        <enum value="0x0002" name="GL_DRAW_ELEMENTS_COMMAND_NV"/>
-        <enum value="0x0003" name="GL_DRAW_ARRAYS_COMMAND_NV"/>
-        <enum value="0x0004" name="GL_DRAW_ELEMENTS_STRIP_COMMAND_NV"/>
-        <enum value="0x0005" name="GL_DRAW_ARRAYS_STRIP_COMMAND_NV"/>
-        <enum value="0x0006" name="GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV"/>
-        <enum value="0x0007" name="GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV"/>
-        <enum value="0x0008" name="GL_ELEMENT_ADDRESS_COMMAND_NV"/>
-        <enum value="0x0009" name="GL_ATTRIBUTE_ADDRESS_COMMAND_NV"/>
-        <enum value="0x000A" name="GL_UNIFORM_ADDRESS_COMMAND_NV"/>
-        <enum value="0x000B" name="GL_BLEND_COLOR_COMMAND_NV"/>
-        <enum value="0x000C" name="GL_STENCIL_REF_COMMAND_NV"/>
-        <enum value="0x000D" name="GL_LINE_WIDTH_COMMAND_NV"/>
-        <enum value="0x000E" name="GL_POLYGON_OFFSET_COMMAND_NV"/>
-        <enum value="0x000F" name="GL_ALPHA_REF_COMMAND_NV"/>
-        <enum value="0x0010" name="GL_VIEWPORT_COMMAND_NV"/>
-        <enum value="0x0011" name="GL_SCISSOR_COMMAND_NV"/>
-        <enum value="0x0012" name="GL_FRONT_FACE_COMMAND_NV"/>
+        <enum value="0x0000" name="GL_TERMINATE_SEQUENCE_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x0001" name="GL_NOP_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x0002" name="GL_DRAW_ELEMENTS_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x0003" name="GL_DRAW_ARRAYS_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x0004" name="GL_DRAW_ELEMENTS_STRIP_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x0005" name="GL_DRAW_ARRAYS_STRIP_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x0006" name="GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x0007" name="GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x0008" name="GL_ELEMENT_ADDRESS_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x0009" name="GL_ATTRIBUTE_ADDRESS_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x000A" name="GL_UNIFORM_ADDRESS_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x000B" name="GL_BLEND_COLOR_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x000C" name="GL_STENCIL_REF_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x000D" name="GL_LINE_WIDTH_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x000E" name="GL_POLYGON_OFFSET_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x000F" name="GL_ALPHA_REF_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x0010" name="GL_VIEWPORT_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x0011" name="GL_SCISSOR_COMMAND_NV" group="CommandOpcodesNV"/>
+        <enum value="0x0012" name="GL_FRONT_FACE_COMMAND_NV" group="CommandOpcodesNV"/>
     </enums>
 
     <enums namespace="GL" group="MapTextureFormatINTEL" vendor="INTEL" comment="Texture memory layouts for INTEL_map_texture">
-        <enum value="0" name="GL_LAYOUT_DEFAULT_INTEL"/>
-        <enum value="1" name="GL_LAYOUT_LINEAR_INTEL"/>
-        <enum value="2" name="GL_LAYOUT_LINEAR_CPU_CACHED_INTEL"/>
+        <enum value="0" name="GL_LAYOUT_DEFAULT_INTEL" group="MapTextureFormatINTEL"/>
+        <enum value="1" name="GL_LAYOUT_LINEAR_INTEL" group="MapTextureFormatINTEL"/>
+        <enum value="2" name="GL_LAYOUT_LINEAR_CPU_CACHED_INTEL" group="MapTextureFormatINTEL"/>
     </enums>
 
     <enums namespace="GL" group="PathRenderingTokenNV" vendor="NV">
-        <enum value="0x00" name="GL_CLOSE_PATH_NV"/>
-        <enum value="0x02" name="GL_MOVE_TO_NV"/>
-        <enum value="0x03" name="GL_RELATIVE_MOVE_TO_NV"/>
-        <enum value="0x04" name="GL_LINE_TO_NV"/>
-        <enum value="0x05" name="GL_RELATIVE_LINE_TO_NV"/>
-        <enum value="0x06" name="GL_HORIZONTAL_LINE_TO_NV"/>
-        <enum value="0x07" name="GL_RELATIVE_HORIZONTAL_LINE_TO_NV"/>
-        <enum value="0x08" name="GL_VERTICAL_LINE_TO_NV"/>
-        <enum value="0x09" name="GL_RELATIVE_VERTICAL_LINE_TO_NV"/>
-        <enum value="0x0A" name="GL_QUADRATIC_CURVE_TO_NV"/>
-        <enum value="0x0B" name="GL_RELATIVE_QUADRATIC_CURVE_TO_NV"/>
-        <enum value="0x0C" name="GL_CUBIC_CURVE_TO_NV"/>
-        <enum value="0x0D" name="GL_RELATIVE_CUBIC_CURVE_TO_NV"/>
-        <enum value="0x0E" name="GL_SMOOTH_QUADRATIC_CURVE_TO_NV"/>
-        <enum value="0x0F" name="GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV"/>
-        <enum value="0x10" name="GL_SMOOTH_CUBIC_CURVE_TO_NV"/>
-        <enum value="0x11" name="GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV"/>
-        <enum value="0x12" name="GL_SMALL_CCW_ARC_TO_NV"/>
-        <enum value="0x13" name="GL_RELATIVE_SMALL_CCW_ARC_TO_NV"/>
-        <enum value="0x14" name="GL_SMALL_CW_ARC_TO_NV"/>
-        <enum value="0x15" name="GL_RELATIVE_SMALL_CW_ARC_TO_NV"/>
-        <enum value="0x16" name="GL_LARGE_CCW_ARC_TO_NV"/>
-        <enum value="0x17" name="GL_RELATIVE_LARGE_CCW_ARC_TO_NV"/>
-        <enum value="0x18" name="GL_LARGE_CW_ARC_TO_NV"/>
-        <enum value="0x19" name="GL_RELATIVE_LARGE_CW_ARC_TO_NV"/>
-        <enum value="0x1A" name="GL_CONIC_CURVE_TO_NV"/>
-        <enum value="0x1B" name="GL_RELATIVE_CONIC_CURVE_TO_NV"/>
+        <enum value="0x00" name="GL_CLOSE_PATH_NV" group="PathCoordType"/>
+        <enum value="0x02" name="GL_MOVE_TO_NV" group="PathCoordType"/>
+        <enum value="0x03" name="GL_RELATIVE_MOVE_TO_NV" group="PathCoordType"/>
+        <enum value="0x04" name="GL_LINE_TO_NV" group="PathCoordType"/>
+        <enum value="0x05" name="GL_RELATIVE_LINE_TO_NV" group="PathCoordType"/>
+        <enum value="0x06" name="GL_HORIZONTAL_LINE_TO_NV" group="PathCoordType"/>
+        <enum value="0x07" name="GL_RELATIVE_HORIZONTAL_LINE_TO_NV" group="PathCoordType"/>
+        <enum value="0x08" name="GL_VERTICAL_LINE_TO_NV" group="PathCoordType"/>
+        <enum value="0x09" name="GL_RELATIVE_VERTICAL_LINE_TO_NV" group="PathCoordType"/>
+        <enum value="0x0A" name="GL_QUADRATIC_CURVE_TO_NV" group="PathCoordType"/>
+        <enum value="0x0B" name="GL_RELATIVE_QUADRATIC_CURVE_TO_NV" group="PathCoordType"/>
+        <enum value="0x0C" name="GL_CUBIC_CURVE_TO_NV" group="PathCoordType"/>
+        <enum value="0x0D" name="GL_RELATIVE_CUBIC_CURVE_TO_NV" group="PathCoordType"/>
+        <enum value="0x0E" name="GL_SMOOTH_QUADRATIC_CURVE_TO_NV" group="PathCoordType"/>
+        <enum value="0x0F" name="GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV" group="PathCoordType"/>
+        <enum value="0x10" name="GL_SMOOTH_CUBIC_CURVE_TO_NV" group="PathCoordType"/>
+        <enum value="0x11" name="GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV" group="PathCoordType"/>
+        <enum value="0x12" name="GL_SMALL_CCW_ARC_TO_NV" group="PathCoordType"/>
+        <enum value="0x13" name="GL_RELATIVE_SMALL_CCW_ARC_TO_NV" group="PathCoordType"/>
+        <enum value="0x14" name="GL_SMALL_CW_ARC_TO_NV" group="PathCoordType"/>
+        <enum value="0x15" name="GL_RELATIVE_SMALL_CW_ARC_TO_NV" group="PathCoordType"/>
+        <enum value="0x16" name="GL_LARGE_CCW_ARC_TO_NV" group="PathCoordType"/>
+        <enum value="0x17" name="GL_RELATIVE_LARGE_CCW_ARC_TO_NV" group="PathCoordType"/>
+        <enum value="0x18" name="GL_LARGE_CW_ARC_TO_NV" group="PathCoordType"/>
+        <enum value="0x19" name="GL_RELATIVE_LARGE_CW_ARC_TO_NV" group="PathCoordType"/>
+        <enum value="0x1A" name="GL_CONIC_CURVE_TO_NV" group="PathCoordType"/>
+        <enum value="0x1B" name="GL_RELATIVE_CONIC_CURVE_TO_NV" group="PathCoordType"/>
             <unused start="0x1C" end="0xBF" comment="Unused for PathRenderingTokenNV"/>
         <enum value="0xC0" name="GL_SHARED_EDGE_NV"/>
             <unused start="0xC1" end="0xE7" comment="Unused for PathRenderingTokenNV"/>
-        <enum value="0xE8" name="GL_ROUNDED_RECT_NV"/>
-        <enum value="0xE9" name="GL_RELATIVE_ROUNDED_RECT_NV"/>
-        <enum value="0xEA" name="GL_ROUNDED_RECT2_NV"/>
-        <enum value="0xEB" name="GL_RELATIVE_ROUNDED_RECT2_NV"/>
-        <enum value="0xEC" name="GL_ROUNDED_RECT4_NV"/>
-        <enum value="0xED" name="GL_RELATIVE_ROUNDED_RECT4_NV"/>
-        <enum value="0xEE" name="GL_ROUNDED_RECT8_NV"/>
-        <enum value="0xEF" name="GL_RELATIVE_ROUNDED_RECT8_NV"/>
-        <enum value="0xF0" name="GL_RESTART_PATH_NV"/>
-        <enum value="0xF2" name="GL_DUP_FIRST_CUBIC_CURVE_TO_NV"/>
-        <enum value="0xF4" name="GL_DUP_LAST_CUBIC_CURVE_TO_NV"/>
-        <enum value="0xF6" name="GL_RECT_NV"/>
-        <enum value="0xF7" name="GL_RELATIVE_RECT_NV"/>
-        <enum value="0xF8" name="GL_CIRCULAR_CCW_ARC_TO_NV"/>
-        <enum value="0xFA" name="GL_CIRCULAR_CW_ARC_TO_NV"/>
-        <enum value="0xFC" name="GL_CIRCULAR_TANGENT_ARC_TO_NV"/>
-        <enum value="0xFE" name="GL_ARC_TO_NV"/>
-        <enum value="0xFF" name="GL_RELATIVE_ARC_TO_NV"/>
+        <enum value="0xE8" name="GL_ROUNDED_RECT_NV" group="PathCoordType"/>
+        <enum value="0xE9" name="GL_RELATIVE_ROUNDED_RECT_NV" group="PathCoordType"/>
+        <enum value="0xEA" name="GL_ROUNDED_RECT2_NV" group="PathCoordType"/>
+        <enum value="0xEB" name="GL_RELATIVE_ROUNDED_RECT2_NV" group="PathCoordType"/>
+        <enum value="0xEC" name="GL_ROUNDED_RECT4_NV" group="PathCoordType"/>
+        <enum value="0xED" name="GL_RELATIVE_ROUNDED_RECT4_NV" group="PathCoordType"/>
+        <enum value="0xEE" name="GL_ROUNDED_RECT8_NV" group="PathCoordType"/>
+        <enum value="0xEF" name="GL_RELATIVE_ROUNDED_RECT8_NV" group="PathCoordType"/>
+        <enum value="0xF0" name="GL_RESTART_PATH_NV" group="PathCoordType"/>
+        <enum value="0xF2" name="GL_DUP_FIRST_CUBIC_CURVE_TO_NV" group="PathCoordType"/>
+        <enum value="0xF4" name="GL_DUP_LAST_CUBIC_CURVE_TO_NV" group="PathCoordType"/>
+        <enum value="0xF6" name="GL_RECT_NV" group="PathCoordType"/>
+        <enum value="0xF7" name="GL_RELATIVE_RECT_NV" group="PathCoordType"/>
+        <enum value="0xF8" name="GL_CIRCULAR_CCW_ARC_TO_NV" group="PathCoordType"/>
+        <enum value="0xFA" name="GL_CIRCULAR_CW_ARC_TO_NV" group="PathCoordType"/>
+        <enum value="0xFC" name="GL_CIRCULAR_TANGENT_ARC_TO_NV" group="PathCoordType"/>
+        <enum value="0xFE" name="GL_ARC_TO_NV" group="PathCoordType"/>
+        <enum value="0xFF" name="GL_RELATIVE_ARC_TO_NV" group="PathCoordType"/>
     </enums>
 
     <enums namespace="GL" group="TransformFeedbackTokenNV" vendor="NV" comment="For NV_transform_feedback. No clue why small negative values are used">
-        <enum value="-2" name="GL_NEXT_BUFFER_NV"/>
-        <enum value="-3" name="GL_SKIP_COMPONENTS4_NV"/>
-        <enum value="-4" name="GL_SKIP_COMPONENTS3_NV"/>
-        <enum value="-5" name="GL_SKIP_COMPONENTS2_NV"/>
-        <enum value="-6" name="GL_SKIP_COMPONENTS1_NV"/>
+        <enum value="-2" name="GL_NEXT_BUFFER_NV" group="TransformFeedbackTokenNV"/>
+        <enum value="-3" name="GL_SKIP_COMPONENTS4_NV" group="TransformFeedbackTokenNV"/>
+        <enum value="-4" name="GL_SKIP_COMPONENTS3_NV" group="TransformFeedbackTokenNV"/>
+        <enum value="-5" name="GL_SKIP_COMPONENTS2_NV" group="TransformFeedbackTokenNV"/>
+        <enum value="-6" name="GL_SKIP_COMPONENTS1_NV" group="TransformFeedbackTokenNV"/>
     </enums>
 
     <enums namespace="GL" group="TriangleListSUN" vendor="SUN">
-        <enum value="0x0001" name="GL_RESTART_SUN"/>
-        <enum value="0x0002" name="GL_REPLACE_MIDDLE_SUN"/>
-        <enum value="0x0003" name="GL_REPLACE_OLDEST_SUN"/>
+        <enum value="0x0001" name="GL_RESTART_SUN" group="TriangleListSUN"/>
+        <enum value="0x0002" name="GL_REPLACE_MIDDLE_SUN" group="TriangleListSUN"/>
+        <enum value="0x0003" name="GL_REPLACE_OLDEST_SUN" group="TriangleListSUN"/>
     </enums>
 
     <!-- The default ("API") enum namespace starts here. While some
@@ -4991,654 +521,657 @@ typedef unsigned int GLhandleARB;
          extensions and API versions). -->
 
     <enums namespace="GL" group="SpecialNumbers" vendor="ARB" comment="Tokens whose numeric value is intrinsically meaningful">
-        <enum value="0" name="GL_FALSE"/>
-        <enum value="0" name="GL_NO_ERROR"/>
-        <enum value="0" name="GL_ZERO"/>
-        <enum value="0" name="GL_NONE"/>
-        <enum value="0" name="GL_NONE_OES"/>
-        <enum value="1" name="GL_TRUE"/>
-        <enum value="1" name="GL_ONE"/>
-        <enum value="0xFFFFFFFF" name="GL_INVALID_INDEX" type="u" comment="Tagged as uint"/>
-        <enum value="0xFFFFFFFF" name="GL_ALL_PIXELS_AMD"/>
-        <enum value="0xFFFFFFFFFFFFFFFF" name="GL_TIMEOUT_IGNORED" type="ull" comment="Tagged as uint64"/>
-        <enum value="0xFFFFFFFFFFFFFFFF" name="GL_TIMEOUT_IGNORED_APPLE" type="ull" comment="Tagged as uint64"/>
-        <enum value="1" name="GL_VERSION_ES_CL_1_0" comment="Not an API enum. API definition macro for ES 1.0/1.1 headers"/>
-        <enum value="1" name="GL_VERSION_ES_CM_1_1" comment="Not an API enum. API definition macro for ES 1.0/1.1 headers"/>
-        <enum value="1" name="GL_VERSION_ES_CL_1_1" comment="Not an API enum. API definition macro for ES 1.0/1.1 headers"/>
-        <enum value="16" name="GL_UUID_SIZE_EXT"/>
-        <enum value="8" name="GL_LUID_SIZE_EXT"/>
+        <enum value="0" name="GL_FALSE" group="SpecialNumbers,Boolean,VertexShaderWriteMaskEXT,ClampColorModeARB"/>
+        <enum value="0" name="GL_NO_ERROR" group="SpecialNumbers,GraphicsResetStatus,ErrorCode"/>
+        <enum value="0" name="GL_ZERO" group="SpecialNumbers,TextureSwizzle,StencilOp,BlendingFactor,FragmentShaderGenericSourceATI"/>
+        <enum value="0" name="GL_NONE" group="SpecialNumbers,FragmentShaderValueRepATI,FragmentShaderDestModMaskATI,FragmentShaderDestMaskATI,SyncBehaviorFlags,TextureCompareMode,PathColorFormat,CombinerBiasNV,CombinerScaleNV,DrawBufferMode,PixelTexGenModeSGIX,ReadBufferMode,ColorBuffer,PathGenMode,PathTransformType,PathFontStyle"/>
+        <enum value="0" name="GL_NONE_OES" group="SpecialNumbers,ReadBufferMode,DrawBufferMode"/>
+        <enum value="1" name="GL_TRUE" group="SpecialNumbers,Boolean,VertexShaderWriteMaskEXT,ClampColorModeARB"/>
+        <enum value="1" name="GL_ONE" group="SpecialNumbers,TextureSwizzle,BlendingFactor,FragmentShaderGenericSourceATI"/>
+        <enum value="0xFFFFFFFF" name="GL_INVALID_INDEX" type="u" comment="Tagged as uint" group="SpecialNumbers"/>
+        <enum value="0xFFFFFFFF" name="GL_ALL_PIXELS_AMD" group="SpecialNumbers"/>
+        <enum value="0xFFFFFFFFFFFFFFFF" name="GL_TIMEOUT_IGNORED" type="ull" comment="Tagged as uint64" group="SpecialNumbers"/>
+        <enum value="0xFFFFFFFFFFFFFFFF" name="GL_TIMEOUT_IGNORED_APPLE" type="ull" comment="Tagged as uint64" group="SpecialNumbers"/>
+        <enum value="1" name="GL_VERSION_ES_CL_1_0" comment="Not an API enum. API definition macro for ES 1.0/1.1 headers" group="SpecialNumbers"/>
+        <enum value="1" name="GL_VERSION_ES_CM_1_1" comment="Not an API enum. API definition macro for ES 1.0/1.1 headers" group="SpecialNumbers"/>
+        <enum value="1" name="GL_VERSION_ES_CL_1_1" comment="Not an API enum. API definition macro for ES 1.0/1.1 headers" group="SpecialNumbers"/>
+        <enum value="16" name="GL_UUID_SIZE_EXT" group="SpecialNumbers"/>
+        <enum value="8" name="GL_LUID_SIZE_EXT" group="SpecialNumbers"/>
     </enums>
 
     <enums namespace="GL" start="0x0000" end="0x7FFF" vendor="ARB" comment="Mostly OpenGL 1.0/1.1 enum assignments. Unused ranges should generally remain unused.">
-        <enum value="0x0000" name="GL_POINTS"/>
-        <enum value="0x0001" name="GL_LINES"/>
-        <enum value="0x0002" name="GL_LINE_LOOP"/>
-        <enum value="0x0003" name="GL_LINE_STRIP"/>
-        <enum value="0x0004" name="GL_TRIANGLES"/>
-        <enum value="0x0005" name="GL_TRIANGLE_STRIP"/>
-        <enum value="0x0006" name="GL_TRIANGLE_FAN"/>
-        <enum value="0x0007" name="GL_QUADS"/>
-        <enum value="0x0007" name="GL_QUADS_EXT"/>
+        <enum value="0x0000" name="GL_POINTS" group="PrimitiveType"/>
+        <enum value="0x0001" name="GL_LINES" group="PrimitiveType"/>
+        <enum value="0x0002" name="GL_LINE_LOOP" group="PrimitiveType"/>
+        <enum value="0x0003" name="GL_LINE_STRIP" group="PrimitiveType"/>
+        <enum value="0x0004" name="GL_TRIANGLES" group="PrimitiveType"/>
+        <enum value="0x0005" name="GL_TRIANGLE_STRIP" group="PrimitiveType"/>
+        <enum value="0x0006" name="GL_TRIANGLE_FAN" group="PrimitiveType"/>
+        <enum value="0x0007" name="GL_QUADS" group="PrimitiveType"/>
+        <enum value="0x0007" name="GL_QUADS_EXT" group="PrimitiveType"/>
         <enum value="0x0007" name="GL_QUADS_OES"/>
-        <enum value="0x0008" name="GL_QUAD_STRIP"/>
-        <enum value="0x0009" name="GL_POLYGON"/>
-        <enum value="0x000A" name="GL_LINES_ADJACENCY"/>
-        <enum value="0x000A" name="GL_LINES_ADJACENCY_ARB"/>
-        <enum value="0x000A" name="GL_LINES_ADJACENCY_EXT"/>
+        <enum value="0x0008" name="GL_QUAD_STRIP" group="PrimitiveType"/>
+        <enum value="0x0009" name="GL_POLYGON" group="PrimitiveType"/>
+        <enum value="0x000A" name="GL_LINES_ADJACENCY" group="PrimitiveType"/>
+        <enum value="0x000A" name="GL_LINES_ADJACENCY_ARB" group="PrimitiveType"/>
+        <enum value="0x000A" name="GL_LINES_ADJACENCY_EXT" group="PrimitiveType"/>
         <enum value="0x000A" name="GL_LINES_ADJACENCY_OES"/>
-        <enum value="0x000B" name="GL_LINE_STRIP_ADJACENCY"/>
-        <enum value="0x000B" name="GL_LINE_STRIP_ADJACENCY_ARB"/>
-        <enum value="0x000B" name="GL_LINE_STRIP_ADJACENCY_EXT"/>
+        <enum value="0x000B" name="GL_LINE_STRIP_ADJACENCY" group="PrimitiveType"/>
+        <enum value="0x000B" name="GL_LINE_STRIP_ADJACENCY_ARB" group="PrimitiveType"/>
+        <enum value="0x000B" name="GL_LINE_STRIP_ADJACENCY_EXT" group="PrimitiveType"/>
         <enum value="0x000B" name="GL_LINE_STRIP_ADJACENCY_OES"/>
-        <enum value="0x000C" name="GL_TRIANGLES_ADJACENCY"/>
-        <enum value="0x000C" name="GL_TRIANGLES_ADJACENCY_ARB"/>
-        <enum value="0x000C" name="GL_TRIANGLES_ADJACENCY_EXT"/>
+        <enum value="0x000C" name="GL_TRIANGLES_ADJACENCY" group="PrimitiveType"/>
+        <enum value="0x000C" name="GL_TRIANGLES_ADJACENCY_ARB" group="PrimitiveType"/>
+        <enum value="0x000C" name="GL_TRIANGLES_ADJACENCY_EXT" group="PrimitiveType"/>
         <enum value="0x000C" name="GL_TRIANGLES_ADJACENCY_OES"/>
-        <enum value="0x000D" name="GL_TRIANGLE_STRIP_ADJACENCY"/>
-        <enum value="0x000D" name="GL_TRIANGLE_STRIP_ADJACENCY_ARB"/>
-        <enum value="0x000D" name="GL_TRIANGLE_STRIP_ADJACENCY_EXT"/>
+        <enum value="0x000D" name="GL_TRIANGLE_STRIP_ADJACENCY" group="PrimitiveType"/>
+        <enum value="0x000D" name="GL_TRIANGLE_STRIP_ADJACENCY_ARB" group="PrimitiveType"/>
+        <enum value="0x000D" name="GL_TRIANGLE_STRIP_ADJACENCY_EXT" group="PrimitiveType"/>
         <enum value="0x000D" name="GL_TRIANGLE_STRIP_ADJACENCY_OES"/>
-        <enum value="0x000E" name="GL_PATCHES"/>
-        <enum value="0x000E" name="GL_PATCHES_EXT"/>
+        <enum value="0x000E" name="GL_PATCHES" group="PrimitiveType"/>
+        <enum value="0x000E" name="GL_PATCHES_EXT" group="PrimitiveType"/>
         <enum value="0x000E" name="GL_PATCHES_OES"/>
             <unused start="0x000F" end="0x00FF" comment="Unused for PrimitiveType"/>
-        <enum value="0x0100" name="GL_ACCUM"/>
-        <enum value="0x0101" name="GL_LOAD"/>
-        <enum value="0x0102" name="GL_RETURN"/>
-        <enum value="0x0103" name="GL_MULT"/>
-        <enum value="0x0104" name="GL_ADD"/>
+        <enum value="0x0100" name="GL_ACCUM" group="AccumOp"/>
+        <enum value="0x0101" name="GL_LOAD" group="AccumOp"/>
+        <enum value="0x0102" name="GL_RETURN" group="AccumOp"/>
+        <enum value="0x0103" name="GL_MULT" group="AccumOp"/>
+        <enum value="0x0104" name="GL_ADD" group="TextureEnvMode,AccumOp,LightEnvModeSGIX"/>
             <unused start="0x0105" end="0x01FF" comment="Unused for AccumOp"/>
-        <enum value="0x0200" name="GL_NEVER"/>
-        <enum value="0x0201" name="GL_LESS"/>
-        <enum value="0x0202" name="GL_EQUAL"/>
-        <enum value="0x0203" name="GL_LEQUAL"/>
-        <enum value="0x0204" name="GL_GREATER"/>
-        <enum value="0x0205" name="GL_NOTEQUAL"/>
-        <enum value="0x0206" name="GL_GEQUAL"/>
-        <enum value="0x0207" name="GL_ALWAYS"/>
+        <enum value="0x0200" name="GL_NEVER" group="StencilFunction,IndexFunctionEXT,AlphaFunction,DepthFunction"/>
+        <enum value="0x0201" name="GL_LESS" group="StencilFunction,IndexFunctionEXT,AlphaFunction,DepthFunction"/>
+        <enum value="0x0202" name="GL_EQUAL" group="StencilFunction,IndexFunctionEXT,AlphaFunction,DepthFunction"/>
+        <enum value="0x0203" name="GL_LEQUAL" group="StencilFunction,IndexFunctionEXT,AlphaFunction,DepthFunction"/>
+        <enum value="0x0204" name="GL_GREATER" group="StencilFunction,IndexFunctionEXT,AlphaFunction,DepthFunction"/>
+        <enum value="0x0205" name="GL_NOTEQUAL" group="StencilFunction,IndexFunctionEXT,AlphaFunction,DepthFunction"/>
+        <enum value="0x0206" name="GL_GEQUAL" group="StencilFunction,IndexFunctionEXT,AlphaFunction,DepthFunction"/>
+        <enum value="0x0207" name="GL_ALWAYS" group="StencilFunction,IndexFunctionEXT,AlphaFunction,DepthFunction"/>
             <unused start="0x0208" end="0x02FF" comment="Unused for AlphaFunction"/>
-        <enum value="0x0300" name="GL_SRC_COLOR"/>
-        <enum value="0x0301" name="GL_ONE_MINUS_SRC_COLOR"/>
-        <enum value="0x0302" name="GL_SRC_ALPHA"/>
-        <enum value="0x0303" name="GL_ONE_MINUS_SRC_ALPHA"/>
-        <enum value="0x0304" name="GL_DST_ALPHA"/>
-        <enum value="0x0305" name="GL_ONE_MINUS_DST_ALPHA"/>
-        <enum value="0x0306" name="GL_DST_COLOR"/>
-        <enum value="0x0307" name="GL_ONE_MINUS_DST_COLOR"/>
-        <enum value="0x0308" name="GL_SRC_ALPHA_SATURATE"/>
+        <enum value="0x0300" name="GL_SRC_COLOR" group="BlendingFactor"/>
+        <enum value="0x0301" name="GL_ONE_MINUS_SRC_COLOR" group="BlendingFactor"/>
+        <enum value="0x0302" name="GL_SRC_ALPHA" group="BlendingFactor"/>
+        <enum value="0x0303" name="GL_ONE_MINUS_SRC_ALPHA" group="BlendingFactor"/>
+        <enum value="0x0304" name="GL_DST_ALPHA" group="BlendingFactor"/>
+        <enum value="0x0305" name="GL_ONE_MINUS_DST_ALPHA" group="BlendingFactor"/>
+        <enum value="0x0306" name="GL_DST_COLOR" group="BlendingFactor"/>
+        <enum value="0x0307" name="GL_ONE_MINUS_DST_COLOR" group="BlendingFactor"/>
+        <enum value="0x0308" name="GL_SRC_ALPHA_SATURATE" group="BlendingFactor"/>
         <enum value="0x0308" name="GL_SRC_ALPHA_SATURATE_EXT"/>
             <unused start="0x0309" end="0x03FF" comment="Unused for BlendingFactor"/>
-        <enum value="0x0400" name="GL_FRONT_LEFT"/>
-        <enum value="0x0401" name="GL_FRONT_RIGHT"/>
-        <enum value="0x0402" name="GL_BACK_LEFT"/>
-        <enum value="0x0403" name="GL_BACK_RIGHT"/>
-        <enum value="0x0404" name="GL_FRONT"/>
-        <enum value="0x0405" name="GL_BACK"/>
-        <enum value="0x0406" name="GL_LEFT"/>
-        <enum value="0x0407" name="GL_RIGHT"/>
-        <enum value="0x0408" name="GL_FRONT_AND_BACK"/>
-        <enum value="0x0409" name="GL_AUX0"/>
-        <enum value="0x040A" name="GL_AUX1"/>
-        <enum value="0x040B" name="GL_AUX2"/>
-        <enum value="0x040C" name="GL_AUX3"/>
+        <enum value="0x0400" name="GL_FRONT_LEFT" group="ColorBuffer,DrawBufferMode,ReadBufferMode"/>
+        <enum value="0x0401" name="GL_FRONT_RIGHT" group="ColorBuffer,DrawBufferMode,ReadBufferMode"/>
+        <enum value="0x0402" name="GL_BACK_LEFT" group="ColorBuffer,DrawBufferMode,ReadBufferMode"/>
+        <enum value="0x0403" name="GL_BACK_RIGHT" group="ColorBuffer,DrawBufferMode,ReadBufferMode"/>
+        <enum value="0x0404" name="GL_FRONT" group="ColorBuffer,DrawBufferMode,ReadBufferMode,TriangleFace"/>
+        <enum value="0x0405" name="GL_BACK" group="ColorBuffer,DrawBufferMode,ReadBufferMode,TriangleFace"/>
+        <enum value="0x0406" name="GL_LEFT" group="ColorBuffer,DrawBufferMode,ReadBufferMode"/>
+        <enum value="0x0407" name="GL_RIGHT" group="ColorBuffer,DrawBufferMode,ReadBufferMode"/>
+        <enum value="0x0408" name="GL_FRONT_AND_BACK" group="ColorBuffer,DrawBufferMode,TriangleFace"/>
+        <enum value="0x0409" name="GL_AUX0" group="ReadBufferMode,DrawBufferMode"/>
+        <enum value="0x040A" name="GL_AUX1" group="ReadBufferMode,DrawBufferMode"/>
+        <enum value="0x040B" name="GL_AUX2" group="ReadBufferMode,DrawBufferMode"/>
+        <enum value="0x040C" name="GL_AUX3" group="ReadBufferMode,DrawBufferMode"/>
             <unused start="0x040D" end="0x04FF" comment="Unused for DrawBufferMode"/>
-        <enum value="0x0500" name="GL_INVALID_ENUM"/>
-        <enum value="0x0501" name="GL_INVALID_VALUE"/>
-        <enum value="0x0502" name="GL_INVALID_OPERATION"/>
-        <enum value="0x0503" name="GL_STACK_OVERFLOW"/>
+        <enum value="0x0500" name="GL_INVALID_ENUM" group="ErrorCode"/>
+        <enum value="0x0501" name="GL_INVALID_VALUE" group="ErrorCode"/>
+        <enum value="0x0502" name="GL_INVALID_OPERATION" group="ErrorCode"/>
+        <enum value="0x0503" name="GL_STACK_OVERFLOW" group="ErrorCode"/>
         <enum value="0x0503" name="GL_STACK_OVERFLOW_KHR"/>
-        <enum value="0x0504" name="GL_STACK_UNDERFLOW"/>
+        <enum value="0x0504" name="GL_STACK_UNDERFLOW" group="ErrorCode"/>
         <enum value="0x0504" name="GL_STACK_UNDERFLOW_KHR"/>
-        <enum value="0x0505" name="GL_OUT_OF_MEMORY"/>
-        <enum value="0x0506" name="GL_INVALID_FRAMEBUFFER_OPERATION"/>
-        <enum value="0x0506" name="GL_INVALID_FRAMEBUFFER_OPERATION_EXT"/>
-        <enum value="0x0506" name="GL_INVALID_FRAMEBUFFER_OPERATION_OES"/>
+        <enum value="0x0505" name="GL_OUT_OF_MEMORY" group="ErrorCode"/>
+        <enum value="0x0506" name="GL_INVALID_FRAMEBUFFER_OPERATION" group="ErrorCode"/>
+        <enum value="0x0506" name="GL_INVALID_FRAMEBUFFER_OPERATION_EXT" group="ErrorCode"/>
+        <enum value="0x0506" name="GL_INVALID_FRAMEBUFFER_OPERATION_OES" group="ErrorCode"/>
         <enum value="0x0507" name="GL_CONTEXT_LOST"/>
         <enum value="0x0507" name="GL_CONTEXT_LOST_KHR"/>
             <unused start="0x0508" end="0x05FF" comment="Unused for ErrorCode"/>
-        <enum value="0x0600" name="GL_2D"/>
-        <enum value="0x0601" name="GL_3D"/>
-        <enum value="0x0602" name="GL_3D_COLOR"/>
-        <enum value="0x0603" name="GL_3D_COLOR_TEXTURE"/>
-        <enum value="0x0604" name="GL_4D_COLOR_TEXTURE"/>
+        <enum value="0x0600" name="GL_2D" group="FeedbackType"/>
+        <enum value="0x0601" name="GL_3D" group="FeedbackType"/>
+        <enum value="0x0602" name="GL_3D_COLOR" group="FeedbackType"/>
+        <enum value="0x0603" name="GL_3D_COLOR_TEXTURE" group="FeedbackType"/>
+        <enum value="0x0604" name="GL_4D_COLOR_TEXTURE" group="FeedbackType"/>
             <unused start="0x0605" end="0x06FF" comment="Unused for FeedbackType"/>
-        <enum value="0x0700" name="GL_PASS_THROUGH_TOKEN"/>
-        <enum value="0x0701" name="GL_POINT_TOKEN"/>
-        <enum value="0x0702" name="GL_LINE_TOKEN"/>
-        <enum value="0x0703" name="GL_POLYGON_TOKEN"/>
-        <enum value="0x0704" name="GL_BITMAP_TOKEN"/>
-        <enum value="0x0705" name="GL_DRAW_PIXEL_TOKEN"/>
-        <enum value="0x0706" name="GL_COPY_PIXEL_TOKEN"/>
-        <enum value="0x0707" name="GL_LINE_RESET_TOKEN"/>
+        <enum value="0x0700" name="GL_PASS_THROUGH_TOKEN" group="FeedBackToken"/>
+        <enum value="0x0701" name="GL_POINT_TOKEN" group="FeedBackToken"/>
+        <enum value="0x0702" name="GL_LINE_TOKEN" group="FeedBackToken"/>
+        <enum value="0x0703" name="GL_POLYGON_TOKEN" group="FeedBackToken"/>
+        <enum value="0x0704" name="GL_BITMAP_TOKEN" group="FeedBackToken"/>
+        <enum value="0x0705" name="GL_DRAW_PIXEL_TOKEN" group="FeedBackToken"/>
+        <enum value="0x0706" name="GL_COPY_PIXEL_TOKEN" group="FeedBackToken"/>
+        <enum value="0x0707" name="GL_LINE_RESET_TOKEN" group="FeedBackToken"/>
             <unused start="0x0708" end="0x07FF" comment="Unused for FeedbackToken"/>
-        <enum value="0x0800" name="GL_EXP"/>
-        <enum value="0x0801" name="GL_EXP2"/>
+        <enum value="0x0800" name="GL_EXP" group="FogMode"/>
+        <enum value="0x0801" name="GL_EXP2" group="FogMode"/>
             <unused start="0x0802" end="0x08FF" comment="Unused for FogMode"/>
-        <enum value="0x0900" name="GL_CW"/>
-        <enum value="0x0901" name="GL_CCW"/>
+        <enum value="0x0900" name="GL_CW" group="FrontFaceDirection"/>
+        <enum value="0x0901" name="GL_CCW" group="FrontFaceDirection"/>
             <unused start="0x0902" end="0x09FF" comment="Unused for FrontFaceDirection"/>
-        <enum value="0x0A00" name="GL_COEFF"/>
-        <enum value="0x0A01" name="GL_ORDER"/>
-        <enum value="0x0A02" name="GL_DOMAIN"/>
+        <enum value="0x0A00" name="GL_COEFF" group="MapQuery,GetMapQuery"/>
+        <enum value="0x0A01" name="GL_ORDER" group="MapQuery,GetMapQuery"/>
+        <enum value="0x0A02" name="GL_DOMAIN" group="MapQuery,GetMapQuery"/>
             <unused start="0x0A03" end="0x0AFF" comment="Unused for GetMapQuery"/>
-        <enum value="0x0B00" name="GL_CURRENT_COLOR"/>
-        <enum value="0x0B01" name="GL_CURRENT_INDEX"/>
-        <enum value="0x0B02" name="GL_CURRENT_NORMAL"/>
-        <enum value="0x0B03" name="GL_CURRENT_TEXTURE_COORDS"/>
-        <enum value="0x0B04" name="GL_CURRENT_RASTER_COLOR"/>
-        <enum value="0x0B05" name="GL_CURRENT_RASTER_INDEX"/>
-        <enum value="0x0B06" name="GL_CURRENT_RASTER_TEXTURE_COORDS"/>
-        <enum value="0x0B07" name="GL_CURRENT_RASTER_POSITION"/>
-        <enum value="0x0B08" name="GL_CURRENT_RASTER_POSITION_VALID"/>
-        <enum value="0x0B09" name="GL_CURRENT_RASTER_DISTANCE"/>
-
-        <enum value="0x0B10" name="GL_POINT_SMOOTH"/>
-        <enum value="0x0B11" name="GL_POINT_SIZE"/>
-        <enum value="0x0B12" name="GL_POINT_SIZE_RANGE"/>
-        <enum value="0x0B12" name="GL_SMOOTH_POINT_SIZE_RANGE" alias="GL_POINT_SIZE_RANGE"/>
-        <enum value="0x0B13" name="GL_POINT_SIZE_GRANULARITY"/>
-        <enum value="0x0B13" name="GL_SMOOTH_POINT_SIZE_GRANULARITY" alias="GL_POINT_SIZE_GRANULARITY"/>
-
-        <enum value="0x0B20" name="GL_LINE_SMOOTH"/>
-        <enum value="0x0B21" name="GL_LINE_WIDTH"/>
-        <enum value="0x0B22" name="GL_LINE_WIDTH_RANGE"/>
-        <enum value="0x0B22" name="GL_SMOOTH_LINE_WIDTH_RANGE" alias="GL_LINE_WIDTH_RANGE"/>
-        <enum value="0x0B23" name="GL_LINE_WIDTH_GRANULARITY"/>
-        <enum value="0x0B23" name="GL_SMOOTH_LINE_WIDTH_GRANULARITY" alias="GL_LINE_WIDTH_GRANULARITY"/>
-        <enum value="0x0B24" name="GL_LINE_STIPPLE"/>
-        <enum value="0x0B25" name="GL_LINE_STIPPLE_PATTERN"/>
-        <enum value="0x0B26" name="GL_LINE_STIPPLE_REPEAT"/>
-
-        <enum value="0x0B30" name="GL_LIST_MODE"/>
-        <enum value="0x0B31" name="GL_MAX_LIST_NESTING"/>
-        <enum value="0x0B32" name="GL_LIST_BASE"/>
-        <enum value="0x0B33" name="GL_LIST_INDEX"/>
-
-        <enum value="0x0B40" name="GL_POLYGON_MODE"/>
+        <enum value="0x0B00" name="GL_CURRENT_COLOR" group="GetPName"/>
+        <enum value="0x0B01" name="GL_CURRENT_INDEX" group="GetPName"/>
+        <enum value="0x0B02" name="GL_CURRENT_NORMAL" group="GetPName"/>
+        <enum value="0x0B03" name="GL_CURRENT_TEXTURE_COORDS" group="GetPName,VertexShaderTextureUnitParameter"/>
+        <enum value="0x0B04" name="GL_CURRENT_RASTER_COLOR" group="GetPName"/>
+        <enum value="0x0B05" name="GL_CURRENT_RASTER_INDEX" group="GetPName"/>
+        <enum value="0x0B06" name="GL_CURRENT_RASTER_TEXTURE_COORDS" group="GetPName"/>
+        <enum value="0x0B07" name="GL_CURRENT_RASTER_POSITION" group="GetPName"/>
+        <enum value="0x0B08" name="GL_CURRENT_RASTER_POSITION_VALID" group="GetPName"/>
+        <enum value="0x0B09" name="GL_CURRENT_RASTER_DISTANCE" group="GetPName"/>
+
+        <enum value="0x0B10" name="GL_POINT_SMOOTH" group="GetPName,EnableCap"/>
+        <enum value="0x0B11" name="GL_POINT_SIZE" group="GetPName"/>
+        <enum value="0x0B12" name="GL_POINT_SIZE_RANGE" group="GetPName"/>
+        <enum value="0x0B12" name="GL_SMOOTH_POINT_SIZE_RANGE" alias="GL_POINT_SIZE_RANGE" group="GetPName"/>
+        <enum value="0x0B13" name="GL_POINT_SIZE_GRANULARITY" group="GetPName"/>
+        <enum value="0x0B13" name="GL_SMOOTH_POINT_SIZE_GRANULARITY" alias="GL_POINT_SIZE_GRANULARITY" group="GetPName"/>
+
+        <enum value="0x0B20" name="GL_LINE_SMOOTH" group="GetPName,EnableCap"/>
+        <enum value="0x0B21" name="GL_LINE_WIDTH" group="GetPName"/>
+        <enum value="0x0B22" name="GL_LINE_WIDTH_RANGE" group="GetPName"/>
+        <enum value="0x0B22" name="GL_SMOOTH_LINE_WIDTH_RANGE" alias="GL_LINE_WIDTH_RANGE" group="GetPName"/>
+        <enum value="0x0B23" name="GL_LINE_WIDTH_GRANULARITY" group="GetPName"/>
+        <enum value="0x0B23" name="GL_SMOOTH_LINE_WIDTH_GRANULARITY" alias="GL_LINE_WIDTH_GRANULARITY" group="GetPName"/>
+        <enum value="0x0B24" name="GL_LINE_STIPPLE" group="GetPName,EnableCap"/>
+        <enum value="0x0B25" name="GL_LINE_STIPPLE_PATTERN" group="GetPName"/>
+        <enum value="0x0B26" name="GL_LINE_STIPPLE_REPEAT" group="GetPName"/>
+
+        <enum value="0x0B30" name="GL_LIST_MODE" group="GetPName"/>
+        <enum value="0x0B31" name="GL_MAX_LIST_NESTING" group="GetPName"/>
+        <enum value="0x0B32" name="GL_LIST_BASE" group="GetPName"/>
+        <enum value="0x0B33" name="GL_LIST_INDEX" group="GetPName"/>
+
+        <enum value="0x0B40" name="GL_POLYGON_MODE" group="GetPName"/>
         <enum value="0x0B40" name="GL_POLYGON_MODE_NV"/>
-        <enum value="0x0B41" name="GL_POLYGON_SMOOTH"/>
-        <enum value="0x0B42" name="GL_POLYGON_STIPPLE"/>
-        <enum value="0x0B43" name="GL_EDGE_FLAG"/>
-        <enum value="0x0B44" name="GL_CULL_FACE"/>
-        <enum value="0x0B45" name="GL_CULL_FACE_MODE"/>
-        <enum value="0x0B46" name="GL_FRONT_FACE"/>
-
-        <enum value="0x0B50" name="GL_LIGHTING"/>
-        <enum value="0x0B51" name="GL_LIGHT_MODEL_LOCAL_VIEWER"/>
-        <enum value="0x0B52" name="GL_LIGHT_MODEL_TWO_SIDE"/>
-        <enum value="0x0B53" name="GL_LIGHT_MODEL_AMBIENT"/>
-        <enum value="0x0B54" name="GL_SHADE_MODEL"/>
-        <enum value="0x0B55" name="GL_COLOR_MATERIAL_FACE"/>
-        <enum value="0x0B56" name="GL_COLOR_MATERIAL_PARAMETER"/>
-        <enum value="0x0B57" name="GL_COLOR_MATERIAL"/>
-
-        <enum value="0x0B60" name="GL_FOG"/>
-        <enum value="0x0B61" name="GL_FOG_INDEX"/>
-        <enum value="0x0B62" name="GL_FOG_DENSITY"/>
-        <enum value="0x0B63" name="GL_FOG_START"/>
-        <enum value="0x0B64" name="GL_FOG_END"/>
-        <enum value="0x0B65" name="GL_FOG_MODE"/>
-        <enum value="0x0B66" name="GL_FOG_COLOR"/>
-
-        <enum value="0x0B70" name="GL_DEPTH_RANGE"/>
-        <enum value="0x0B71" name="GL_DEPTH_TEST"/>
-        <enum value="0x0B72" name="GL_DEPTH_WRITEMASK"/>
-        <enum value="0x0B73" name="GL_DEPTH_CLEAR_VALUE"/>
-        <enum value="0x0B74" name="GL_DEPTH_FUNC"/>
-
-        <enum value="0x0B80" name="GL_ACCUM_CLEAR_VALUE"/>
-
-        <enum value="0x0B90" name="GL_STENCIL_TEST"/>
-        <enum value="0x0B91" name="GL_STENCIL_CLEAR_VALUE"/>
-        <enum value="0x0B92" name="GL_STENCIL_FUNC"/>
-        <enum value="0x0B93" name="GL_STENCIL_VALUE_MASK"/>
-        <enum value="0x0B94" name="GL_STENCIL_FAIL"/>
-        <enum value="0x0B95" name="GL_STENCIL_PASS_DEPTH_FAIL"/>
-        <enum value="0x0B96" name="GL_STENCIL_PASS_DEPTH_PASS"/>
-        <enum value="0x0B97" name="GL_STENCIL_REF"/>
-        <enum value="0x0B98" name="GL_STENCIL_WRITEMASK"/>
-
-        <enum value="0x0BA0" name="GL_MATRIX_MODE"/>
-        <enum value="0x0BA1" name="GL_NORMALIZE"/>
-        <enum value="0x0BA2" name="GL_VIEWPORT"/>
-        <enum value="0x0BA3" name="GL_MODELVIEW_STACK_DEPTH"/>
-        <enum value="0x0BA3" name="GL_MODELVIEW0_STACK_DEPTH_EXT"/>
+        <enum value="0x0B41" name="GL_POLYGON_SMOOTH" group="GetPName,EnableCap"/>
+        <enum value="0x0B42" name="GL_POLYGON_STIPPLE" group="GetPName,EnableCap"/>
+        <enum value="0x0B43" name="GL_EDGE_FLAG" group="GetPName"/>
+        <enum value="0x0B44" name="GL_CULL_FACE" group="GetPName,EnableCap"/>
+        <enum value="0x0B45" name="GL_CULL_FACE_MODE" group="GetPName"/>
+        <enum value="0x0B46" name="GL_FRONT_FACE" group="GetPName"/>
+
+        <enum value="0x0B50" name="GL_LIGHTING" group="GetPName,EnableCap"/>
+        <enum value="0x0B51" name="GL_LIGHT_MODEL_LOCAL_VIEWER" group="LightModelParameter,GetPName"/>
+        <enum value="0x0B52" name="GL_LIGHT_MODEL_TWO_SIDE" group="LightModelParameter,GetPName"/>
+        <enum value="0x0B53" name="GL_LIGHT_MODEL_AMBIENT" group="LightModelParameter,GetPName"/>
+        <enum value="0x0B54" name="GL_SHADE_MODEL" group="GetPName"/>
+        <enum value="0x0B55" name="GL_COLOR_MATERIAL_FACE" group="GetPName"/>
+        <enum value="0x0B56" name="GL_COLOR_MATERIAL_PARAMETER" group="GetPName"/>
+        <enum value="0x0B57" name="GL_COLOR_MATERIAL" group="GetPName,EnableCap"/>
+
+        <enum value="0x0B60" name="GL_FOG" group="GetPName,EnableCap"/>
+        <enum value="0x0B61" name="GL_FOG_INDEX" group="FogPName,FogParameter,GetPName"/>
+        <enum value="0x0B62" name="GL_FOG_DENSITY" group="FogPName,FogParameter,GetPName"/>
+        <enum value="0x0B63" name="GL_FOG_START" group="FogPName,FogParameter,GetPName"/>
+        <enum value="0x0B64" name="GL_FOG_END" group="FogPName,FogParameter,GetPName"/>
+        <enum value="0x0B65" name="GL_FOG_MODE" group="FogPName,FogParameter,GetPName"/>
+        <enum value="0x0B66" name="GL_FOG_COLOR" group="GetPName,FogParameter"/>
+
+        <enum value="0x0B70" name="GL_DEPTH_RANGE" group="GetPName"/>
+        <enum value="0x0B71" name="GL_DEPTH_TEST" group="GetPName,EnableCap"/>
+        <enum value="0x0B72" name="GL_DEPTH_WRITEMASK" group="GetPName"/>
+        <enum value="0x0B73" name="GL_DEPTH_CLEAR_VALUE" group="GetPName"/>
+        <enum value="0x0B74" name="GL_DEPTH_FUNC" group="GetPName"/>
+
+        <enum value="0x0B80" name="GL_ACCUM_CLEAR_VALUE" group="GetPName"/>
+
+        <enum value="0x0B90" name="GL_STENCIL_TEST" group="GetPName,EnableCap"/>
+        <enum value="0x0B91" name="GL_STENCIL_CLEAR_VALUE" group="GetPName"/>
+        <enum value="0x0B92" name="GL_STENCIL_FUNC" group="GetPName"/>
+        <enum value="0x0B93" name="GL_STENCIL_VALUE_MASK" group="GetPName"/>
+        <enum value="0x0B94" name="GL_STENCIL_FAIL" group="GetPName"/>
+        <enum value="0x0B95" name="GL_STENCIL_PASS_DEPTH_FAIL" group="GetPName"/>
+        <enum value="0x0B96" name="GL_STENCIL_PASS_DEPTH_PASS" group="GetPName"/>
+        <enum value="0x0B97" name="GL_STENCIL_REF" group="GetPName"/>
+        <enum value="0x0B98" name="GL_STENCIL_WRITEMASK" group="GetPName"/>
+
+        <enum value="0x0BA0" name="GL_MATRIX_MODE" group="GetPName"/>
+        <enum value="0x0BA1" name="GL_NORMALIZE" group="GetPName,EnableCap"/>
+        <enum value="0x0BA2" name="GL_VIEWPORT" group="GetPName"/>
+        <enum value="0x0BA3" name="GL_MODELVIEW_STACK_DEPTH" group="GetPName"/>
+        <enum value="0x0BA3" name="GL_MODELVIEW0_STACK_DEPTH_EXT" group="GetPName"/>
         <enum value="0x0BA3" name="GL_PATH_MODELVIEW_STACK_DEPTH_NV"/>
-        <enum value="0x0BA4" name="GL_PROJECTION_STACK_DEPTH"/>
+        <enum value="0x0BA4" name="GL_PROJECTION_STACK_DEPTH" group="GetPName"/>
         <enum value="0x0BA4" name="GL_PATH_PROJECTION_STACK_DEPTH_NV"/>
-        <enum value="0x0BA5" name="GL_TEXTURE_STACK_DEPTH"/>
-        <enum value="0x0BA6" name="GL_MODELVIEW_MATRIX"/>
-        <enum value="0x0BA6" name="GL_MODELVIEW0_MATRIX_EXT"/>
+        <enum value="0x0BA5" name="GL_TEXTURE_STACK_DEPTH" group="GetPName"/>
+        <enum value="0x0BA6" name="GL_MODELVIEW_MATRIX" group="GetPName"/>
+        <enum value="0x0BA6" name="GL_MODELVIEW0_MATRIX_EXT" group="GetPName"/>
         <enum value="0x0BA6" name="GL_PATH_MODELVIEW_MATRIX_NV"/>
-        <enum value="0x0BA7" name="GL_PROJECTION_MATRIX"/>
+        <enum value="0x0BA7" name="GL_PROJECTION_MATRIX" group="GetPName"/>
         <enum value="0x0BA7" name="GL_PATH_PROJECTION_MATRIX_NV"/>
-        <enum value="0x0BA8" name="GL_TEXTURE_MATRIX"/>
-
-        <enum value="0x0BB0" name="GL_ATTRIB_STACK_DEPTH"/>
-        <enum value="0x0BB1" name="GL_CLIENT_ATTRIB_STACK_DEPTH"/>
-
-        <enum value="0x0BC0" name="GL_ALPHA_TEST"/>
-        <enum value="0x0BC0" name="GL_ALPHA_TEST_QCOM"/>
-        <enum value="0x0BC1" name="GL_ALPHA_TEST_FUNC"/>
-        <enum value="0x0BC1" name="GL_ALPHA_TEST_FUNC_QCOM"/>
-        <enum value="0x0BC2" name="GL_ALPHA_TEST_REF"/>
-        <enum value="0x0BC2" name="GL_ALPHA_TEST_REF_QCOM"/>
-
-        <enum value="0x0BD0" name="GL_DITHER"/>
-
-        <enum value="0x0BE0" name="GL_BLEND_DST"/>
-        <enum value="0x0BE1" name="GL_BLEND_SRC"/>
-        <enum value="0x0BE2" name="GL_BLEND"/>
-
-        <enum value="0x0BF0" name="GL_LOGIC_OP_MODE"/>
-        <enum value="0x0BF1" name="GL_INDEX_LOGIC_OP"/>
-        <enum value="0x0BF1" name="GL_LOGIC_OP"/>
-        <enum value="0x0BF2" name="GL_COLOR_LOGIC_OP"/>
-
-        <enum value="0x0C00" name="GL_AUX_BUFFERS"/>
-        <enum value="0x0C01" name="GL_DRAW_BUFFER"/>
-        <enum value="0x0C01" name="GL_DRAW_BUFFER_EXT"/>
-        <enum value="0x0C02" name="GL_READ_BUFFER"/>
-        <enum value="0x0C02" name="GL_READ_BUFFER_EXT"/>
-        <enum value="0x0C02" name="GL_READ_BUFFER_NV"/>
-
-        <enum value="0x0C10" name="GL_SCISSOR_BOX"/>
-        <enum value="0x0C11" name="GL_SCISSOR_TEST"/>
-
-        <enum value="0x0C20" name="GL_INDEX_CLEAR_VALUE"/>
-        <enum value="0x0C21" name="GL_INDEX_WRITEMASK"/>
-        <enum value="0x0C22" name="GL_COLOR_CLEAR_VALUE"/>
-        <enum value="0x0C23" name="GL_COLOR_WRITEMASK"/>
-
-        <enum value="0x0C30" name="GL_INDEX_MODE"/>
-        <enum value="0x0C31" name="GL_RGBA_MODE"/>
-        <enum value="0x0C32" name="GL_DOUBLEBUFFER"/>
-        <enum value="0x0C33" name="GL_STEREO"/>
-
-        <enum value="0x0C40" name="GL_RENDER_MODE"/>
-
-        <enum value="0x0C50" name="GL_PERSPECTIVE_CORRECTION_HINT"/>
-        <enum value="0x0C51" name="GL_POINT_SMOOTH_HINT"/>
-        <enum value="0x0C52" name="GL_LINE_SMOOTH_HINT"/>
-        <enum value="0x0C53" name="GL_POLYGON_SMOOTH_HINT"/>
-        <enum value="0x0C54" name="GL_FOG_HINT"/>
-
-        <enum value="0x0C60" name="GL_TEXTURE_GEN_S"/>
-        <enum value="0x0C61" name="GL_TEXTURE_GEN_T"/>
-        <enum value="0x0C62" name="GL_TEXTURE_GEN_R"/>
-        <enum value="0x0C63" name="GL_TEXTURE_GEN_Q"/>
-
-        <enum value="0x0C70" name="GL_PIXEL_MAP_I_TO_I"/>
-        <enum value="0x0C71" name="GL_PIXEL_MAP_S_TO_S"/>
-        <enum value="0x0C72" name="GL_PIXEL_MAP_I_TO_R"/>
-        <enum value="0x0C73" name="GL_PIXEL_MAP_I_TO_G"/>
-        <enum value="0x0C74" name="GL_PIXEL_MAP_I_TO_B"/>
-        <enum value="0x0C75" name="GL_PIXEL_MAP_I_TO_A"/>
-        <enum value="0x0C76" name="GL_PIXEL_MAP_R_TO_R"/>
-        <enum value="0x0C77" name="GL_PIXEL_MAP_G_TO_G"/>
-        <enum value="0x0C78" name="GL_PIXEL_MAP_B_TO_B"/>
-        <enum value="0x0C79" name="GL_PIXEL_MAP_A_TO_A"/>
-
-        <enum value="0x0CB0" name="GL_PIXEL_MAP_I_TO_I_SIZE"/>
-        <enum value="0x0CB1" name="GL_PIXEL_MAP_S_TO_S_SIZE"/>
-        <enum value="0x0CB2" name="GL_PIXEL_MAP_I_TO_R_SIZE"/>
-        <enum value="0x0CB3" name="GL_PIXEL_MAP_I_TO_G_SIZE"/>
-        <enum value="0x0CB4" name="GL_PIXEL_MAP_I_TO_B_SIZE"/>
-        <enum value="0x0CB5" name="GL_PIXEL_MAP_I_TO_A_SIZE"/>
-        <enum value="0x0CB6" name="GL_PIXEL_MAP_R_TO_R_SIZE"/>
-        <enum value="0x0CB7" name="GL_PIXEL_MAP_G_TO_G_SIZE"/>
-        <enum value="0x0CB8" name="GL_PIXEL_MAP_B_TO_B_SIZE"/>
-        <enum value="0x0CB9" name="GL_PIXEL_MAP_A_TO_A_SIZE"/>
-
-        <enum value="0x0CF0" name="GL_UNPACK_SWAP_BYTES"/>
-        <enum value="0x0CF1" name="GL_UNPACK_LSB_FIRST"/>
-        <enum value="0x0CF2" name="GL_UNPACK_ROW_LENGTH"/>
-        <enum value="0x0CF2" name="GL_UNPACK_ROW_LENGTH_EXT"/>
-        <enum value="0x0CF3" name="GL_UNPACK_SKIP_ROWS"/>
-        <enum value="0x0CF3" name="GL_UNPACK_SKIP_ROWS_EXT"/>
-        <enum value="0x0CF4" name="GL_UNPACK_SKIP_PIXELS"/>
-        <enum value="0x0CF4" name="GL_UNPACK_SKIP_PIXELS_EXT"/>
-        <enum value="0x0CF5" name="GL_UNPACK_ALIGNMENT"/>
-
-        <enum value="0x0D00" name="GL_PACK_SWAP_BYTES"/>
-        <enum value="0x0D01" name="GL_PACK_LSB_FIRST"/>
-        <enum value="0x0D02" name="GL_PACK_ROW_LENGTH"/>
-        <enum value="0x0D03" name="GL_PACK_SKIP_ROWS"/>
-        <enum value="0x0D04" name="GL_PACK_SKIP_PIXELS"/>
-        <enum value="0x0D05" name="GL_PACK_ALIGNMENT"/>
-
-        <enum value="0x0D10" name="GL_MAP_COLOR"/>
-        <enum value="0x0D11" name="GL_MAP_STENCIL"/>
-        <enum value="0x0D12" name="GL_INDEX_SHIFT"/>
-        <enum value="0x0D13" name="GL_INDEX_OFFSET"/>
-        <enum value="0x0D14" name="GL_RED_SCALE"/>
-        <enum value="0x0D15" name="GL_RED_BIAS"/>
-        <enum value="0x0D16" name="GL_ZOOM_X"/>
-        <enum value="0x0D17" name="GL_ZOOM_Y"/>
-        <enum value="0x0D18" name="GL_GREEN_SCALE"/>
-        <enum value="0x0D19" name="GL_GREEN_BIAS"/>
-        <enum value="0x0D1A" name="GL_BLUE_SCALE"/>
-        <enum value="0x0D1B" name="GL_BLUE_BIAS"/>
-        <enum value="0x0D1C" name="GL_ALPHA_SCALE"/>
-        <enum value="0x0D1D" name="GL_ALPHA_BIAS"/>
-        <enum value="0x0D1E" name="GL_DEPTH_SCALE"/>
-        <enum value="0x0D1F" name="GL_DEPTH_BIAS"/>
-
-        <enum value="0x0D30" name="GL_MAX_EVAL_ORDER"/>
-        <enum value="0x0D31" name="GL_MAX_LIGHTS"/>
-        <enum value="0x0D32" name="GL_MAX_CLIP_PLANES"/>
+        <enum value="0x0BA8" name="GL_TEXTURE_MATRIX" group="GetPName,VertexShaderTextureUnitParameter"/>
+
+        <enum value="0x0BB0" name="GL_ATTRIB_STACK_DEPTH" group="GetPName"/>
+        <enum value="0x0BB1" name="GL_CLIENT_ATTRIB_STACK_DEPTH" group="GetPName"/>
+
+        <enum value="0x0BC0" name="GL_ALPHA_TEST" group="GetPName,EnableCap"/>
+        <enum value="0x0BC0" name="GL_ALPHA_TEST_QCOM" group="GetPName"/>
+        <enum value="0x0BC1" name="GL_ALPHA_TEST_FUNC" group="GetPName"/>
+        <enum value="0x0BC1" name="GL_ALPHA_TEST_FUNC_QCOM" group="GetPName"/>
+        <enum value="0x0BC2" name="GL_ALPHA_TEST_REF" group="GetPName"/>
+        <enum value="0x0BC2" name="GL_ALPHA_TEST_REF_QCOM" group="GetPName"/>
+
+        <enum value="0x0BD0" name="GL_DITHER" group="GetPName,EnableCap"/>
+
+        <enum value="0x0BE0" name="GL_BLEND_DST" group="GetPName"/>
+        <enum value="0x0BE1" name="GL_BLEND_SRC" group="GetPName"/>
+        <enum value="0x0BE2" name="GL_BLEND" group="TextureEnvMode,EnableCap,GetPName"/>
+
+        <enum value="0x0BF0" name="GL_LOGIC_OP_MODE" group="GetPName"/>
+        <enum value="0x0BF1" name="GL_INDEX_LOGIC_OP" group="GetPName,EnableCap"/>
+        <enum value="0x0BF1" name="GL_LOGIC_OP" group="GetPName"/>
+        <enum value="0x0BF2" name="GL_COLOR_LOGIC_OP" group="GetPName,EnableCap"/>
+
+        <enum value="0x0C00" name="GL_AUX_BUFFERS" group="GetPName"/>
+        <enum value="0x0C01" name="GL_DRAW_BUFFER" group="GetPName"/>
+        <enum value="0x0C01" name="GL_DRAW_BUFFER_EXT" group="GetPName"/>
+        <enum value="0x0C02" name="GL_READ_BUFFER" group="GetPName"/>
+        <enum value="0x0C02" name="GL_READ_BUFFER_EXT" group="GetPName"/>
+        <enum value="0x0C02" name="GL_READ_BUFFER_NV" group="GetPName"/>
+
+        <enum value="0x0C10" name="GL_SCISSOR_BOX" group="GetPName"/>
+        <enum value="0x0C11" name="GL_SCISSOR_TEST" group="GetPName,EnableCap"/>
+
+        <enum value="0x0C20" name="GL_INDEX_CLEAR_VALUE" group="GetPName"/>
+        <enum value="0x0C21" name="GL_INDEX_WRITEMASK" group="GetPName"/>
+        <enum value="0x0C22" name="GL_COLOR_CLEAR_VALUE" group="GetPName"/>
+        <enum value="0x0C23" name="GL_COLOR_WRITEMASK" group="GetPName"/>
+
+        <enum value="0x0C30" name="GL_INDEX_MODE" group="GetPName"/>
+        <enum value="0x0C31" name="GL_RGBA_MODE" group="GetPName"/>
+        <enum value="0x0C32" name="GL_DOUBLEBUFFER" group="GetFramebufferParameter,GetPName"/>
+        <enum value="0x0C33" name="GL_STEREO" group="GetFramebufferParameter,GetPName"/>
+
+        <enum value="0x0C40" name="GL_RENDER_MODE" group="GetPName"/>
+
+        <enum value="0x0C50" name="GL_PERSPECTIVE_CORRECTION_HINT" group="HintTarget,GetPName"/>
+        <enum value="0x0C51" name="GL_POINT_SMOOTH_HINT" group="HintTarget,GetPName"/>
+        <enum value="0x0C52" name="GL_LINE_SMOOTH_HINT" group="HintTarget,GetPName"/>
+        <enum value="0x0C53" name="GL_POLYGON_SMOOTH_HINT" group="HintTarget,GetPName"/>
+        <enum value="0x0C54" name="GL_FOG_HINT" group="HintTarget,GetPName"/>
+
+        <enum value="0x0C60" name="GL_TEXTURE_GEN_S" group="GetPName,EnableCap"/>
+        <enum value="0x0C61" name="GL_TEXTURE_GEN_T" group="GetPName,EnableCap"/>
+        <enum value="0x0C62" name="GL_TEXTURE_GEN_R" group="GetPName,EnableCap"/>
+        <enum value="0x0C63" name="GL_TEXTURE_GEN_Q" group="GetPName,EnableCap"/>
+
+        <enum value="0x0C70" name="GL_PIXEL_MAP_I_TO_I" group="PixelMap"/>
+        <enum value="0x0C71" name="GL_PIXEL_MAP_S_TO_S" group="PixelMap"/>
+        <enum value="0x0C72" name="GL_PIXEL_MAP_I_TO_R" group="PixelMap"/>
+        <enum value="0x0C73" name="GL_PIXEL_MAP_I_TO_G" group="PixelMap"/>
+        <enum value="0x0C74" name="GL_PIXEL_MAP_I_TO_B" group="PixelMap"/>
+        <enum value="0x0C75" name="GL_PIXEL_MAP_I_TO_A" group="PixelMap"/>
+        <enum value="0x0C76" name="GL_PIXEL_MAP_R_TO_R" group="PixelMap"/>
+        <enum value="0x0C77" name="GL_PIXEL_MAP_G_TO_G" group="PixelMap"/>
+        <enum value="0x0C78" name="GL_PIXEL_MAP_B_TO_B" group="PixelMap"/>
+        <enum value="0x0C79" name="GL_PIXEL_MAP_A_TO_A" group="PixelMap"/>
+
+        <enum value="0x0CB0" name="GL_PIXEL_MAP_I_TO_I_SIZE" group="GetPName"/>
+        <enum value="0x0CB1" name="GL_PIXEL_MAP_S_TO_S_SIZE" group="GetPName"/>
+        <enum value="0x0CB2" name="GL_PIXEL_MAP_I_TO_R_SIZE" group="GetPName"/>
+        <enum value="0x0CB3" name="GL_PIXEL_MAP_I_TO_G_SIZE" group="GetPName"/>
+        <enum value="0x0CB4" name="GL_PIXEL_MAP_I_TO_B_SIZE" group="GetPName"/>
+        <enum value="0x0CB5" name="GL_PIXEL_MAP_I_TO_A_SIZE" group="GetPName"/>
+        <enum value="0x0CB6" name="GL_PIXEL_MAP_R_TO_R_SIZE" group="GetPName"/>
+        <enum value="0x0CB7" name="GL_PIXEL_MAP_G_TO_G_SIZE" group="GetPName"/>
+        <enum value="0x0CB8" name="GL_PIXEL_MAP_B_TO_B_SIZE" group="GetPName"/>
+        <enum value="0x0CB9" name="GL_PIXEL_MAP_A_TO_A_SIZE" group="GetPName"/>
+
+        <enum value="0x0CF0" name="GL_UNPACK_SWAP_BYTES" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x0CF1" name="GL_UNPACK_LSB_FIRST" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x0CF2" name="GL_UNPACK_ROW_LENGTH" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x0CF2" name="GL_UNPACK_ROW_LENGTH_EXT" group="PixelStoreParameter"/>
+        <enum value="0x0CF3" name="GL_UNPACK_SKIP_ROWS" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x0CF3" name="GL_UNPACK_SKIP_ROWS_EXT" group="PixelStoreParameter"/>
+        <enum value="0x0CF4" name="GL_UNPACK_SKIP_PIXELS" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x0CF4" name="GL_UNPACK_SKIP_PIXELS_EXT" group="PixelStoreParameter"/>
+        <enum value="0x0CF5" name="GL_UNPACK_ALIGNMENT" group="PixelStoreParameter,GetPName"/>
+
+        <enum value="0x0D00" name="GL_PACK_SWAP_BYTES" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x0D01" name="GL_PACK_LSB_FIRST" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x0D02" name="GL_PACK_ROW_LENGTH" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x0D02" name="GL_PACK_ROW_LENGTH_NV" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x0D03" name="GL_PACK_SKIP_ROWS" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x0D03" name="GL_PACK_SKIP_ROWS_NV" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x0D04" name="GL_PACK_SKIP_PIXELS" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x0D04" name="GL_PACK_SKIP_PIXELS_NV" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x0D05" name="GL_PACK_ALIGNMENT" group="PixelStoreParameter,GetPName"/>
+
+        <enum value="0x0D10" name="GL_MAP_COLOR" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x0D11" name="GL_MAP_STENCIL" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x0D12" name="GL_INDEX_SHIFT" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x0D13" name="GL_INDEX_OFFSET" group="PixelTransferParameter,IndexMaterialParameterEXT,GetPName"/>
+        <enum value="0x0D14" name="GL_RED_SCALE" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x0D15" name="GL_RED_BIAS" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x0D16" name="GL_ZOOM_X" group="GetPName"/>
+        <enum value="0x0D17" name="GL_ZOOM_Y" group="GetPName"/>
+        <enum value="0x0D18" name="GL_GREEN_SCALE" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x0D19" name="GL_GREEN_BIAS" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x0D1A" name="GL_BLUE_SCALE" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x0D1B" name="GL_BLUE_BIAS" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x0D1C" name="GL_ALPHA_SCALE" group="PixelTransferParameter,GetPName,TextureEnvParameter"/>
+        <enum value="0x0D1D" name="GL_ALPHA_BIAS" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x0D1E" name="GL_DEPTH_SCALE" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x0D1F" name="GL_DEPTH_BIAS" group="PixelTransferParameter,GetPName"/>
+
+        <enum value="0x0D30" name="GL_MAX_EVAL_ORDER" group="GetPName"/>
+        <enum value="0x0D31" name="GL_MAX_LIGHTS" group="GetPName"/>
+        <enum value="0x0D32" name="GL_MAX_CLIP_PLANES" group="GetPName"/>
         <enum value="0x0D32" name="GL_MAX_CLIP_PLANES_IMG"/>
-        <enum value="0x0D32" name="GL_MAX_CLIP_DISTANCES" alias="GL_MAX_CLIP_PLANES"/>
+        <enum value="0x0D32" name="GL_MAX_CLIP_DISTANCES" alias="GL_MAX_CLIP_PLANES" group="GetPName"/>
         <enum value="0x0D32" name="GL_MAX_CLIP_DISTANCES_EXT" alias="GL_MAX_CLIP_PLANES"/>
         <enum value="0x0D32" name="GL_MAX_CLIP_DISTANCES_APPLE"/>
-        <enum value="0x0D33" name="GL_MAX_TEXTURE_SIZE"/>
-        <enum value="0x0D34" name="GL_MAX_PIXEL_MAP_TABLE"/>
-        <enum value="0x0D35" name="GL_MAX_ATTRIB_STACK_DEPTH"/>
-        <enum value="0x0D36" name="GL_MAX_MODELVIEW_STACK_DEPTH"/>
+        <enum value="0x0D33" name="GL_MAX_TEXTURE_SIZE" group="GetPName"/>
+        <enum value="0x0D34" name="GL_MAX_PIXEL_MAP_TABLE" group="GetPName"/>
+        <enum value="0x0D35" name="GL_MAX_ATTRIB_STACK_DEPTH" group="GetPName"/>
+        <enum value="0x0D36" name="GL_MAX_MODELVIEW_STACK_DEPTH" group="GetPName"/>
         <enum value="0x0D36" name="GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV"/>
-        <enum value="0x0D37" name="GL_MAX_NAME_STACK_DEPTH"/>
-        <enum value="0x0D38" name="GL_MAX_PROJECTION_STACK_DEPTH"/>
+        <enum value="0x0D37" name="GL_MAX_NAME_STACK_DEPTH" group="GetPName"/>
+        <enum value="0x0D38" name="GL_MAX_PROJECTION_STACK_DEPTH" group="GetPName"/>
         <enum value="0x0D38" name="GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV"/>
-        <enum value="0x0D39" name="GL_MAX_TEXTURE_STACK_DEPTH"/>
-        <enum value="0x0D3A" name="GL_MAX_VIEWPORT_DIMS"/>
-        <enum value="0x0D3B" name="GL_MAX_CLIENT_ATTRIB_STACK_DEPTH"/>
-
-        <enum value="0x0D50" name="GL_SUBPIXEL_BITS"/>
-        <enum value="0x0D51" name="GL_INDEX_BITS"/>
-        <enum value="0x0D52" name="GL_RED_BITS"/>
-        <enum value="0x0D53" name="GL_GREEN_BITS"/>
-        <enum value="0x0D54" name="GL_BLUE_BITS"/>
-        <enum value="0x0D55" name="GL_ALPHA_BITS"/>
-        <enum value="0x0D56" name="GL_DEPTH_BITS"/>
-        <enum value="0x0D57" name="GL_STENCIL_BITS"/>
-        <enum value="0x0D58" name="GL_ACCUM_RED_BITS"/>
-        <enum value="0x0D59" name="GL_ACCUM_GREEN_BITS"/>
-        <enum value="0x0D5A" name="GL_ACCUM_BLUE_BITS"/>
-        <enum value="0x0D5B" name="GL_ACCUM_ALPHA_BITS"/>
-
-        <enum value="0x0D70" name="GL_NAME_STACK_DEPTH"/>
-
-        <enum value="0x0D80" name="GL_AUTO_NORMAL"/>
-
-        <enum value="0x0D90" name="GL_MAP1_COLOR_4"/>
-        <enum value="0x0D91" name="GL_MAP1_INDEX"/>
-        <enum value="0x0D92" name="GL_MAP1_NORMAL"/>
-        <enum value="0x0D93" name="GL_MAP1_TEXTURE_COORD_1"/>
-        <enum value="0x0D94" name="GL_MAP1_TEXTURE_COORD_2"/>
-        <enum value="0x0D95" name="GL_MAP1_TEXTURE_COORD_3"/>
-        <enum value="0x0D96" name="GL_MAP1_TEXTURE_COORD_4"/>
-        <enum value="0x0D97" name="GL_MAP1_VERTEX_3"/>
-        <enum value="0x0D98" name="GL_MAP1_VERTEX_4"/>
-
-        <enum value="0x0DB0" name="GL_MAP2_COLOR_4"/>
-        <enum value="0x0DB1" name="GL_MAP2_INDEX"/>
-        <enum value="0x0DB2" name="GL_MAP2_NORMAL"/>
-        <enum value="0x0DB3" name="GL_MAP2_TEXTURE_COORD_1"/>
-        <enum value="0x0DB4" name="GL_MAP2_TEXTURE_COORD_2"/>
-        <enum value="0x0DB5" name="GL_MAP2_TEXTURE_COORD_3"/>
-        <enum value="0x0DB6" name="GL_MAP2_TEXTURE_COORD_4"/>
-        <enum value="0x0DB7" name="GL_MAP2_VERTEX_3"/>
-        <enum value="0x0DB8" name="GL_MAP2_VERTEX_4"/>
-
-        <enum value="0x0DD0" name="GL_MAP1_GRID_DOMAIN"/>
-        <enum value="0x0DD1" name="GL_MAP1_GRID_SEGMENTS"/>
-        <enum value="0x0DD2" name="GL_MAP2_GRID_DOMAIN"/>
-        <enum value="0x0DD3" name="GL_MAP2_GRID_SEGMENTS"/>
-
-        <enum value="0x0DE0" name="GL_TEXTURE_1D"/>
-        <enum value="0x0DE1" name="GL_TEXTURE_2D"/>
-
-        <enum value="0x0DF0" name="GL_FEEDBACK_BUFFER_POINTER"/>
-        <enum value="0x0DF1" name="GL_FEEDBACK_BUFFER_SIZE"/>
-        <enum value="0x0DF2" name="GL_FEEDBACK_BUFFER_TYPE"/>
-        <enum value="0x0DF3" name="GL_SELECTION_BUFFER_POINTER"/>
-        <enum value="0x0DF4" name="GL_SELECTION_BUFFER_SIZE"/>
+        <enum value="0x0D39" name="GL_MAX_TEXTURE_STACK_DEPTH" group="GetPName"/>
+        <enum value="0x0D3A" name="GL_MAX_VIEWPORT_DIMS" group="GetPName"/>
+        <enum value="0x0D3B" name="GL_MAX_CLIENT_ATTRIB_STACK_DEPTH" group="GetPName"/>
+
+        <enum value="0x0D50" name="GL_SUBPIXEL_BITS" group="GetPName"/>
+        <enum value="0x0D51" name="GL_INDEX_BITS" group="GetPName"/>
+        <enum value="0x0D52" name="GL_RED_BITS" group="GetPName"/>
+        <enum value="0x0D53" name="GL_GREEN_BITS" group="GetPName"/>
+        <enum value="0x0D54" name="GL_BLUE_BITS" group="GetPName"/>
+        <enum value="0x0D55" name="GL_ALPHA_BITS" group="GetPName"/>
+        <enum value="0x0D56" name="GL_DEPTH_BITS" group="GetPName"/>
+        <enum value="0x0D57" name="GL_STENCIL_BITS" group="GetPName"/>
+        <enum value="0x0D58" name="GL_ACCUM_RED_BITS" group="GetPName"/>
+        <enum value="0x0D59" name="GL_ACCUM_GREEN_BITS" group="GetPName"/>
+        <enum value="0x0D5A" name="GL_ACCUM_BLUE_BITS" group="GetPName"/>
+        <enum value="0x0D5B" name="GL_ACCUM_ALPHA_BITS" group="GetPName"/>
+
+        <enum value="0x0D70" name="GL_NAME_STACK_DEPTH" group="GetPName"/>
+
+        <enum value="0x0D80" name="GL_AUTO_NORMAL" group="GetPName,EnableCap"/>
+
+        <enum value="0x0D90" name="GL_MAP1_COLOR_4" group="MapTarget,EnableCap,GetPName"/>
+        <enum value="0x0D91" name="GL_MAP1_INDEX" group="MapTarget,EnableCap,GetPName"/>
+        <enum value="0x0D92" name="GL_MAP1_NORMAL" group="MapTarget,EnableCap,GetPName"/>
+        <enum value="0x0D93" name="GL_MAP1_TEXTURE_COORD_1" group="MapTarget,EnableCap,GetPName"/>
+        <enum value="0x0D94" name="GL_MAP1_TEXTURE_COORD_2" group="MapTarget,EnableCap,GetPName"/>
+        <enum value="0x0D95" name="GL_MAP1_TEXTURE_COORD_3" group="MapTarget,EnableCap,GetPName"/>
+        <enum value="0x0D96" name="GL_MAP1_TEXTURE_COORD_4" group="MapTarget,EnableCap,GetPName"/>
+        <enum value="0x0D97" name="GL_MAP1_VERTEX_3" group="MapTarget,EnableCap,GetPName"/>
+        <enum value="0x0D98" name="GL_MAP1_VERTEX_4" group="MapTarget,EnableCap,GetPName"/>
+
+        <enum value="0x0DB0" name="GL_MAP2_COLOR_4" group="MapTarget,EnableCap,GetPName"/>
+        <enum value="0x0DB1" name="GL_MAP2_INDEX" group="MapTarget,EnableCap,GetPName"/>
+        <enum value="0x0DB2" name="GL_MAP2_NORMAL" group="MapTarget,EnableCap,GetPName"/>
+        <enum value="0x0DB3" name="GL_MAP2_TEXTURE_COORD_1" group="MapTarget,EnableCap,GetPName"/>
+        <enum value="0x0DB4" name="GL_MAP2_TEXTURE_COORD_2" group="MapTarget,EnableCap,GetPName"/>
+        <enum value="0x0DB5" name="GL_MAP2_TEXTURE_COORD_3" group="MapTarget,EnableCap,GetPName"/>
+        <enum value="0x0DB6" name="GL_MAP2_TEXTURE_COORD_4" group="MapTarget,EnableCap,GetPName"/>
+        <enum value="0x0DB7" name="GL_MAP2_VERTEX_3" group="MapTarget,EnableCap,GetPName"/>
+        <enum value="0x0DB8" name="GL_MAP2_VERTEX_4" group="MapTarget,EnableCap,GetPName"/>
+
+        <enum value="0x0DD0" name="GL_MAP1_GRID_DOMAIN" group="GetPName"/>
+        <enum value="0x0DD1" name="GL_MAP1_GRID_SEGMENTS" group="GetPName"/>
+        <enum value="0x0DD2" name="GL_MAP2_GRID_DOMAIN" group="GetPName"/>
+        <enum value="0x0DD3" name="GL_MAP2_GRID_SEGMENTS" group="GetPName"/>
+
+        <enum value="0x0DE0" name="GL_TEXTURE_1D" group="CopyImageSubDataTarget,EnableCap,GetPName,TextureTarget"/>
+        <enum value="0x0DE1" name="GL_TEXTURE_2D" group="CopyImageSubDataTarget,EnableCap,GetPName,TextureTarget"/>
+
+        <enum value="0x0DF0" name="GL_FEEDBACK_BUFFER_POINTER" group="GetPointervPName"/>
+        <enum value="0x0DF1" name="GL_FEEDBACK_BUFFER_SIZE" group="GetPName"/>
+        <enum value="0x0DF2" name="GL_FEEDBACK_BUFFER_TYPE" group="GetPName"/>
+        <enum value="0x0DF3" name="GL_SELECTION_BUFFER_POINTER" group="GetPointervPName"/>
+        <enum value="0x0DF4" name="GL_SELECTION_BUFFER_SIZE" group="GetPName"/>
             <unused start="0x0DF5" end="0xFFFF" comment="Unused for GetPName"/>
-        <enum value="0x1000" name="GL_TEXTURE_WIDTH"/>
-        <enum value="0x1001" name="GL_TEXTURE_HEIGHT"/>
-        <enum value="0x1003" name="GL_TEXTURE_INTERNAL_FORMAT"/>
-        <enum value="0x1003" name="GL_TEXTURE_COMPONENTS"/>
-        <enum value="0x1004" name="GL_TEXTURE_BORDER_COLOR"/>
+        <enum value="0x1000" name="GL_TEXTURE_WIDTH" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x1001" name="GL_TEXTURE_HEIGHT" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x1003" name="GL_TEXTURE_INTERNAL_FORMAT" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x1003" name="GL_TEXTURE_COMPONENTS" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x1004" name="GL_TEXTURE_BORDER_COLOR" group="SamplerParameterF,GetTextureParameter,TextureParameterName"/>
         <enum value="0x1004" name="GL_TEXTURE_BORDER_COLOR_EXT"/>
-        <enum value="0x1004" name="GL_TEXTURE_BORDER_COLOR_NV"/>
+        <enum value="0x1004" name="GL_TEXTURE_BORDER_COLOR_NV" group="TextureParameterName,GetTextureParameter"/>
         <enum value="0x1004" name="GL_TEXTURE_BORDER_COLOR_OES"/>
-        <enum value="0x1005" name="GL_TEXTURE_BORDER"/>
+        <enum value="0x1005" name="GL_TEXTURE_BORDER" group="TextureParameterName,GetTextureParameter"/>
         <enum value="0x1006" name="GL_TEXTURE_TARGET"/>
             <unused start="0x1007" end="0x10FF" comment="Unused for GetTextureParameter"/>
-        <enum value="0x1100" name="GL_DONT_CARE"/>
-        <enum value="0x1101" name="GL_FASTEST"/>
-        <enum value="0x1102" name="GL_NICEST"/>
+        <enum value="0x1100" name="GL_DONT_CARE" group="DebugSeverity,HintMode,DebugSource,DebugType"/>
+        <enum value="0x1101" name="GL_FASTEST" group="HintMode"/>
+        <enum value="0x1102" name="GL_NICEST" group="HintMode"/>
             <unused start="0x1103" end="0x11FF" comment="Unused for HintMode"/>
-        <enum value="0x1200" name="GL_AMBIENT"/>
-        <enum value="0x1201" name="GL_DIFFUSE"/>
-        <enum value="0x1202" name="GL_SPECULAR"/>
-        <enum value="0x1203" name="GL_POSITION"/>
-        <enum value="0x1204" name="GL_SPOT_DIRECTION"/>
-        <enum value="0x1205" name="GL_SPOT_EXPONENT"/>
-        <enum value="0x1206" name="GL_SPOT_CUTOFF"/>
-        <enum value="0x1207" name="GL_CONSTANT_ATTENUATION"/>
-        <enum value="0x1208" name="GL_LINEAR_ATTENUATION"/>
-        <enum value="0x1209" name="GL_QUADRATIC_ATTENUATION"/>
+        <enum value="0x1200" name="GL_AMBIENT" group="MaterialParameter,FragmentLightParameterSGIX,ColorMaterialParameter"/>
+        <enum value="0x1201" name="GL_DIFFUSE" group="MaterialParameter,FragmentLightParameterSGIX,ColorMaterialParameter"/>
+        <enum value="0x1202" name="GL_SPECULAR" group="MaterialParameter,FragmentLightParameterSGIX,ColorMaterialParameter"/>
+        <enum value="0x1203" name="GL_POSITION" group="LightParameter,FragmentLightParameterSGIX"/>
+        <enum value="0x1204" name="GL_SPOT_DIRECTION" group="LightParameter,FragmentLightParameterSGIX"/>
+        <enum value="0x1205" name="GL_SPOT_EXPONENT" group="LightParameter,FragmentLightParameterSGIX"/>
+        <enum value="0x1206" name="GL_SPOT_CUTOFF" group="LightParameter,FragmentLightParameterSGIX"/>
+        <enum value="0x1207" name="GL_CONSTANT_ATTENUATION" group="LightParameter,FragmentLightParameterSGIX"/>
+        <enum value="0x1208" name="GL_LINEAR_ATTENUATION" group="LightParameter,FragmentLightParameterSGIX"/>
+        <enum value="0x1209" name="GL_QUADRATIC_ATTENUATION" group="LightParameter,FragmentLightParameterSGIX"/>
             <unused start="0x1210" end="0x12FF" comment="Unused for LightParameter"/>
-        <enum value="0x1300" name="GL_COMPILE"/>
-        <enum value="0x1301" name="GL_COMPILE_AND_EXECUTE"/>
+        <enum value="0x1300" name="GL_COMPILE" group="ListMode"/>
+        <enum value="0x1301" name="GL_COMPILE_AND_EXECUTE" group="ListMode"/>
             <unused start="0x1302" end="0x13FF" comment="Unused for ListMode"/>
-        <enum value="0x1400" name="GL_BYTE"/>
-        <enum value="0x1401" name="GL_UNSIGNED_BYTE"/>
-        <enum value="0x1402" name="GL_SHORT"/>
-        <enum value="0x1403" name="GL_UNSIGNED_SHORT"/>
-        <enum value="0x1404" name="GL_INT"/>
-        <enum value="0x1405" name="GL_UNSIGNED_INT"/>
-        <enum value="0x1406" name="GL_FLOAT"/>
-        <enum value="0x1407" name="GL_2_BYTES"/>
+        <enum value="0x1400" name="GL_BYTE" group="VertexAttribIType,WeightPointerTypeARB,TangentPointerTypeEXT,BinormalPointerTypeEXT,ColorPointerType,ListNameType,NormalPointerType,PixelType,VertexAttribType,VertexAttribPointerType"/>
+        <enum value="0x1401" name="GL_UNSIGNED_BYTE" group="VertexAttribIType,ScalarType,ReplacementCodeTypeSUN,ElementPointerTypeATI,MatrixIndexPointerTypeARB,WeightPointerTypeARB,ColorPointerType,DrawElementsType,ListNameType,PixelType,VertexAttribType,VertexAttribPointerType"/>
+        <enum value="0x1402" name="GL_SHORT" group="VertexAttribIType,SecondaryColorPointerTypeIBM,WeightPointerTypeARB,TangentPointerTypeEXT,BinormalPointerTypeEXT,IndexPointerType,ListNameType,NormalPointerType,PixelType,TexCoordPointerType,VertexPointerType,VertexAttribType,VertexAttribPointerType"/>
+        <enum value="0x1403" name="GL_UNSIGNED_SHORT" group="VertexAttribIType,ScalarType,ReplacementCodeTypeSUN,ElementPointerTypeATI,MatrixIndexPointerTypeARB,WeightPointerTypeARB,ColorPointerType,DrawElementsType,ListNameType,PixelFormat,PixelType,VertexAttribType,VertexAttribPointerType"/>
+        <enum value="0x1404" name="GL_INT" group="VertexAttribIType,SecondaryColorPointerTypeIBM,WeightPointerTypeARB,TangentPointerTypeEXT,BinormalPointerTypeEXT,IndexPointerType,ListNameType,NormalPointerType,PixelType,TexCoordPointerType,VertexPointerType,VertexAttribType,AttributeType,UniformType,VertexAttribPointerType"/>
+        <enum value="0x1405" name="GL_UNSIGNED_INT" group="VertexAttribIType,ScalarType,ReplacementCodeTypeSUN,ElementPointerTypeATI,MatrixIndexPointerTypeARB,WeightPointerTypeARB,ColorPointerType,DrawElementsType,ListNameType,PixelFormat,PixelType,VertexAttribType,AttributeType,UniformType,VertexAttribPointerType"/>
+        <enum value="0x1406" name="GL_FLOAT" group="MapTypeNV,SecondaryColorPointerTypeIBM,WeightPointerTypeARB,VertexWeightPointerTypeEXT,TangentPointerTypeEXT,BinormalPointerTypeEXT,FogCoordinatePointerType,FogPointerTypeEXT,FogPointerTypeIBM,IndexPointerType,ListNameType,NormalPointerType,PixelType,TexCoordPointerType,VertexPointerType,VertexAttribType,AttributeType,UniformType,VertexAttribPointerType"/>
+        <enum value="0x1407" name="GL_2_BYTES" group="ListNameType"/>
         <enum value="0x1407" name="GL_2_BYTES_NV"/>
-        <enum value="0x1408" name="GL_3_BYTES"/>
+        <enum value="0x1408" name="GL_3_BYTES" group="ListNameType"/>
         <enum value="0x1408" name="GL_3_BYTES_NV"/>
-        <enum value="0x1409" name="GL_4_BYTES"/>
+        <enum value="0x1409" name="GL_4_BYTES" group="ListNameType"/>
         <enum value="0x1409" name="GL_4_BYTES_NV"/>
-        <enum value="0x140A" name="GL_DOUBLE"/>
-        <enum value="0x140A" name="GL_DOUBLE_EXT"/>
-        <enum value="0x140B" name="GL_HALF_FLOAT"/>
-        <enum value="0x140B" name="GL_HALF_FLOAT_ARB"/>
-        <enum value="0x140B" name="GL_HALF_FLOAT_NV"/>
-        <enum value="0x140B" name="GL_HALF_APPLE"/>
-        <enum value="0x140C" name="GL_FIXED"/>
+        <enum value="0x140A" name="GL_DOUBLE" group="VertexAttribLType,MapTypeNV,SecondaryColorPointerTypeIBM,WeightPointerTypeARB,TangentPointerTypeEXT,BinormalPointerTypeEXT,FogCoordinatePointerType,FogPointerTypeEXT,FogPointerTypeIBM,IndexPointerType,NormalPointerType,TexCoordPointerType,VertexPointerType,VertexAttribType,AttributeType,UniformType,VertexAttribPointerType"/>
+        <enum value="0x140A" name="GL_DOUBLE_EXT" group="BinormalPointerTypeEXT,TangentPointerTypeEXT"/>
+        <enum value="0x140B" name="GL_HALF_FLOAT" group="PixelType,VertexAttribPointerType,VertexAttribType"/>
+        <enum value="0x140B" name="GL_HALF_FLOAT_ARB" group="PixelType"/>
+        <enum value="0x140B" name="GL_HALF_FLOAT_NV" group="PixelType"/>
+        <enum value="0x140B" name="GL_HALF_APPLE" group="PixelType"/>
+        <enum value="0x140C" name="GL_FIXED" group="VertexAttribPointerType,VertexAttribType"/>
         <enum value="0x140C" name="GL_FIXED_OES"/>
             <unused start="0x140D" comment="Leave gap to preserve even/odd int/uint token values"/>
-        <enum value="0x140E" name="GL_INT64_ARB"/>
-        <enum value="0x140E" name="GL_INT64_NV"/>
-        <enum value="0x140F" name="GL_UNSIGNED_INT64_ARB"/>
-        <enum value="0x140F" name="GL_UNSIGNED_INT64_NV"/>
+        <enum value="0x140E" name="GL_INT64_ARB" group="VertexAttribPointerType,AttributeType"/>
+        <enum value="0x140E" name="GL_INT64_NV" group="VertexAttribPointerType,AttributeType"/>
+        <enum value="0x140F" name="GL_UNSIGNED_INT64_ARB" group="VertexAttribPointerType,AttributeType"/>
+        <enum value="0x140F" name="GL_UNSIGNED_INT64_NV" group="VertexAttribPointerType,AttributeType"/>
             <unused start="0x1410" end="0x14FF" comment="Unused for DataType"/>
-        <enum value="0x1500" name="GL_CLEAR"/>
-        <enum value="0x1501" name="GL_AND"/>
-        <enum value="0x1502" name="GL_AND_REVERSE"/>
-        <enum value="0x1503" name="GL_COPY"/>
-        <enum value="0x1504" name="GL_AND_INVERTED"/>
-        <enum value="0x1505" name="GL_NOOP"/>
-        <enum value="0x1506" name="GL_XOR"/>
+        <enum value="0x1500" name="GL_CLEAR" group="LogicOp"/>
+        <enum value="0x1501" name="GL_AND" group="LogicOp"/>
+        <enum value="0x1502" name="GL_AND_REVERSE" group="LogicOp"/>
+        <enum value="0x1503" name="GL_COPY" group="LogicOp"/>
+        <enum value="0x1504" name="GL_AND_INVERTED" group="LogicOp"/>
+        <enum value="0x1505" name="GL_NOOP" group="LogicOp"/>
+        <enum value="0x1506" name="GL_XOR" group="LogicOp"/>
         <enum value="0x1506" name="GL_XOR_NV"/>
-        <enum value="0x1507" name="GL_OR"/>
-        <enum value="0x1508" name="GL_NOR"/>
-        <enum value="0x1509" name="GL_EQUIV"/>
-        <enum value="0x150A" name="GL_INVERT"/>
-        <enum value="0x150B" name="GL_OR_REVERSE"/>
-        <enum value="0x150C" name="GL_COPY_INVERTED"/>
-        <enum value="0x150D" name="GL_OR_INVERTED"/>
-        <enum value="0x150E" name="GL_NAND"/>
-        <enum value="0x150F" name="GL_SET"/>
+        <enum value="0x1507" name="GL_OR" group="LogicOp"/>
+        <enum value="0x1508" name="GL_NOR" group="LogicOp"/>
+        <enum value="0x1509" name="GL_EQUIV" group="LogicOp"/>
+        <enum value="0x150A" name="GL_INVERT" group="PathFillMode,LogicOp,StencilOp"/>
+        <enum value="0x150B" name="GL_OR_REVERSE" group="LogicOp"/>
+        <enum value="0x150C" name="GL_COPY_INVERTED" group="LogicOp"/>
+        <enum value="0x150D" name="GL_OR_INVERTED" group="LogicOp"/>
+        <enum value="0x150E" name="GL_NAND" group="LogicOp"/>
+        <enum value="0x150F" name="GL_SET" group="LogicOp"/>
             <unused start="0x1510" end="0x15FF" comment="Unused for LogicOp"/>
-        <enum value="0x1600" name="GL_EMISSION"/>
-        <enum value="0x1601" name="GL_SHININESS"/>
-        <enum value="0x1602" name="GL_AMBIENT_AND_DIFFUSE"/>
-        <enum value="0x1603" name="GL_COLOR_INDEXES"/>
+        <enum value="0x1600" name="GL_EMISSION" group="MaterialParameter,ColorMaterialParameter"/>
+        <enum value="0x1601" name="GL_SHININESS" group="MaterialParameter"/>
+        <enum value="0x1602" name="GL_AMBIENT_AND_DIFFUSE" group="MaterialParameter,ColorMaterialParameter"/>
+        <enum value="0x1603" name="GL_COLOR_INDEXES" group="MaterialParameter"/>
             <unused start="0x1604" end="0x16FF" comment="Unused for MaterialParameter"/>
-        <enum value="0x1700" name="GL_MODELVIEW"/>
+        <enum value="0x1700" name="GL_MODELVIEW" group="MatrixMode"/>
         <enum value="0x1700" name="GL_MODELVIEW0_ARB"/>
-        <enum value="0x1700" name="GL_MODELVIEW0_EXT"/>
+        <enum value="0x1700" name="GL_MODELVIEW0_EXT" group="MatrixMode"/>
         <enum value="0x1700" name="GL_PATH_MODELVIEW_NV"/>
-        <enum value="0x1701" name="GL_PROJECTION"/>
+        <enum value="0x1701" name="GL_PROJECTION" group="MatrixMode"/>
         <enum value="0x1701" name="GL_PATH_PROJECTION_NV"/>
-        <enum value="0x1702" name="GL_TEXTURE"/>
+        <enum value="0x1702" name="GL_TEXTURE" group="ObjectIdentifier,MatrixMode"/>
             <unused start="0x1703" end="0x17FF" comment="Unused for MatrixMode"/>
-        <enum value="0x1800" name="GL_COLOR"/>
-        <enum value="0x1800" name="GL_COLOR_EXT"/>
-        <enum value="0x1801" name="GL_DEPTH"/>
-        <enum value="0x1801" name="GL_DEPTH_EXT"/>
-        <enum value="0x1802" name="GL_STENCIL"/>
-        <enum value="0x1802" name="GL_STENCIL_EXT"/>
+        <enum value="0x1800" name="GL_COLOR" group="Buffer,PixelCopyType,InvalidateFramebufferAttachment"/>
+        <enum value="0x1800" name="GL_COLOR_EXT" group="PixelCopyType"/>
+        <enum value="0x1801" name="GL_DEPTH" group="Buffer,PixelCopyType,InvalidateFramebufferAttachment"/>
+        <enum value="0x1801" name="GL_DEPTH_EXT" group="PixelCopyType"/>
+        <enum value="0x1802" name="GL_STENCIL" group="Buffer,PixelCopyType,InvalidateFramebufferAttachment"/>
+        <enum value="0x1802" name="GL_STENCIL_EXT" group="PixelCopyType"/>
             <unused start="0x1803" end="0x18FF" comment="Unused for PixelCopyType"/>
-        <enum value="0x1900" name="GL_COLOR_INDEX"/>
-        <enum value="0x1901" name="GL_STENCIL_INDEX"/>
-        <enum value="0x1901" name="GL_STENCIL_INDEX_OES"/>
-        <enum value="0x1902" name="GL_DEPTH_COMPONENT"/>
-        <enum value="0x1903" name="GL_RED"/>
-        <enum value="0x1903" name="GL_RED_EXT"/>
+        <enum value="0x1900" name="GL_COLOR_INDEX" group="PixelFormat"/>
+        <enum value="0x1901" name="GL_STENCIL_INDEX" group="InternalFormat,PixelFormat,DepthStencilTextureMode"/>
+        <enum value="0x1901" name="GL_STENCIL_INDEX_OES" group="InternalFormat"/>
+        <enum value="0x1902" name="GL_DEPTH_COMPONENT" group="InternalFormat,PixelFormat,DepthStencilTextureMode"/>
+        <enum value="0x1903" name="GL_RED" group="FragmentShaderValueRepATI,TextureSwizzle,PixelFormat,InternalFormat"/>
+        <enum value="0x1903" name="GL_RED_EXT" group="InternalFormat,PixelFormat"/>
         <enum value="0x1903" name="GL_RED_NV"/>
-        <enum value="0x1904" name="GL_GREEN"/>
+        <enum value="0x1904" name="GL_GREEN" group="FragmentShaderValueRepATI,TextureSwizzle,PixelFormat"/>
         <enum value="0x1904" name="GL_GREEN_NV"/>
-        <enum value="0x1905" name="GL_BLUE"/>
+        <enum value="0x1905" name="GL_BLUE" group="FragmentShaderValueRepATI,TextureSwizzle,CombinerComponentUsageNV,PixelFormat"/>
         <enum value="0x1905" name="GL_BLUE_NV"/>
-        <enum value="0x1906" name="GL_ALPHA"/>
-        <enum value="0x1907" name="GL_RGB"/>
-        <enum value="0x1908" name="GL_RGBA"/>
-        <enum value="0x1909" name="GL_LUMINANCE"/>
-        <enum value="0x190A" name="GL_LUMINANCE_ALPHA"/>
+        <enum value="0x1906" name="GL_ALPHA" group="PixelTexGenModeSGIX,FragmentShaderValueRepATI,TextureSwizzle,CombinerPortionNV,PathColorFormat,CombinerComponentUsageNV,PixelFormat"/>
+        <enum value="0x1907" name="GL_RGB" group="PixelTexGenModeSGIX,CombinerPortionNV,PathColorFormat,CombinerComponentUsageNV,PixelFormat,InternalFormat"/>
+        <enum value="0x1908" name="GL_RGBA" group="PixelTexGenModeSGIX,PathColorFormat,PixelFormat,InternalFormat"/>
+        <enum value="0x1909" name="GL_LUMINANCE" group="PathColorFormat,PixelFormat"/>
+        <enum value="0x190A" name="GL_LUMINANCE_ALPHA" group="PathColorFormat,PixelFormat"/>
             <unused start="0x1910" end="0x19FF" comment="Unused for PixelFormat"/>
-        <enum value="0x1A00" name="GL_BITMAP"/>
+        <enum value="0x1A00" name="GL_BITMAP" group="PixelType"/>
             <unused start="0x1A01" end="0x1AFF" comment="Unused for PixelType"/>
-        <enum value="0x1B00" name="GL_POINT"/>
+        <enum value="0x1B00" name="GL_POINT" group="PolygonMode,MeshMode1,MeshMode2"/>
         <enum value="0x1B00" name="GL_POINT_NV"/>
-        <enum value="0x1B01" name="GL_LINE"/>
+        <enum value="0x1B01" name="GL_LINE" group="PolygonMode,MeshMode1,MeshMode2"/>
         <enum value="0x1B01" name="GL_LINE_NV"/>
-        <enum value="0x1B02" name="GL_FILL"/>
-        <enum value="0x1B02" name="GL_FILL_NV"/>
+        <enum value="0x1B02" name="GL_FILL" group="PolygonMode,MeshMode2"/>
+        <enum value="0x1B02" name="GL_FILL_NV" group="EvalMapsModeNV"/>
             <unused start="0x1B03" end="0x1BFF" comment="Unused for PolygonMode"/>
-        <enum value="0x1C00" name="GL_RENDER"/>
-        <enum value="0x1C01" name="GL_FEEDBACK"/>
-        <enum value="0x1C02" name="GL_SELECT"/>
+        <enum value="0x1C00" name="GL_RENDER" group="RenderingMode"/>
+        <enum value="0x1C01" name="GL_FEEDBACK" group="RenderingMode"/>
+        <enum value="0x1C02" name="GL_SELECT" group="RenderingMode"/>
             <unused start="0x1C03" end="0x1CFF" comment="Unused for RenderingMode"/>
-        <enum value="0x1D00" name="GL_FLAT"/>
-        <enum value="0x1D01" name="GL_SMOOTH"/>
+        <enum value="0x1D00" name="GL_FLAT" group="ShadingModel"/>
+        <enum value="0x1D01" name="GL_SMOOTH" group="ShadingModel"/>
             <unused start="0x1D02" end="0x1DFF" comment="Unused for ShadingModel"/>
-        <enum value="0x1E00" name="GL_KEEP"/>
-        <enum value="0x1E01" name="GL_REPLACE"/>
-        <enum value="0x1E02" name="GL_INCR"/>
-        <enum value="0x1E03" name="GL_DECR"/>
+        <enum value="0x1E00" name="GL_KEEP" group="StencilOp"/>
+        <enum value="0x1E01" name="GL_REPLACE" group="StencilOp,LightEnvModeSGIX,TextureEnvMode"/>
+        <enum value="0x1E02" name="GL_INCR" group="StencilOp"/>
+        <enum value="0x1E03" name="GL_DECR" group="StencilOp"/>
             <unused start="0x1E04" end="0x1EFF" comment="Unused for StencilOp"/>
-        <enum value="0x1F00" name="GL_VENDOR"/>
-        <enum value="0x1F01" name="GL_RENDERER"/>
-        <enum value="0x1F02" name="GL_VERSION"/>
-        <enum value="0x1F03" name="GL_EXTENSIONS"/>
+        <enum value="0x1F00" name="GL_VENDOR" group="StringName"/>
+        <enum value="0x1F01" name="GL_RENDERER" group="StringName"/>
+        <enum value="0x1F02" name="GL_VERSION" group="StringName"/>
+        <enum value="0x1F03" name="GL_EXTENSIONS" group="StringName"/>
             <unused start="0x1F04" end="0x1FFF" comment="Unused for StringName"/>
-        <enum value="0x2000" name="GL_S"/>
-        <enum value="0x2001" name="GL_T"/>
-        <enum value="0x2002" name="GL_R"/>
-        <enum value="0x2003" name="GL_Q"/>
+        <enum value="0x2000" name="GL_S" group="TextureCoordName"/>
+        <enum value="0x2001" name="GL_T" group="TextureCoordName"/>
+        <enum value="0x2002" name="GL_R" group="TextureCoordName"/>
+        <enum value="0x2003" name="GL_Q" group="TextureCoordName"/>
             <unused start="0x2004" end="0x20FF" comment="Unused for TextureCoordName"/>
-        <enum value="0x2100" name="GL_MODULATE"/>
-        <enum value="0x2101" name="GL_DECAL"/>
+        <enum value="0x2100" name="GL_MODULATE" group="TextureEnvMode,LightEnvModeSGIX"/>
+        <enum value="0x2101" name="GL_DECAL" group="TextureEnvMode"/>
             <unused start="0x2102" end="0x21FF" comment="Unused for TextureEnvMode"/>
-        <enum value="0x2200" name="GL_TEXTURE_ENV_MODE"/>
-        <enum value="0x2201" name="GL_TEXTURE_ENV_COLOR"/>
+        <enum value="0x2200" name="GL_TEXTURE_ENV_MODE" group="TextureEnvParameter"/>
+        <enum value="0x2201" name="GL_TEXTURE_ENV_COLOR" group="TextureEnvParameter"/>
             <unused start="0x2202" end="0x22FF" comment="Unused for TextureEnvParameter"/>
-        <enum value="0x2300" name="GL_TEXTURE_ENV"/>
+        <enum value="0x2300" name="GL_TEXTURE_ENV" group="TextureEnvTarget"/>
             <unused start="0x2301" end="0x23FF" comment="Unused for TextureEnvTarget"/>
-        <enum value="0x2400" name="GL_EYE_LINEAR"/>
+        <enum value="0x2400" name="GL_EYE_LINEAR" group="PathGenMode,TextureGenMode"/>
         <enum value="0x2400" name="GL_EYE_LINEAR_NV"/>
-        <enum value="0x2401" name="GL_OBJECT_LINEAR"/>
+        <enum value="0x2401" name="GL_OBJECT_LINEAR" group="PathGenMode,TextureGenMode"/>
         <enum value="0x2401" name="GL_OBJECT_LINEAR_NV"/>
-        <enum value="0x2402" name="GL_SPHERE_MAP"/>
+        <enum value="0x2402" name="GL_SPHERE_MAP" group="TextureGenMode"/>
             <unused start="0x2403" end="0x24FF" comment="Unused for TextureGenMode"/>
-        <enum value="0x2500" name="GL_TEXTURE_GEN_MODE"/>
-        <enum value="0x2500" name="GL_TEXTURE_GEN_MODE_OES"/>
-        <enum value="0x2501" name="GL_OBJECT_PLANE"/>
-        <enum value="0x2502" name="GL_EYE_PLANE"/>
+        <enum value="0x2500" name="GL_TEXTURE_GEN_MODE" group="TextureGenParameter"/>
+        <enum value="0x2500" name="GL_TEXTURE_GEN_MODE_OES" group="TextureGenParameter"/>
+        <enum value="0x2501" name="GL_OBJECT_PLANE" group="TextureGenParameter"/>
+        <enum value="0x2502" name="GL_EYE_PLANE" group="TextureGenParameter"/>
             <unused start="0x2503" end="0x25FF" comment="Unused for TextureGenParameter"/>
-        <enum value="0x2600" name="GL_NEAREST"/>
-        <enum value="0x2601" name="GL_LINEAR"/>
+        <enum value="0x2600" name="GL_NEAREST" group="BlitFramebufferFilter,TextureMagFilter,TextureMinFilter"/>
+        <enum value="0x2601" name="GL_LINEAR" group="BlitFramebufferFilter,FogMode,TextureMagFilter,TextureMinFilter"/>
             <unused start="0x2602" end="0x26FF" comment="Unused for TextureMagFilter"/>
-        <enum value="0x2700" name="GL_NEAREST_MIPMAP_NEAREST"/>
-        <enum value="0x2701" name="GL_LINEAR_MIPMAP_NEAREST"/>
-        <enum value="0x2702" name="GL_NEAREST_MIPMAP_LINEAR"/>
-        <enum value="0x2703" name="GL_LINEAR_MIPMAP_LINEAR"/>
+        <enum value="0x2700" name="GL_NEAREST_MIPMAP_NEAREST" group="TextureMinFilter"/>
+        <enum value="0x2701" name="GL_LINEAR_MIPMAP_NEAREST" group="TextureMinFilter"/>
+        <enum value="0x2702" name="GL_NEAREST_MIPMAP_LINEAR" group="TextureMinFilter"/>
+        <enum value="0x2703" name="GL_LINEAR_MIPMAP_LINEAR" group="TextureWrapMode,TextureMinFilter"/>
             <unused start="0x2704" end="0x27FF" comment="Unused for TextureMinFilter"/>
-        <enum value="0x2800" name="GL_TEXTURE_MAG_FILTER"/>
-        <enum value="0x2801" name="GL_TEXTURE_MIN_FILTER"/>
-        <enum value="0x2802" name="GL_TEXTURE_WRAP_S"/>
-        <enum value="0x2803" name="GL_TEXTURE_WRAP_T"/>
+        <enum value="0x2800" name="GL_TEXTURE_MAG_FILTER" group="SamplerParameterI,GetTextureParameter,TextureParameterName"/>
+        <enum value="0x2801" name="GL_TEXTURE_MIN_FILTER" group="SamplerParameterI,GetTextureParameter,TextureParameterName"/>
+        <enum value="0x2802" name="GL_TEXTURE_WRAP_S" group="SamplerParameterI,GetTextureParameter,TextureParameterName"/>
+        <enum value="0x2803" name="GL_TEXTURE_WRAP_T" group="SamplerParameterI,GetTextureParameter,TextureParameterName"/>
             <unused start="0x2804" end="0x28FF" comment="Unused for TextureParameterName"/>
-        <enum value="0x2900" name="GL_CLAMP"/>
-        <enum value="0x2901" name="GL_REPEAT"/>
+        <enum value="0x2900" name="GL_CLAMP" group="TextureWrapMode"/>
+        <enum value="0x2901" name="GL_REPEAT" group="TextureWrapMode"/>
             <unused start="0x2902" end="0x29FF" comment="Unused for TextureWrapMode"/>
-        <enum value="0x2A00" name="GL_POLYGON_OFFSET_UNITS"/>
-        <enum value="0x2A01" name="GL_POLYGON_OFFSET_POINT"/>
+        <enum value="0x2A00" name="GL_POLYGON_OFFSET_UNITS" group="GetPName"/>
+        <enum value="0x2A01" name="GL_POLYGON_OFFSET_POINT" group="GetPName,EnableCap"/>
         <enum value="0x2A01" name="GL_POLYGON_OFFSET_POINT_NV"/>
-        <enum value="0x2A02" name="GL_POLYGON_OFFSET_LINE"/>
+        <enum value="0x2A02" name="GL_POLYGON_OFFSET_LINE" group="GetPName,EnableCap"/>
         <enum value="0x2A02" name="GL_POLYGON_OFFSET_LINE_NV"/>
             <unused start="0x2A03" end="0x2A09" comment="Unused for PolygonOffset"/>
-        <enum value="0x2A10" name="GL_R3_G3_B2"/>
+        <enum value="0x2A10" name="GL_R3_G3_B2" group="InternalFormat,SizedInternalFormat"/>
             <unused start="0x2A11" end="0x2A1F" comment="Unused for InternalFormat"/>
-        <enum value="0x2A20" name="GL_V2F"/>
-        <enum value="0x2A21" name="GL_V3F"/>
-        <enum value="0x2A22" name="GL_C4UB_V2F"/>
-        <enum value="0x2A23" name="GL_C4UB_V3F"/>
-        <enum value="0x2A24" name="GL_C3F_V3F"/>
-        <enum value="0x2A25" name="GL_N3F_V3F"/>
-        <enum value="0x2A26" name="GL_C4F_N3F_V3F"/>
-        <enum value="0x2A27" name="GL_T2F_V3F"/>
-        <enum value="0x2A28" name="GL_T4F_V4F"/>
-        <enum value="0x2A29" name="GL_T2F_C4UB_V3F"/>
-        <enum value="0x2A2A" name="GL_T2F_C3F_V3F"/>
-        <enum value="0x2A2B" name="GL_T2F_N3F_V3F"/>
-        <enum value="0x2A2C" name="GL_T2F_C4F_N3F_V3F"/>
-        <enum value="0x2A2D" name="GL_T4F_C4F_N3F_V4F"/>
+        <enum value="0x2A20" name="GL_V2F" group="InterleavedArrayFormat"/>
+        <enum value="0x2A21" name="GL_V3F" group="InterleavedArrayFormat"/>
+        <enum value="0x2A22" name="GL_C4UB_V2F" group="InterleavedArrayFormat"/>
+        <enum value="0x2A23" name="GL_C4UB_V3F" group="InterleavedArrayFormat"/>
+        <enum value="0x2A24" name="GL_C3F_V3F" group="InterleavedArrayFormat"/>
+        <enum value="0x2A25" name="GL_N3F_V3F" group="InterleavedArrayFormat"/>
+        <enum value="0x2A26" name="GL_C4F_N3F_V3F" group="InterleavedArrayFormat"/>
+        <enum value="0x2A27" name="GL_T2F_V3F" group="InterleavedArrayFormat"/>
+        <enum value="0x2A28" name="GL_T4F_V4F" group="InterleavedArrayFormat"/>
+        <enum value="0x2A29" name="GL_T2F_C4UB_V3F" group="InterleavedArrayFormat"/>
+        <enum value="0x2A2A" name="GL_T2F_C3F_V3F" group="InterleavedArrayFormat"/>
+        <enum value="0x2A2B" name="GL_T2F_N3F_V3F" group="InterleavedArrayFormat"/>
+        <enum value="0x2A2C" name="GL_T2F_C4F_N3F_V3F" group="InterleavedArrayFormat"/>
+        <enum value="0x2A2D" name="GL_T4F_C4F_N3F_V4F" group="InterleavedArrayFormat"/>
             <unused start="0x2A2E" end="0x2FFF" comment="Unused for InterleavedArrayFormat"/>
-        <enum value="0x3000" name="GL_CLIP_PLANE0"/>
+        <enum value="0x3000" name="GL_CLIP_PLANE0" group="GetPName,ClipPlaneName,EnableCap"/>
         <enum value="0x3000" name="GL_CLIP_PLANE0_IMG"/>
-        <enum value="0x3000" name="GL_CLIP_DISTANCE0" alias="GL_CLIP_PLANE0"/>
+        <enum value="0x3000" name="GL_CLIP_DISTANCE0" alias="GL_CLIP_PLANE0" group="EnableCap,ClipPlaneName"/>
         <enum value="0x3000" name="GL_CLIP_DISTANCE0_EXT" alias="GL_CLIP_PLANE0"/>
         <enum value="0x3000" name="GL_CLIP_DISTANCE0_APPLE"/>
-        <enum value="0x3001" name="GL_CLIP_PLANE1"/>
+        <enum value="0x3001" name="GL_CLIP_PLANE1" group="GetPName,ClipPlaneName,EnableCap"/>
         <enum value="0x3001" name="GL_CLIP_PLANE1_IMG"/>
-        <enum value="0x3001" name="GL_CLIP_DISTANCE1" alias="GL_CLIP_PLANE1"/>
+        <enum value="0x3001" name="GL_CLIP_DISTANCE1" alias="GL_CLIP_PLANE1" group="EnableCap,ClipPlaneName"/>
         <enum value="0x3001" name="GL_CLIP_DISTANCE1_EXT" alias="GL_CLIP_PLANE1"/>
         <enum value="0x3001" name="GL_CLIP_DISTANCE1_APPLE"/>
-        <enum value="0x3002" name="GL_CLIP_PLANE2"/>
+        <enum value="0x3002" name="GL_CLIP_PLANE2" group="GetPName,ClipPlaneName,EnableCap"/>
         <enum value="0x3002" name="GL_CLIP_PLANE2_IMG"/>
-        <enum value="0x3002" name="GL_CLIP_DISTANCE2" alias="GL_CLIP_PLANE2"/>
+        <enum value="0x3002" name="GL_CLIP_DISTANCE2" alias="GL_CLIP_PLANE2" group="EnableCap,ClipPlaneName"/>
         <enum value="0x3002" name="GL_CLIP_DISTANCE2_EXT" alias="GL_CLIP_PLANE2"/>
         <enum value="0x3002" name="GL_CLIP_DISTANCE2_APPLE"/>
-        <enum value="0x3003" name="GL_CLIP_PLANE3"/>
+        <enum value="0x3003" name="GL_CLIP_PLANE3" group="GetPName,ClipPlaneName,EnableCap"/>
         <enum value="0x3003" name="GL_CLIP_PLANE3_IMG"/>
-        <enum value="0x3003" name="GL_CLIP_DISTANCE3" alias="GL_CLIP_PLANE3"/>
+        <enum value="0x3003" name="GL_CLIP_DISTANCE3" alias="GL_CLIP_PLANE3" group="EnableCap,ClipPlaneName"/>
         <enum value="0x3003" name="GL_CLIP_DISTANCE3_EXT" alias="GL_CLIP_PLANE3"/>
         <enum value="0x3003" name="GL_CLIP_DISTANCE3_APPLE"/>
-        <enum value="0x3004" name="GL_CLIP_PLANE4"/>
+        <enum value="0x3004" name="GL_CLIP_PLANE4" group="GetPName,ClipPlaneName,EnableCap"/>
         <enum value="0x3004" name="GL_CLIP_PLANE4_IMG"/>
-        <enum value="0x3004" name="GL_CLIP_DISTANCE4" alias="GL_CLIP_PLANE4"/>
+        <enum value="0x3004" name="GL_CLIP_DISTANCE4" alias="GL_CLIP_PLANE4" group="EnableCap,ClipPlaneName"/>
         <enum value="0x3004" name="GL_CLIP_DISTANCE4_EXT" alias="GL_CLIP_PLANE4"/>
         <enum value="0x3004" name="GL_CLIP_DISTANCE4_APPLE"/>
-        <enum value="0x3005" name="GL_CLIP_PLANE5"/>
+        <enum value="0x3005" name="GL_CLIP_PLANE5" group="GetPName,ClipPlaneName,EnableCap"/>
         <enum value="0x3005" name="GL_CLIP_PLANE5_IMG"/>
-        <enum value="0x3005" name="GL_CLIP_DISTANCE5" alias="GL_CLIP_PLANE5"/>
+        <enum value="0x3005" name="GL_CLIP_DISTANCE5" alias="GL_CLIP_PLANE5" group="EnableCap,ClipPlaneName"/>
         <enum value="0x3005" name="GL_CLIP_DISTANCE5_EXT" alias="GL_CLIP_PLANE5"/>
         <enum value="0x3005" name="GL_CLIP_DISTANCE5_APPLE"/>
-        <enum value="0x3006" name="GL_CLIP_DISTANCE6"/>
+        <enum value="0x3006" name="GL_CLIP_DISTANCE6" group="EnableCap,ClipPlaneName"/>
         <enum value="0x3006" name="GL_CLIP_DISTANCE6_EXT" alias="GL_CLIP_DISTANCE6"/>
         <enum value="0x3006" name="GL_CLIP_DISTANCE6_APPLE"/>
-        <enum value="0x3007" name="GL_CLIP_DISTANCE7"/>
+        <enum value="0x3007" name="GL_CLIP_DISTANCE7" group="EnableCap,ClipPlaneName"/>
         <enum value="0x3007" name="GL_CLIP_DISTANCE7_EXT" alias="GL_CLIP_DISTANCE7"/>
         <enum value="0x3007" name="GL_CLIP_DISTANCE7_APPLE"/>
             <unused start="0x3008" end="0x3FFF" comment="Unused for ClipPlaneName"/>
-        <enum value="0x4000" name="GL_LIGHT0"/>
-        <enum value="0x4001" name="GL_LIGHT1"/>
-        <enum value="0x4002" name="GL_LIGHT2"/>
-        <enum value="0x4003" name="GL_LIGHT3"/>
-        <enum value="0x4004" name="GL_LIGHT4"/>
-        <enum value="0x4005" name="GL_LIGHT5"/>
-        <enum value="0x4006" name="GL_LIGHT6"/>
-        <enum value="0x4007" name="GL_LIGHT7"/>
+        <enum value="0x4000" name="GL_LIGHT0" group="LightName,EnableCap,GetPName"/>
+        <enum value="0x4001" name="GL_LIGHT1" group="LightName,EnableCap,GetPName"/>
+        <enum value="0x4002" name="GL_LIGHT2" group="LightName,EnableCap,GetPName"/>
+        <enum value="0x4003" name="GL_LIGHT3" group="LightName,EnableCap,GetPName"/>
+        <enum value="0x4004" name="GL_LIGHT4" group="LightName,EnableCap,GetPName"/>
+        <enum value="0x4005" name="GL_LIGHT5" group="LightName,EnableCap,GetPName"/>
+        <enum value="0x4006" name="GL_LIGHT6" group="LightName,EnableCap,GetPName"/>
+        <enum value="0x4007" name="GL_LIGHT7" group="LightName,EnableCap,GetPName"/>
             <unused start="0x4008" end="0x4FFF" comment="Unused for LightName"/>
             <unused start="0x5000" end="0x5FFF" comment="Unused. Do not use."/>
             <unused start="0x6000" end="0x6FFF" comment="Experimental (internal/test only) range. DO NOT SHIP VALUES IN THIS RANGE."/>
@@ -5646,410 +1179,410 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x8000" end="0x80BF" vendor="ARB" comment="The primary GL enumerant space begins here. All modern enum allocations are in this range. These enums are mostly assigned the default class since it's a great deal of not very useful work to be more specific">
-        <enum value="0x8000" name="GL_ABGR_EXT"/>
-        <enum value="0x8001" name="GL_CONSTANT_COLOR"/>
+        <enum value="0x8000" name="GL_ABGR_EXT" group="PixelFormat"/>
+        <enum value="0x8001" name="GL_CONSTANT_COLOR" group="BlendingFactor"/>
         <enum value="0x8001" name="GL_CONSTANT_COLOR_EXT"/>
-        <enum value="0x8002" name="GL_ONE_MINUS_CONSTANT_COLOR"/>
+        <enum value="0x8002" name="GL_ONE_MINUS_CONSTANT_COLOR" group="BlendingFactor"/>
         <enum value="0x8002" name="GL_ONE_MINUS_CONSTANT_COLOR_EXT"/>
-        <enum value="0x8003" name="GL_CONSTANT_ALPHA"/>
+        <enum value="0x8003" name="GL_CONSTANT_ALPHA" group="BlendingFactor"/>
         <enum value="0x8003" name="GL_CONSTANT_ALPHA_EXT"/>
-        <enum value="0x8004" name="GL_ONE_MINUS_CONSTANT_ALPHA"/>
+        <enum value="0x8004" name="GL_ONE_MINUS_CONSTANT_ALPHA" group="BlendingFactor"/>
         <enum value="0x8004" name="GL_ONE_MINUS_CONSTANT_ALPHA_EXT"/>
-        <enum value="0x8005" name="GL_BLEND_COLOR"/>
-        <enum value="0x8005" name="GL_BLEND_COLOR_EXT"/>
-        <enum value="0x8006" name="GL_FUNC_ADD"/>
-        <enum value="0x8006" name="GL_FUNC_ADD_EXT"/>
+        <enum value="0x8005" name="GL_BLEND_COLOR" group="GetPName"/>
+        <enum value="0x8005" name="GL_BLEND_COLOR_EXT" group="GetPName"/>
+        <enum value="0x8006" name="GL_FUNC_ADD" group="BlendEquationModeEXT"/>
+        <enum value="0x8006" name="GL_FUNC_ADD_EXT" group="BlendEquationModeEXT"/>
         <enum value="0x8006" name="GL_FUNC_ADD_OES"/>
-        <enum value="0x8007" name="GL_MIN"/>
-        <enum value="0x8007" name="GL_MIN_EXT"/>
-        <enum value="0x8008" name="GL_MAX"/>
-        <enum value="0x8008" name="GL_MAX_EXT"/>
-        <enum value="0x8009" name="GL_BLEND_EQUATION"/>
-        <enum value="0x8009" name="GL_BLEND_EQUATION_EXT"/>
-        <enum value="0x8009" name="GL_BLEND_EQUATION_OES"/>
-        <enum value="0x8009" name="GL_BLEND_EQUATION_RGB"/>
+        <enum value="0x8007" name="GL_MIN" group="BlendEquationModeEXT"/>
+        <enum value="0x8007" name="GL_MIN_EXT" group="BlendEquationModeEXT"/>
+        <enum value="0x8008" name="GL_MAX" group="BlendEquationModeEXT"/>
+        <enum value="0x8008" name="GL_MAX_EXT" group="BlendEquationModeEXT"/>
+        <enum value="0x8009" name="GL_BLEND_EQUATION" group="GetPName"/>
+        <enum value="0x8009" name="GL_BLEND_EQUATION_EXT" group="GetPName"/>
+        <enum value="0x8009" name="GL_BLEND_EQUATION_OES" group="GetPName"/>
+        <enum value="0x8009" name="GL_BLEND_EQUATION_RGB" group="GetPName"/>
         <enum value="0x8009" name="GL_BLEND_EQUATION_RGB_EXT"/>
         <enum value="0x8009" name="GL_BLEND_EQUATION_RGB_OES"/>
-        <enum value="0x800A" name="GL_FUNC_SUBTRACT"/>
-        <enum value="0x800A" name="GL_FUNC_SUBTRACT_EXT"/>
+        <enum value="0x800A" name="GL_FUNC_SUBTRACT" group="BlendEquationModeEXT"/>
+        <enum value="0x800A" name="GL_FUNC_SUBTRACT_EXT" group="BlendEquationModeEXT"/>
         <enum value="0x800A" name="GL_FUNC_SUBTRACT_OES"/>
-        <enum value="0x800B" name="GL_FUNC_REVERSE_SUBTRACT"/>
-        <enum value="0x800B" name="GL_FUNC_REVERSE_SUBTRACT_EXT"/>
+        <enum value="0x800B" name="GL_FUNC_REVERSE_SUBTRACT" group="BlendEquationModeEXT"/>
+        <enum value="0x800B" name="GL_FUNC_REVERSE_SUBTRACT_EXT" group="BlendEquationModeEXT"/>
         <enum value="0x800B" name="GL_FUNC_REVERSE_SUBTRACT_OES"/>
-        <enum value="0x800C" name="GL_CMYK_EXT"/>
-        <enum value="0x800D" name="GL_CMYKA_EXT"/>
-        <enum value="0x800E" name="GL_PACK_CMYK_HINT_EXT"/>
-        <enum value="0x800F" name="GL_UNPACK_CMYK_HINT_EXT"/>
-        <enum value="0x8010" name="GL_CONVOLUTION_1D"/>
-        <enum value="0x8010" name="GL_CONVOLUTION_1D_EXT"/>
-        <enum value="0x8011" name="GL_CONVOLUTION_2D"/>
-        <enum value="0x8011" name="GL_CONVOLUTION_2D_EXT"/>
-        <enum value="0x8012" name="GL_SEPARABLE_2D"/>
-        <enum value="0x8012" name="GL_SEPARABLE_2D_EXT"/>
-        <enum value="0x8013" name="GL_CONVOLUTION_BORDER_MODE"/>
-        <enum value="0x8013" name="GL_CONVOLUTION_BORDER_MODE_EXT"/>
-        <enum value="0x8014" name="GL_CONVOLUTION_FILTER_SCALE"/>
-        <enum value="0x8014" name="GL_CONVOLUTION_FILTER_SCALE_EXT"/>
-        <enum value="0x8015" name="GL_CONVOLUTION_FILTER_BIAS"/>
-        <enum value="0x8015" name="GL_CONVOLUTION_FILTER_BIAS_EXT"/>
-        <enum value="0x8016" name="GL_REDUCE"/>
-        <enum value="0x8016" name="GL_REDUCE_EXT"/>
-        <enum value="0x8017" name="GL_CONVOLUTION_FORMAT"/>
-        <enum value="0x8017" name="GL_CONVOLUTION_FORMAT_EXT"/>
-        <enum value="0x8018" name="GL_CONVOLUTION_WIDTH"/>
-        <enum value="0x8018" name="GL_CONVOLUTION_WIDTH_EXT"/>
-        <enum value="0x8019" name="GL_CONVOLUTION_HEIGHT"/>
-        <enum value="0x8019" name="GL_CONVOLUTION_HEIGHT_EXT"/>
-        <enum value="0x801A" name="GL_MAX_CONVOLUTION_WIDTH"/>
-        <enum value="0x801A" name="GL_MAX_CONVOLUTION_WIDTH_EXT"/>
-        <enum value="0x801B" name="GL_MAX_CONVOLUTION_HEIGHT"/>
-        <enum value="0x801B" name="GL_MAX_CONVOLUTION_HEIGHT_EXT"/>
-        <enum value="0x801C" name="GL_POST_CONVOLUTION_RED_SCALE"/>
-        <enum value="0x801C" name="GL_POST_CONVOLUTION_RED_SCALE_EXT"/>
-        <enum value="0x801D" name="GL_POST_CONVOLUTION_GREEN_SCALE"/>
-        <enum value="0x801D" name="GL_POST_CONVOLUTION_GREEN_SCALE_EXT"/>
-        <enum value="0x801E" name="GL_POST_CONVOLUTION_BLUE_SCALE"/>
-        <enum value="0x801E" name="GL_POST_CONVOLUTION_BLUE_SCALE_EXT"/>
-        <enum value="0x801F" name="GL_POST_CONVOLUTION_ALPHA_SCALE"/>
-        <enum value="0x801F" name="GL_POST_CONVOLUTION_ALPHA_SCALE_EXT"/>
-        <enum value="0x8020" name="GL_POST_CONVOLUTION_RED_BIAS"/>
-        <enum value="0x8020" name="GL_POST_CONVOLUTION_RED_BIAS_EXT"/>
-        <enum value="0x8021" name="GL_POST_CONVOLUTION_GREEN_BIAS"/>
-        <enum value="0x8021" name="GL_POST_CONVOLUTION_GREEN_BIAS_EXT"/>
-        <enum value="0x8022" name="GL_POST_CONVOLUTION_BLUE_BIAS"/>
-        <enum value="0x8022" name="GL_POST_CONVOLUTION_BLUE_BIAS_EXT"/>
-        <enum value="0x8023" name="GL_POST_CONVOLUTION_ALPHA_BIAS"/>
-        <enum value="0x8023" name="GL_POST_CONVOLUTION_ALPHA_BIAS_EXT"/>
-        <enum value="0x8024" name="GL_HISTOGRAM"/>
-        <enum value="0x8024" name="GL_HISTOGRAM_EXT"/>
-        <enum value="0x8025" name="GL_PROXY_HISTOGRAM"/>
-        <enum value="0x8025" name="GL_PROXY_HISTOGRAM_EXT"/>
-        <enum value="0x8026" name="GL_HISTOGRAM_WIDTH"/>
-        <enum value="0x8026" name="GL_HISTOGRAM_WIDTH_EXT"/>
-        <enum value="0x8027" name="GL_HISTOGRAM_FORMAT"/>
-        <enum value="0x8027" name="GL_HISTOGRAM_FORMAT_EXT"/>
-        <enum value="0x8028" name="GL_HISTOGRAM_RED_SIZE"/>
-        <enum value="0x8028" name="GL_HISTOGRAM_RED_SIZE_EXT"/>
-        <enum value="0x8029" name="GL_HISTOGRAM_GREEN_SIZE"/>
-        <enum value="0x8029" name="GL_HISTOGRAM_GREEN_SIZE_EXT"/>
-        <enum value="0x802A" name="GL_HISTOGRAM_BLUE_SIZE"/>
-        <enum value="0x802A" name="GL_HISTOGRAM_BLUE_SIZE_EXT"/>
-        <enum value="0x802B" name="GL_HISTOGRAM_ALPHA_SIZE"/>
-        <enum value="0x802B" name="GL_HISTOGRAM_ALPHA_SIZE_EXT"/>
-        <enum value="0x802C" name="GL_HISTOGRAM_LUMINANCE_SIZE"/>
-        <enum value="0x802C" name="GL_HISTOGRAM_LUMINANCE_SIZE_EXT"/>
-        <enum value="0x802D" name="GL_HISTOGRAM_SINK"/>
-        <enum value="0x802D" name="GL_HISTOGRAM_SINK_EXT"/>
-        <enum value="0x802E" name="GL_MINMAX"/>
-        <enum value="0x802E" name="GL_MINMAX_EXT"/>
-        <enum value="0x802F" name="GL_MINMAX_FORMAT"/>
-        <enum value="0x802F" name="GL_MINMAX_FORMAT_EXT"/>
-        <enum value="0x8030" name="GL_MINMAX_SINK"/>
-        <enum value="0x8030" name="GL_MINMAX_SINK_EXT"/>
-        <enum value="0x8031" name="GL_TABLE_TOO_LARGE_EXT"/>
-        <enum value="0x8031" name="GL_TABLE_TOO_LARGE"/>
-        <enum value="0x8032" name="GL_UNSIGNED_BYTE_3_3_2"/>
-        <enum value="0x8032" name="GL_UNSIGNED_BYTE_3_3_2_EXT"/>
-        <enum value="0x8033" name="GL_UNSIGNED_SHORT_4_4_4_4"/>
-        <enum value="0x8033" name="GL_UNSIGNED_SHORT_4_4_4_4_EXT"/>
-        <enum value="0x8034" name="GL_UNSIGNED_SHORT_5_5_5_1"/>
-        <enum value="0x8034" name="GL_UNSIGNED_SHORT_5_5_5_1_EXT"/>
-        <enum value="0x8035" name="GL_UNSIGNED_INT_8_8_8_8"/>
-        <enum value="0x8035" name="GL_UNSIGNED_INT_8_8_8_8_EXT"/>
-        <enum value="0x8036" name="GL_UNSIGNED_INT_10_10_10_2"/>
-        <enum value="0x8036" name="GL_UNSIGNED_INT_10_10_10_2_EXT"/>
+        <enum value="0x800C" name="GL_CMYK_EXT" group="PixelFormat"/>
+        <enum value="0x800D" name="GL_CMYKA_EXT" group="PixelFormat"/>
+        <enum value="0x800E" name="GL_PACK_CMYK_HINT_EXT" group="HintTarget,GetPName"/>
+        <enum value="0x800F" name="GL_UNPACK_CMYK_HINT_EXT" group="HintTarget,GetPName"/>
+        <enum value="0x8010" name="GL_CONVOLUTION_1D" group="ConvolutionTarget,ConvolutionTargetEXT"/>
+        <enum value="0x8010" name="GL_CONVOLUTION_1D_EXT" group="GetPName,ConvolutionTargetEXT,EnableCap"/>
+        <enum value="0x8011" name="GL_CONVOLUTION_2D" group="ConvolutionTarget,ConvolutionTargetEXT"/>
+        <enum value="0x8011" name="GL_CONVOLUTION_2D_EXT" group="GetPName,ConvolutionTargetEXT,EnableCap"/>
+        <enum value="0x8012" name="GL_SEPARABLE_2D" group="SeparableTarget,SeparableTargetEXT"/>
+        <enum value="0x8012" name="GL_SEPARABLE_2D_EXT" group="SeparableTargetEXT,EnableCap,GetPName"/>
+        <enum value="0x8013" name="GL_CONVOLUTION_BORDER_MODE" group="ConvolutionParameter"/>
+        <enum value="0x8013" name="GL_CONVOLUTION_BORDER_MODE_EXT" group="ConvolutionParameter"/>
+        <enum value="0x8014" name="GL_CONVOLUTION_FILTER_SCALE" group="ConvolutionParameter"/>
+        <enum value="0x8014" name="GL_CONVOLUTION_FILTER_SCALE_EXT" group="ConvolutionParameter"/>
+        <enum value="0x8015" name="GL_CONVOLUTION_FILTER_BIAS" group="ConvolutionParameter"/>
+        <enum value="0x8015" name="GL_CONVOLUTION_FILTER_BIAS_EXT" group="ConvolutionParameter"/>
+        <enum value="0x8016" name="GL_REDUCE" group="ConvolutionBorderModeEXT"/>
+        <enum value="0x8016" name="GL_REDUCE_EXT" group="ConvolutionBorderModeEXT"/>
+        <enum value="0x8017" name="GL_CONVOLUTION_FORMAT" group="ConvolutionParameter"/>
+        <enum value="0x8017" name="GL_CONVOLUTION_FORMAT_EXT" group="ConvolutionParameter"/>
+        <enum value="0x8018" name="GL_CONVOLUTION_WIDTH" group="ConvolutionParameter"/>
+        <enum value="0x8018" name="GL_CONVOLUTION_WIDTH_EXT" group="ConvolutionParameter"/>
+        <enum value="0x8019" name="GL_CONVOLUTION_HEIGHT" group="ConvolutionParameter"/>
+        <enum value="0x8019" name="GL_CONVOLUTION_HEIGHT_EXT" group="ConvolutionParameter"/>
+        <enum value="0x801A" name="GL_MAX_CONVOLUTION_WIDTH" group="ConvolutionParameter"/>
+        <enum value="0x801A" name="GL_MAX_CONVOLUTION_WIDTH_EXT" group="ConvolutionParameter"/>
+        <enum value="0x801B" name="GL_MAX_CONVOLUTION_HEIGHT" group="ConvolutionParameter"/>
+        <enum value="0x801B" name="GL_MAX_CONVOLUTION_HEIGHT_EXT" group="ConvolutionParameter"/>
+        <enum value="0x801C" name="GL_POST_CONVOLUTION_RED_SCALE" group="PixelTransferParameter"/>
+        <enum value="0x801C" name="GL_POST_CONVOLUTION_RED_SCALE_EXT" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x801D" name="GL_POST_CONVOLUTION_GREEN_SCALE" group="PixelTransferParameter"/>
+        <enum value="0x801D" name="GL_POST_CONVOLUTION_GREEN_SCALE_EXT" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x801E" name="GL_POST_CONVOLUTION_BLUE_SCALE" group="PixelTransferParameter"/>
+        <enum value="0x801E" name="GL_POST_CONVOLUTION_BLUE_SCALE_EXT" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x801F" name="GL_POST_CONVOLUTION_ALPHA_SCALE" group="PixelTransferParameter"/>
+        <enum value="0x801F" name="GL_POST_CONVOLUTION_ALPHA_SCALE_EXT" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x8020" name="GL_POST_CONVOLUTION_RED_BIAS" group="PixelTransferParameter"/>
+        <enum value="0x8020" name="GL_POST_CONVOLUTION_RED_BIAS_EXT" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x8021" name="GL_POST_CONVOLUTION_GREEN_BIAS" group="PixelTransferParameter"/>
+        <enum value="0x8021" name="GL_POST_CONVOLUTION_GREEN_BIAS_EXT" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x8022" name="GL_POST_CONVOLUTION_BLUE_BIAS" group="PixelTransferParameter"/>
+        <enum value="0x8022" name="GL_POST_CONVOLUTION_BLUE_BIAS_EXT" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x8023" name="GL_POST_CONVOLUTION_ALPHA_BIAS" group="PixelTransferParameter"/>
+        <enum value="0x8023" name="GL_POST_CONVOLUTION_ALPHA_BIAS_EXT" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x8024" name="GL_HISTOGRAM" group="HistogramTarget,HistogramTargetEXT"/>
+        <enum value="0x8024" name="GL_HISTOGRAM_EXT" group="HistogramTargetEXT,EnableCap,GetPName"/>
+        <enum value="0x8025" name="GL_PROXY_HISTOGRAM" group="HistogramTarget,HistogramTargetEXT"/>
+        <enum value="0x8025" name="GL_PROXY_HISTOGRAM_EXT" group="HistogramTargetEXT"/>
+        <enum value="0x8026" name="GL_HISTOGRAM_WIDTH" group="GetHistogramParameterPNameEXT"/>
+        <enum value="0x8026" name="GL_HISTOGRAM_WIDTH_EXT" group="GetHistogramParameterPNameEXT"/>
+        <enum value="0x8027" name="GL_HISTOGRAM_FORMAT" group="GetHistogramParameterPNameEXT"/>
+        <enum value="0x8027" name="GL_HISTOGRAM_FORMAT_EXT" group="GetHistogramParameterPNameEXT"/>
+        <enum value="0x8028" name="GL_HISTOGRAM_RED_SIZE" group="GetHistogramParameterPNameEXT"/>
+        <enum value="0x8028" name="GL_HISTOGRAM_RED_SIZE_EXT" group="GetHistogramParameterPNameEXT"/>
+        <enum value="0x8029" name="GL_HISTOGRAM_GREEN_SIZE" group="GetHistogramParameterPNameEXT"/>
+        <enum value="0x8029" name="GL_HISTOGRAM_GREEN_SIZE_EXT" group="GetHistogramParameterPNameEXT"/>
+        <enum value="0x802A" name="GL_HISTOGRAM_BLUE_SIZE" group="GetHistogramParameterPNameEXT"/>
+        <enum value="0x802A" name="GL_HISTOGRAM_BLUE_SIZE_EXT" group="GetHistogramParameterPNameEXT"/>
+        <enum value="0x802B" name="GL_HISTOGRAM_ALPHA_SIZE" group="GetHistogramParameterPNameEXT"/>
+        <enum value="0x802B" name="GL_HISTOGRAM_ALPHA_SIZE_EXT" group="GetHistogramParameterPNameEXT"/>
+        <enum value="0x802C" name="GL_HISTOGRAM_LUMINANCE_SIZE" group="GetHistogramParameterPNameEXT"/>
+        <enum value="0x802C" name="GL_HISTOGRAM_LUMINANCE_SIZE_EXT" group="GetHistogramParameterPNameEXT"/>
+        <enum value="0x802D" name="GL_HISTOGRAM_SINK" group="GetHistogramParameterPNameEXT"/>
+        <enum value="0x802D" name="GL_HISTOGRAM_SINK_EXT" group="GetHistogramParameterPNameEXT"/>
+        <enum value="0x802E" name="GL_MINMAX" group="MinmaxTarget,MinmaxTargetEXT"/>
+        <enum value="0x802E" name="GL_MINMAX_EXT" group="MinmaxTargetEXT,EnableCap,GetPName"/>
+        <enum value="0x802F" name="GL_MINMAX_FORMAT" group="GetMinmaxParameterPNameEXT"/>
+        <enum value="0x802F" name="GL_MINMAX_FORMAT_EXT" group="GetMinmaxParameterPNameEXT"/>
+        <enum value="0x8030" name="GL_MINMAX_SINK" group="GetMinmaxParameterPNameEXT"/>
+        <enum value="0x8030" name="GL_MINMAX_SINK_EXT" group="GetMinmaxParameterPNameEXT"/>
+        <enum value="0x8031" name="GL_TABLE_TOO_LARGE_EXT" group="ErrorCode"/>
+        <enum value="0x8031" name="GL_TABLE_TOO_LARGE" group="ErrorCode"/>
+        <enum value="0x8032" name="GL_UNSIGNED_BYTE_3_3_2" group="PixelType"/>
+        <enum value="0x8032" name="GL_UNSIGNED_BYTE_3_3_2_EXT" group="PixelType"/>
+        <enum value="0x8033" name="GL_UNSIGNED_SHORT_4_4_4_4" group="PixelType"/>
+        <enum value="0x8033" name="GL_UNSIGNED_SHORT_4_4_4_4_EXT" group="PixelType"/>
+        <enum value="0x8034" name="GL_UNSIGNED_SHORT_5_5_5_1" group="PixelType"/>
+        <enum value="0x8034" name="GL_UNSIGNED_SHORT_5_5_5_1_EXT" group="PixelType"/>
+        <enum value="0x8035" name="GL_UNSIGNED_INT_8_8_8_8" group="PixelType"/>
+        <enum value="0x8035" name="GL_UNSIGNED_INT_8_8_8_8_EXT" group="PixelType"/>
+        <enum value="0x8036" name="GL_UNSIGNED_INT_10_10_10_2" group="PixelType"/>
+        <enum value="0x8036" name="GL_UNSIGNED_INT_10_10_10_2_EXT" group="PixelType"/>
         <enum value="0x8037" name="GL_POLYGON_OFFSET_EXT"/>
-        <enum value="0x8037" name="GL_POLYGON_OFFSET_FILL"/>
-        <enum value="0x8038" name="GL_POLYGON_OFFSET_FACTOR"/>
+        <enum value="0x8037" name="GL_POLYGON_OFFSET_FILL" group="GetPName,EnableCap"/>
+        <enum value="0x8038" name="GL_POLYGON_OFFSET_FACTOR" group="GetPName"/>
         <enum value="0x8038" name="GL_POLYGON_OFFSET_FACTOR_EXT"/>
-        <enum value="0x8039" name="GL_POLYGON_OFFSET_BIAS_EXT"/>
+        <enum value="0x8039" name="GL_POLYGON_OFFSET_BIAS_EXT" group="GetPName"/>
         <enum value="0x803A" name="GL_RESCALE_NORMAL"/>
-        <enum value="0x803A" name="GL_RESCALE_NORMAL_EXT"/>
-        <enum value="0x803B" name="GL_ALPHA4"/>
-        <enum value="0x803B" name="GL_ALPHA4_EXT"/>
-        <enum value="0x803C" name="GL_ALPHA8"/>
-        <enum value="0x803C" name="GL_ALPHA8_EXT"/>
-        <enum value="0x803C" name="GL_ALPHA8_OES"/>
-        <enum value="0x803D" name="GL_ALPHA12"/>
-        <enum value="0x803D" name="GL_ALPHA12_EXT"/>
-        <enum value="0x803E" name="GL_ALPHA16"/>
-        <enum value="0x803E" name="GL_ALPHA16_EXT"/>
-        <enum value="0x803F" name="GL_LUMINANCE4"/>
-        <enum value="0x803F" name="GL_LUMINANCE4_EXT"/>
-        <enum value="0x8040" name="GL_LUMINANCE8"/>
-        <enum value="0x8040" name="GL_LUMINANCE8_EXT"/>
-        <enum value="0x8040" name="GL_LUMINANCE8_OES"/>
-        <enum value="0x8041" name="GL_LUMINANCE12"/>
-        <enum value="0x8041" name="GL_LUMINANCE12_EXT"/>
-        <enum value="0x8042" name="GL_LUMINANCE16"/>
-        <enum value="0x8042" name="GL_LUMINANCE16_EXT"/>
-        <enum value="0x8043" name="GL_LUMINANCE4_ALPHA4"/>
-        <enum value="0x8043" name="GL_LUMINANCE4_ALPHA4_EXT"/>
-        <enum value="0x8043" name="GL_LUMINANCE4_ALPHA4_OES"/>
-        <enum value="0x8044" name="GL_LUMINANCE6_ALPHA2"/>
-        <enum value="0x8044" name="GL_LUMINANCE6_ALPHA2_EXT"/>
-        <enum value="0x8045" name="GL_LUMINANCE8_ALPHA8"/>
-        <enum value="0x8045" name="GL_LUMINANCE8_ALPHA8_EXT"/>
-        <enum value="0x8045" name="GL_LUMINANCE8_ALPHA8_OES"/>
-        <enum value="0x8046" name="GL_LUMINANCE12_ALPHA4"/>
-        <enum value="0x8046" name="GL_LUMINANCE12_ALPHA4_EXT"/>
-        <enum value="0x8047" name="GL_LUMINANCE12_ALPHA12"/>
-        <enum value="0x8047" name="GL_LUMINANCE12_ALPHA12_EXT"/>
-        <enum value="0x8048" name="GL_LUMINANCE16_ALPHA16"/>
-        <enum value="0x8048" name="GL_LUMINANCE16_ALPHA16_EXT"/>
-        <enum value="0x8049" name="GL_INTENSITY"/>
+        <enum value="0x803A" name="GL_RESCALE_NORMAL_EXT" group="GetPName,EnableCap"/>
+        <enum value="0x803B" name="GL_ALPHA4" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x803B" name="GL_ALPHA4_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x803C" name="GL_ALPHA8" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x803C" name="GL_ALPHA8_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x803C" name="GL_ALPHA8_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x803D" name="GL_ALPHA12" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x803D" name="GL_ALPHA12_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x803E" name="GL_ALPHA16" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x803E" name="GL_ALPHA16_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x803F" name="GL_LUMINANCE4" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x803F" name="GL_LUMINANCE4_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8040" name="GL_LUMINANCE8" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8040" name="GL_LUMINANCE8_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8040" name="GL_LUMINANCE8_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8041" name="GL_LUMINANCE12" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8041" name="GL_LUMINANCE12_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8042" name="GL_LUMINANCE16" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8042" name="GL_LUMINANCE16_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8043" name="GL_LUMINANCE4_ALPHA4" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8043" name="GL_LUMINANCE4_ALPHA4_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8043" name="GL_LUMINANCE4_ALPHA4_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8044" name="GL_LUMINANCE6_ALPHA2" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8044" name="GL_LUMINANCE6_ALPHA2_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8045" name="GL_LUMINANCE8_ALPHA8" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8045" name="GL_LUMINANCE8_ALPHA8_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8045" name="GL_LUMINANCE8_ALPHA8_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8046" name="GL_LUMINANCE12_ALPHA4" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8046" name="GL_LUMINANCE12_ALPHA4_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8047" name="GL_LUMINANCE12_ALPHA12" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8047" name="GL_LUMINANCE12_ALPHA12_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8048" name="GL_LUMINANCE16_ALPHA16" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8048" name="GL_LUMINANCE16_ALPHA16_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8049" name="GL_INTENSITY" group="InternalFormat,PathColorFormat"/>
         <enum value="0x8049" name="GL_INTENSITY_EXT"/>
-        <enum value="0x804A" name="GL_INTENSITY4"/>
-        <enum value="0x804A" name="GL_INTENSITY4_EXT"/>
-        <enum value="0x804B" name="GL_INTENSITY8"/>
-        <enum value="0x804B" name="GL_INTENSITY8_EXT"/>
-        <enum value="0x804C" name="GL_INTENSITY12"/>
-        <enum value="0x804C" name="GL_INTENSITY12_EXT"/>
-        <enum value="0x804D" name="GL_INTENSITY16"/>
-        <enum value="0x804D" name="GL_INTENSITY16_EXT"/>
-        <enum value="0x804E" name="GL_RGB2_EXT"/>
-        <enum value="0x804F" name="GL_RGB4"/>
-        <enum value="0x804F" name="GL_RGB4_EXT"/>
-        <enum value="0x8050" name="GL_RGB5"/>
-        <enum value="0x8050" name="GL_RGB5_EXT"/>
-        <enum value="0x8051" name="GL_RGB8"/>
-        <enum value="0x8051" name="GL_RGB8_EXT"/>
-        <enum value="0x8051" name="GL_RGB8_OES"/>
-        <enum value="0x8052" name="GL_RGB10"/>
-        <enum value="0x8052" name="GL_RGB10_EXT"/>
-        <enum value="0x8053" name="GL_RGB12"/>
-        <enum value="0x8053" name="GL_RGB12_EXT"/>
-        <enum value="0x8054" name="GL_RGB16"/>
-        <enum value="0x8054" name="GL_RGB16_EXT"/>
-        <enum value="0x8055" name="GL_RGBA2"/>
-        <enum value="0x8055" name="GL_RGBA2_EXT"/>
-        <enum value="0x8056" name="GL_RGBA4"/>
-        <enum value="0x8056" name="GL_RGBA4_EXT"/>
-        <enum value="0x8056" name="GL_RGBA4_OES"/>
-        <enum value="0x8057" name="GL_RGB5_A1"/>
-        <enum value="0x8057" name="GL_RGB5_A1_EXT"/>
-        <enum value="0x8057" name="GL_RGB5_A1_OES"/>
-        <enum value="0x8058" name="GL_RGBA8"/>
-        <enum value="0x8058" name="GL_RGBA8_EXT"/>
-        <enum value="0x8058" name="GL_RGBA8_OES"/>
-        <enum value="0x8059" name="GL_RGB10_A2"/>
-        <enum value="0x8059" name="GL_RGB10_A2_EXT"/>
-        <enum value="0x805A" name="GL_RGBA12"/>
-        <enum value="0x805A" name="GL_RGBA12_EXT"/>
-        <enum value="0x805B" name="GL_RGBA16"/>
-        <enum value="0x805B" name="GL_RGBA16_EXT"/>
-        <enum value="0x805C" name="GL_TEXTURE_RED_SIZE"/>
+        <enum value="0x804A" name="GL_INTENSITY4" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x804A" name="GL_INTENSITY4_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x804B" name="GL_INTENSITY8" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x804B" name="GL_INTENSITY8_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x804C" name="GL_INTENSITY12" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x804C" name="GL_INTENSITY12_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x804D" name="GL_INTENSITY16" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x804D" name="GL_INTENSITY16_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x804E" name="GL_RGB2_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x804F" name="GL_RGB4" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x804F" name="GL_RGB4_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8050" name="GL_RGB5" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8050" name="GL_RGB5_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8051" name="GL_RGB8" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8051" name="GL_RGB8_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8051" name="GL_RGB8_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8052" name="GL_RGB10" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8052" name="GL_RGB10_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8053" name="GL_RGB12" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8053" name="GL_RGB12_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8054" name="GL_RGB16" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8054" name="GL_RGB16_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8055" name="GL_RGBA2" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8055" name="GL_RGBA2_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8056" name="GL_RGBA4" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8056" name="GL_RGBA4_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8056" name="GL_RGBA4_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8057" name="GL_RGB5_A1" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8057" name="GL_RGB5_A1_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8057" name="GL_RGB5_A1_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8058" name="GL_RGBA8" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8058" name="GL_RGBA8_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8058" name="GL_RGBA8_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8059" name="GL_RGB10_A2" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8059" name="GL_RGB10_A2_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x805A" name="GL_RGBA12" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x805A" name="GL_RGBA12_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x805B" name="GL_RGBA16" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x805B" name="GL_RGBA16_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x805C" name="GL_TEXTURE_RED_SIZE" group="TextureParameterName,GetTextureParameter"/>
         <enum value="0x805C" name="GL_TEXTURE_RED_SIZE_EXT"/>
-        <enum value="0x805D" name="GL_TEXTURE_GREEN_SIZE"/>
+        <enum value="0x805D" name="GL_TEXTURE_GREEN_SIZE" group="TextureParameterName,GetTextureParameter"/>
         <enum value="0x805D" name="GL_TEXTURE_GREEN_SIZE_EXT"/>
-        <enum value="0x805E" name="GL_TEXTURE_BLUE_SIZE"/>
+        <enum value="0x805E" name="GL_TEXTURE_BLUE_SIZE" group="TextureParameterName,GetTextureParameter"/>
         <enum value="0x805E" name="GL_TEXTURE_BLUE_SIZE_EXT"/>
-        <enum value="0x805F" name="GL_TEXTURE_ALPHA_SIZE"/>
+        <enum value="0x805F" name="GL_TEXTURE_ALPHA_SIZE" group="TextureParameterName,GetTextureParameter"/>
         <enum value="0x805F" name="GL_TEXTURE_ALPHA_SIZE_EXT"/>
-        <enum value="0x8060" name="GL_TEXTURE_LUMINANCE_SIZE"/>
+        <enum value="0x8060" name="GL_TEXTURE_LUMINANCE_SIZE" group="TextureParameterName,GetTextureParameter"/>
         <enum value="0x8060" name="GL_TEXTURE_LUMINANCE_SIZE_EXT"/>
-        <enum value="0x8061" name="GL_TEXTURE_INTENSITY_SIZE"/>
+        <enum value="0x8061" name="GL_TEXTURE_INTENSITY_SIZE" group="TextureParameterName,GetTextureParameter"/>
         <enum value="0x8061" name="GL_TEXTURE_INTENSITY_SIZE_EXT"/>
-        <enum value="0x8062" name="GL_REPLACE_EXT"/>
-        <enum value="0x8063" name="GL_PROXY_TEXTURE_1D"/>
-        <enum value="0x8063" name="GL_PROXY_TEXTURE_1D_EXT"/>
-        <enum value="0x8064" name="GL_PROXY_TEXTURE_2D"/>
-        <enum value="0x8064" name="GL_PROXY_TEXTURE_2D_EXT"/>
-        <enum value="0x8065" name="GL_TEXTURE_TOO_LARGE_EXT"/>
-        <enum value="0x8066" name="GL_TEXTURE_PRIORITY"/>
-        <enum value="0x8066" name="GL_TEXTURE_PRIORITY_EXT"/>
-        <enum value="0x8067" name="GL_TEXTURE_RESIDENT"/>
+        <enum value="0x8062" name="GL_REPLACE_EXT" group="TextureEnvMode"/>
+        <enum value="0x8063" name="GL_PROXY_TEXTURE_1D" group="TextureTarget"/>
+        <enum value="0x8063" name="GL_PROXY_TEXTURE_1D_EXT" group="TextureTarget"/>
+        <enum value="0x8064" name="GL_PROXY_TEXTURE_2D" group="TextureTarget"/>
+        <enum value="0x8064" name="GL_PROXY_TEXTURE_2D_EXT" group="TextureTarget"/>
+        <enum value="0x8065" name="GL_TEXTURE_TOO_LARGE_EXT" group="ErrorCode"/>
+        <enum value="0x8066" name="GL_TEXTURE_PRIORITY" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x8066" name="GL_TEXTURE_PRIORITY_EXT" group="TextureParameterName"/>
+        <enum value="0x8067" name="GL_TEXTURE_RESIDENT" group="TextureParameterName,GetTextureParameter"/>
         <enum value="0x8067" name="GL_TEXTURE_RESIDENT_EXT"/>
         <enum value="0x8068" name="GL_TEXTURE_1D_BINDING_EXT"/>
-        <enum value="0x8068" name="GL_TEXTURE_BINDING_1D"/>
+        <enum value="0x8068" name="GL_TEXTURE_BINDING_1D" group="GetPName"/>
         <enum value="0x8069" name="GL_TEXTURE_2D_BINDING_EXT"/>
-        <enum value="0x8069" name="GL_TEXTURE_BINDING_2D"/>
-        <enum value="0x806A" name="GL_TEXTURE_3D_BINDING_EXT"/>
+        <enum value="0x8069" name="GL_TEXTURE_BINDING_2D" group="GetPName"/>
+        <enum value="0x806A" name="GL_TEXTURE_3D_BINDING_EXT" group="GetPName"/>
         <enum value="0x806A" name="GL_TEXTURE_3D_BINDING_OES"/>
-        <enum value="0x806A" name="GL_TEXTURE_BINDING_3D"/>
+        <enum value="0x806A" name="GL_TEXTURE_BINDING_3D" group="GetPName"/>
         <enum value="0x806A" name="GL_TEXTURE_BINDING_3D_OES"/>
-        <enum value="0x806B" name="GL_PACK_SKIP_IMAGES"/>
-        <enum value="0x806B" name="GL_PACK_SKIP_IMAGES_EXT"/>
-        <enum value="0x806C" name="GL_PACK_IMAGE_HEIGHT"/>
-        <enum value="0x806C" name="GL_PACK_IMAGE_HEIGHT_EXT"/>
-        <enum value="0x806D" name="GL_UNPACK_SKIP_IMAGES"/>
-        <enum value="0x806D" name="GL_UNPACK_SKIP_IMAGES_EXT"/>
-        <enum value="0x806E" name="GL_UNPACK_IMAGE_HEIGHT"/>
-        <enum value="0x806E" name="GL_UNPACK_IMAGE_HEIGHT_EXT"/>
-        <enum value="0x806F" name="GL_TEXTURE_3D"/>
-        <enum value="0x806F" name="GL_TEXTURE_3D_EXT"/>
-        <enum value="0x806F" name="GL_TEXTURE_3D_OES"/>
-        <enum value="0x8070" name="GL_PROXY_TEXTURE_3D"/>
-        <enum value="0x8070" name="GL_PROXY_TEXTURE_3D_EXT"/>
+        <enum value="0x806B" name="GL_PACK_SKIP_IMAGES" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x806B" name="GL_PACK_SKIP_IMAGES_EXT" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x806C" name="GL_PACK_IMAGE_HEIGHT" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x806C" name="GL_PACK_IMAGE_HEIGHT_EXT" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x806D" name="GL_UNPACK_SKIP_IMAGES" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x806D" name="GL_UNPACK_SKIP_IMAGES_EXT" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x806E" name="GL_UNPACK_IMAGE_HEIGHT" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x806E" name="GL_UNPACK_IMAGE_HEIGHT_EXT" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x806F" name="GL_TEXTURE_3D" group="CopyImageSubDataTarget,TextureTarget"/>
+        <enum value="0x806F" name="GL_TEXTURE_3D_EXT" group="TextureTarget,EnableCap,GetPName"/>
+        <enum value="0x806F" name="GL_TEXTURE_3D_OES" group="TextureTarget"/>
+        <enum value="0x8070" name="GL_PROXY_TEXTURE_3D" group="TextureTarget"/>
+        <enum value="0x8070" name="GL_PROXY_TEXTURE_3D_EXT" group="TextureTarget"/>
         <enum value="0x8071" name="GL_TEXTURE_DEPTH"/>
-        <enum value="0x8071" name="GL_TEXTURE_DEPTH_EXT"/>
-        <enum value="0x8072" name="GL_TEXTURE_WRAP_R"/>
-        <enum value="0x8072" name="GL_TEXTURE_WRAP_R_EXT"/>
-        <enum value="0x8072" name="GL_TEXTURE_WRAP_R_OES"/>
-        <enum value="0x8073" name="GL_MAX_3D_TEXTURE_SIZE"/>
-        <enum value="0x8073" name="GL_MAX_3D_TEXTURE_SIZE_EXT"/>
+        <enum value="0x8071" name="GL_TEXTURE_DEPTH_EXT" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x8072" name="GL_TEXTURE_WRAP_R" group="SamplerParameterI,TextureParameterName"/>
+        <enum value="0x8072" name="GL_TEXTURE_WRAP_R_EXT" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x8072" name="GL_TEXTURE_WRAP_R_OES" group="TextureParameterName"/>
+        <enum value="0x8073" name="GL_MAX_3D_TEXTURE_SIZE" group="GetPName"/>
+        <enum value="0x8073" name="GL_MAX_3D_TEXTURE_SIZE_EXT" group="GetPName"/>
         <enum value="0x8073" name="GL_MAX_3D_TEXTURE_SIZE_OES"/>
-        <enum value="0x8074" name="GL_VERTEX_ARRAY"/>
+        <enum value="0x8074" name="GL_VERTEX_ARRAY" group="ObjectIdentifier,EnableCap,GetPName"/>
         <enum value="0x8074" name="GL_VERTEX_ARRAY_EXT"/>
         <enum value="0x8074" name="GL_VERTEX_ARRAY_KHR"/>
-        <enum value="0x8075" name="GL_NORMAL_ARRAY"/>
+        <enum value="0x8075" name="GL_NORMAL_ARRAY" group="GetPName,EnableCap"/>
         <enum value="0x8075" name="GL_NORMAL_ARRAY_EXT"/>
-        <enum value="0x8076" name="GL_COLOR_ARRAY"/>
+        <enum value="0x8076" name="GL_COLOR_ARRAY" group="GetPName,EnableCap"/>
         <enum value="0x8076" name="GL_COLOR_ARRAY_EXT"/>
-        <enum value="0x8077" name="GL_INDEX_ARRAY"/>
+        <enum value="0x8077" name="GL_INDEX_ARRAY" group="GetPName,EnableCap"/>
         <enum value="0x8077" name="GL_INDEX_ARRAY_EXT"/>
-        <enum value="0x8078" name="GL_TEXTURE_COORD_ARRAY"/>
+        <enum value="0x8078" name="GL_TEXTURE_COORD_ARRAY" group="GetPName,EnableCap"/>
         <enum value="0x8078" name="GL_TEXTURE_COORD_ARRAY_EXT"/>
-        <enum value="0x8079" name="GL_EDGE_FLAG_ARRAY"/>
+        <enum value="0x8079" name="GL_EDGE_FLAG_ARRAY" group="GetPName,EnableCap"/>
         <enum value="0x8079" name="GL_EDGE_FLAG_ARRAY_EXT"/>
-        <enum value="0x807A" name="GL_VERTEX_ARRAY_SIZE"/>
+        <enum value="0x807A" name="GL_VERTEX_ARRAY_SIZE" group="GetPName"/>
         <enum value="0x807A" name="GL_VERTEX_ARRAY_SIZE_EXT"/>
-        <enum value="0x807B" name="GL_VERTEX_ARRAY_TYPE"/>
+        <enum value="0x807B" name="GL_VERTEX_ARRAY_TYPE" group="GetPName"/>
         <enum value="0x807B" name="GL_VERTEX_ARRAY_TYPE_EXT"/>
-        <enum value="0x807C" name="GL_VERTEX_ARRAY_STRIDE"/>
+        <enum value="0x807C" name="GL_VERTEX_ARRAY_STRIDE" group="GetPName"/>
         <enum value="0x807C" name="GL_VERTEX_ARRAY_STRIDE_EXT"/>
-        <enum value="0x807D" name="GL_VERTEX_ARRAY_COUNT_EXT"/>
-        <enum value="0x807E" name="GL_NORMAL_ARRAY_TYPE"/>
+        <enum value="0x807D" name="GL_VERTEX_ARRAY_COUNT_EXT" group="GetPName"/>
+        <enum value="0x807E" name="GL_NORMAL_ARRAY_TYPE" group="GetPName"/>
         <enum value="0x807E" name="GL_NORMAL_ARRAY_TYPE_EXT"/>
-        <enum value="0x807F" name="GL_NORMAL_ARRAY_STRIDE"/>
+        <enum value="0x807F" name="GL_NORMAL_ARRAY_STRIDE" group="GetPName"/>
         <enum value="0x807F" name="GL_NORMAL_ARRAY_STRIDE_EXT"/>
-        <enum value="0x8080" name="GL_NORMAL_ARRAY_COUNT_EXT"/>
-        <enum value="0x8081" name="GL_COLOR_ARRAY_SIZE"/>
+        <enum value="0x8080" name="GL_NORMAL_ARRAY_COUNT_EXT" group="GetPName"/>
+        <enum value="0x8081" name="GL_COLOR_ARRAY_SIZE" group="GetPName"/>
         <enum value="0x8081" name="GL_COLOR_ARRAY_SIZE_EXT"/>
-        <enum value="0x8082" name="GL_COLOR_ARRAY_TYPE"/>
+        <enum value="0x8082" name="GL_COLOR_ARRAY_TYPE" group="GetPName"/>
         <enum value="0x8082" name="GL_COLOR_ARRAY_TYPE_EXT"/>
-        <enum value="0x8083" name="GL_COLOR_ARRAY_STRIDE"/>
+        <enum value="0x8083" name="GL_COLOR_ARRAY_STRIDE" group="GetPName"/>
         <enum value="0x8083" name="GL_COLOR_ARRAY_STRIDE_EXT"/>
-        <enum value="0x8084" name="GL_COLOR_ARRAY_COUNT_EXT"/>
-        <enum value="0x8085" name="GL_INDEX_ARRAY_TYPE"/>
+        <enum value="0x8084" name="GL_COLOR_ARRAY_COUNT_EXT" group="GetPName"/>
+        <enum value="0x8085" name="GL_INDEX_ARRAY_TYPE" group="GetPName"/>
         <enum value="0x8085" name="GL_INDEX_ARRAY_TYPE_EXT"/>
-        <enum value="0x8086" name="GL_INDEX_ARRAY_STRIDE"/>
+        <enum value="0x8086" name="GL_INDEX_ARRAY_STRIDE" group="GetPName"/>
         <enum value="0x8086" name="GL_INDEX_ARRAY_STRIDE_EXT"/>
-        <enum value="0x8087" name="GL_INDEX_ARRAY_COUNT_EXT"/>
-        <enum value="0x8088" name="GL_TEXTURE_COORD_ARRAY_SIZE"/>
+        <enum value="0x8087" name="GL_INDEX_ARRAY_COUNT_EXT" group="GetPName"/>
+        <enum value="0x8088" name="GL_TEXTURE_COORD_ARRAY_SIZE" group="GetPName"/>
         <enum value="0x8088" name="GL_TEXTURE_COORD_ARRAY_SIZE_EXT"/>
-        <enum value="0x8089" name="GL_TEXTURE_COORD_ARRAY_TYPE"/>
+        <enum value="0x8089" name="GL_TEXTURE_COORD_ARRAY_TYPE" group="GetPName"/>
         <enum value="0x8089" name="GL_TEXTURE_COORD_ARRAY_TYPE_EXT"/>
-        <enum value="0x808A" name="GL_TEXTURE_COORD_ARRAY_STRIDE"/>
+        <enum value="0x808A" name="GL_TEXTURE_COORD_ARRAY_STRIDE" group="GetPName"/>
         <enum value="0x808A" name="GL_TEXTURE_COORD_ARRAY_STRIDE_EXT"/>
-        <enum value="0x808B" name="GL_TEXTURE_COORD_ARRAY_COUNT_EXT"/>
-        <enum value="0x808C" name="GL_EDGE_FLAG_ARRAY_STRIDE"/>
+        <enum value="0x808B" name="GL_TEXTURE_COORD_ARRAY_COUNT_EXT" group="GetPName"/>
+        <enum value="0x808C" name="GL_EDGE_FLAG_ARRAY_STRIDE" group="GetPName"/>
         <enum value="0x808C" name="GL_EDGE_FLAG_ARRAY_STRIDE_EXT"/>
-        <enum value="0x808D" name="GL_EDGE_FLAG_ARRAY_COUNT_EXT"/>
-        <enum value="0x808E" name="GL_VERTEX_ARRAY_POINTER"/>
-        <enum value="0x808E" name="GL_VERTEX_ARRAY_POINTER_EXT"/>
-        <enum value="0x808F" name="GL_NORMAL_ARRAY_POINTER"/>
-        <enum value="0x808F" name="GL_NORMAL_ARRAY_POINTER_EXT"/>
-        <enum value="0x8090" name="GL_COLOR_ARRAY_POINTER"/>
-        <enum value="0x8090" name="GL_COLOR_ARRAY_POINTER_EXT"/>
-        <enum value="0x8091" name="GL_INDEX_ARRAY_POINTER"/>
-        <enum value="0x8091" name="GL_INDEX_ARRAY_POINTER_EXT"/>
-        <enum value="0x8092" name="GL_TEXTURE_COORD_ARRAY_POINTER"/>
-        <enum value="0x8092" name="GL_TEXTURE_COORD_ARRAY_POINTER_EXT"/>
-        <enum value="0x8093" name="GL_EDGE_FLAG_ARRAY_POINTER"/>
-        <enum value="0x8093" name="GL_EDGE_FLAG_ARRAY_POINTER_EXT"/>
-        <enum value="0x8094" name="GL_INTERLACE_SGIX"/>
-        <enum value="0x8095" name="GL_DETAIL_TEXTURE_2D_SGIS"/>
-        <enum value="0x8096" name="GL_DETAIL_TEXTURE_2D_BINDING_SGIS"/>
-        <enum value="0x8097" name="GL_LINEAR_DETAIL_SGIS"/>
-        <enum value="0x8098" name="GL_LINEAR_DETAIL_ALPHA_SGIS"/>
-        <enum value="0x8099" name="GL_LINEAR_DETAIL_COLOR_SGIS"/>
-        <enum value="0x809A" name="GL_DETAIL_TEXTURE_LEVEL_SGIS"/>
-        <enum value="0x809B" name="GL_DETAIL_TEXTURE_MODE_SGIS"/>
-        <enum value="0x809C" name="GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS"/>
-        <enum value="0x809D" name="GL_MULTISAMPLE"/>
+        <enum value="0x808D" name="GL_EDGE_FLAG_ARRAY_COUNT_EXT" group="GetPName"/>
+        <enum value="0x808E" name="GL_VERTEX_ARRAY_POINTER" group="GetPointervPName"/>
+        <enum value="0x808E" name="GL_VERTEX_ARRAY_POINTER_EXT" group="GetPointervPName"/>
+        <enum value="0x808F" name="GL_NORMAL_ARRAY_POINTER" group="GetPointervPName"/>
+        <enum value="0x808F" name="GL_NORMAL_ARRAY_POINTER_EXT" group="GetPointervPName"/>
+        <enum value="0x8090" name="GL_COLOR_ARRAY_POINTER" group="GetPointervPName"/>
+        <enum value="0x8090" name="GL_COLOR_ARRAY_POINTER_EXT" group="GetPointervPName"/>
+        <enum value="0x8091" name="GL_INDEX_ARRAY_POINTER" group="GetPointervPName"/>
+        <enum value="0x8091" name="GL_INDEX_ARRAY_POINTER_EXT" group="GetPointervPName"/>
+        <enum value="0x8092" name="GL_TEXTURE_COORD_ARRAY_POINTER" group="GetPointervPName"/>
+        <enum value="0x8092" name="GL_TEXTURE_COORD_ARRAY_POINTER_EXT" group="GetPointervPName"/>
+        <enum value="0x8093" name="GL_EDGE_FLAG_ARRAY_POINTER" group="GetPointervPName"/>
+        <enum value="0x8093" name="GL_EDGE_FLAG_ARRAY_POINTER_EXT" group="GetPointervPName"/>
+        <enum value="0x8094" name="GL_INTERLACE_SGIX" group="GetPName,EnableCap"/>
+        <enum value="0x8095" name="GL_DETAIL_TEXTURE_2D_SGIS" group="TextureTarget"/>
+        <enum value="0x8096" name="GL_DETAIL_TEXTURE_2D_BINDING_SGIS" group="GetPName"/>
+        <enum value="0x8097" name="GL_LINEAR_DETAIL_SGIS" group="TextureMagFilter"/>
+        <enum value="0x8098" name="GL_LINEAR_DETAIL_ALPHA_SGIS" group="TextureMagFilter"/>
+        <enum value="0x8099" name="GL_LINEAR_DETAIL_COLOR_SGIS" group="TextureMagFilter"/>
+        <enum value="0x809A" name="GL_DETAIL_TEXTURE_LEVEL_SGIS" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x809B" name="GL_DETAIL_TEXTURE_MODE_SGIS" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x809C" name="GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x809D" name="GL_MULTISAMPLE" group="EnableCap"/>
         <enum value="0x809D" name="GL_MULTISAMPLE_ARB"/>
         <enum value="0x809D" name="GL_MULTISAMPLE_EXT"/>
-        <enum value="0x809D" name="GL_MULTISAMPLE_SGIS"/>
-        <enum value="0x809E" name="GL_SAMPLE_ALPHA_TO_COVERAGE"/>
+        <enum value="0x809D" name="GL_MULTISAMPLE_SGIS" group="GetPName,EnableCap"/>
+        <enum value="0x809E" name="GL_SAMPLE_ALPHA_TO_COVERAGE" group="EnableCap"/>
         <enum value="0x809E" name="GL_SAMPLE_ALPHA_TO_COVERAGE_ARB"/>
         <enum value="0x809E" name="GL_SAMPLE_ALPHA_TO_MASK_EXT"/>
-        <enum value="0x809E" name="GL_SAMPLE_ALPHA_TO_MASK_SGIS"/>
-        <enum value="0x809F" name="GL_SAMPLE_ALPHA_TO_ONE"/>
+        <enum value="0x809E" name="GL_SAMPLE_ALPHA_TO_MASK_SGIS" group="GetPName,EnableCap"/>
+        <enum value="0x809F" name="GL_SAMPLE_ALPHA_TO_ONE" group="EnableCap"/>
         <enum value="0x809F" name="GL_SAMPLE_ALPHA_TO_ONE_ARB"/>
         <enum value="0x809F" name="GL_SAMPLE_ALPHA_TO_ONE_EXT"/>
-        <enum value="0x809F" name="GL_SAMPLE_ALPHA_TO_ONE_SGIS"/>
-        <enum value="0x80A0" name="GL_SAMPLE_COVERAGE"/>
+        <enum value="0x809F" name="GL_SAMPLE_ALPHA_TO_ONE_SGIS" group="GetPName,EnableCap"/>
+        <enum value="0x80A0" name="GL_SAMPLE_COVERAGE" group="EnableCap"/>
         <enum value="0x80A0" name="GL_SAMPLE_COVERAGE_ARB"/>
         <enum value="0x80A0" name="GL_SAMPLE_MASK_EXT"/>
-        <enum value="0x80A0" name="GL_SAMPLE_MASK_SGIS"/>
-        <enum value="0x80A1" name="GL_1PASS_EXT"/>
-        <enum value="0x80A1" name="GL_1PASS_SGIS"/>
-        <enum value="0x80A2" name="GL_2PASS_0_EXT"/>
-        <enum value="0x80A2" name="GL_2PASS_0_SGIS"/>
-        <enum value="0x80A3" name="GL_2PASS_1_EXT"/>
-        <enum value="0x80A3" name="GL_2PASS_1_SGIS"/>
-        <enum value="0x80A4" name="GL_4PASS_0_EXT"/>
-        <enum value="0x80A4" name="GL_4PASS_0_SGIS"/>
-        <enum value="0x80A5" name="GL_4PASS_1_EXT"/>
-        <enum value="0x80A5" name="GL_4PASS_1_SGIS"/>
-        <enum value="0x80A6" name="GL_4PASS_2_EXT"/>
-        <enum value="0x80A6" name="GL_4PASS_2_SGIS"/>
-        <enum value="0x80A7" name="GL_4PASS_3_EXT"/>
-        <enum value="0x80A7" name="GL_4PASS_3_SGIS"/>
-        <enum value="0x80A8" name="GL_SAMPLE_BUFFERS"/>
+        <enum value="0x80A0" name="GL_SAMPLE_MASK_SGIS" group="GetPName,EnableCap"/>
+        <enum value="0x80A1" name="GL_1PASS_EXT" group="SamplePatternSGIS,SamplePatternEXT"/>
+        <enum value="0x80A1" name="GL_1PASS_SGIS" group="SamplePatternSGIS"/>
+        <enum value="0x80A2" name="GL_2PASS_0_EXT" group="SamplePatternSGIS,SamplePatternEXT"/>
+        <enum value="0x80A2" name="GL_2PASS_0_SGIS" group="SamplePatternSGIS"/>
+        <enum value="0x80A3" name="GL_2PASS_1_EXT" group="SamplePatternSGIS,SamplePatternEXT"/>
+        <enum value="0x80A3" name="GL_2PASS_1_SGIS" group="SamplePatternSGIS"/>
+        <enum value="0x80A4" name="GL_4PASS_0_EXT" group="SamplePatternSGIS,SamplePatternEXT"/>
+        <enum value="0x80A4" name="GL_4PASS_0_SGIS" group="SamplePatternSGIS"/>
+        <enum value="0x80A5" name="GL_4PASS_1_EXT" group="SamplePatternSGIS,SamplePatternEXT"/>
+        <enum value="0x80A5" name="GL_4PASS_1_SGIS" group="SamplePatternSGIS"/>
+        <enum value="0x80A6" name="GL_4PASS_2_EXT" group="SamplePatternSGIS,SamplePatternEXT"/>
+        <enum value="0x80A6" name="GL_4PASS_2_SGIS" group="SamplePatternSGIS"/>
+        <enum value="0x80A7" name="GL_4PASS_3_EXT" group="SamplePatternSGIS,SamplePatternEXT"/>
+        <enum value="0x80A7" name="GL_4PASS_3_SGIS" group="SamplePatternSGIS"/>
+        <enum value="0x80A8" name="GL_SAMPLE_BUFFERS" group="GetFramebufferParameter,GetPName"/>
         <enum value="0x80A8" name="GL_SAMPLE_BUFFERS_ARB"/>
         <enum value="0x80A8" name="GL_SAMPLE_BUFFERS_EXT"/>
-        <enum value="0x80A8" name="GL_SAMPLE_BUFFERS_SGIS"/>
-        <enum value="0x80A9" name="GL_SAMPLES"/>
+        <enum value="0x80A8" name="GL_SAMPLE_BUFFERS_SGIS" group="GetPName"/>
+        <enum value="0x80A9" name="GL_SAMPLES" group="GetFramebufferParameter,GetPName,InternalFormatPName"/>
         <enum value="0x80A9" name="GL_SAMPLES_ARB"/>
         <enum value="0x80A9" name="GL_SAMPLES_EXT"/>
-        <enum value="0x80A9" name="GL_SAMPLES_SGIS"/>
-        <enum value="0x80AA" name="GL_SAMPLE_COVERAGE_VALUE"/>
+        <enum value="0x80A9" name="GL_SAMPLES_SGIS" group="GetPName"/>
+        <enum value="0x80AA" name="GL_SAMPLE_COVERAGE_VALUE" group="GetPName"/>
         <enum value="0x80AA" name="GL_SAMPLE_COVERAGE_VALUE_ARB"/>
         <enum value="0x80AA" name="GL_SAMPLE_MASK_VALUE_EXT"/>
-        <enum value="0x80AA" name="GL_SAMPLE_MASK_VALUE_SGIS"/>
-        <enum value="0x80AB" name="GL_SAMPLE_COVERAGE_INVERT"/>
+        <enum value="0x80AA" name="GL_SAMPLE_MASK_VALUE_SGIS" group="GetPName"/>
+        <enum value="0x80AB" name="GL_SAMPLE_COVERAGE_INVERT" group="GetPName"/>
         <enum value="0x80AB" name="GL_SAMPLE_COVERAGE_INVERT_ARB"/>
         <enum value="0x80AB" name="GL_SAMPLE_MASK_INVERT_EXT"/>
-        <enum value="0x80AB" name="GL_SAMPLE_MASK_INVERT_SGIS"/>
+        <enum value="0x80AB" name="GL_SAMPLE_MASK_INVERT_SGIS" group="GetPName"/>
         <enum value="0x80AC" name="GL_SAMPLE_PATTERN_EXT"/>
-        <enum value="0x80AC" name="GL_SAMPLE_PATTERN_SGIS"/>
-        <enum value="0x80AD" name="GL_LINEAR_SHARPEN_SGIS"/>
-        <enum value="0x80AE" name="GL_LINEAR_SHARPEN_ALPHA_SGIS"/>
-        <enum value="0x80AF" name="GL_LINEAR_SHARPEN_COLOR_SGIS"/>
-        <enum value="0x80B0" name="GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS"/>
+        <enum value="0x80AC" name="GL_SAMPLE_PATTERN_SGIS" group="GetPName"/>
+        <enum value="0x80AD" name="GL_LINEAR_SHARPEN_SGIS" group="TextureMagFilter"/>
+        <enum value="0x80AE" name="GL_LINEAR_SHARPEN_ALPHA_SGIS" group="TextureMagFilter"/>
+        <enum value="0x80AF" name="GL_LINEAR_SHARPEN_COLOR_SGIS" group="TextureMagFilter"/>
+        <enum value="0x80B0" name="GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS" group="TextureParameterName,GetTextureParameter"/>
         <enum value="0x80B1" name="GL_COLOR_MATRIX"/>
-        <enum value="0x80B1" name="GL_COLOR_MATRIX_SGI"/>
+        <enum value="0x80B1" name="GL_COLOR_MATRIX_SGI" group="GetPName"/>
         <enum value="0x80B2" name="GL_COLOR_MATRIX_STACK_DEPTH"/>
-        <enum value="0x80B2" name="GL_COLOR_MATRIX_STACK_DEPTH_SGI"/>
+        <enum value="0x80B2" name="GL_COLOR_MATRIX_STACK_DEPTH_SGI" group="GetPName"/>
         <enum value="0x80B3" name="GL_MAX_COLOR_MATRIX_STACK_DEPTH"/>
-        <enum value="0x80B3" name="GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI"/>
-        <enum value="0x80B4" name="GL_POST_COLOR_MATRIX_RED_SCALE"/>
-        <enum value="0x80B4" name="GL_POST_COLOR_MATRIX_RED_SCALE_SGI"/>
-        <enum value="0x80B5" name="GL_POST_COLOR_MATRIX_GREEN_SCALE"/>
-        <enum value="0x80B5" name="GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI"/>
-        <enum value="0x80B6" name="GL_POST_COLOR_MATRIX_BLUE_SCALE"/>
-        <enum value="0x80B6" name="GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI"/>
-        <enum value="0x80B7" name="GL_POST_COLOR_MATRIX_ALPHA_SCALE"/>
-        <enum value="0x80B7" name="GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI"/>
-        <enum value="0x80B8" name="GL_POST_COLOR_MATRIX_RED_BIAS"/>
-        <enum value="0x80B8" name="GL_POST_COLOR_MATRIX_RED_BIAS_SGI"/>
-        <enum value="0x80B9" name="GL_POST_COLOR_MATRIX_GREEN_BIAS"/>
-        <enum value="0x80B9" name="GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI"/>
-        <enum value="0x80BA" name="GL_POST_COLOR_MATRIX_BLUE_BIAS"/>
-        <enum value="0x80BA" name="GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI"/>
-        <enum value="0x80BB" name="GL_POST_COLOR_MATRIX_ALPHA_BIAS"/>
-        <enum value="0x80BB" name="GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI"/>
-        <enum value="0x80BC" name="GL_TEXTURE_COLOR_TABLE_SGI"/>
-        <enum value="0x80BD" name="GL_PROXY_TEXTURE_COLOR_TABLE_SGI"/>
-        <enum value="0x80BE" name="GL_TEXTURE_ENV_BIAS_SGIX"/>
-        <enum value="0x80BF" name="GL_SHADOW_AMBIENT_SGIX"/>
+        <enum value="0x80B3" name="GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI" group="GetPName"/>
+        <enum value="0x80B4" name="GL_POST_COLOR_MATRIX_RED_SCALE" group="PixelTransferParameter"/>
+        <enum value="0x80B4" name="GL_POST_COLOR_MATRIX_RED_SCALE_SGI" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x80B5" name="GL_POST_COLOR_MATRIX_GREEN_SCALE" group="PixelTransferParameter"/>
+        <enum value="0x80B5" name="GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x80B6" name="GL_POST_COLOR_MATRIX_BLUE_SCALE" group="PixelTransferParameter"/>
+        <enum value="0x80B6" name="GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x80B7" name="GL_POST_COLOR_MATRIX_ALPHA_SCALE" group="PixelTransferParameter"/>
+        <enum value="0x80B7" name="GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x80B8" name="GL_POST_COLOR_MATRIX_RED_BIAS" group="PixelTransferParameter"/>
+        <enum value="0x80B8" name="GL_POST_COLOR_MATRIX_RED_BIAS_SGI" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x80B9" name="GL_POST_COLOR_MATRIX_GREEN_BIAS" group="PixelTransferParameter"/>
+        <enum value="0x80B9" name="GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x80BA" name="GL_POST_COLOR_MATRIX_BLUE_BIAS" group="PixelTransferParameter"/>
+        <enum value="0x80BA" name="GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x80BB" name="GL_POST_COLOR_MATRIX_ALPHA_BIAS" group="PixelTransferParameter"/>
+        <enum value="0x80BB" name="GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI" group="PixelTransferParameter,GetPName"/>
+        <enum value="0x80BC" name="GL_TEXTURE_COLOR_TABLE_SGI" group="GetPName,ColorTableTargetSGI,EnableCap"/>
+        <enum value="0x80BD" name="GL_PROXY_TEXTURE_COLOR_TABLE_SGI" group="ColorTableTargetSGI"/>
+        <enum value="0x80BE" name="GL_TEXTURE_ENV_BIAS_SGIX" group="TextureEnvMode"/>
+        <enum value="0x80BF" name="GL_SHADOW_AMBIENT_SGIX" group="TextureParameterName,GetTextureParameter"/>
         <enum value="0x80BF" name="GL_TEXTURE_COMPARE_FAIL_VALUE_ARB"/>
     </enums>
 
     <enums namespace="GL" start="0x80C0" end="0x80CF" vendor="ZiiLabs">
             <unused start="0x80C0" end="0x80C7" vendor="ZiiLabs"/>
-        <enum value="0x80C8" name="GL_BLEND_DST_RGB"/>
+        <enum value="0x80C8" name="GL_BLEND_DST_RGB" group="GetPName"/>
         <enum value="0x80C8" name="GL_BLEND_DST_RGB_EXT"/>
         <enum value="0x80C8" name="GL_BLEND_DST_RGB_OES"/>
-        <enum value="0x80C9" name="GL_BLEND_SRC_RGB"/>
+        <enum value="0x80C9" name="GL_BLEND_SRC_RGB" group="GetPName"/>
         <enum value="0x80C9" name="GL_BLEND_SRC_RGB_EXT"/>
         <enum value="0x80C9" name="GL_BLEND_SRC_RGB_OES"/>
-        <enum value="0x80CA" name="GL_BLEND_DST_ALPHA"/>
+        <enum value="0x80CA" name="GL_BLEND_DST_ALPHA" group="GetPName"/>
         <enum value="0x80CA" name="GL_BLEND_DST_ALPHA_EXT"/>
         <enum value="0x80CA" name="GL_BLEND_DST_ALPHA_OES"/>
-        <enum value="0x80CB" name="GL_BLEND_SRC_ALPHA"/>
+        <enum value="0x80CB" name="GL_BLEND_SRC_ALPHA" group="GetPName"/>
         <enum value="0x80CB" name="GL_BLEND_SRC_ALPHA_EXT"/>
         <enum value="0x80CB" name="GL_BLEND_SRC_ALPHA_OES"/>
         <enum value="0x80CC" name="GL_422_EXT"/>
@@ -6059,156 +1592,156 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x80D0" end="0x80DF" vendor="SGI">
-        <enum value="0x80D0" name="GL_COLOR_TABLE"/>
-        <enum value="0x80D0" name="GL_COLOR_TABLE_SGI"/>
-        <enum value="0x80D1" name="GL_POST_CONVOLUTION_COLOR_TABLE"/>
-        <enum value="0x80D1" name="GL_POST_CONVOLUTION_COLOR_TABLE_SGI"/>
-        <enum value="0x80D2" name="GL_POST_COLOR_MATRIX_COLOR_TABLE"/>
-        <enum value="0x80D2" name="GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI"/>
-        <enum value="0x80D3" name="GL_PROXY_COLOR_TABLE"/>
-        <enum value="0x80D3" name="GL_PROXY_COLOR_TABLE_SGI"/>
-        <enum value="0x80D4" name="GL_PROXY_POST_CONVOLUTION_COLOR_TABLE"/>
-        <enum value="0x80D4" name="GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI"/>
-        <enum value="0x80D5" name="GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE"/>
-        <enum value="0x80D5" name="GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI"/>
-        <enum value="0x80D6" name="GL_COLOR_TABLE_SCALE"/>
-        <enum value="0x80D6" name="GL_COLOR_TABLE_SCALE_SGI"/>
-        <enum value="0x80D7" name="GL_COLOR_TABLE_BIAS"/>
-        <enum value="0x80D7" name="GL_COLOR_TABLE_BIAS_SGI"/>
-        <enum value="0x80D8" name="GL_COLOR_TABLE_FORMAT"/>
-        <enum value="0x80D8" name="GL_COLOR_TABLE_FORMAT_SGI"/>
-        <enum value="0x80D9" name="GL_COLOR_TABLE_WIDTH"/>
-        <enum value="0x80D9" name="GL_COLOR_TABLE_WIDTH_SGI"/>
-        <enum value="0x80DA" name="GL_COLOR_TABLE_RED_SIZE"/>
-        <enum value="0x80DA" name="GL_COLOR_TABLE_RED_SIZE_SGI"/>
-        <enum value="0x80DB" name="GL_COLOR_TABLE_GREEN_SIZE"/>
-        <enum value="0x80DB" name="GL_COLOR_TABLE_GREEN_SIZE_SGI"/>
-        <enum value="0x80DC" name="GL_COLOR_TABLE_BLUE_SIZE"/>
-        <enum value="0x80DC" name="GL_COLOR_TABLE_BLUE_SIZE_SGI"/>
-        <enum value="0x80DD" name="GL_COLOR_TABLE_ALPHA_SIZE"/>
-        <enum value="0x80DD" name="GL_COLOR_TABLE_ALPHA_SIZE_SGI"/>
-        <enum value="0x80DE" name="GL_COLOR_TABLE_LUMINANCE_SIZE"/>
-        <enum value="0x80DE" name="GL_COLOR_TABLE_LUMINANCE_SIZE_SGI"/>
-        <enum value="0x80DF" name="GL_COLOR_TABLE_INTENSITY_SIZE"/>
-        <enum value="0x80DF" name="GL_COLOR_TABLE_INTENSITY_SIZE_SGI"/>
+        <enum value="0x80D0" name="GL_COLOR_TABLE" group="ColorTableTarget,ColorTableTargetSGI,EnableCap"/>
+        <enum value="0x80D0" name="GL_COLOR_TABLE_SGI" group="GetPName,ColorTableTargetSGI,EnableCap"/>
+        <enum value="0x80D1" name="GL_POST_CONVOLUTION_COLOR_TABLE" group="ColorTableTarget,ColorTableTargetSGI,EnableCap"/>
+        <enum value="0x80D1" name="GL_POST_CONVOLUTION_COLOR_TABLE_SGI" group="GetPName,ColorTableTargetSGI,EnableCap"/>
+        <enum value="0x80D2" name="GL_POST_COLOR_MATRIX_COLOR_TABLE" group="ColorTableTarget,ColorTableTargetSGI,EnableCap"/>
+        <enum value="0x80D2" name="GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI" group="GetPName,ColorTableTargetSGI,EnableCap"/>
+        <enum value="0x80D3" name="GL_PROXY_COLOR_TABLE" group="ColorTableTargetSGI,ColorTableTarget"/>
+        <enum value="0x80D3" name="GL_PROXY_COLOR_TABLE_SGI" group="ColorTableTargetSGI"/>
+        <enum value="0x80D4" name="GL_PROXY_POST_CONVOLUTION_COLOR_TABLE" group="ColorTableTargetSGI,ColorTableTarget"/>
+        <enum value="0x80D4" name="GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI" group="ColorTableTargetSGI"/>
+        <enum value="0x80D5" name="GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE" group="ColorTableTargetSGI,ColorTableTarget"/>
+        <enum value="0x80D5" name="GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI" group="ColorTableTargetSGI"/>
+        <enum value="0x80D6" name="GL_COLOR_TABLE_SCALE" group="ColorTableParameterPName"/>
+        <enum value="0x80D6" name="GL_COLOR_TABLE_SCALE_SGI" group="ColorTableParameterPName"/>
+        <enum value="0x80D7" name="GL_COLOR_TABLE_BIAS" group="ColorTableParameterPName"/>
+        <enum value="0x80D7" name="GL_COLOR_TABLE_BIAS_SGI" group="ColorTableParameterPName"/>
+        <enum value="0x80D8" name="GL_COLOR_TABLE_FORMAT" group="ColorTableParameterPName"/>
+        <enum value="0x80D8" name="GL_COLOR_TABLE_FORMAT_SGI" group="ColorTableParameterPName"/>
+        <enum value="0x80D9" name="GL_COLOR_TABLE_WIDTH" group="ColorTableParameterPName"/>
+        <enum value="0x80D9" name="GL_COLOR_TABLE_WIDTH_SGI" group="ColorTableParameterPName"/>
+        <enum value="0x80DA" name="GL_COLOR_TABLE_RED_SIZE" group="ColorTableParameterPName"/>
+        <enum value="0x80DA" name="GL_COLOR_TABLE_RED_SIZE_SGI" group="ColorTableParameterPName"/>
+        <enum value="0x80DB" name="GL_COLOR_TABLE_GREEN_SIZE" group="ColorTableParameterPName"/>
+        <enum value="0x80DB" name="GL_COLOR_TABLE_GREEN_SIZE_SGI" group="ColorTableParameterPName"/>
+        <enum value="0x80DC" name="GL_COLOR_TABLE_BLUE_SIZE" group="ColorTableParameterPName"/>
+        <enum value="0x80DC" name="GL_COLOR_TABLE_BLUE_SIZE_SGI" group="ColorTableParameterPName"/>
+        <enum value="0x80DD" name="GL_COLOR_TABLE_ALPHA_SIZE" group="ColorTableParameterPName"/>
+        <enum value="0x80DD" name="GL_COLOR_TABLE_ALPHA_SIZE_SGI" group="ColorTableParameterPName"/>
+        <enum value="0x80DE" name="GL_COLOR_TABLE_LUMINANCE_SIZE" group="ColorTableParameterPName"/>
+        <enum value="0x80DE" name="GL_COLOR_TABLE_LUMINANCE_SIZE_SGI" group="ColorTableParameterPName"/>
+        <enum value="0x80DF" name="GL_COLOR_TABLE_INTENSITY_SIZE" group="ColorTableParameterPName"/>
+        <enum value="0x80DF" name="GL_COLOR_TABLE_INTENSITY_SIZE_SGI" group="ColorTableParameterPName"/>
     </enums>
 
     <enums namespace="GL" start="0x80E0" end="0x810F" vendor="MS">
-        <enum value="0x80E0" name="GL_BGR"/>
-        <enum value="0x80E0" name="GL_BGR_EXT"/>
-        <enum value="0x80E1" name="GL_BGRA"/>
-        <enum value="0x80E1" name="GL_BGRA_EXT"/>
-        <enum value="0x80E1" name="GL_BGRA_IMG"/>
+        <enum value="0x80E0" name="GL_BGR" group="PixelFormat"/>
+        <enum value="0x80E0" name="GL_BGR_EXT" group="PixelFormat"/>
+        <enum value="0x80E1" name="GL_BGRA" group="PixelFormat"/>
+        <enum value="0x80E1" name="GL_BGRA_EXT" group="PixelFormat"/>
+        <enum value="0x80E1" name="GL_BGRA_IMG" group="PixelFormat"/>
         <enum value="0x80E2" name="GL_COLOR_INDEX1_EXT"/>
         <enum value="0x80E3" name="GL_COLOR_INDEX2_EXT"/>
         <enum value="0x80E4" name="GL_COLOR_INDEX4_EXT"/>
         <enum value="0x80E5" name="GL_COLOR_INDEX8_EXT"/>
         <enum value="0x80E6" name="GL_COLOR_INDEX12_EXT"/>
         <enum value="0x80E7" name="GL_COLOR_INDEX16_EXT"/>
-        <enum value="0x80E8" name="GL_MAX_ELEMENTS_VERTICES"/>
+        <enum value="0x80E8" name="GL_MAX_ELEMENTS_VERTICES" group="GetPName"/>
         <enum value="0x80E8" name="GL_MAX_ELEMENTS_VERTICES_EXT"/>
-        <enum value="0x80E9" name="GL_MAX_ELEMENTS_INDICES"/>
+        <enum value="0x80E9" name="GL_MAX_ELEMENTS_INDICES" group="GetPName"/>
         <enum value="0x80E9" name="GL_MAX_ELEMENTS_INDICES_EXT"/>
         <enum value="0x80EA" name="GL_PHONG_WIN"/>
-        <enum value="0x80EB" name="GL_PHONG_HINT_WIN"/>
+        <enum value="0x80EB" name="GL_PHONG_HINT_WIN" group="HintTarget"/>
         <enum value="0x80EC" name="GL_FOG_SPECULAR_TEXTURE_WIN"/>
         <enum value="0x80ED" name="GL_TEXTURE_INDEX_SIZE_EXT"/>
-        <enum value="0x80EE" name="GL_PARAMETER_BUFFER"/>
+        <enum value="0x80EE" name="GL_PARAMETER_BUFFER" group="BufferTargetARB"/>
         <enum value="0x80EE" name="GL_PARAMETER_BUFFER_ARB" alias="GL_PARAMETER_BUFFER"/>
         <enum value="0x80EF" name="GL_PARAMETER_BUFFER_BINDING"/>
         <enum value="0x80EF" name="GL_PARAMETER_BUFFER_BINDING_ARB" alias="GL_PARAMETER_BUFFER_BINDING"/>
-        <enum value="0x80F0" name="GL_CLIP_VOLUME_CLIPPING_HINT_EXT"/>
+        <enum value="0x80F0" name="GL_CLIP_VOLUME_CLIPPING_HINT_EXT" group="HintTarget"/>
             <unused start="0x80F1" end="0x810F" vendor="MS"/>
     </enums>
 
     <enums namespace="GL" start="0x8110" end="0x814F" vendor="SGI">
-        <enum value="0x8110" name="GL_DUAL_ALPHA4_SGIS"/>
-        <enum value="0x8111" name="GL_DUAL_ALPHA8_SGIS"/>
-        <enum value="0x8112" name="GL_DUAL_ALPHA12_SGIS"/>
-        <enum value="0x8113" name="GL_DUAL_ALPHA16_SGIS"/>
-        <enum value="0x8114" name="GL_DUAL_LUMINANCE4_SGIS"/>
-        <enum value="0x8115" name="GL_DUAL_LUMINANCE8_SGIS"/>
-        <enum value="0x8116" name="GL_DUAL_LUMINANCE12_SGIS"/>
-        <enum value="0x8117" name="GL_DUAL_LUMINANCE16_SGIS"/>
-        <enum value="0x8118" name="GL_DUAL_INTENSITY4_SGIS"/>
-        <enum value="0x8119" name="GL_DUAL_INTENSITY8_SGIS"/>
-        <enum value="0x811A" name="GL_DUAL_INTENSITY12_SGIS"/>
-        <enum value="0x811B" name="GL_DUAL_INTENSITY16_SGIS"/>
-        <enum value="0x811C" name="GL_DUAL_LUMINANCE_ALPHA4_SGIS"/>
-        <enum value="0x811D" name="GL_DUAL_LUMINANCE_ALPHA8_SGIS"/>
-        <enum value="0x811E" name="GL_QUAD_ALPHA4_SGIS"/>
-        <enum value="0x811F" name="GL_QUAD_ALPHA8_SGIS"/>
-        <enum value="0x8120" name="GL_QUAD_LUMINANCE4_SGIS"/>
-        <enum value="0x8121" name="GL_QUAD_LUMINANCE8_SGIS"/>
-        <enum value="0x8122" name="GL_QUAD_INTENSITY4_SGIS"/>
-        <enum value="0x8123" name="GL_QUAD_INTENSITY8_SGIS"/>
-        <enum value="0x8124" name="GL_DUAL_TEXTURE_SELECT_SGIS"/>
-        <enum value="0x8125" name="GL_QUAD_TEXTURE_SELECT_SGIS"/>
-        <enum value="0x8126" name="GL_POINT_SIZE_MIN"/>
-        <enum value="0x8126" name="GL_POINT_SIZE_MIN_ARB"/>
-        <enum value="0x8126" name="GL_POINT_SIZE_MIN_EXT"/>
-        <enum value="0x8126" name="GL_POINT_SIZE_MIN_SGIS"/>
-        <enum value="0x8127" name="GL_POINT_SIZE_MAX"/>
-        <enum value="0x8127" name="GL_POINT_SIZE_MAX_ARB"/>
-        <enum value="0x8127" name="GL_POINT_SIZE_MAX_EXT"/>
-        <enum value="0x8127" name="GL_POINT_SIZE_MAX_SGIS"/>
-        <enum value="0x8128" name="GL_POINT_FADE_THRESHOLD_SIZE"/>
-        <enum value="0x8128" name="GL_POINT_FADE_THRESHOLD_SIZE_ARB"/>
-        <enum value="0x8128" name="GL_POINT_FADE_THRESHOLD_SIZE_EXT"/>
-        <enum value="0x8128" name="GL_POINT_FADE_THRESHOLD_SIZE_SGIS"/>
-        <enum value="0x8129" name="GL_DISTANCE_ATTENUATION_EXT"/>
-        <enum value="0x8129" name="GL_DISTANCE_ATTENUATION_SGIS"/>
-        <enum value="0x8129" name="GL_POINT_DISTANCE_ATTENUATION"/>
-        <enum value="0x8129" name="GL_POINT_DISTANCE_ATTENUATION_ARB"/>
-        <enum value="0x812A" name="GL_FOG_FUNC_SGIS"/>
-        <enum value="0x812B" name="GL_FOG_FUNC_POINTS_SGIS"/>
-        <enum value="0x812C" name="GL_MAX_FOG_FUNC_POINTS_SGIS"/>
-        <enum value="0x812D" name="GL_CLAMP_TO_BORDER"/>
-        <enum value="0x812D" name="GL_CLAMP_TO_BORDER_ARB"/>
+        <enum value="0x8110" name="GL_DUAL_ALPHA4_SGIS" group="InternalFormat"/>
+        <enum value="0x8111" name="GL_DUAL_ALPHA8_SGIS" group="InternalFormat"/>
+        <enum value="0x8112" name="GL_DUAL_ALPHA12_SGIS" group="InternalFormat"/>
+        <enum value="0x8113" name="GL_DUAL_ALPHA16_SGIS" group="InternalFormat"/>
+        <enum value="0x8114" name="GL_DUAL_LUMINANCE4_SGIS" group="InternalFormat"/>
+        <enum value="0x8115" name="GL_DUAL_LUMINANCE8_SGIS" group="InternalFormat"/>
+        <enum value="0x8116" name="GL_DUAL_LUMINANCE12_SGIS" group="InternalFormat"/>
+        <enum value="0x8117" name="GL_DUAL_LUMINANCE16_SGIS" group="InternalFormat"/>
+        <enum value="0x8118" name="GL_DUAL_INTENSITY4_SGIS" group="InternalFormat"/>
+        <enum value="0x8119" name="GL_DUAL_INTENSITY8_SGIS" group="InternalFormat"/>
+        <enum value="0x811A" name="GL_DUAL_INTENSITY12_SGIS" group="InternalFormat"/>
+        <enum value="0x811B" name="GL_DUAL_INTENSITY16_SGIS" group="InternalFormat"/>
+        <enum value="0x811C" name="GL_DUAL_LUMINANCE_ALPHA4_SGIS" group="InternalFormat"/>
+        <enum value="0x811D" name="GL_DUAL_LUMINANCE_ALPHA8_SGIS" group="InternalFormat"/>
+        <enum value="0x811E" name="GL_QUAD_ALPHA4_SGIS" group="InternalFormat"/>
+        <enum value="0x811F" name="GL_QUAD_ALPHA8_SGIS" group="InternalFormat"/>
+        <enum value="0x8120" name="GL_QUAD_LUMINANCE4_SGIS" group="InternalFormat"/>
+        <enum value="0x8121" name="GL_QUAD_LUMINANCE8_SGIS" group="InternalFormat"/>
+        <enum value="0x8122" name="GL_QUAD_INTENSITY4_SGIS" group="InternalFormat"/>
+        <enum value="0x8123" name="GL_QUAD_INTENSITY8_SGIS" group="InternalFormat"/>
+        <enum value="0x8124" name="GL_DUAL_TEXTURE_SELECT_SGIS" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x8125" name="GL_QUAD_TEXTURE_SELECT_SGIS" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x8126" name="GL_POINT_SIZE_MIN" group="PointParameterNameARB,GetPName"/>
+        <enum value="0x8126" name="GL_POINT_SIZE_MIN_ARB" group="PointParameterNameARB,GetPName"/>
+        <enum value="0x8126" name="GL_POINT_SIZE_MIN_EXT" group="PointParameterNameARB,GetPName"/>
+        <enum value="0x8126" name="GL_POINT_SIZE_MIN_SGIS" group="PointParameterNameARB,GetPName"/>
+        <enum value="0x8127" name="GL_POINT_SIZE_MAX" group="PointParameterNameARB,GetPName"/>
+        <enum value="0x8127" name="GL_POINT_SIZE_MAX_ARB" group="PointParameterNameARB,GetPName"/>
+        <enum value="0x8127" name="GL_POINT_SIZE_MAX_EXT" group="PointParameterNameARB,GetPName"/>
+        <enum value="0x8127" name="GL_POINT_SIZE_MAX_SGIS" group="PointParameterNameARB,GetPName"/>
+        <enum value="0x8128" name="GL_POINT_FADE_THRESHOLD_SIZE" group="PointParameterNameARB,GetPName"/>
+        <enum value="0x8128" name="GL_POINT_FADE_THRESHOLD_SIZE_ARB" group="PointParameterNameARB,GetPName"/>
+        <enum value="0x8128" name="GL_POINT_FADE_THRESHOLD_SIZE_EXT" group="PointParameterNameARB,GetPName"/>
+        <enum value="0x8128" name="GL_POINT_FADE_THRESHOLD_SIZE_SGIS" group="PointParameterNameARB,GetPName"/>
+        <enum value="0x8129" name="GL_DISTANCE_ATTENUATION_EXT" group="PointParameterNameARB,GetPName"/>
+        <enum value="0x8129" name="GL_DISTANCE_ATTENUATION_SGIS" group="PointParameterNameARB,GetPName"/>
+        <enum value="0x8129" name="GL_POINT_DISTANCE_ATTENUATION" group="PointParameterNameARB,GetPName"/>
+        <enum value="0x8129" name="GL_POINT_DISTANCE_ATTENUATION_ARB" group="PointParameterNameARB,GetPName"/>
+        <enum value="0x812A" name="GL_FOG_FUNC_SGIS" group="FogMode"/>
+        <enum value="0x812B" name="GL_FOG_FUNC_POINTS_SGIS" group="GetPName"/>
+        <enum value="0x812C" name="GL_MAX_FOG_FUNC_POINTS_SGIS" group="GetPName"/>
+        <enum value="0x812D" name="GL_CLAMP_TO_BORDER" group="TextureWrapMode"/>
+        <enum value="0x812D" name="GL_CLAMP_TO_BORDER_ARB" group="TextureWrapMode"/>
         <enum value="0x812D" name="GL_CLAMP_TO_BORDER_EXT"/>
-        <enum value="0x812D" name="GL_CLAMP_TO_BORDER_NV"/>
-        <enum value="0x812D" name="GL_CLAMP_TO_BORDER_SGIS"/>
+        <enum value="0x812D" name="GL_CLAMP_TO_BORDER_NV" group="TextureWrapMode"/>
+        <enum value="0x812D" name="GL_CLAMP_TO_BORDER_SGIS" group="TextureWrapMode"/>
         <enum value="0x812D" name="GL_CLAMP_TO_BORDER_OES"/>
-        <enum value="0x812E" name="GL_TEXTURE_MULTI_BUFFER_HINT_SGIX"/>
-        <enum value="0x812F" name="GL_CLAMP_TO_EDGE"/>
-        <enum value="0x812F" name="GL_CLAMP_TO_EDGE_SGIS"/>
-        <enum value="0x8130" name="GL_PACK_SKIP_VOLUMES_SGIS"/>
-        <enum value="0x8131" name="GL_PACK_IMAGE_DEPTH_SGIS"/>
-        <enum value="0x8132" name="GL_UNPACK_SKIP_VOLUMES_SGIS"/>
-        <enum value="0x8133" name="GL_UNPACK_IMAGE_DEPTH_SGIS"/>
-        <enum value="0x8134" name="GL_TEXTURE_4D_SGIS"/>
-        <enum value="0x8135" name="GL_PROXY_TEXTURE_4D_SGIS"/>
-        <enum value="0x8136" name="GL_TEXTURE_4DSIZE_SGIS"/>
-        <enum value="0x8137" name="GL_TEXTURE_WRAP_Q_SGIS"/>
-        <enum value="0x8138" name="GL_MAX_4D_TEXTURE_SIZE_SGIS"/>
-        <enum value="0x8139" name="GL_PIXEL_TEX_GEN_SGIX"/>
-        <enum value="0x813A" name="GL_TEXTURE_MIN_LOD"/>
-        <enum value="0x813A" name="GL_TEXTURE_MIN_LOD_SGIS"/>
-        <enum value="0x813B" name="GL_TEXTURE_MAX_LOD"/>
-        <enum value="0x813B" name="GL_TEXTURE_MAX_LOD_SGIS"/>
-        <enum value="0x813C" name="GL_TEXTURE_BASE_LEVEL"/>
-        <enum value="0x813C" name="GL_TEXTURE_BASE_LEVEL_SGIS"/>
-        <enum value="0x813D" name="GL_TEXTURE_MAX_LEVEL"/>
+        <enum value="0x812E" name="GL_TEXTURE_MULTI_BUFFER_HINT_SGIX" group="HintTarget"/>
+        <enum value="0x812F" name="GL_CLAMP_TO_EDGE" group="TextureWrapMode"/>
+        <enum value="0x812F" name="GL_CLAMP_TO_EDGE_SGIS" group="TextureWrapMode"/>
+        <enum value="0x8130" name="GL_PACK_SKIP_VOLUMES_SGIS" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x8131" name="GL_PACK_IMAGE_DEPTH_SGIS" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x8132" name="GL_UNPACK_SKIP_VOLUMES_SGIS" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x8133" name="GL_UNPACK_IMAGE_DEPTH_SGIS" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x8134" name="GL_TEXTURE_4D_SGIS" group="TextureTarget,EnableCap,GetPName"/>
+        <enum value="0x8135" name="GL_PROXY_TEXTURE_4D_SGIS" group="TextureTarget"/>
+        <enum value="0x8136" name="GL_TEXTURE_4DSIZE_SGIS" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x8137" name="GL_TEXTURE_WRAP_Q_SGIS" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x8138" name="GL_MAX_4D_TEXTURE_SIZE_SGIS" group="GetPName"/>
+        <enum value="0x8139" name="GL_PIXEL_TEX_GEN_SGIX" group="GetPName,EnableCap"/>
+        <enum value="0x813A" name="GL_TEXTURE_MIN_LOD" group="SamplerParameterF,TextureParameterName"/>
+        <enum value="0x813A" name="GL_TEXTURE_MIN_LOD_SGIS" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x813B" name="GL_TEXTURE_MAX_LOD" group="SamplerParameterF,TextureParameterName"/>
+        <enum value="0x813B" name="GL_TEXTURE_MAX_LOD_SGIS" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x813C" name="GL_TEXTURE_BASE_LEVEL" group="TextureParameterName"/>
+        <enum value="0x813C" name="GL_TEXTURE_BASE_LEVEL_SGIS" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x813D" name="GL_TEXTURE_MAX_LEVEL" group="TextureParameterName"/>
         <enum value="0x813D" name="GL_TEXTURE_MAX_LEVEL_APPLE"/>
-        <enum value="0x813D" name="GL_TEXTURE_MAX_LEVEL_SGIS"/>
-        <enum value="0x813E" name="GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX"/>
-        <enum value="0x813F" name="GL_PIXEL_TILE_CACHE_INCREMENT_SGIX"/>
-        <enum value="0x8140" name="GL_PIXEL_TILE_WIDTH_SGIX"/>
-        <enum value="0x8141" name="GL_PIXEL_TILE_HEIGHT_SGIX"/>
-        <enum value="0x8142" name="GL_PIXEL_TILE_GRID_WIDTH_SGIX"/>
-        <enum value="0x8143" name="GL_PIXEL_TILE_GRID_HEIGHT_SGIX"/>
-        <enum value="0x8144" name="GL_PIXEL_TILE_GRID_DEPTH_SGIX"/>
-        <enum value="0x8145" name="GL_PIXEL_TILE_CACHE_SIZE_SGIX"/>
-        <enum value="0x8146" name="GL_FILTER4_SGIS"/>
-        <enum value="0x8147" name="GL_TEXTURE_FILTER4_SIZE_SGIS"/>
-        <enum value="0x8148" name="GL_SPRITE_SGIX"/>
-        <enum value="0x8149" name="GL_SPRITE_MODE_SGIX"/>
-        <enum value="0x814A" name="GL_SPRITE_AXIS_SGIX"/>
-        <enum value="0x814B" name="GL_SPRITE_TRANSLATION_SGIX"/>
-        <enum value="0x814C" name="GL_SPRITE_AXIAL_SGIX"/>
-        <enum value="0x814D" name="GL_SPRITE_OBJECT_ALIGNED_SGIX"/>
-        <enum value="0x814E" name="GL_SPRITE_EYE_ALIGNED_SGIX"/>
-        <enum value="0x814F" name="GL_TEXTURE_4D_BINDING_SGIS"/>
+        <enum value="0x813D" name="GL_TEXTURE_MAX_LEVEL_SGIS" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x813E" name="GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX" group="GetPName"/>
+        <enum value="0x813F" name="GL_PIXEL_TILE_CACHE_INCREMENT_SGIX" group="GetPName"/>
+        <enum value="0x8140" name="GL_PIXEL_TILE_WIDTH_SGIX" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x8141" name="GL_PIXEL_TILE_HEIGHT_SGIX" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x8142" name="GL_PIXEL_TILE_GRID_WIDTH_SGIX" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x8143" name="GL_PIXEL_TILE_GRID_HEIGHT_SGIX" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x8144" name="GL_PIXEL_TILE_GRID_DEPTH_SGIX" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x8145" name="GL_PIXEL_TILE_CACHE_SIZE_SGIX" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x8146" name="GL_FILTER4_SGIS" group="TextureFilterSGIS,TextureMinFilter,TextureMagFilter"/>
+        <enum value="0x8147" name="GL_TEXTURE_FILTER4_SIZE_SGIS" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x8148" name="GL_SPRITE_SGIX" group="GetPName,EnableCap"/>
+        <enum value="0x8149" name="GL_SPRITE_MODE_SGIX" group="GetPName,SpriteParameterNameSGIX"/>
+        <enum value="0x814A" name="GL_SPRITE_AXIS_SGIX" group="GetPName"/>
+        <enum value="0x814B" name="GL_SPRITE_TRANSLATION_SGIX" group="GetPName"/>
+        <enum value="0x814C" name="GL_SPRITE_AXIAL_SGIX" group="SpriteModeSGIX"/>
+        <enum value="0x814D" name="GL_SPRITE_OBJECT_ALIGNED_SGIX" group="SpriteModeSGIX"/>
+        <enum value="0x814E" name="GL_SPRITE_EYE_ALIGNED_SGIX" group="SpriteModeSGIX"/>
+        <enum value="0x814F" name="GL_TEXTURE_4D_BINDING_SGIS" group="GetPName"/>
     </enums>
 
     <enums namespace="GL" start="0x8150" end="0x816F" vendor="HP">
@@ -6218,21 +1751,21 @@ typedef unsigned int GLhandleARB;
             <unused start="0x8152" vendor="HP" comment="GL_WRAP_BORDER = 0x8152 was proposed, but not actually promoted to core"/>
         <enum value="0x8153" name="GL_REPLICATE_BORDER"/>
         <enum value="0x8153" name="GL_REPLICATE_BORDER_HP"/>
-        <enum value="0x8154" name="GL_CONVOLUTION_BORDER_COLOR"/>
+        <enum value="0x8154" name="GL_CONVOLUTION_BORDER_COLOR" group="ConvolutionParameter"/>
         <enum value="0x8154" name="GL_CONVOLUTION_BORDER_COLOR_HP"/>
-        <enum value="0x8155" name="GL_IMAGE_SCALE_X_HP"/>
-        <enum value="0x8156" name="GL_IMAGE_SCALE_Y_HP"/>
-        <enum value="0x8157" name="GL_IMAGE_TRANSLATE_X_HP"/>
-        <enum value="0x8158" name="GL_IMAGE_TRANSLATE_Y_HP"/>
-        <enum value="0x8159" name="GL_IMAGE_ROTATE_ANGLE_HP"/>
-        <enum value="0x815A" name="GL_IMAGE_ROTATE_ORIGIN_X_HP"/>
-        <enum value="0x815B" name="GL_IMAGE_ROTATE_ORIGIN_Y_HP"/>
-        <enum value="0x815C" name="GL_IMAGE_MAG_FILTER_HP"/>
-        <enum value="0x815D" name="GL_IMAGE_MIN_FILTER_HP"/>
-        <enum value="0x815E" name="GL_IMAGE_CUBIC_WEIGHT_HP"/>
+        <enum value="0x8155" name="GL_IMAGE_SCALE_X_HP" group="ImageTransformPNameHP"/>
+        <enum value="0x8156" name="GL_IMAGE_SCALE_Y_HP" group="ImageTransformPNameHP"/>
+        <enum value="0x8157" name="GL_IMAGE_TRANSLATE_X_HP" group="ImageTransformPNameHP"/>
+        <enum value="0x8158" name="GL_IMAGE_TRANSLATE_Y_HP" group="ImageTransformPNameHP"/>
+        <enum value="0x8159" name="GL_IMAGE_ROTATE_ANGLE_HP" group="ImageTransformPNameHP"/>
+        <enum value="0x815A" name="GL_IMAGE_ROTATE_ORIGIN_X_HP" group="ImageTransformPNameHP"/>
+        <enum value="0x815B" name="GL_IMAGE_ROTATE_ORIGIN_Y_HP" group="ImageTransformPNameHP"/>
+        <enum value="0x815C" name="GL_IMAGE_MAG_FILTER_HP" group="ImageTransformPNameHP"/>
+        <enum value="0x815D" name="GL_IMAGE_MIN_FILTER_HP" group="ImageTransformPNameHP"/>
+        <enum value="0x815E" name="GL_IMAGE_CUBIC_WEIGHT_HP" group="ImageTransformPNameHP"/>
         <enum value="0x815F" name="GL_CUBIC_HP"/>
         <enum value="0x8160" name="GL_AVERAGE_HP"/>
-        <enum value="0x8161" name="GL_IMAGE_TRANSFORM_2D_HP"/>
+        <enum value="0x8161" name="GL_IMAGE_TRANSFORM_2D_HP" group="ImageTransformTargetHP"/>
         <enum value="0x8162" name="GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP"/>
         <enum value="0x8163" name="GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP"/>
             <unused start="0x8164" vendor="HP"/>
@@ -6245,55 +1778,54 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x8170" end="0x81CF" vendor="SGI">
-        <enum value="0x8170" name="GL_LINEAR_CLIPMAP_LINEAR_SGIX"/>
-        <enum value="0x8171" name="GL_TEXTURE_CLIPMAP_CENTER_SGIX"/>
-        <enum value="0x8172" name="GL_TEXTURE_CLIPMAP_FRAME_SGIX"/>
-        <enum value="0x8173" name="GL_TEXTURE_CLIPMAP_OFFSET_SGIX"/>
-        <enum value="0x8174" name="GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX"/>
-        <enum value="0x8175" name="GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX"/>
-        <enum value="0x8176" name="GL_TEXTURE_CLIPMAP_DEPTH_SGIX"/>
-        <enum value="0x8177" name="GL_MAX_CLIPMAP_DEPTH_SGIX"/>
-        <enum value="0x8178" name="GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX"/>
-        <enum value="0x8179" name="GL_POST_TEXTURE_FILTER_BIAS_SGIX"/>
-        <enum value="0x817A" name="GL_POST_TEXTURE_FILTER_SCALE_SGIX"/>
-        <enum value="0x817B" name="GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX"/>
-        <enum value="0x817C" name="GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX"/>
-        <enum value="0x817D" name="GL_REFERENCE_PLANE_SGIX"/>
-        <enum value="0x817E" name="GL_REFERENCE_PLANE_EQUATION_SGIX"/>
-        <enum value="0x817F" name="GL_IR_INSTRUMENT1_SGIX"/>
-        <enum value="0x8180" name="GL_INSTRUMENT_BUFFER_POINTER_SGIX"/>
-        <enum value="0x8181" name="GL_INSTRUMENT_MEASUREMENTS_SGIX"/>
-        <enum value="0x8182" name="GL_LIST_PRIORITY_SGIX"/>
-        <enum value="0x8183" name="GL_CALLIGRAPHIC_FRAGMENT_SGIX"/>
-        <enum value="0x8184" name="GL_PIXEL_TEX_GEN_Q_CEILING_SGIX"/>
-        <enum value="0x8185" name="GL_PIXEL_TEX_GEN_Q_ROUND_SGIX"/>
-        <enum value="0x8186" name="GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX"/>
-        <enum value="0x8187" name="GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX"/>
-        <enum value="0x8188" name="GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX"/>
-        <enum value="0x8189" name="GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX"/>
-        <enum value="0x818A" name="GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX"/>
-        <enum value="0x818B" name="GL_FRAMEZOOM_SGIX"/>
-        <enum value="0x818C" name="GL_FRAMEZOOM_FACTOR_SGIX"/>
-        <enum value="0x818D" name="GL_MAX_FRAMEZOOM_FACTOR_SGIX"/>
-        <enum value="0x818E" name="GL_TEXTURE_LOD_BIAS_S_SGIX"/>
-        <enum value="0x818F" name="GL_TEXTURE_LOD_BIAS_T_SGIX"/>
-        <enum value="0x8190" name="GL_TEXTURE_LOD_BIAS_R_SGIX"/>
-        <enum value="0x8191" name="GL_GENERATE_MIPMAP"/>
-        <enum value="0x8191" name="GL_GENERATE_MIPMAP_SGIS"/>
-        <enum value="0x8192" name="GL_GENERATE_MIPMAP_HINT"/>
-        <enum value="0x8192" name="GL_GENERATE_MIPMAP_HINT_SGIS"/>
+        <enum value="0x8170" name="GL_LINEAR_CLIPMAP_LINEAR_SGIX" group="TextureMinFilter"/>
+        <enum value="0x8171" name="GL_TEXTURE_CLIPMAP_CENTER_SGIX" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x8172" name="GL_TEXTURE_CLIPMAP_FRAME_SGIX" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x8173" name="GL_TEXTURE_CLIPMAP_OFFSET_SGIX" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x8174" name="GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x8175" name="GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x8176" name="GL_TEXTURE_CLIPMAP_DEPTH_SGIX" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x8177" name="GL_MAX_CLIPMAP_DEPTH_SGIX" group="GetPName"/>
+        <enum value="0x8178" name="GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX" group="GetPName"/>
+        <enum value="0x8179" name="GL_POST_TEXTURE_FILTER_BIAS_SGIX" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x817A" name="GL_POST_TEXTURE_FILTER_SCALE_SGIX" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x817B" name="GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX" group="GetPName"/>
+        <enum value="0x817C" name="GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX" group="GetPName"/>
+        <enum value="0x817D" name="GL_REFERENCE_PLANE_SGIX" group="GetPName,EnableCap"/>
+        <enum value="0x817E" name="GL_REFERENCE_PLANE_EQUATION_SGIX" group="GetPName"/>
+        <enum value="0x817F" name="GL_IR_INSTRUMENT1_SGIX" group="GetPName,EnableCap"/>
+        <enum value="0x8180" name="GL_INSTRUMENT_BUFFER_POINTER_SGIX" group="GetPointervPName"/>
+        <enum value="0x8181" name="GL_INSTRUMENT_MEASUREMENTS_SGIX" group="GetPName"/>
+        <enum value="0x8182" name="GL_LIST_PRIORITY_SGIX" group="ListParameterName"/>
+        <enum value="0x8183" name="GL_CALLIGRAPHIC_FRAGMENT_SGIX" group="GetPName,EnableCap"/>
+        <enum value="0x8184" name="GL_PIXEL_TEX_GEN_Q_CEILING_SGIX" group="TextureMinFilter,PixelTexGenModeSGIX,TextureMagFilter"/>
+        <enum value="0x8185" name="GL_PIXEL_TEX_GEN_Q_ROUND_SGIX" group="TextureMinFilter,PixelTexGenModeSGIX,TextureMagFilter"/>
+        <enum value="0x8186" name="GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX" group="TextureMinFilter,PixelTexGenModeSGIX,TextureMagFilter"/>
+            <unused start="0x8187" end="0x8188" comment="Reserved but unused for PixelTexGenModeSGIX"/>
+        <enum value="0x8189" name="GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX" group="PixelTexGenModeSGIX"/>
+        <enum value="0x818A" name="GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX" group="PixelTexGenModeSGIX"/>
+        <enum value="0x818B" name="GL_FRAMEZOOM_SGIX" group="GetPName,EnableCap"/>
+        <enum value="0x818C" name="GL_FRAMEZOOM_FACTOR_SGIX" group="GetPName"/>
+        <enum value="0x818D" name="GL_MAX_FRAMEZOOM_FACTOR_SGIX" group="GetPName"/>
+        <enum value="0x818E" name="GL_TEXTURE_LOD_BIAS_S_SGIX" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x818F" name="GL_TEXTURE_LOD_BIAS_T_SGIX" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x8190" name="GL_TEXTURE_LOD_BIAS_R_SGIX" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x8191" name="GL_GENERATE_MIPMAP" group="InternalFormatPName,TextureParameterName"/>
+        <enum value="0x8191" name="GL_GENERATE_MIPMAP_SGIS" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x8192" name="GL_GENERATE_MIPMAP_HINT" group="HintTarget"/>
+        <enum value="0x8192" name="GL_GENERATE_MIPMAP_HINT_SGIS" group="HintTarget,GetPName"/>
             <unused start="0x8193" end="0x8193" comment="Incomplete extension SGIX_spotlight_cutoff"/>
             <!-- <enum value="0x8193" name="GL_SPOT_CUTOFF_DELTA_SGIX"/> -->
-        <enum value="0x8194" name="GL_GEOMETRY_DEFORMATION_SGIX"/>
-        <enum value="0x8195" name="GL_TEXTURE_DEFORMATION_SGIX"/>
-        <enum value="0x8196" name="GL_DEFORMATIONS_MASK_SGIX"/>
+        <enum value="0x8194" name="GL_GEOMETRY_DEFORMATION_SGIX" group="MapTarget,FfdTargetSGIX"/>
+        <enum value="0x8195" name="GL_TEXTURE_DEFORMATION_SGIX" group="MapTarget,FfdTargetSGIX"/>
+        <enum value="0x8196" name="GL_DEFORMATIONS_MASK_SGIX" group="GetPName"/>
         <enum value="0x8197" name="GL_MAX_DEFORMATION_ORDER_SGIX"/>
-        <enum value="0x8198" name="GL_FOG_OFFSET_SGIX"/>
-        <enum value="0x8199" name="GL_FOG_OFFSET_VALUE_SGIX"/>
-        <enum value="0x819A" name="GL_TEXTURE_COMPARE_SGIX"/>
-        <enum value="0x819B" name="GL_TEXTURE_COMPARE_OPERATOR_SGIX"/>
-        <enum value="0x819C" name="GL_TEXTURE_LEQUAL_R_SGIX"/>
-        <enum value="0x819D" name="GL_TEXTURE_GEQUAL_R_SGIX"/>
+        <enum value="0x8198" name="GL_FOG_OFFSET_SGIX" group="GetPName,EnableCap"/>
+        <enum value="0x8199" name="GL_FOG_OFFSET_VALUE_SGIX" group="GetPName,FogParameter"/>
+        <enum value="0x819A" name="GL_TEXTURE_COMPARE_SGIX" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x819B" name="GL_TEXTURE_COMPARE_OPERATOR_SGIX" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x819C" name="GL_TEXTURE_LEQUAL_R_SGIX" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x819D" name="GL_TEXTURE_GEQUAL_R_SGIX" group="TextureParameterName,GetTextureParameter"/>
             <unused start="0x819E" end="0x81A4" comment="Private (internal) extension SGIX_igloo_interface"/>
             <!-- <enum value="0x819E" name="GL_IGLOO_FULLSCREEN_SGIX"/> -->
             <!-- <enum value="0x819F" name="GL_IGLOO_VIEWPORT_OFFSET_SGIX"/> -->
@@ -6302,23 +1834,23 @@ typedef unsigned int GLhandleARB;
             <!-- <enum value="0x81A2" name="GL_IGLOO_IRISGL_MODE_SGIX"/> -->
             <!-- <enum value="0x81A3" name="GL_IGLOO_LMC_COLOR_SGIX"/> -->
             <!-- <enum value="0x81A4" name="GL_IGLOO_TMESHMODE_SGIX"/> -->
-        <enum value="0x81A5" name="GL_DEPTH_COMPONENT16"/>
-        <enum value="0x81A5" name="GL_DEPTH_COMPONENT16_ARB"/>
-        <enum value="0x81A5" name="GL_DEPTH_COMPONENT16_OES"/>
-        <enum value="0x81A5" name="GL_DEPTH_COMPONENT16_SGIX"/>
-        <enum value="0x81A6" name="GL_DEPTH_COMPONENT24"/>
-        <enum value="0x81A6" name="GL_DEPTH_COMPONENT24_ARB"/>
-        <enum value="0x81A6" name="GL_DEPTH_COMPONENT24_OES"/>
-        <enum value="0x81A6" name="GL_DEPTH_COMPONENT24_SGIX"/>
-        <enum value="0x81A7" name="GL_DEPTH_COMPONENT32"/>
-        <enum value="0x81A7" name="GL_DEPTH_COMPONENT32_ARB"/>
-        <enum value="0x81A7" name="GL_DEPTH_COMPONENT32_OES"/>
-        <enum value="0x81A7" name="GL_DEPTH_COMPONENT32_SGIX"/>
+        <enum value="0x81A5" name="GL_DEPTH_COMPONENT16" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x81A5" name="GL_DEPTH_COMPONENT16_ARB" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x81A5" name="GL_DEPTH_COMPONENT16_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x81A5" name="GL_DEPTH_COMPONENT16_SGIX" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x81A6" name="GL_DEPTH_COMPONENT24" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x81A6" name="GL_DEPTH_COMPONENT24_ARB" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x81A6" name="GL_DEPTH_COMPONENT24_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x81A6" name="GL_DEPTH_COMPONENT24_SGIX" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x81A7" name="GL_DEPTH_COMPONENT32" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x81A7" name="GL_DEPTH_COMPONENT32_ARB" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x81A7" name="GL_DEPTH_COMPONENT32_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x81A7" name="GL_DEPTH_COMPONENT32_SGIX" group="InternalFormat,SizedInternalFormat"/>
         <enum value="0x81A8" name="GL_ARRAY_ELEMENT_LOCK_FIRST_EXT"/>
         <enum value="0x81A9" name="GL_ARRAY_ELEMENT_LOCK_COUNT_EXT"/>
         <enum value="0x81AA" name="GL_CULL_VERTEX_EXT"/>
-        <enum value="0x81AB" name="GL_CULL_VERTEX_EYE_POSITION_EXT"/>
-        <enum value="0x81AC" name="GL_CULL_VERTEX_OBJECT_POSITION_EXT"/>
+        <enum value="0x81AB" name="GL_CULL_VERTEX_EYE_POSITION_EXT" group="CullParameterEXT"/>
+        <enum value="0x81AC" name="GL_CULL_VERTEX_OBJECT_POSITION_EXT" group="CullParameterEXT"/>
         <enum value="0x81AD" name="GL_IUI_V2F_EXT"/>
         <enum value="0x81AE" name="GL_IUI_V3F_EXT"/>
         <enum value="0x81AF" name="GL_IUI_N3F_V2F_EXT"/>
@@ -6333,8 +1865,8 @@ typedef unsigned int GLhandleARB;
         <enum value="0x81B8" name="GL_INDEX_MATERIAL_EXT"/>
         <enum value="0x81B9" name="GL_INDEX_MATERIAL_PARAMETER_EXT"/>
         <enum value="0x81BA" name="GL_INDEX_MATERIAL_FACE_EXT"/>
-        <enum value="0x81BB" name="GL_YCRCB_422_SGIX"/>
-        <enum value="0x81BC" name="GL_YCRCB_444_SGIX"/>
+        <enum value="0x81BB" name="GL_YCRCB_422_SGIX" group="PixelFormat"/>
+        <enum value="0x81BC" name="GL_YCRCB_444_SGIX" group="PixelFormat"/>
             <unused start="0x81BD" end="0x81C3" comment="Incomplete extension SGI_complex_type"/>
             <!-- <enum value="0x81BD" name="GL_COMPLEX_UNSIGNED_BYTE_SGI"/> -->
             <!-- <enum value="0x81BE" name="GL_COMPLEX_BYTE_SGI"/> -->
@@ -6392,21 +1924,21 @@ typedef unsigned int GLhandleARB;
             <!-- <enum value="0x81ED" name="GL_NURBS_KNOT_COUNT_SGIX"/> -->
             <!-- <enum value="0x81EE" name="GL_NURBS_KNOT_VECTOR_SGIX"/> -->
         <enum value="0x81EF" name="GL_TEXTURE_COLOR_WRITEMASK_SGIS"/>
-        <enum value="0x81F0" name="GL_EYE_DISTANCE_TO_POINT_SGIS"/>
-        <enum value="0x81F1" name="GL_OBJECT_DISTANCE_TO_POINT_SGIS"/>
-        <enum value="0x81F2" name="GL_EYE_DISTANCE_TO_LINE_SGIS"/>
-        <enum value="0x81F3" name="GL_OBJECT_DISTANCE_TO_LINE_SGIS"/>
-        <enum value="0x81F4" name="GL_EYE_POINT_SGIS"/>
-        <enum value="0x81F5" name="GL_OBJECT_POINT_SGIS"/>
-        <enum value="0x81F6" name="GL_EYE_LINE_SGIS"/>
-        <enum value="0x81F7" name="GL_OBJECT_LINE_SGIS"/>
-        <enum value="0x81F8" name="GL_LIGHT_MODEL_COLOR_CONTROL"/>
-        <enum value="0x81F8" name="GL_LIGHT_MODEL_COLOR_CONTROL_EXT"/>
-        <enum value="0x81F9" name="GL_SINGLE_COLOR"/>
-        <enum value="0x81F9" name="GL_SINGLE_COLOR_EXT"/>
-        <enum value="0x81FA" name="GL_SEPARATE_SPECULAR_COLOR"/>
-        <enum value="0x81FA" name="GL_SEPARATE_SPECULAR_COLOR_EXT"/>
-        <enum value="0x81FB" name="GL_SHARED_TEXTURE_PALETTE_EXT"/>
+        <enum value="0x81F0" name="GL_EYE_DISTANCE_TO_POINT_SGIS" group="TextureGenMode"/>
+        <enum value="0x81F1" name="GL_OBJECT_DISTANCE_TO_POINT_SGIS" group="TextureGenMode"/>
+        <enum value="0x81F2" name="GL_EYE_DISTANCE_TO_LINE_SGIS" group="TextureGenMode"/>
+        <enum value="0x81F3" name="GL_OBJECT_DISTANCE_TO_LINE_SGIS" group="TextureGenMode"/>
+        <enum value="0x81F4" name="GL_EYE_POINT_SGIS" group="TextureGenParameter"/>
+        <enum value="0x81F5" name="GL_OBJECT_POINT_SGIS" group="TextureGenParameter"/>
+        <enum value="0x81F6" name="GL_EYE_LINE_SGIS" group="TextureGenParameter"/>
+        <enum value="0x81F7" name="GL_OBJECT_LINE_SGIS" group="TextureGenParameter"/>
+        <enum value="0x81F8" name="GL_LIGHT_MODEL_COLOR_CONTROL" group="LightModelParameter,GetPName"/>
+        <enum value="0x81F8" name="GL_LIGHT_MODEL_COLOR_CONTROL_EXT" group="LightModelParameter"/>
+        <enum value="0x81F9" name="GL_SINGLE_COLOR" group="LightModelColorControl"/>
+        <enum value="0x81F9" name="GL_SINGLE_COLOR_EXT" group="LightModelColorControl"/>
+        <enum value="0x81FA" name="GL_SEPARATE_SPECULAR_COLOR" group="LightModelColorControl"/>
+        <enum value="0x81FA" name="GL_SEPARATE_SPECULAR_COLOR_EXT" group="LightModelColorControl"/>
+        <enum value="0x81FB" name="GL_SHARED_TEXTURE_PALETTE_EXT" group="GetPName,EnableCap"/>
             <unused start="0x81FC" end="0x81FD" comment="Incomplete extension SGIX_fog_scale"/>
             <!-- <enum value="0x81FC" name="GL_FOG_SCALE_SGIX"/> -->
             <!-- <enum value="0x81FD" name="GL_FOG_SCALE_VALUE_SGIX"/> -->
@@ -6416,138 +1948,138 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x8200" end="0x820F" vendor="AMD" comment="Range released by MS 2002/9/16">
-        <enum value="0x8200" name="GL_TEXT_FRAGMENT_SHADER_ATI"/>
+        <enum value="0x8200" name="GL_TEXT_FRAGMENT_SHADER_ATI" group="ProgramTarget"/>
             <unused start="0x8201" end="0x820F" vendor="AMD"/>
     </enums>
 
     <enums namespace="GL" start="0x8210" end="0x823F" vendor="ARB">
-        <enum value="0x8210" name="GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING"/>
-        <enum value="0x8210" name="GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT"/>
-        <enum value="0x8211" name="GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE"/>
-        <enum value="0x8211" name="GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT"/>
-        <enum value="0x8212" name="GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE"/>
-        <enum value="0x8213" name="GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE"/>
-        <enum value="0x8214" name="GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE"/>
-        <enum value="0x8215" name="GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE"/>
-        <enum value="0x8216" name="GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE"/>
-        <enum value="0x8217" name="GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE"/>
+        <enum value="0x8210" name="GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8210" name="GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8211" name="GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8211" name="GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8212" name="GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8213" name="GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8214" name="GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8215" name="GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8216" name="GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8217" name="GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE" group="FramebufferAttachmentParameterName"/>
         <enum value="0x8218" name="GL_FRAMEBUFFER_DEFAULT"/>
-        <enum value="0x8219" name="GL_FRAMEBUFFER_UNDEFINED"/>
+        <enum value="0x8219" name="GL_FRAMEBUFFER_UNDEFINED" group="FramebufferStatus"/>
         <enum value="0x8219" name="GL_FRAMEBUFFER_UNDEFINED_OES"/>
-        <enum value="0x821A" name="GL_DEPTH_STENCIL_ATTACHMENT"/>
-        <enum value="0x821B" name="GL_MAJOR_VERSION"/>
-        <enum value="0x821C" name="GL_MINOR_VERSION"/>
-        <enum value="0x821D" name="GL_NUM_EXTENSIONS"/>
-        <enum value="0x821E" name="GL_CONTEXT_FLAGS"/>
-        <enum value="0x821F" name="GL_BUFFER_IMMUTABLE_STORAGE"/>
+        <enum value="0x821A" name="GL_DEPTH_STENCIL_ATTACHMENT" group="FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x821B" name="GL_MAJOR_VERSION" group="GetPName"/>
+        <enum value="0x821C" name="GL_MINOR_VERSION" group="GetPName"/>
+        <enum value="0x821D" name="GL_NUM_EXTENSIONS" group="GetPName"/>
+        <enum value="0x821E" name="GL_CONTEXT_FLAGS" group="GetPName"/>
+        <enum value="0x821F" name="GL_BUFFER_IMMUTABLE_STORAGE" group="BufferPNameARB"/>
         <enum value="0x821F" name="GL_BUFFER_IMMUTABLE_STORAGE_EXT"/>
-        <enum value="0x8220" name="GL_BUFFER_STORAGE_FLAGS"/>
+        <enum value="0x8220" name="GL_BUFFER_STORAGE_FLAGS" group="BufferPNameARB"/>
         <enum value="0x8220" name="GL_BUFFER_STORAGE_FLAGS_EXT"/>
         <enum value="0x8221" name="GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED"/>
         <enum value="0x8221" name="GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES"/>
         <enum value="0x8222" name="GL_INDEX"/>
             <unused start="0x8223" vendor="ARB" comment="GL_DEPTH_BUFFER = 0x8223 not actually used in the API"/>
             <unused start="0x8224" vendor="ARB" comment="GL_STENCIL_BUFFER = 0x8224 not actually used in the API"/>
-        <enum value="0x8225" name="GL_COMPRESSED_RED"/>
-        <enum value="0x8226" name="GL_COMPRESSED_RG"/>
-        <enum value="0x8227" name="GL_RG"/>
+        <enum value="0x8225" name="GL_COMPRESSED_RED" group="InternalFormat"/>
+        <enum value="0x8226" name="GL_COMPRESSED_RG" group="InternalFormat"/>
+        <enum value="0x8227" name="GL_RG" group="InternalFormat,PixelFormat"/>
         <enum value="0x8227" name="GL_RG_EXT"/>
-        <enum value="0x8228" name="GL_RG_INTEGER"/>
-        <enum value="0x8229" name="GL_R8"/>
-        <enum value="0x8229" name="GL_R8_EXT"/>
-        <enum value="0x822A" name="GL_R16"/>
-        <enum value="0x822A" name="GL_R16_EXT"/>
-        <enum value="0x822B" name="GL_RG8"/>
-        <enum value="0x822B" name="GL_RG8_EXT"/>
-        <enum value="0x822C" name="GL_RG16"/>
-        <enum value="0x822C" name="GL_RG16_EXT"/>
-        <enum value="0x822D" name="GL_R16F"/>
-        <enum value="0x822D" name="GL_R16F_EXT"/>
-        <enum value="0x822E" name="GL_R32F"/>
-        <enum value="0x822E" name="GL_R32F_EXT"/>
-        <enum value="0x822F" name="GL_RG16F"/>
-        <enum value="0x822F" name="GL_RG16F_EXT"/>
-        <enum value="0x8230" name="GL_RG32F"/>
-        <enum value="0x8230" name="GL_RG32F_EXT"/>
-        <enum value="0x8231" name="GL_R8I"/>
-        <enum value="0x8232" name="GL_R8UI"/>
-        <enum value="0x8233" name="GL_R16I"/>
-        <enum value="0x8234" name="GL_R16UI"/>
-        <enum value="0x8235" name="GL_R32I"/>
-        <enum value="0x8236" name="GL_R32UI"/>
-        <enum value="0x8237" name="GL_RG8I"/>
-        <enum value="0x8238" name="GL_RG8UI"/>
-        <enum value="0x8239" name="GL_RG16I"/>
-        <enum value="0x823A" name="GL_RG16UI"/>
-        <enum value="0x823B" name="GL_RG32I"/>
-        <enum value="0x823C" name="GL_RG32UI"/>
+        <enum value="0x8228" name="GL_RG_INTEGER" group="PixelFormat"/>
+        <enum value="0x8229" name="GL_R8" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8229" name="GL_R8_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x822A" name="GL_R16" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x822A" name="GL_R16_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x822B" name="GL_RG8" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x822B" name="GL_RG8_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x822C" name="GL_RG16" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x822C" name="GL_RG16_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x822D" name="GL_R16F" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x822D" name="GL_R16F_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x822E" name="GL_R32F" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x822E" name="GL_R32F_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x822F" name="GL_RG16F" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x822F" name="GL_RG16F_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8230" name="GL_RG32F" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8230" name="GL_RG32F_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8231" name="GL_R8I" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8232" name="GL_R8UI" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8233" name="GL_R16I" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8234" name="GL_R16UI" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8235" name="GL_R32I" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8236" name="GL_R32UI" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8237" name="GL_RG8I" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8238" name="GL_RG8UI" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8239" name="GL_RG16I" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x823A" name="GL_RG16UI" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x823B" name="GL_RG32I" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x823C" name="GL_RG32UI" group="InternalFormat,SizedInternalFormat"/>
             <unused start="0x823D" end="0x823F" vendor="ARB"/>
     </enums>
 
     <enums namespace="GL" start="0x8240" end="0x82AF" vendor="ARB" comment="Range released by MS on 2002/9/16">
         <enum value="0x8240" name="GL_SYNC_CL_EVENT_ARB"/>
         <enum value="0x8241" name="GL_SYNC_CL_EVENT_COMPLETE_ARB"/>
-        <enum value="0x8242" name="GL_DEBUG_OUTPUT_SYNCHRONOUS"/>
+        <enum value="0x8242" name="GL_DEBUG_OUTPUT_SYNCHRONOUS" group="EnableCap"/>
         <enum value="0x8242" name="GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB"/>
         <enum value="0x8242" name="GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR"/>
         <enum value="0x8243" name="GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH"/>
         <enum value="0x8243" name="GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB"/>
         <enum value="0x8243" name="GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR"/>
-        <enum value="0x8244" name="GL_DEBUG_CALLBACK_FUNCTION"/>
+        <enum value="0x8244" name="GL_DEBUG_CALLBACK_FUNCTION" group="GetPointervPName"/>
         <enum value="0x8244" name="GL_DEBUG_CALLBACK_FUNCTION_ARB"/>
         <enum value="0x8244" name="GL_DEBUG_CALLBACK_FUNCTION_KHR"/>
-        <enum value="0x8245" name="GL_DEBUG_CALLBACK_USER_PARAM"/>
+        <enum value="0x8245" name="GL_DEBUG_CALLBACK_USER_PARAM" group="GetPointervPName"/>
         <enum value="0x8245" name="GL_DEBUG_CALLBACK_USER_PARAM_ARB"/>
         <enum value="0x8245" name="GL_DEBUG_CALLBACK_USER_PARAM_KHR"/>
-        <enum value="0x8246" name="GL_DEBUG_SOURCE_API"/>
+        <enum value="0x8246" name="GL_DEBUG_SOURCE_API" group="DebugSource"/>
         <enum value="0x8246" name="GL_DEBUG_SOURCE_API_ARB"/>
         <enum value="0x8246" name="GL_DEBUG_SOURCE_API_KHR"/>
-        <enum value="0x8247" name="GL_DEBUG_SOURCE_WINDOW_SYSTEM"/>
+        <enum value="0x8247" name="GL_DEBUG_SOURCE_WINDOW_SYSTEM" group="DebugSource"/>
         <enum value="0x8247" name="GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB"/>
         <enum value="0x8247" name="GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR"/>
-        <enum value="0x8248" name="GL_DEBUG_SOURCE_SHADER_COMPILER"/>
+        <enum value="0x8248" name="GL_DEBUG_SOURCE_SHADER_COMPILER" group="DebugSource"/>
         <enum value="0x8248" name="GL_DEBUG_SOURCE_SHADER_COMPILER_ARB"/>
         <enum value="0x8248" name="GL_DEBUG_SOURCE_SHADER_COMPILER_KHR"/>
-        <enum value="0x8249" name="GL_DEBUG_SOURCE_THIRD_PARTY"/>
+        <enum value="0x8249" name="GL_DEBUG_SOURCE_THIRD_PARTY" group="DebugSource"/>
         <enum value="0x8249" name="GL_DEBUG_SOURCE_THIRD_PARTY_ARB"/>
         <enum value="0x8249" name="GL_DEBUG_SOURCE_THIRD_PARTY_KHR"/>
-        <enum value="0x824A" name="GL_DEBUG_SOURCE_APPLICATION"/>
+        <enum value="0x824A" name="GL_DEBUG_SOURCE_APPLICATION" group="DebugSource"/>
         <enum value="0x824A" name="GL_DEBUG_SOURCE_APPLICATION_ARB"/>
         <enum value="0x824A" name="GL_DEBUG_SOURCE_APPLICATION_KHR"/>
-        <enum value="0x824B" name="GL_DEBUG_SOURCE_OTHER"/>
+        <enum value="0x824B" name="GL_DEBUG_SOURCE_OTHER" group="DebugSource"/>
         <enum value="0x824B" name="GL_DEBUG_SOURCE_OTHER_ARB"/>
         <enum value="0x824B" name="GL_DEBUG_SOURCE_OTHER_KHR"/>
-        <enum value="0x824C" name="GL_DEBUG_TYPE_ERROR"/>
+        <enum value="0x824C" name="GL_DEBUG_TYPE_ERROR" group="DebugType"/>
         <enum value="0x824C" name="GL_DEBUG_TYPE_ERROR_ARB"/>
         <enum value="0x824C" name="GL_DEBUG_TYPE_ERROR_KHR"/>
-        <enum value="0x824D" name="GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR"/>
+        <enum value="0x824D" name="GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR" group="DebugType"/>
         <enum value="0x824D" name="GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB"/>
         <enum value="0x824D" name="GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR"/>
-        <enum value="0x824E" name="GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR"/>
+        <enum value="0x824E" name="GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR" group="DebugType"/>
         <enum value="0x824E" name="GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB"/>
         <enum value="0x824E" name="GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR"/>
-        <enum value="0x824F" name="GL_DEBUG_TYPE_PORTABILITY"/>
+        <enum value="0x824F" name="GL_DEBUG_TYPE_PORTABILITY" group="DebugType"/>
         <enum value="0x824F" name="GL_DEBUG_TYPE_PORTABILITY_ARB"/>
         <enum value="0x824F" name="GL_DEBUG_TYPE_PORTABILITY_KHR"/>
-        <enum value="0x8250" name="GL_DEBUG_TYPE_PERFORMANCE"/>
+        <enum value="0x8250" name="GL_DEBUG_TYPE_PERFORMANCE" group="DebugType"/>
         <enum value="0x8250" name="GL_DEBUG_TYPE_PERFORMANCE_ARB"/>
         <enum value="0x8250" name="GL_DEBUG_TYPE_PERFORMANCE_KHR"/>
-        <enum value="0x8251" name="GL_DEBUG_TYPE_OTHER"/>
+        <enum value="0x8251" name="GL_DEBUG_TYPE_OTHER" group="DebugType"/>
         <enum value="0x8251" name="GL_DEBUG_TYPE_OTHER_ARB"/>
         <enum value="0x8251" name="GL_DEBUG_TYPE_OTHER_KHR"/>
         <enum value="0x8252" name="GL_LOSE_CONTEXT_ON_RESET"/>
         <enum value="0x8252" name="GL_LOSE_CONTEXT_ON_RESET_ARB"/>
         <enum value="0x8252" name="GL_LOSE_CONTEXT_ON_RESET_EXT"/>
         <enum value="0x8252" name="GL_LOSE_CONTEXT_ON_RESET_KHR"/>
-        <enum value="0x8253" name="GL_GUILTY_CONTEXT_RESET"/>
+        <enum value="0x8253" name="GL_GUILTY_CONTEXT_RESET" group="GraphicsResetStatus"/>
         <enum value="0x8253" name="GL_GUILTY_CONTEXT_RESET_ARB"/>
         <enum value="0x8253" name="GL_GUILTY_CONTEXT_RESET_EXT"/>
         <enum value="0x8253" name="GL_GUILTY_CONTEXT_RESET_KHR"/>
-        <enum value="0x8254" name="GL_INNOCENT_CONTEXT_RESET"/>
+        <enum value="0x8254" name="GL_INNOCENT_CONTEXT_RESET" group="GraphicsResetStatus"/>
         <enum value="0x8254" name="GL_INNOCENT_CONTEXT_RESET_ARB"/>
         <enum value="0x8254" name="GL_INNOCENT_CONTEXT_RESET_EXT"/>
         <enum value="0x8254" name="GL_INNOCENT_CONTEXT_RESET_KHR"/>
-        <enum value="0x8255" name="GL_UNKNOWN_CONTEXT_RESET"/>
+        <enum value="0x8255" name="GL_UNKNOWN_CONTEXT_RESET" group="GraphicsResetStatus"/>
         <enum value="0x8255" name="GL_UNKNOWN_CONTEXT_RESET_ARB"/>
         <enum value="0x8255" name="GL_UNKNOWN_CONTEXT_RESET_EXT"/>
         <enum value="0x8255" name="GL_UNKNOWN_CONTEXT_RESET_KHR"/>
@@ -6555,28 +2087,28 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8256" name="GL_RESET_NOTIFICATION_STRATEGY_ARB"/>
         <enum value="0x8256" name="GL_RESET_NOTIFICATION_STRATEGY_EXT"/>
         <enum value="0x8256" name="GL_RESET_NOTIFICATION_STRATEGY_KHR"/>
-        <enum value="0x8257" name="GL_PROGRAM_BINARY_RETRIEVABLE_HINT"/>
-        <enum value="0x8258" name="GL_PROGRAM_SEPARABLE"/>
+        <enum value="0x8257" name="GL_PROGRAM_BINARY_RETRIEVABLE_HINT" group="ProgramParameterPName,HintTarget"/>
+        <enum value="0x8258" name="GL_PROGRAM_SEPARABLE" group="ProgramParameterPName"/>
         <enum value="0x8258" name="GL_PROGRAM_SEPARABLE_EXT"/>
-        <enum value="0x8259" name="GL_ACTIVE_PROGRAM"/>
+        <enum value="0x8259" name="GL_ACTIVE_PROGRAM" group="PipelineParameterName"/>
         <enum value="0x8259" api="gles2" name="GL_ACTIVE_PROGRAM_EXT" comment="For the OpenGL ES version of EXT_separate_shader_objects"/>
-        <enum value="0x825A" name="GL_PROGRAM_PIPELINE_BINDING"/>
+        <enum value="0x825A" name="GL_PROGRAM_PIPELINE_BINDING" group="GetPName"/>
         <enum value="0x825A" name="GL_PROGRAM_PIPELINE_BINDING_EXT"/>
-        <enum value="0x825B" name="GL_MAX_VIEWPORTS"/>
+        <enum value="0x825B" name="GL_MAX_VIEWPORTS" group="GetPName"/>
         <enum value="0x825B" name="GL_MAX_VIEWPORTS_NV"/>
         <enum value="0x825B" name="GL_MAX_VIEWPORTS_OES"/>
-        <enum value="0x825C" name="GL_VIEWPORT_SUBPIXEL_BITS"/>
+        <enum value="0x825C" name="GL_VIEWPORT_SUBPIXEL_BITS" group="GetPName"/>
         <enum value="0x825C" name="GL_VIEWPORT_SUBPIXEL_BITS_EXT"/>
         <enum value="0x825C" name="GL_VIEWPORT_SUBPIXEL_BITS_NV"/>
         <enum value="0x825C" name="GL_VIEWPORT_SUBPIXEL_BITS_OES"/>
-        <enum value="0x825D" name="GL_VIEWPORT_BOUNDS_RANGE"/>
+        <enum value="0x825D" name="GL_VIEWPORT_BOUNDS_RANGE" group="GetPName"/>
         <enum value="0x825D" name="GL_VIEWPORT_BOUNDS_RANGE_EXT"/>
         <enum value="0x825D" name="GL_VIEWPORT_BOUNDS_RANGE_NV"/>
         <enum value="0x825D" name="GL_VIEWPORT_BOUNDS_RANGE_OES"/>
-        <enum value="0x825E" name="GL_LAYER_PROVOKING_VERTEX"/>
+        <enum value="0x825E" name="GL_LAYER_PROVOKING_VERTEX" group="GetPName"/>
         <enum value="0x825E" name="GL_LAYER_PROVOKING_VERTEX_EXT"/>
         <enum value="0x825E" name="GL_LAYER_PROVOKING_VERTEX_OES"/>
-        <enum value="0x825F" name="GL_VIEWPORT_INDEX_PROVOKING_VERTEX"/>
+        <enum value="0x825F" name="GL_VIEWPORT_INDEX_PROVOKING_VERTEX" group="GetPName"/>
         <enum value="0x825F" name="GL_VIEWPORT_INDEX_PROVOKING_VERTEX_EXT"/>
         <enum value="0x825F" name="GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV"/>
         <enum value="0x825F" name="GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES"/>
@@ -6588,99 +2120,99 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8261" name="GL_NO_RESET_NOTIFICATION_EXT"/>
         <enum value="0x8261" name="GL_NO_RESET_NOTIFICATION_KHR"/>
         <enum value="0x8262" name="GL_MAX_COMPUTE_SHARED_MEMORY_SIZE"/>
-        <enum value="0x8263" name="GL_MAX_COMPUTE_UNIFORM_COMPONENTS"/>
-        <enum value="0x8264" name="GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS"/>
-        <enum value="0x8265" name="GL_MAX_COMPUTE_ATOMIC_COUNTERS"/>
-        <enum value="0x8266" name="GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS"/>
-        <enum value="0x8267" name="GL_COMPUTE_WORK_GROUP_SIZE"/>
-        <enum value="0x8268" name="GL_DEBUG_TYPE_MARKER"/>
+        <enum value="0x8263" name="GL_MAX_COMPUTE_UNIFORM_COMPONENTS" group="GetPName"/>
+        <enum value="0x8264" name="GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS" group="GetPName"/>
+        <enum value="0x8265" name="GL_MAX_COMPUTE_ATOMIC_COUNTERS" group="GetPName"/>
+        <enum value="0x8266" name="GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS" group="GetPName"/>
+        <enum value="0x8267" name="GL_COMPUTE_WORK_GROUP_SIZE" group="ProgramPropertyARB"/>
+        <enum value="0x8268" name="GL_DEBUG_TYPE_MARKER" group="DebugType"/>
         <enum value="0x8268" name="GL_DEBUG_TYPE_MARKER_KHR"/>
-        <enum value="0x8269" name="GL_DEBUG_TYPE_PUSH_GROUP"/>
+        <enum value="0x8269" name="GL_DEBUG_TYPE_PUSH_GROUP" group="DebugType"/>
         <enum value="0x8269" name="GL_DEBUG_TYPE_PUSH_GROUP_KHR"/>
-        <enum value="0x826A" name="GL_DEBUG_TYPE_POP_GROUP"/>
+        <enum value="0x826A" name="GL_DEBUG_TYPE_POP_GROUP" group="DebugType"/>
         <enum value="0x826A" name="GL_DEBUG_TYPE_POP_GROUP_KHR"/>
-        <enum value="0x826B" name="GL_DEBUG_SEVERITY_NOTIFICATION"/>
+        <enum value="0x826B" name="GL_DEBUG_SEVERITY_NOTIFICATION" group="DebugSeverity"/>
         <enum value="0x826B" name="GL_DEBUG_SEVERITY_NOTIFICATION_KHR"/>
-        <enum value="0x826C" name="GL_MAX_DEBUG_GROUP_STACK_DEPTH"/>
+        <enum value="0x826C" name="GL_MAX_DEBUG_GROUP_STACK_DEPTH" group="GetPName"/>
         <enum value="0x826C" name="GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR"/>
-        <enum value="0x826D" name="GL_DEBUG_GROUP_STACK_DEPTH"/>
+        <enum value="0x826D" name="GL_DEBUG_GROUP_STACK_DEPTH" group="GetPName"/>
         <enum value="0x826D" name="GL_DEBUG_GROUP_STACK_DEPTH_KHR"/>
-        <enum value="0x826E" name="GL_MAX_UNIFORM_LOCATIONS"/>
-        <enum value="0x826F" name="GL_INTERNALFORMAT_SUPPORTED"/>
-        <enum value="0x8270" name="GL_INTERNALFORMAT_PREFERRED"/>
-        <enum value="0x8271" name="GL_INTERNALFORMAT_RED_SIZE"/>
-        <enum value="0x8272" name="GL_INTERNALFORMAT_GREEN_SIZE"/>
-        <enum value="0x8273" name="GL_INTERNALFORMAT_BLUE_SIZE"/>
-        <enum value="0x8274" name="GL_INTERNALFORMAT_ALPHA_SIZE"/>
-        <enum value="0x8275" name="GL_INTERNALFORMAT_DEPTH_SIZE"/>
-        <enum value="0x8276" name="GL_INTERNALFORMAT_STENCIL_SIZE"/>
-        <enum value="0x8277" name="GL_INTERNALFORMAT_SHARED_SIZE"/>
-        <enum value="0x8278" name="GL_INTERNALFORMAT_RED_TYPE"/>
-        <enum value="0x8279" name="GL_INTERNALFORMAT_GREEN_TYPE"/>
-        <enum value="0x827A" name="GL_INTERNALFORMAT_BLUE_TYPE"/>
-        <enum value="0x827B" name="GL_INTERNALFORMAT_ALPHA_TYPE"/>
-        <enum value="0x827C" name="GL_INTERNALFORMAT_DEPTH_TYPE"/>
-        <enum value="0x827D" name="GL_INTERNALFORMAT_STENCIL_TYPE"/>
-        <enum value="0x827E" name="GL_MAX_WIDTH"/>
-        <enum value="0x827F" name="GL_MAX_HEIGHT"/>
-        <enum value="0x8280" name="GL_MAX_DEPTH"/>
-        <enum value="0x8281" name="GL_MAX_LAYERS"/>
+        <enum value="0x826E" name="GL_MAX_UNIFORM_LOCATIONS" group="GetPName"/>
+        <enum value="0x826F" name="GL_INTERNALFORMAT_SUPPORTED" group="InternalFormatPName"/>
+        <enum value="0x8270" name="GL_INTERNALFORMAT_PREFERRED" group="InternalFormatPName"/>
+        <enum value="0x8271" name="GL_INTERNALFORMAT_RED_SIZE" group="InternalFormatPName"/>
+        <enum value="0x8272" name="GL_INTERNALFORMAT_GREEN_SIZE" group="InternalFormatPName"/>
+        <enum value="0x8273" name="GL_INTERNALFORMAT_BLUE_SIZE" group="InternalFormatPName"/>
+        <enum value="0x8274" name="GL_INTERNALFORMAT_ALPHA_SIZE" group="InternalFormatPName"/>
+        <enum value="0x8275" name="GL_INTERNALFORMAT_DEPTH_SIZE" group="InternalFormatPName"/>
+        <enum value="0x8276" name="GL_INTERNALFORMAT_STENCIL_SIZE" group="InternalFormatPName"/>
+        <enum value="0x8277" name="GL_INTERNALFORMAT_SHARED_SIZE" group="InternalFormatPName"/>
+        <enum value="0x8278" name="GL_INTERNALFORMAT_RED_TYPE" group="InternalFormatPName"/>
+        <enum value="0x8279" name="GL_INTERNALFORMAT_GREEN_TYPE" group="InternalFormatPName"/>
+        <enum value="0x827A" name="GL_INTERNALFORMAT_BLUE_TYPE" group="InternalFormatPName"/>
+        <enum value="0x827B" name="GL_INTERNALFORMAT_ALPHA_TYPE" group="InternalFormatPName"/>
+        <enum value="0x827C" name="GL_INTERNALFORMAT_DEPTH_TYPE" group="InternalFormatPName"/>
+        <enum value="0x827D" name="GL_INTERNALFORMAT_STENCIL_TYPE" group="InternalFormatPName"/>
+        <enum value="0x827E" name="GL_MAX_WIDTH" group="InternalFormatPName"/>
+        <enum value="0x827F" name="GL_MAX_HEIGHT" group="InternalFormatPName"/>
+        <enum value="0x8280" name="GL_MAX_DEPTH" group="InternalFormatPName"/>
+        <enum value="0x8281" name="GL_MAX_LAYERS" group="InternalFormatPName"/>
         <enum value="0x8282" name="GL_MAX_COMBINED_DIMENSIONS"/>
-        <enum value="0x8283" name="GL_COLOR_COMPONENTS"/>
+        <enum value="0x8283" name="GL_COLOR_COMPONENTS" group="InternalFormatPName"/>
         <enum value="0x8284" name="GL_DEPTH_COMPONENTS"/>
         <enum value="0x8285" name="GL_STENCIL_COMPONENTS"/>
-        <enum value="0x8286" name="GL_COLOR_RENDERABLE"/>
-        <enum value="0x8287" name="GL_DEPTH_RENDERABLE"/>
-        <enum value="0x8288" name="GL_STENCIL_RENDERABLE"/>
-        <enum value="0x8289" name="GL_FRAMEBUFFER_RENDERABLE"/>
-        <enum value="0x828A" name="GL_FRAMEBUFFER_RENDERABLE_LAYERED"/>
-        <enum value="0x828B" name="GL_FRAMEBUFFER_BLEND"/>
-        <enum value="0x828C" name="GL_READ_PIXELS"/>
-        <enum value="0x828D" name="GL_READ_PIXELS_FORMAT"/>
-        <enum value="0x828E" name="GL_READ_PIXELS_TYPE"/>
-        <enum value="0x828F" name="GL_TEXTURE_IMAGE_FORMAT"/>
-        <enum value="0x8290" name="GL_TEXTURE_IMAGE_TYPE"/>
-        <enum value="0x8291" name="GL_GET_TEXTURE_IMAGE_FORMAT"/>
-        <enum value="0x8292" name="GL_GET_TEXTURE_IMAGE_TYPE"/>
-        <enum value="0x8293" name="GL_MIPMAP"/>
+        <enum value="0x8286" name="GL_COLOR_RENDERABLE" group="InternalFormatPName"/>
+        <enum value="0x8287" name="GL_DEPTH_RENDERABLE" group="InternalFormatPName"/>
+        <enum value="0x8288" name="GL_STENCIL_RENDERABLE" group="InternalFormatPName"/>
+        <enum value="0x8289" name="GL_FRAMEBUFFER_RENDERABLE" group="InternalFormatPName"/>
+        <enum value="0x828A" name="GL_FRAMEBUFFER_RENDERABLE_LAYERED" group="InternalFormatPName"/>
+        <enum value="0x828B" name="GL_FRAMEBUFFER_BLEND" group="InternalFormatPName"/>
+        <enum value="0x828C" name="GL_READ_PIXELS" group="InternalFormatPName"/>
+        <enum value="0x828D" name="GL_READ_PIXELS_FORMAT" group="InternalFormatPName"/>
+        <enum value="0x828E" name="GL_READ_PIXELS_TYPE" group="InternalFormatPName"/>
+        <enum value="0x828F" name="GL_TEXTURE_IMAGE_FORMAT" group="InternalFormatPName"/>
+        <enum value="0x8290" name="GL_TEXTURE_IMAGE_TYPE" group="InternalFormatPName"/>
+        <enum value="0x8291" name="GL_GET_TEXTURE_IMAGE_FORMAT" group="InternalFormatPName"/>
+        <enum value="0x8292" name="GL_GET_TEXTURE_IMAGE_TYPE" group="InternalFormatPName"/>
+        <enum value="0x8293" name="GL_MIPMAP" group="InternalFormatPName"/>
         <enum value="0x8294" name="GL_MANUAL_GENERATE_MIPMAP"/>
-        <enum value="0x8295" name="GL_AUTO_GENERATE_MIPMAP" comment="Should be deprecated"/>
-        <enum value="0x8296" name="GL_COLOR_ENCODING"/>
-        <enum value="0x8297" name="GL_SRGB_READ"/>
-        <enum value="0x8298" name="GL_SRGB_WRITE"/>
+        <enum value="0x8295" name="GL_AUTO_GENERATE_MIPMAP" comment="Should be deprecated" group="InternalFormatPName"/>
+        <enum value="0x8296" name="GL_COLOR_ENCODING" group="InternalFormatPName"/>
+        <enum value="0x8297" name="GL_SRGB_READ" group="InternalFormatPName"/>
+        <enum value="0x8298" name="GL_SRGB_WRITE" group="InternalFormatPName"/>
         <enum value="0x8299" name="GL_SRGB_DECODE_ARB"/>
-        <enum value="0x829A" name="GL_FILTER"/>
-        <enum value="0x829B" name="GL_VERTEX_TEXTURE"/>
-        <enum value="0x829C" name="GL_TESS_CONTROL_TEXTURE"/>
-        <enum value="0x829D" name="GL_TESS_EVALUATION_TEXTURE"/>
-        <enum value="0x829E" name="GL_GEOMETRY_TEXTURE"/>
-        <enum value="0x829F" name="GL_FRAGMENT_TEXTURE"/>
-        <enum value="0x82A0" name="GL_COMPUTE_TEXTURE"/>
-        <enum value="0x82A1" name="GL_TEXTURE_SHADOW"/>
-        <enum value="0x82A2" name="GL_TEXTURE_GATHER"/>
-        <enum value="0x82A3" name="GL_TEXTURE_GATHER_SHADOW"/>
-        <enum value="0x82A4" name="GL_SHADER_IMAGE_LOAD"/>
-        <enum value="0x82A5" name="GL_SHADER_IMAGE_STORE"/>
-        <enum value="0x82A6" name="GL_SHADER_IMAGE_ATOMIC"/>
-        <enum value="0x82A7" name="GL_IMAGE_TEXEL_SIZE"/>
-        <enum value="0x82A8" name="GL_IMAGE_COMPATIBILITY_CLASS"/>
-        <enum value="0x82A9" name="GL_IMAGE_PIXEL_FORMAT"/>
-        <enum value="0x82AA" name="GL_IMAGE_PIXEL_TYPE"/>
+        <enum value="0x829A" name="GL_FILTER" group="InternalFormatPName"/>
+        <enum value="0x829B" name="GL_VERTEX_TEXTURE" group="InternalFormatPName"/>
+        <enum value="0x829C" name="GL_TESS_CONTROL_TEXTURE" group="InternalFormatPName"/>
+        <enum value="0x829D" name="GL_TESS_EVALUATION_TEXTURE" group="InternalFormatPName"/>
+        <enum value="0x829E" name="GL_GEOMETRY_TEXTURE" group="InternalFormatPName"/>
+        <enum value="0x829F" name="GL_FRAGMENT_TEXTURE" group="InternalFormatPName"/>
+        <enum value="0x82A0" name="GL_COMPUTE_TEXTURE" group="InternalFormatPName"/>
+        <enum value="0x82A1" name="GL_TEXTURE_SHADOW" group="InternalFormatPName"/>
+        <enum value="0x82A2" name="GL_TEXTURE_GATHER" group="InternalFormatPName"/>
+        <enum value="0x82A3" name="GL_TEXTURE_GATHER_SHADOW" group="InternalFormatPName"/>
+        <enum value="0x82A4" name="GL_SHADER_IMAGE_LOAD" group="InternalFormatPName"/>
+        <enum value="0x82A5" name="GL_SHADER_IMAGE_STORE" group="InternalFormatPName"/>
+        <enum value="0x82A6" name="GL_SHADER_IMAGE_ATOMIC" group="InternalFormatPName"/>
+        <enum value="0x82A7" name="GL_IMAGE_TEXEL_SIZE" group="InternalFormatPName"/>
+        <enum value="0x82A8" name="GL_IMAGE_COMPATIBILITY_CLASS" group="InternalFormatPName"/>
+        <enum value="0x82A9" name="GL_IMAGE_PIXEL_FORMAT" group="InternalFormatPName"/>
+        <enum value="0x82AA" name="GL_IMAGE_PIXEL_TYPE" group="InternalFormatPName"/>
             <unused start="0x82AB" vendor="ARB"/>
-        <enum value="0x82AC" name="GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST"/>
-        <enum value="0x82AD" name="GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST"/>
-        <enum value="0x82AE" name="GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE"/>
-        <enum value="0x82AF" name="GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE"/>
+        <enum value="0x82AC" name="GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST" group="InternalFormatPName"/>
+        <enum value="0x82AD" name="GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST" group="InternalFormatPName"/>
+        <enum value="0x82AE" name="GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE" group="InternalFormatPName"/>
+        <enum value="0x82AF" name="GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE" group="InternalFormatPName"/>
     </enums>
 
     <enums namespace="GL" start="0x82B0" end="0x830F" vendor="ARB" comment="Range reclaimed from ADD on 2012/05/10">
             <unused start="0x82B0" vendor="ARB"/>
-        <enum value="0x82B1" name="GL_TEXTURE_COMPRESSED_BLOCK_WIDTH"/>
-        <enum value="0x82B2" name="GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT"/>
-        <enum value="0x82B3" name="GL_TEXTURE_COMPRESSED_BLOCK_SIZE"/>
-        <enum value="0x82B4" name="GL_CLEAR_BUFFER"/>
-        <enum value="0x82B5" name="GL_TEXTURE_VIEW"/>
-        <enum value="0x82B6" name="GL_VIEW_COMPATIBILITY_CLASS"/>
+        <enum value="0x82B1" name="GL_TEXTURE_COMPRESSED_BLOCK_WIDTH" group="InternalFormatPName"/>
+        <enum value="0x82B2" name="GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT" group="InternalFormatPName"/>
+        <enum value="0x82B3" name="GL_TEXTURE_COMPRESSED_BLOCK_SIZE" group="InternalFormatPName"/>
+        <enum value="0x82B4" name="GL_CLEAR_BUFFER" group="InternalFormatPName"/>
+        <enum value="0x82B5" name="GL_TEXTURE_VIEW" group="InternalFormatPName"/>
+        <enum value="0x82B6" name="GL_VIEW_COMPATIBILITY_CLASS" group="InternalFormatPName"/>
         <enum value="0x82B7" name="GL_FULL_SUPPORT"/>
         <enum value="0x82B8" name="GL_CAVEAT_SUPPORT"/>
         <enum value="0x82B9" name="GL_IMAGE_CLASS_4_X_32"/>
@@ -6710,13 +2242,13 @@ typedef unsigned int GLhandleARB;
         <enum value="0x82D1" name="GL_VIEW_CLASS_RGTC2_RG"/>
         <enum value="0x82D2" name="GL_VIEW_CLASS_BPTC_UNORM"/>
         <enum value="0x82D3" name="GL_VIEW_CLASS_BPTC_FLOAT"/>
-        <enum value="0x82D4" name="GL_VERTEX_ATTRIB_BINDING"/>
-        <enum value="0x82D5" name="GL_VERTEX_ATTRIB_RELATIVE_OFFSET"/>
-        <enum value="0x82D6" name="GL_VERTEX_BINDING_DIVISOR"/>
-        <enum value="0x82D7" name="GL_VERTEX_BINDING_OFFSET"/>
-        <enum value="0x82D8" name="GL_VERTEX_BINDING_STRIDE"/>
-        <enum value="0x82D9" name="GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET"/>
-        <enum value="0x82DA" name="GL_MAX_VERTEX_ATTRIB_BINDINGS"/>
+        <enum value="0x82D4" name="GL_VERTEX_ATTRIB_BINDING" group="VertexAttribPropertyARB"/>
+        <enum value="0x82D5" name="GL_VERTEX_ATTRIB_RELATIVE_OFFSET" group="VertexArrayPName,VertexAttribPropertyARB"/>
+        <enum value="0x82D6" name="GL_VERTEX_BINDING_DIVISOR" group="GetPName"/>
+        <enum value="0x82D7" name="GL_VERTEX_BINDING_OFFSET" group="GetPName"/>
+        <enum value="0x82D8" name="GL_VERTEX_BINDING_STRIDE" group="GetPName"/>
+        <enum value="0x82D9" name="GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET" group="GetPName"/>
+        <enum value="0x82DA" name="GL_MAX_VERTEX_ATTRIB_BINDINGS" group="GetPName"/>
         <enum value="0x82DB" name="GL_TEXTURE_VIEW_MIN_LEVEL"/>
         <enum value="0x82DB" name="GL_TEXTURE_VIEW_MIN_LEVEL_EXT"/>
         <enum value="0x82DB" name="GL_TEXTURE_VIEW_MIN_LEVEL_OES"/>
@@ -6730,37 +2262,37 @@ typedef unsigned int GLhandleARB;
         <enum value="0x82DE" name="GL_TEXTURE_VIEW_NUM_LAYERS_EXT"/>
         <enum value="0x82DE" name="GL_TEXTURE_VIEW_NUM_LAYERS_OES"/>
         <enum value="0x82DF" name="GL_TEXTURE_IMMUTABLE_LEVELS"/>
-        <enum value="0x82E0" name="GL_BUFFER"/>
+        <enum value="0x82E0" name="GL_BUFFER" group="ObjectIdentifier"/>
         <enum value="0x82E0" name="GL_BUFFER_KHR"/>
-        <enum value="0x82E1" name="GL_SHADER"/>
+        <enum value="0x82E1" name="GL_SHADER" group="ObjectIdentifier"/>
         <enum value="0x82E1" name="GL_SHADER_KHR"/>
-        <enum value="0x82E2" name="GL_PROGRAM"/>
+        <enum value="0x82E2" name="GL_PROGRAM" group="ObjectIdentifier"/>
         <enum value="0x82E2" name="GL_PROGRAM_KHR"/>
-        <enum value="0x82E3" name="GL_QUERY"/>
+        <enum value="0x82E3" name="GL_QUERY" group="ObjectIdentifier"/>
         <enum value="0x82E3" name="GL_QUERY_KHR"/>
-        <enum value="0x82E4" name="GL_PROGRAM_PIPELINE"/>
+        <enum value="0x82E4" name="GL_PROGRAM_PIPELINE" group="ObjectIdentifier"/>
         <enum value="0x82E4" name="GL_PROGRAM_PIPELINE_KHR"/>
         <enum value="0x82E5" name="GL_MAX_VERTEX_ATTRIB_STRIDE"/>
-        <enum value="0x82E6" name="GL_SAMPLER"/>
+        <enum value="0x82E6" name="GL_SAMPLER" group="ObjectIdentifier"/>
         <enum value="0x82E6" name="GL_SAMPLER_KHR"/>
         <enum value="0x82E7" name="GL_DISPLAY_LIST"/>
-        <enum value="0x82E8" name="GL_MAX_LABEL_LENGTH"/>
+        <enum value="0x82E8" name="GL_MAX_LABEL_LENGTH" group="GetPName"/>
         <enum value="0x82E8" name="GL_MAX_LABEL_LENGTH_KHR"/>
         <enum value="0x82E9" name="GL_NUM_SHADING_LANGUAGE_VERSIONS"/>
-        <enum value="0x82EA" name="GL_QUERY_TARGET"/>
+        <enum value="0x82EA" name="GL_QUERY_TARGET" group="QueryObjectParameterName"/>
         <!-- 0x82EB = GL_TEXTURE_BINDING was removed in GL 4.5 and
              ARB_direct_state_access in February 2015 after determining it
              was not well defined or implementable. -->
             <unused start="0x82EB" vendor="ARB" comment="Reserved. Formerly used for GL_TEXTURE_BINDING."/>
-        <enum value="0x82EC" name="GL_TRANSFORM_FEEDBACK_OVERFLOW"/>
+        <enum value="0x82EC" name="GL_TRANSFORM_FEEDBACK_OVERFLOW" group="QueryTarget"/>
         <enum value="0x82EC" name="GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB" alias="GL_TRANSFORM_FEEDBACK_OVERFLOW"/>
         <enum value="0x82ED" name="GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW"/>
         <enum value="0x82ED" name="GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB" alias="GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW"/>
-        <enum value="0x82EE" name="GL_VERTICES_SUBMITTED"/>
+        <enum value="0x82EE" name="GL_VERTICES_SUBMITTED" group="QueryTarget"/>
         <enum value="0x82EE" name="GL_VERTICES_SUBMITTED_ARB" alias="GL_VERTICES_SUBMITTED"/>
-        <enum value="0x82EF" name="GL_PRIMITIVES_SUBMITTED"/>
+        <enum value="0x82EF" name="GL_PRIMITIVES_SUBMITTED" group="QueryTarget"/>
         <enum value="0x82EF" name="GL_PRIMITIVES_SUBMITTED_ARB" alias="GL_PRIMITIVES_SUBMITTED"/>
-        <enum value="0x82F0" name="GL_VERTEX_SHADER_INVOCATIONS"/>
+        <enum value="0x82F0" name="GL_VERTEX_SHADER_INVOCATIONS" group="QueryTarget"/>
         <enum value="0x82F0" name="GL_VERTEX_SHADER_INVOCATIONS_ARB" alias="GL_VERTEX_SHADER_INVOCATIONS"/>
         <enum value="0x82F1" name="GL_TESS_CONTROL_SHADER_PATCHES"/>
         <enum value="0x82F1" name="GL_TESS_CONTROL_SHADER_PATCHES_ARB" alias="GL_TESS_CONTROL_SHADER_PATCHES"/>
@@ -6796,7 +2328,7 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8313" name="GL_FRAGMENTS_INSTRUMENT_SGIX"/>
         <enum value="0x8314" name="GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX"/>
         <enum value="0x8315" name="GL_FRAGMENTS_INSTRUMENT_MAX_SGIX"/>
-        <enum value="0x8316" name="GL_CONVOLUTION_HINT_SGIX"/>
+        <enum value="0x8316" name="GL_CONVOLUTION_HINT_SGIX" group="HintTarget,GetPName"/>
             <unused start="0x8317" comment="Incomplete extension SGIX_color_matrix_accuracy"/>
             <!-- <enum value="0x8317" name="GL_COLOR_MATRIX_HINT"/> -->
         <enum value="0x8318" name="GL_YCRCB_SGIX"/>
@@ -6807,9 +2339,9 @@ typedef unsigned int GLhandleARB;
         <enum value="0x831D" name="GL_SLIM8U_SGIX"/>
         <enum value="0x831E" name="GL_SLIM10U_SGIX"/>
         <enum value="0x831F" name="GL_SLIM12S_SGIX"/>
-        <enum value="0x8320" name="GL_ALPHA_MIN_SGIX"/>
-        <enum value="0x8321" name="GL_ALPHA_MAX_SGIX"/>
-        <enum value="0x8322" name="GL_SCALEBIAS_HINT_SGIX"/>
+        <enum value="0x8320" name="GL_ALPHA_MIN_SGIX" group="BlendEquationModeEXT"/>
+        <enum value="0x8321" name="GL_ALPHA_MAX_SGIX" group="BlendEquationModeEXT"/>
+        <enum value="0x8322" name="GL_SCALEBIAS_HINT_SGIX" group="HintTarget"/>
             <unused start="0x8323" end="0x8328" comment="Incomplete extension SGIX_fog_layers"/>
             <!-- <enum value="0x8323" name="GL_FOG_TYPE_SGIX"/> -->
             <!-- <enum value="0x8324" name="GL_UNIFORM_SGIX"/> -->
@@ -6817,22 +2349,22 @@ typedef unsigned int GLhandleARB;
             <!-- <enum value="0x8326" name="GL_FOG_GROUND_PLANE_SGIX"/> -->
             <!-- <enum value="0x8327" name="GL_FOG_LAYERS_POINTS_SGIX"/> -->
             <!-- <enum value="0x8328" name="GL_MAX_FOG_LAYERS_POINTS_SGIX"/> -->
-        <enum value="0x8329" name="GL_ASYNC_MARKER_SGIX"/>
+        <enum value="0x8329" name="GL_ASYNC_MARKER_SGIX" group="GetPName"/>
             <unused start="0x832A" comment="Incomplete extension SGIX_texture_phase"/>
             <!-- <enum value="0x832A" name="GL_PHASE_SGIX"/> -->
-        <enum value="0x832B" name="GL_PIXEL_TEX_GEN_MODE_SGIX"/>
-        <enum value="0x832C" name="GL_ASYNC_HISTOGRAM_SGIX"/>
-        <enum value="0x832D" name="GL_MAX_ASYNC_HISTOGRAM_SGIX"/>
+        <enum value="0x832B" name="GL_PIXEL_TEX_GEN_MODE_SGIX" group="GetPName"/>
+        <enum value="0x832C" name="GL_ASYNC_HISTOGRAM_SGIX" group="GetPName,EnableCap"/>
+        <enum value="0x832D" name="GL_MAX_ASYNC_HISTOGRAM_SGIX" group="GetPName"/>
             <unused start="0x832E" end="0x832F" comment="Incomplete extension SGIX_texture_mipmap_anisotropic"/>
             <!-- <enum value="0x832E" name="GL_TEXTURE_MIPMAP_ANISOTROPY_SGIX"/> -->
             <!-- <enum value="0x832F" name="GL_MAX_MIPMAP_ANISOTROPY_SGIX"/> -->
     </enums>
 
     <enums namespace="GL" start="0x8330" end="0x833F" vendor="SUN">
-        <enum value="0x8330" name="GL_PIXEL_TRANSFORM_2D_EXT"/>
-        <enum value="0x8331" name="GL_PIXEL_MAG_FILTER_EXT"/>
-        <enum value="0x8332" name="GL_PIXEL_MIN_FILTER_EXT"/>
-        <enum value="0x8333" name="GL_PIXEL_CUBIC_WEIGHT_EXT"/>
+        <enum value="0x8330" name="GL_PIXEL_TRANSFORM_2D_EXT" group="PixelTransformTargetEXT"/>
+        <enum value="0x8331" name="GL_PIXEL_MAG_FILTER_EXT" group="PixelTransformPNameEXT"/>
+        <enum value="0x8332" name="GL_PIXEL_MIN_FILTER_EXT" group="PixelTransformPNameEXT"/>
+        <enum value="0x8333" name="GL_PIXEL_CUBIC_WEIGHT_EXT" group="PixelTransformPNameEXT"/>
         <enum value="0x8334" name="GL_CUBIC_EXT"/>
         <enum value="0x8335" name="GL_AVERAGE_EXT"/>
         <enum value="0x8336" name="GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT"/>
@@ -6852,21 +2384,21 @@ typedef unsigned int GLhandleARB;
             <!-- <enum value="0x8346" name="GL_CUBE_MAP_YN_SGIX"/> -->
             <!-- <enum value="0x8347" name="GL_CUBE_MAP_YP_SGIX"/> -->
             <!-- <enum value="0x8348" name="GL_CUBE_MAP_BINDING_SGIX"/> -->
-        <enum value="0x8349" name="GL_FRAGMENT_MATERIAL_EXT"/>
-        <enum value="0x834A" name="GL_FRAGMENT_NORMAL_EXT"/>
+        <enum value="0x8349" name="GL_FRAGMENT_MATERIAL_EXT" group="LightTextureModeEXT"/>
+        <enum value="0x834A" name="GL_FRAGMENT_NORMAL_EXT" group="LightTextureModeEXT"/>
             <!-- Unfortunately, there was a collision promoting to EXT
                  from SGIX. Use fog_coord's value of 0x8452 instead of
                  the old assigned FRAGMENT_DEPTH_EXT (0x834B). -->
-        <enum value="0x834C" name="GL_FRAGMENT_COLOR_EXT"/>
-        <enum value="0x834D" name="GL_ATTENUATION_EXT"/>
-        <enum value="0x834E" name="GL_SHADOW_ATTENUATION_EXT"/>
+        <enum value="0x834C" name="GL_FRAGMENT_COLOR_EXT" group="LightTextureModeEXT"/>
+        <enum value="0x834D" name="GL_ATTENUATION_EXT" group="LightTexturePNameEXT"/>
+        <enum value="0x834E" name="GL_SHADOW_ATTENUATION_EXT" group="LightTexturePNameEXT"/>
         <enum value="0x834F" name="GL_TEXTURE_APPLICATION_MODE_EXT"/>
         <enum value="0x8350" name="GL_TEXTURE_LIGHT_EXT"/>
         <enum value="0x8351" name="GL_TEXTURE_MATERIAL_FACE_EXT"/>
         <enum value="0x8352" name="GL_TEXTURE_MATERIAL_PARAMETER_EXT"/>
-        <enum value="0x8353" name="GL_PIXEL_TEXTURE_SGIS"/>
-        <enum value="0x8354" name="GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS"/>
-        <enum value="0x8355" name="GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS"/>
+        <enum value="0x8353" name="GL_PIXEL_TEXTURE_SGIS" group="GetPName,EnableCap"/>
+        <enum value="0x8354" name="GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS" group="PixelTexGenParameterNameSGIS"/>
+        <enum value="0x8355" name="GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS" group="PixelTexGenParameterNameSGIS"/>
         <enum value="0x8356" name="GL_PIXEL_GROUP_COLOR_SGIS"/>
             <unused start="0x8357" end="0x8359" comment="Incomplete extension SGIX_pixel_texture_bits"/>
             <!-- <enum value="0x8357" name="GL_COLOR_TO_TEXTURE_COORD_SGIX"/> -->
@@ -6874,31 +2406,31 @@ typedef unsigned int GLhandleARB;
             <!-- <enum value="0x8359" name="GL_COLOR_VALUE_SGIX"/> -->
             <unused start="0x835A" comment="Incomplete extension SGIX_pixel_texture_lod"/>
             <!-- <enum value="0x835A" name="GL_PIXEL_TEX_GEN_LAMBDA_SOURCE_SGIX"/> -->
-        <enum value="0x835B" name="GL_LINE_QUALITY_HINT_SGIX"/>
-        <enum value="0x835C" name="GL_ASYNC_TEX_IMAGE_SGIX"/>
-        <enum value="0x835D" name="GL_ASYNC_DRAW_PIXELS_SGIX"/>
-        <enum value="0x835E" name="GL_ASYNC_READ_PIXELS_SGIX"/>
-        <enum value="0x835F" name="GL_MAX_ASYNC_TEX_IMAGE_SGIX"/>
-        <enum value="0x8360" name="GL_MAX_ASYNC_DRAW_PIXELS_SGIX"/>
-        <enum value="0x8361" name="GL_MAX_ASYNC_READ_PIXELS_SGIX"/>
-        <enum value="0x8362" name="GL_UNSIGNED_BYTE_2_3_3_REV"/>
-        <enum value="0x8362" name="GL_UNSIGNED_BYTE_2_3_3_REV_EXT"/>
-        <enum value="0x8363" name="GL_UNSIGNED_SHORT_5_6_5"/>
-        <enum value="0x8363" name="GL_UNSIGNED_SHORT_5_6_5_EXT"/>
-        <enum value="0x8364" name="GL_UNSIGNED_SHORT_5_6_5_REV"/>
-        <enum value="0x8364" name="GL_UNSIGNED_SHORT_5_6_5_REV_EXT"/>
-        <enum value="0x8365" name="GL_UNSIGNED_SHORT_4_4_4_4_REV"/>
-        <enum value="0x8365" name="GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT"/>
-        <enum value="0x8365" name="GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG"/>
-        <enum value="0x8366" name="GL_UNSIGNED_SHORT_1_5_5_5_REV"/>
-        <enum value="0x8366" name="GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT"/>
-        <enum value="0x8367" name="GL_UNSIGNED_INT_8_8_8_8_REV"/>
-        <enum value="0x8367" name="GL_UNSIGNED_INT_8_8_8_8_REV_EXT"/>
-        <enum value="0x8368" name="GL_UNSIGNED_INT_2_10_10_10_REV"/>
-        <enum value="0x8368" name="GL_UNSIGNED_INT_2_10_10_10_REV_EXT"/>
-        <enum value="0x8369" name="GL_TEXTURE_MAX_CLAMP_S_SGIX"/>
-        <enum value="0x836A" name="GL_TEXTURE_MAX_CLAMP_T_SGIX"/>
-        <enum value="0x836B" name="GL_TEXTURE_MAX_CLAMP_R_SGIX"/>
+        <enum value="0x835B" name="GL_LINE_QUALITY_HINT_SGIX" group="HintTarget"/>
+        <enum value="0x835C" name="GL_ASYNC_TEX_IMAGE_SGIX" group="GetPName,EnableCap"/>
+        <enum value="0x835D" name="GL_ASYNC_DRAW_PIXELS_SGIX" group="GetPName,EnableCap"/>
+        <enum value="0x835E" name="GL_ASYNC_READ_PIXELS_SGIX" group="GetPName,EnableCap"/>
+        <enum value="0x835F" name="GL_MAX_ASYNC_TEX_IMAGE_SGIX" group="GetPName"/>
+        <enum value="0x8360" name="GL_MAX_ASYNC_DRAW_PIXELS_SGIX" group="GetPName"/>
+        <enum value="0x8361" name="GL_MAX_ASYNC_READ_PIXELS_SGIX" group="GetPName"/>
+        <enum value="0x8362" name="GL_UNSIGNED_BYTE_2_3_3_REV" group="PixelType"/>
+        <enum value="0x8362" name="GL_UNSIGNED_BYTE_2_3_3_REV_EXT" group="PixelType"/>
+        <enum value="0x8363" name="GL_UNSIGNED_SHORT_5_6_5" group="PixelType"/>
+        <enum value="0x8363" name="GL_UNSIGNED_SHORT_5_6_5_EXT" group="PixelType"/>
+        <enum value="0x8364" name="GL_UNSIGNED_SHORT_5_6_5_REV" group="PixelType"/>
+        <enum value="0x8364" name="GL_UNSIGNED_SHORT_5_6_5_REV_EXT" group="PixelType"/>
+        <enum value="0x8365" name="GL_UNSIGNED_SHORT_4_4_4_4_REV" group="PixelType"/>
+        <enum value="0x8365" name="GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT" group="PixelType"/>
+        <enum value="0x8365" name="GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG" group="PixelType"/>
+        <enum value="0x8366" name="GL_UNSIGNED_SHORT_1_5_5_5_REV" group="PixelType"/>
+        <enum value="0x8366" name="GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT" group="PixelType"/>
+        <enum value="0x8367" name="GL_UNSIGNED_INT_8_8_8_8_REV" group="PixelType"/>
+        <enum value="0x8367" name="GL_UNSIGNED_INT_8_8_8_8_REV_EXT" group="PixelType"/>
+        <enum value="0x8368" name="GL_UNSIGNED_INT_2_10_10_10_REV" group="PixelType,VertexAttribPointerType,VertexAttribType"/>
+        <enum value="0x8368" name="GL_UNSIGNED_INT_2_10_10_10_REV_EXT" group="PixelType,VertexAttribPointerType,VertexAttribType"/>
+        <enum value="0x8369" name="GL_TEXTURE_MAX_CLAMP_S_SGIX" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x836A" name="GL_TEXTURE_MAX_CLAMP_T_SGIX" group="TextureParameterName,GetTextureParameter"/>
+        <enum value="0x836B" name="GL_TEXTURE_MAX_CLAMP_R_SGIX" group="TextureParameterName,GetTextureParameter"/>
             <unused start="0x836C" end="0x836E" comment="Incomplete extension SGIX_fog_texture"/>
             <!-- <enum value="0x836C" name="GL_FRAGMENT_FOG_SGIX"/> -->
             <!-- <enum value="0x836D" name="GL_TEXTURE_FOG_SGIX"/> -->
@@ -6915,7 +2447,7 @@ typedef unsigned int GLhandleARB;
                  conflicts. They have never reported using any values in
                  this range. Lesson: assigned ranges belong to vendors,
                  not engineers! -->
-        <enum value="0x8370" name="GL_MIRRORED_REPEAT"/>
+        <enum value="0x8370" name="GL_MIRRORED_REPEAT" group="TextureWrapMode"/>
         <enum value="0x8370" name="GL_MIRRORED_REPEAT_ARB"/>
         <enum value="0x8370" name="GL_MIRRORED_REPEAT_IBM"/>
         <enum value="0x8370" name="GL_MIRRORED_REPEAT_OES"/>
@@ -6961,19 +2493,19 @@ typedef unsigned int GLhandleARB;
             <!-- <enum value="0x83EC" name="GL_BALI_R_CHIP_COUNT_SGIX"/> -->
             <unused start="0x83ED" comment="Incomplete extension SGIX_occlusion_instrument"/>
             <!-- <enum value="0x83ED" name="GL_OCCLUSION_INSTRUMENT_SGIX"/> -->
-        <enum value="0x83EE" name="GL_VERTEX_PRECLIP_SGIX"/>
-        <enum value="0x83EF" name="GL_VERTEX_PRECLIP_HINT_SGIX"/>
+        <enum value="0x83EE" name="GL_VERTEX_PRECLIP_SGIX" group="HintTarget,GetPName"/>
+        <enum value="0x83EF" name="GL_VERTEX_PRECLIP_HINT_SGIX" group="HintTarget,GetPName"/>
     </enums>
 
     <enums namespace="GL" start="0x83F0" end="0x83FF" vendor="INTEL">
             <!-- This block was reclaimed from NTP, who never shipped
                  it, and reassigned to Intel. -->
-        <enum value="0x83F0" name="GL_COMPRESSED_RGB_S3TC_DXT1_EXT"/>
-        <enum value="0x83F1" name="GL_COMPRESSED_RGBA_S3TC_DXT1_EXT"/>
-        <enum value="0x83F2" name="GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE"/>
-        <enum value="0x83F2" name="GL_COMPRESSED_RGBA_S3TC_DXT3_EXT"/>
-        <enum value="0x83F3" name="GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE"/>
-        <enum value="0x83F3" name="GL_COMPRESSED_RGBA_S3TC_DXT5_EXT"/>
+        <enum value="0x83F0" name="GL_COMPRESSED_RGB_S3TC_DXT1_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x83F1" name="GL_COMPRESSED_RGBA_S3TC_DXT1_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x83F2" name="GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x83F2" name="GL_COMPRESSED_RGBA_S3TC_DXT3_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x83F3" name="GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x83F3" name="GL_COMPRESSED_RGBA_S3TC_DXT5_EXT" group="InternalFormat,SizedInternalFormat"/>
         <enum value="0x83F4" name="GL_PARALLEL_ARRAYS_INTEL"/>
         <enum value="0x83F5" name="GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL"/>
         <enum value="0x83F6" name="GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL"/>
@@ -6985,37 +2517,37 @@ typedef unsigned int GLhandleARB;
         <enum value="0x83FC" name="GL_BLACKHOLE_RENDER_INTEL"/>
             <unused start="0x83FD" vendor="INTEL"/>
         <enum value="0x83FE" name="GL_CONSERVATIVE_RASTERIZATION_INTEL"/>
-        <enum value="0x83FF" name="GL_TEXTURE_MEMORY_LAYOUT_INTEL"/>
+        <enum value="0x83FF" name="GL_TEXTURE_MEMORY_LAYOUT_INTEL" group="TextureParameterName"/>
     </enums>
 
     <enums namespace="GL" start="0x8400" end="0x846F" vendor="SGI">
-        <enum value="0x8400" name="GL_FRAGMENT_LIGHTING_SGIX"/>
-        <enum value="0x8401" name="GL_FRAGMENT_COLOR_MATERIAL_SGIX"/>
-        <enum value="0x8402" name="GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX"/>
-        <enum value="0x8403" name="GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX"/>
-        <enum value="0x8404" name="GL_MAX_FRAGMENT_LIGHTS_SGIX"/>
-        <enum value="0x8405" name="GL_MAX_ACTIVE_LIGHTS_SGIX"/>
+        <enum value="0x8400" name="GL_FRAGMENT_LIGHTING_SGIX" group="GetPName,EnableCap"/>
+        <enum value="0x8401" name="GL_FRAGMENT_COLOR_MATERIAL_SGIX" group="GetPName,EnableCap"/>
+        <enum value="0x8402" name="GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX" group="GetPName"/>
+        <enum value="0x8403" name="GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX" group="GetPName"/>
+        <enum value="0x8404" name="GL_MAX_FRAGMENT_LIGHTS_SGIX" group="GetPName"/>
+        <enum value="0x8405" name="GL_MAX_ACTIVE_LIGHTS_SGIX" group="GetPName"/>
         <enum value="0x8406" name="GL_CURRENT_RASTER_NORMAL_SGIX"/>
-        <enum value="0x8407" name="GL_LIGHT_ENV_MODE_SGIX"/>
-        <enum value="0x8408" name="GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX"/>
-        <enum value="0x8409" name="GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX"/>
-        <enum value="0x840A" name="GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX"/>
-        <enum value="0x840B" name="GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX"/>
-        <enum value="0x840C" name="GL_FRAGMENT_LIGHT0_SGIX"/>
-        <enum value="0x840D" name="GL_FRAGMENT_LIGHT1_SGIX"/>
-        <enum value="0x840E" name="GL_FRAGMENT_LIGHT2_SGIX"/>
-        <enum value="0x840F" name="GL_FRAGMENT_LIGHT3_SGIX"/>
-        <enum value="0x8410" name="GL_FRAGMENT_LIGHT4_SGIX"/>
-        <enum value="0x8411" name="GL_FRAGMENT_LIGHT5_SGIX"/>
-        <enum value="0x8412" name="GL_FRAGMENT_LIGHT6_SGIX"/>
-        <enum value="0x8413" name="GL_FRAGMENT_LIGHT7_SGIX"/>
+        <enum value="0x8407" name="GL_LIGHT_ENV_MODE_SGIX" group="LightEnvParameterSGIX,GetPName"/>
+        <enum value="0x8408" name="GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX" group="GetPName,FragmentLightModelParameterSGIX"/>
+        <enum value="0x8409" name="GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX" group="GetPName,FragmentLightModelParameterSGIX"/>
+        <enum value="0x840A" name="GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX" group="GetPName,FragmentLightModelParameterSGIX"/>
+        <enum value="0x840B" name="GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX" group="GetPName,FragmentLightModelParameterSGIX"/>
+        <enum value="0x840C" name="GL_FRAGMENT_LIGHT0_SGIX" group="LightName,FragmentLightNameSGIX,EnableCap,GetPName"/>
+        <enum value="0x840D" name="GL_FRAGMENT_LIGHT1_SGIX" group="LightName,FragmentLightNameSGIX,EnableCap"/>
+        <enum value="0x840E" name="GL_FRAGMENT_LIGHT2_SGIX" group="LightName,FragmentLightNameSGIX,EnableCap"/>
+        <enum value="0x840F" name="GL_FRAGMENT_LIGHT3_SGIX" group="LightName,FragmentLightNameSGIX,EnableCap"/>
+        <enum value="0x8410" name="GL_FRAGMENT_LIGHT4_SGIX" group="LightName,FragmentLightNameSGIX,EnableCap"/>
+        <enum value="0x8411" name="GL_FRAGMENT_LIGHT5_SGIX" group="LightName,FragmentLightNameSGIX,EnableCap"/>
+        <enum value="0x8412" name="GL_FRAGMENT_LIGHT6_SGIX" group="LightName,FragmentLightNameSGIX,EnableCap"/>
+        <enum value="0x8413" name="GL_FRAGMENT_LIGHT7_SGIX" group="LightName,FragmentLightNameSGIX,EnableCap"/>
             <unused start="0x8414" end="0x842D" vendor="SGI"/>
-        <enum value="0x842E" name="GL_PACK_RESAMPLE_SGIX" comment="Formerly 0x842C in SGI specfile"/>
-        <enum value="0x842F" name="GL_UNPACK_RESAMPLE_SGIX" comment="Formerly 0x842D in SGI specfile"/>
-        <enum value="0x8430" name="GL_RESAMPLE_DECIMATE_SGIX" comment="Formerly 0x8430 in SGI specfile"/>
+        <enum value="0x842E" name="GL_PACK_RESAMPLE_SGIX" comment="Formerly 0x842C in SGI specfile" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x842F" name="GL_UNPACK_RESAMPLE_SGIX" comment="Formerly 0x842D in SGI specfile" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x8430" name="GL_RESAMPLE_DECIMATE_SGIX" comment="Formerly 0x8430 in SGI specfile" group="PixelStoreResampleMode"/>
             <unused start="0x8431" end="0x8432" vendor="SGI"/>
-        <enum value="0x8433" name="GL_RESAMPLE_REPLICATE_SGIX" comment="Formerly 0x842E in SGI specfile"/>
-        <enum value="0x8434" name="GL_RESAMPLE_ZERO_FILL_SGIX" comment="Formerly 0x842F in SGI specfile"/>
+        <enum value="0x8433" name="GL_RESAMPLE_REPLICATE_SGIX" comment="Formerly 0x842E in SGI specfile" group="PixelStoreResampleMode"/>
+        <enum value="0x8434" name="GL_RESAMPLE_ZERO_FILL_SGIX" comment="Formerly 0x842F in SGI specfile" group="PixelStoreResampleMode"/>
             <unused start="0x8435" vendor="SGI"/>
             <!-- Incomplete extension SGIX_fragment_lighting -->
             <!-- <enum value="0x8436"      name="GL_EYE_SPACE_SGIX"/> -->
@@ -7058,18 +2590,18 @@ typedef unsigned int GLhandleARB;
             <!-- <enum value="0x844A" name="GL_BALI_GEOM_TIMER_INSTRUMENT_SGIX"/> -->
             <!-- <enum value="0x844B" name="GL_BALI_RASTER_TIMER_INSTRUMENT_SGIX"/> -->
             <!-- <enum value="0x844C" name="GL_BALI_INSTRUMENT_TIME_UNIT_SGIX"/> -->
-        <enum value="0x844D" name="GL_NEAREST_CLIPMAP_NEAREST_SGIX"/>
-        <enum value="0x844E" name="GL_NEAREST_CLIPMAP_LINEAR_SGIX"/>
-        <enum value="0x844F" name="GL_LINEAR_CLIPMAP_NEAREST_SGIX"/>
+        <enum value="0x844D" name="GL_NEAREST_CLIPMAP_NEAREST_SGIX" group="TextureMinFilter"/>
+        <enum value="0x844E" name="GL_NEAREST_CLIPMAP_LINEAR_SGIX" group="TextureMinFilter"/>
+        <enum value="0x844F" name="GL_LINEAR_CLIPMAP_NEAREST_SGIX" group="TextureMinFilter"/>
             <!-- 0x8450-0x845F range brokered for Id Software -->
         <enum value="0x8450" name="GL_FOG_COORDINATE_SOURCE"/>
         <enum value="0x8450" name="GL_FOG_COORDINATE_SOURCE_EXT"/>
-        <enum value="0x8450" name="GL_FOG_COORD_SRC" alias="GL_FOG_COORDINATE_SOURCE"/>
-        <enum value="0x8451" name="GL_FOG_COORDINATE"/>
-        <enum value="0x8451" name="GL_FOG_COORD" alias="GL_FOG_COORDINATE"/>
-        <enum value="0x8451" name="GL_FOG_COORDINATE_EXT"/>
-        <enum value="0x8452" name="GL_FRAGMENT_DEPTH"/>
-        <enum value="0x8452" name="GL_FRAGMENT_DEPTH_EXT"/>
+        <enum value="0x8450" name="GL_FOG_COORD_SRC" alias="GL_FOG_COORDINATE_SOURCE" group="FogPName"/>
+        <enum value="0x8451" name="GL_FOG_COORDINATE" group="FogCoordSrc"/>
+        <enum value="0x8451" name="GL_FOG_COORDINATE_EXT" group="FogCoordSrc"/>
+        <enum value="0x8451" name="GL_FOG_COORD" group="FogCoordSrc" alias="GL_FOG_COORDINATE"/>
+        <enum value="0x8452" name="GL_FRAGMENT_DEPTH" group="FogCoordSrc,LightTextureModeEXT"/>
+        <enum value="0x8452" name="GL_FRAGMENT_DEPTH_EXT" group="FogCoordSrc,LightTextureModeEXT"/>
         <enum value="0x8453" name="GL_CURRENT_FOG_COORDINATE"/>
         <enum value="0x8453" name="GL_CURRENT_FOG_COORD" alias="GL_CURRENT_FOG_COORDINATE"/>
         <enum value="0x8453" name="GL_CURRENT_FOG_COORDINATE_EXT"/>
@@ -7115,8 +2647,8 @@ typedef unsigned int GLhandleARB;
             <!-- <enum value="0x846A" name="GL_INTENSITY16_ICC_SGIX"/> -->
             <!-- <enum value="0x846B" name="GL_LUMINANCE16_ALPHA8_ICC_SGIX"/> -->
             <unused start="0x846C" vendor="SGI"/>
-        <enum value="0x846D" name="GL_ALIASED_POINT_SIZE_RANGE"/>
-        <enum value="0x846E" name="GL_ALIASED_LINE_WIDTH_RANGE"/>
+        <enum value="0x846D" name="GL_ALIASED_POINT_SIZE_RANGE" group="GetPName"/>
+        <enum value="0x846E" name="GL_ALIASED_LINE_WIDTH_RANGE" group="GetPName"/>
             <unused start="0x846F" vendor="SGI"/>
     </enums>
 
@@ -7135,71 +2667,71 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x84C0" end="0x84EF" vendor="ARB">
-        <enum value="0x84C0" name="GL_TEXTURE0"/>
-        <enum value="0x84C0" name="GL_TEXTURE0_ARB"/>
-        <enum value="0x84C1" name="GL_TEXTURE1"/>
-        <enum value="0x84C1" name="GL_TEXTURE1_ARB"/>
-        <enum value="0x84C2" name="GL_TEXTURE2"/>
+        <enum value="0x84C0" name="GL_TEXTURE0" group="TextureUnit,FragmentShaderTextureSourceATI"/>
+        <enum value="0x84C0" name="GL_TEXTURE0_ARB" group="CombinerRegisterNV"/>
+        <enum value="0x84C1" name="GL_TEXTURE1" group="TextureUnit,FragmentShaderTextureSourceATI"/>
+        <enum value="0x84C1" name="GL_TEXTURE1_ARB" group="CombinerRegisterNV"/>
+        <enum value="0x84C2" name="GL_TEXTURE2" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84C2" name="GL_TEXTURE2_ARB"/>
-        <enum value="0x84C3" name="GL_TEXTURE3"/>
+        <enum value="0x84C3" name="GL_TEXTURE3" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84C3" name="GL_TEXTURE3_ARB"/>
-        <enum value="0x84C4" name="GL_TEXTURE4"/>
+        <enum value="0x84C4" name="GL_TEXTURE4" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84C4" name="GL_TEXTURE4_ARB"/>
-        <enum value="0x84C5" name="GL_TEXTURE5"/>
+        <enum value="0x84C5" name="GL_TEXTURE5" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84C5" name="GL_TEXTURE5_ARB"/>
-        <enum value="0x84C6" name="GL_TEXTURE6"/>
+        <enum value="0x84C6" name="GL_TEXTURE6" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84C6" name="GL_TEXTURE6_ARB"/>
-        <enum value="0x84C7" name="GL_TEXTURE7"/>
+        <enum value="0x84C7" name="GL_TEXTURE7" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84C7" name="GL_TEXTURE7_ARB"/>
-        <enum value="0x84C8" name="GL_TEXTURE8"/>
+        <enum value="0x84C8" name="GL_TEXTURE8" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84C8" name="GL_TEXTURE8_ARB"/>
-        <enum value="0x84C9" name="GL_TEXTURE9"/>
+        <enum value="0x84C9" name="GL_TEXTURE9" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84C9" name="GL_TEXTURE9_ARB"/>
-        <enum value="0x84CA" name="GL_TEXTURE10"/>
+        <enum value="0x84CA" name="GL_TEXTURE10" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84CA" name="GL_TEXTURE10_ARB"/>
-        <enum value="0x84CB" name="GL_TEXTURE11"/>
+        <enum value="0x84CB" name="GL_TEXTURE11" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84CB" name="GL_TEXTURE11_ARB"/>
-        <enum value="0x84CC" name="GL_TEXTURE12"/>
+        <enum value="0x84CC" name="GL_TEXTURE12" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84CC" name="GL_TEXTURE12_ARB"/>
-        <enum value="0x84CD" name="GL_TEXTURE13"/>
+        <enum value="0x84CD" name="GL_TEXTURE13" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84CD" name="GL_TEXTURE13_ARB"/>
-        <enum value="0x84CE" name="GL_TEXTURE14"/>
+        <enum value="0x84CE" name="GL_TEXTURE14" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84CE" name="GL_TEXTURE14_ARB"/>
-        <enum value="0x84CF" name="GL_TEXTURE15"/>
+        <enum value="0x84CF" name="GL_TEXTURE15" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84CF" name="GL_TEXTURE15_ARB"/>
-        <enum value="0x84D0" name="GL_TEXTURE16"/>
+        <enum value="0x84D0" name="GL_TEXTURE16" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84D0" name="GL_TEXTURE16_ARB"/>
-        <enum value="0x84D1" name="GL_TEXTURE17"/>
+        <enum value="0x84D1" name="GL_TEXTURE17" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84D1" name="GL_TEXTURE17_ARB"/>
-        <enum value="0x84D2" name="GL_TEXTURE18"/>
+        <enum value="0x84D2" name="GL_TEXTURE18" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84D2" name="GL_TEXTURE18_ARB"/>
-        <enum value="0x84D3" name="GL_TEXTURE19"/>
+        <enum value="0x84D3" name="GL_TEXTURE19" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84D3" name="GL_TEXTURE19_ARB"/>
-        <enum value="0x84D4" name="GL_TEXTURE20"/>
+        <enum value="0x84D4" name="GL_TEXTURE20" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84D4" name="GL_TEXTURE20_ARB"/>
-        <enum value="0x84D5" name="GL_TEXTURE21"/>
+        <enum value="0x84D5" name="GL_TEXTURE21" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84D5" name="GL_TEXTURE21_ARB"/>
-        <enum value="0x84D6" name="GL_TEXTURE22"/>
+        <enum value="0x84D6" name="GL_TEXTURE22" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84D6" name="GL_TEXTURE22_ARB"/>
-        <enum value="0x84D7" name="GL_TEXTURE23"/>
+        <enum value="0x84D7" name="GL_TEXTURE23" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84D7" name="GL_TEXTURE23_ARB"/>
-        <enum value="0x84D8" name="GL_TEXTURE24"/>
+        <enum value="0x84D8" name="GL_TEXTURE24" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84D8" name="GL_TEXTURE24_ARB"/>
-        <enum value="0x84D9" name="GL_TEXTURE25"/>
+        <enum value="0x84D9" name="GL_TEXTURE25" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84D9" name="GL_TEXTURE25_ARB"/>
-        <enum value="0x84DA" name="GL_TEXTURE26"/>
+        <enum value="0x84DA" name="GL_TEXTURE26" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84DA" name="GL_TEXTURE26_ARB"/>
-        <enum value="0x84DB" name="GL_TEXTURE27"/>
+        <enum value="0x84DB" name="GL_TEXTURE27" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84DB" name="GL_TEXTURE27_ARB"/>
-        <enum value="0x84DC" name="GL_TEXTURE28"/>
+        <enum value="0x84DC" name="GL_TEXTURE28" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84DC" name="GL_TEXTURE28_ARB"/>
-        <enum value="0x84DD" name="GL_TEXTURE29"/>
+        <enum value="0x84DD" name="GL_TEXTURE29" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84DD" name="GL_TEXTURE29_ARB"/>
-        <enum value="0x84DE" name="GL_TEXTURE30"/>
+        <enum value="0x84DE" name="GL_TEXTURE30" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84DE" name="GL_TEXTURE30_ARB"/>
-        <enum value="0x84DF" name="GL_TEXTURE31"/>
+        <enum value="0x84DF" name="GL_TEXTURE31" group="TextureUnit,FragmentShaderTextureSourceATI"/>
         <enum value="0x84DF" name="GL_TEXTURE31_ARB"/>
-        <enum value="0x84E0" name="GL_ACTIVE_TEXTURE"/>
+        <enum value="0x84E0" name="GL_ACTIVE_TEXTURE" group="GetPName"/>
         <enum value="0x84E0" name="GL_ACTIVE_TEXTURE_ARB"/>
         <enum value="0x84E1" name="GL_CLIENT_ACTIVE_TEXTURE"/>
         <enum value="0x84E1" name="GL_CLIENT_ACTIVE_TEXTURE_ARB"/>
@@ -7217,7 +2749,7 @@ typedef unsigned int GLhandleARB;
         <enum value="0x84E6" name="GL_TRANSPOSE_COLOR_MATRIX_ARB"/>
         <enum value="0x84E7" name="GL_SUBTRACT"/>
         <enum value="0x84E7" name="GL_SUBTRACT_ARB"/>
-        <enum value="0x84E8" name="GL_MAX_RENDERBUFFER_SIZE"/>
+        <enum value="0x84E8" name="GL_MAX_RENDERBUFFER_SIZE" group="GetPName"/>
         <enum value="0x84E8" name="GL_MAX_RENDERBUFFER_SIZE_EXT"/>
         <enum value="0x84E8" name="GL_MAX_RENDERBUFFER_SIZE_OES"/>
         <enum value="0x84E9" name="GL_COMPRESSED_ALPHA"/>
@@ -7228,60 +2760,60 @@ typedef unsigned int GLhandleARB;
         <enum value="0x84EB" name="GL_COMPRESSED_LUMINANCE_ALPHA_ARB"/>
         <enum value="0x84EC" name="GL_COMPRESSED_INTENSITY"/>
         <enum value="0x84EC" name="GL_COMPRESSED_INTENSITY_ARB"/>
-        <enum value="0x84ED" name="GL_COMPRESSED_RGB"/>
+        <enum value="0x84ED" name="GL_COMPRESSED_RGB" group="InternalFormat"/>
         <enum value="0x84ED" name="GL_COMPRESSED_RGB_ARB"/>
-        <enum value="0x84EE" name="GL_COMPRESSED_RGBA"/>
+        <enum value="0x84EE" name="GL_COMPRESSED_RGBA" group="InternalFormat"/>
         <enum value="0x84EE" name="GL_COMPRESSED_RGBA_ARB"/>
-        <enum value="0x84EF" name="GL_TEXTURE_COMPRESSION_HINT"/>
-        <enum value="0x84EF" name="GL_TEXTURE_COMPRESSION_HINT_ARB"/>
+        <enum value="0x84EF" name="GL_TEXTURE_COMPRESSION_HINT" group="HintTarget,GetPName"/>
+        <enum value="0x84EF" name="GL_TEXTURE_COMPRESSION_HINT_ARB" group="HintTarget"/>
     </enums>
 
     <enums namespace="GL" start="0x84F0" end="0x855F" vendor="NV">
-        <enum value="0x84F0" name="GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER"/>
-        <enum value="0x84F1" name="GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER"/>
-        <enum value="0x84F2" name="GL_ALL_COMPLETED_NV"/>
-        <enum value="0x84F3" name="GL_FENCE_STATUS_NV"/>
-        <enum value="0x84F4" name="GL_FENCE_CONDITION_NV"/>
-        <enum value="0x84F5" name="GL_TEXTURE_RECTANGLE"/>
-        <enum value="0x84F5" name="GL_TEXTURE_RECTANGLE_ARB"/>
-        <enum value="0x84F5" name="GL_TEXTURE_RECTANGLE_NV"/>
-        <enum value="0x84F6" name="GL_TEXTURE_BINDING_RECTANGLE"/>
-        <enum value="0x84F6" name="GL_TEXTURE_BINDING_RECTANGLE_ARB"/>
-        <enum value="0x84F6" name="GL_TEXTURE_BINDING_RECTANGLE_NV"/>
-        <enum value="0x84F7" name="GL_PROXY_TEXTURE_RECTANGLE"/>
-        <enum value="0x84F7" name="GL_PROXY_TEXTURE_RECTANGLE_ARB"/>
-        <enum value="0x84F7" name="GL_PROXY_TEXTURE_RECTANGLE_NV"/>
-        <enum value="0x84F8" name="GL_MAX_RECTANGLE_TEXTURE_SIZE"/>
+        <enum value="0x84F0" name="GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER" group="UniformBlockPName"/>
+        <enum value="0x84F1" name="GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER" group="UniformBlockPName"/>
+        <enum value="0x84F2" name="GL_ALL_COMPLETED_NV" group="FenceConditionNV"/>
+        <enum value="0x84F3" name="GL_FENCE_STATUS_NV" group="FenceParameterNameNV"/>
+        <enum value="0x84F4" name="GL_FENCE_CONDITION_NV" group="FenceParameterNameNV"/>
+        <enum value="0x84F5" name="GL_TEXTURE_RECTANGLE" group="CopyImageSubDataTarget,TextureTarget,EnableCap"/>
+        <enum value="0x84F5" name="GL_TEXTURE_RECTANGLE_ARB" group="TextureTarget,EnableCap"/>
+        <enum value="0x84F5" name="GL_TEXTURE_RECTANGLE_NV" group="TextureTarget,EnableCap"/>
+        <enum value="0x84F6" name="GL_TEXTURE_BINDING_RECTANGLE" group="GetPName"/>
+        <enum value="0x84F6" name="GL_TEXTURE_BINDING_RECTANGLE_ARB" group="GetPName"/>
+        <enum value="0x84F6" name="GL_TEXTURE_BINDING_RECTANGLE_NV" group="GetPName"/>
+        <enum value="0x84F7" name="GL_PROXY_TEXTURE_RECTANGLE" group="TextureTarget"/>
+        <enum value="0x84F7" name="GL_PROXY_TEXTURE_RECTANGLE_ARB" group="TextureTarget"/>
+        <enum value="0x84F7" name="GL_PROXY_TEXTURE_RECTANGLE_NV" group="TextureTarget"/>
+        <enum value="0x84F8" name="GL_MAX_RECTANGLE_TEXTURE_SIZE" group="GetPName"/>
         <enum value="0x84F8" name="GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB"/>
         <enum value="0x84F8" name="GL_MAX_RECTANGLE_TEXTURE_SIZE_NV"/>
-        <enum value="0x84F9" name="GL_DEPTH_STENCIL"/>
-        <enum value="0x84F9" name="GL_DEPTH_STENCIL_EXT"/>
-        <enum value="0x84F9" name="GL_DEPTH_STENCIL_NV"/>
-        <enum value="0x84F9" name="GL_DEPTH_STENCIL_OES"/>
-        <enum value="0x84FA" name="GL_UNSIGNED_INT_24_8"/>
-        <enum value="0x84FA" name="GL_UNSIGNED_INT_24_8_EXT"/>
-        <enum value="0x84FA" name="GL_UNSIGNED_INT_24_8_NV"/>
-        <enum value="0x84FA" name="GL_UNSIGNED_INT_24_8_OES"/>
+        <enum value="0x84F9" name="GL_DEPTH_STENCIL" group="InternalFormat,PixelFormat"/>
+        <enum value="0x84F9" name="GL_DEPTH_STENCIL_EXT" group="InternalFormat"/>
+        <enum value="0x84F9" name="GL_DEPTH_STENCIL_NV" group="InternalFormat"/>
+        <enum value="0x84F9" name="GL_DEPTH_STENCIL_OES" group="InternalFormat"/>
+        <enum value="0x84FA" name="GL_UNSIGNED_INT_24_8" group="PixelType"/>
+        <enum value="0x84FA" name="GL_UNSIGNED_INT_24_8_EXT" group="PixelType"/>
+        <enum value="0x84FA" name="GL_UNSIGNED_INT_24_8_NV" group="PixelType"/>
+        <enum value="0x84FA" name="GL_UNSIGNED_INT_24_8_OES" group="PixelType"/>
             <unused start="0x84FB" end="0x84FC" vendor="NV"/>
-        <enum value="0x84FD" name="GL_MAX_TEXTURE_LOD_BIAS"/>
+        <enum value="0x84FD" name="GL_MAX_TEXTURE_LOD_BIAS" group="GetPName"/>
         <enum value="0x84FD" name="GL_MAX_TEXTURE_LOD_BIAS_EXT"/>
-        <enum value="0x84FE" name="GL_TEXTURE_MAX_ANISOTROPY"/>
+        <enum value="0x84FE" name="GL_TEXTURE_MAX_ANISOTROPY" group="SamplerParameterF,TextureParameterName"/>
         <enum value="0x84FE" name="GL_TEXTURE_MAX_ANISOTROPY_EXT" alias="GL_TEXTURE_MAX_ANISOTROPY"/>
         <enum value="0x84FF" name="GL_MAX_TEXTURE_MAX_ANISOTROPY"/>
         <enum value="0x84FF" name="GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT" alias="GL_MAX_TEXTURE_MAX_ANISOTROPY"/>
-        <enum value="0x8500" name="GL_TEXTURE_FILTER_CONTROL"/>
+        <enum value="0x8500" name="GL_TEXTURE_FILTER_CONTROL" group="TextureEnvTarget"/>
         <enum value="0x8500" name="GL_TEXTURE_FILTER_CONTROL_EXT"/>
-        <enum value="0x8501" name="GL_TEXTURE_LOD_BIAS"/>
+        <enum value="0x8501" name="GL_TEXTURE_LOD_BIAS" group="TextureParameterName,SamplerParameterF,TextureEnvParameter"/>
         <enum value="0x8501" name="GL_TEXTURE_LOD_BIAS_EXT"/>
         <enum value="0x8502" name="GL_MODELVIEW1_STACK_DEPTH_EXT"/>
         <enum value="0x8503" name="GL_COMBINE4_NV"/>
         <enum value="0x8504" name="GL_MAX_SHININESS_NV"/>
         <enum value="0x8505" name="GL_MAX_SPOT_EXPONENT_NV"/>
         <enum value="0x8506" name="GL_MODELVIEW1_MATRIX_EXT"/>
-        <enum value="0x8507" name="GL_INCR_WRAP"/>
+        <enum value="0x8507" name="GL_INCR_WRAP" group="StencilOp"/>
         <enum value="0x8507" name="GL_INCR_WRAP_EXT"/>
         <enum value="0x8507" name="GL_INCR_WRAP_OES"/>
-        <enum value="0x8508" name="GL_DECR_WRAP"/>
+        <enum value="0x8508" name="GL_DECR_WRAP" group="StencilOp"/>
         <enum value="0x8508" name="GL_DECR_WRAP_EXT"/>
         <enum value="0x8508" name="GL_DECR_WRAP_OES"/>
         <enum value="0x8509" name="GL_VERTEX_WEIGHTING_EXT"/>
@@ -7293,99 +2825,99 @@ typedef unsigned int GLhandleARB;
         <enum value="0x850E" name="GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT"/>
         <enum value="0x850F" name="GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT"/>
         <enum value="0x8510" name="GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT"/>
-        <enum value="0x8511" name="GL_NORMAL_MAP"/>
-        <enum value="0x8511" name="GL_NORMAL_MAP_ARB"/>
-        <enum value="0x8511" name="GL_NORMAL_MAP_EXT"/>
-        <enum value="0x8511" name="GL_NORMAL_MAP_NV"/>
-        <enum value="0x8511" name="GL_NORMAL_MAP_OES"/>
-        <enum value="0x8512" name="GL_REFLECTION_MAP"/>
-        <enum value="0x8512" name="GL_REFLECTION_MAP_ARB"/>
-        <enum value="0x8512" name="GL_REFLECTION_MAP_EXT"/>
-        <enum value="0x8512" name="GL_REFLECTION_MAP_NV"/>
-        <enum value="0x8512" name="GL_REFLECTION_MAP_OES"/>
-        <enum value="0x8513" name="GL_TEXTURE_CUBE_MAP"/>
-        <enum value="0x8513" name="GL_TEXTURE_CUBE_MAP_ARB"/>
-        <enum value="0x8513" name="GL_TEXTURE_CUBE_MAP_EXT"/>
-        <enum value="0x8513" name="GL_TEXTURE_CUBE_MAP_OES"/>
-        <enum value="0x8514" name="GL_TEXTURE_BINDING_CUBE_MAP"/>
-        <enum value="0x8514" name="GL_TEXTURE_BINDING_CUBE_MAP_ARB"/>
-        <enum value="0x8514" name="GL_TEXTURE_BINDING_CUBE_MAP_EXT"/>
-        <enum value="0x8514" name="GL_TEXTURE_BINDING_CUBE_MAP_OES"/>
-        <enum value="0x8515" name="GL_TEXTURE_CUBE_MAP_POSITIVE_X"/>
-        <enum value="0x8515" name="GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB"/>
-        <enum value="0x8515" name="GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT"/>
-        <enum value="0x8515" name="GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES"/>
-        <enum value="0x8516" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_X"/>
-        <enum value="0x8516" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB"/>
-        <enum value="0x8516" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT"/>
-        <enum value="0x8516" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES"/>
-        <enum value="0x8517" name="GL_TEXTURE_CUBE_MAP_POSITIVE_Y"/>
-        <enum value="0x8517" name="GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB"/>
-        <enum value="0x8517" name="GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT"/>
-        <enum value="0x8517" name="GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES"/>
-        <enum value="0x8518" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Y"/>
-        <enum value="0x8518" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB"/>
-        <enum value="0x8518" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT"/>
-        <enum value="0x8518" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES"/>
-        <enum value="0x8519" name="GL_TEXTURE_CUBE_MAP_POSITIVE_Z"/>
-        <enum value="0x8519" name="GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB"/>
-        <enum value="0x8519" name="GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT"/>
-        <enum value="0x8519" name="GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES"/>
-        <enum value="0x851A" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Z"/>
-        <enum value="0x851A" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB"/>
-        <enum value="0x851A" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT"/>
-        <enum value="0x851A" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES"/>
-        <enum value="0x851B" name="GL_PROXY_TEXTURE_CUBE_MAP"/>
-        <enum value="0x851B" name="GL_PROXY_TEXTURE_CUBE_MAP_ARB"/>
-        <enum value="0x851B" name="GL_PROXY_TEXTURE_CUBE_MAP_EXT"/>
-        <enum value="0x851C" name="GL_MAX_CUBE_MAP_TEXTURE_SIZE"/>
-        <enum value="0x851C" name="GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB"/>
-        <enum value="0x851C" name="GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT"/>
-        <enum value="0x851C" name="GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES"/>
+        <enum value="0x8511" name="GL_NORMAL_MAP" group="GetTextureParameter"/>
+        <enum value="0x8511" name="GL_NORMAL_MAP_ARB" group="GetTextureParameter"/>
+        <enum value="0x8511" name="GL_NORMAL_MAP_EXT" group="GetTextureParameter"/>
+        <enum value="0x8511" name="GL_NORMAL_MAP_NV" group="GetTextureParameter"/>
+        <enum value="0x8511" name="GL_NORMAL_MAP_OES" group="GetTextureParameter"/>
+        <enum value="0x8512" name="GL_REFLECTION_MAP" group="GetTextureParameter"/>
+        <enum value="0x8512" name="GL_REFLECTION_MAP_ARB" group="GetTextureParameter"/>
+        <enum value="0x8512" name="GL_REFLECTION_MAP_EXT" group="GetTextureParameter"/>
+        <enum value="0x8512" name="GL_REFLECTION_MAP_NV" group="GetTextureParameter"/>
+        <enum value="0x8512" name="GL_REFLECTION_MAP_OES" group="GetTextureParameter"/>
+        <enum value="0x8513" name="GL_TEXTURE_CUBE_MAP" group="CopyImageSubDataTarget,TextureTarget,EnableCap"/>
+        <enum value="0x8513" name="GL_TEXTURE_CUBE_MAP_ARB" group="TextureTarget,EnableCap"/>
+        <enum value="0x8513" name="GL_TEXTURE_CUBE_MAP_EXT" group="TextureTarget,EnableCap"/>
+        <enum value="0x8513" name="GL_TEXTURE_CUBE_MAP_OES" group="TextureTarget,EnableCap"/>
+        <enum value="0x8514" name="GL_TEXTURE_BINDING_CUBE_MAP" group="GetPName"/>
+        <enum value="0x8514" name="GL_TEXTURE_BINDING_CUBE_MAP_ARB" group="GetPName"/>
+        <enum value="0x8514" name="GL_TEXTURE_BINDING_CUBE_MAP_EXT" group="GetPName"/>
+        <enum value="0x8514" name="GL_TEXTURE_BINDING_CUBE_MAP_OES" group="GetPName"/>
+        <enum value="0x8515" name="GL_TEXTURE_CUBE_MAP_POSITIVE_X" group="TextureTarget"/>
+        <enum value="0x8515" name="GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB" group="TextureTarget"/>
+        <enum value="0x8515" name="GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT" group="TextureTarget"/>
+        <enum value="0x8515" name="GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES" group="TextureTarget"/>
+        <enum value="0x8516" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_X" group="TextureTarget"/>
+        <enum value="0x8516" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB" group="TextureTarget"/>
+        <enum value="0x8516" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT" group="TextureTarget"/>
+        <enum value="0x8516" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES" group="TextureTarget"/>
+        <enum value="0x8517" name="GL_TEXTURE_CUBE_MAP_POSITIVE_Y" group="TextureTarget"/>
+        <enum value="0x8517" name="GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB" group="TextureTarget"/>
+        <enum value="0x8517" name="GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT" group="TextureTarget"/>
+        <enum value="0x8517" name="GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES" group="TextureTarget"/>
+        <enum value="0x8518" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Y" group="TextureTarget"/>
+        <enum value="0x8518" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB" group="TextureTarget"/>
+        <enum value="0x8518" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT" group="TextureTarget"/>
+        <enum value="0x8518" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES" group="TextureTarget"/>
+        <enum value="0x8519" name="GL_TEXTURE_CUBE_MAP_POSITIVE_Z" group="TextureTarget"/>
+        <enum value="0x8519" name="GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB" group="TextureTarget"/>
+        <enum value="0x8519" name="GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT" group="TextureTarget"/>
+        <enum value="0x8519" name="GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES" group="TextureTarget"/>
+        <enum value="0x851A" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Z" group="TextureTarget"/>
+        <enum value="0x851A" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB" group="TextureTarget"/>
+        <enum value="0x851A" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT" group="TextureTarget"/>
+        <enum value="0x851A" name="GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES" group="TextureTarget"/>
+        <enum value="0x851B" name="GL_PROXY_TEXTURE_CUBE_MAP" group="TextureTarget"/>
+        <enum value="0x851B" name="GL_PROXY_TEXTURE_CUBE_MAP_ARB" group="TextureTarget"/>
+        <enum value="0x851B" name="GL_PROXY_TEXTURE_CUBE_MAP_EXT" group="TextureTarget"/>
+        <enum value="0x851C" name="GL_MAX_CUBE_MAP_TEXTURE_SIZE" group="GetPName"/>
+        <enum value="0x851C" name="GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB" group="GetPName"/>
+        <enum value="0x851C" name="GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT" group="GetPName"/>
+        <enum value="0x851C" name="GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES" group="GetPName"/>
         <enum value="0x851D" name="GL_VERTEX_ARRAY_RANGE_APPLE"/>
         <enum value="0x851D" name="GL_VERTEX_ARRAY_RANGE_NV"/>
         <enum value="0x851E" name="GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE"/>
         <enum value="0x851E" name="GL_VERTEX_ARRAY_RANGE_LENGTH_NV"/>
         <enum value="0x851F" name="GL_VERTEX_ARRAY_RANGE_VALID_NV"/>
-        <enum value="0x851F" name="GL_VERTEX_ARRAY_STORAGE_HINT_APPLE"/>
+        <enum value="0x851F" name="GL_VERTEX_ARRAY_STORAGE_HINT_APPLE" group="HintTarget"/>
         <enum value="0x8520" name="GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV"/>
         <enum value="0x8521" name="GL_VERTEX_ARRAY_RANGE_POINTER_APPLE"/>
         <enum value="0x8521" name="GL_VERTEX_ARRAY_RANGE_POINTER_NV"/>
         <enum value="0x8522" name="GL_REGISTER_COMBINERS_NV"/>
-        <enum value="0x8523" name="GL_VARIABLE_A_NV"/>
-        <enum value="0x8524" name="GL_VARIABLE_B_NV"/>
-        <enum value="0x8525" name="GL_VARIABLE_C_NV"/>
-        <enum value="0x8526" name="GL_VARIABLE_D_NV"/>
-        <enum value="0x8527" name="GL_VARIABLE_E_NV"/>
-        <enum value="0x8528" name="GL_VARIABLE_F_NV"/>
-        <enum value="0x8529" name="GL_VARIABLE_G_NV"/>
+        <enum value="0x8523" name="GL_VARIABLE_A_NV" group="CombinerVariableNV"/>
+        <enum value="0x8524" name="GL_VARIABLE_B_NV" group="CombinerVariableNV"/>
+        <enum value="0x8525" name="GL_VARIABLE_C_NV" group="CombinerVariableNV"/>
+        <enum value="0x8526" name="GL_VARIABLE_D_NV" group="CombinerVariableNV"/>
+        <enum value="0x8527" name="GL_VARIABLE_E_NV" group="CombinerVariableNV"/>
+        <enum value="0x8528" name="GL_VARIABLE_F_NV" group="CombinerVariableNV"/>
+        <enum value="0x8529" name="GL_VARIABLE_G_NV" group="CombinerVariableNV"/>
         <enum value="0x852A" name="GL_CONSTANT_COLOR0_NV"/>
         <enum value="0x852B" name="GL_CONSTANT_COLOR1_NV"/>
-        <enum value="0x852C" name="GL_PRIMARY_COLOR_NV"/>
-        <enum value="0x852D" name="GL_SECONDARY_COLOR_NV"/>
-        <enum value="0x852E" name="GL_SPARE0_NV"/>
-        <enum value="0x852F" name="GL_SPARE1_NV"/>
-        <enum value="0x8530" name="GL_DISCARD_NV"/>
+        <enum value="0x852C" name="GL_PRIMARY_COLOR_NV" group="PathColor,CombinerRegisterNV"/>
+        <enum value="0x852D" name="GL_SECONDARY_COLOR_NV" group="PathColor,CombinerRegisterNV"/>
+        <enum value="0x852E" name="GL_SPARE0_NV" group="CombinerRegisterNV"/>
+        <enum value="0x852F" name="GL_SPARE1_NV" group="CombinerRegisterNV"/>
+        <enum value="0x8530" name="GL_DISCARD_NV" group="CombinerRegisterNV"/>
         <enum value="0x8531" name="GL_E_TIMES_F_NV"/>
         <enum value="0x8532" name="GL_SPARE0_PLUS_SECONDARY_COLOR_NV"/>
         <enum value="0x8533" name="GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV"/>
-        <enum value="0x8534" name="GL_MULTISAMPLE_FILTER_HINT_NV"/>
+        <enum value="0x8534" name="GL_MULTISAMPLE_FILTER_HINT_NV" group="HintTarget"/>
         <enum value="0x8535" name="GL_PER_STAGE_CONSTANTS_NV"/>
-        <enum value="0x8536" name="GL_UNSIGNED_IDENTITY_NV"/>
-        <enum value="0x8537" name="GL_UNSIGNED_INVERT_NV"/>
-        <enum value="0x8538" name="GL_EXPAND_NORMAL_NV"/>
-        <enum value="0x8539" name="GL_EXPAND_NEGATE_NV"/>
-        <enum value="0x853A" name="GL_HALF_BIAS_NORMAL_NV"/>
-        <enum value="0x853B" name="GL_HALF_BIAS_NEGATE_NV"/>
-        <enum value="0x853C" name="GL_SIGNED_IDENTITY_NV"/>
-        <enum value="0x853D" name="GL_SIGNED_NEGATE_NV"/>
-        <enum value="0x853E" name="GL_SCALE_BY_TWO_NV"/>
-        <enum value="0x853F" name="GL_SCALE_BY_FOUR_NV"/>
-        <enum value="0x8540" name="GL_SCALE_BY_ONE_HALF_NV"/>
-        <enum value="0x8541" name="GL_BIAS_BY_NEGATIVE_ONE_HALF_NV"/>
-        <enum value="0x8542" name="GL_COMBINER_INPUT_NV"/>
-        <enum value="0x8543" name="GL_COMBINER_MAPPING_NV"/>
-        <enum value="0x8544" name="GL_COMBINER_COMPONENT_USAGE_NV"/>
+        <enum value="0x8536" name="GL_UNSIGNED_IDENTITY_NV" group="CombinerMappingNV"/>
+        <enum value="0x8537" name="GL_UNSIGNED_INVERT_NV" group="CombinerMappingNV"/>
+        <enum value="0x8538" name="GL_EXPAND_NORMAL_NV" group="CombinerMappingNV"/>
+        <enum value="0x8539" name="GL_EXPAND_NEGATE_NV" group="CombinerMappingNV"/>
+        <enum value="0x853A" name="GL_HALF_BIAS_NORMAL_NV" group="CombinerMappingNV"/>
+        <enum value="0x853B" name="GL_HALF_BIAS_NEGATE_NV" group="CombinerMappingNV"/>
+        <enum value="0x853C" name="GL_SIGNED_IDENTITY_NV" group="CombinerMappingNV"/>
+        <enum value="0x853D" name="GL_SIGNED_NEGATE_NV" group="CombinerMappingNV"/>
+        <enum value="0x853E" name="GL_SCALE_BY_TWO_NV" group="CombinerScaleNV"/>
+        <enum value="0x853F" name="GL_SCALE_BY_FOUR_NV" group="CombinerScaleNV"/>
+        <enum value="0x8540" name="GL_SCALE_BY_ONE_HALF_NV" group="CombinerScaleNV"/>
+        <enum value="0x8541" name="GL_BIAS_BY_NEGATIVE_ONE_HALF_NV" group="CombinerBiasNV"/>
+        <enum value="0x8542" name="GL_COMBINER_INPUT_NV" group="CombinerParameterNV"/>
+        <enum value="0x8543" name="GL_COMBINER_MAPPING_NV" group="CombinerParameterNV"/>
+        <enum value="0x8544" name="GL_COMBINER_COMPONENT_USAGE_NV" group="CombinerParameterNV"/>
         <enum value="0x8545" name="GL_COMBINER_AB_DOT_PRODUCT_NV"/>
         <enum value="0x8546" name="GL_COMBINER_CD_DOT_PRODUCT_NV"/>
         <enum value="0x8547" name="GL_COMBINER_MUX_SUM_NV"/>
@@ -7397,14 +2929,14 @@ typedef unsigned int GLhandleARB;
         <enum value="0x854D" name="GL_MAX_GENERAL_COMBINERS_NV"/>
         <enum value="0x854E" name="GL_NUM_GENERAL_COMBINERS_NV"/>
         <enum value="0x854F" name="GL_COLOR_SUM_CLAMP_NV"/>
-        <enum value="0x8550" name="GL_COMBINER0_NV"/>
-        <enum value="0x8551" name="GL_COMBINER1_NV"/>
-        <enum value="0x8552" name="GL_COMBINER2_NV"/>
-        <enum value="0x8553" name="GL_COMBINER3_NV"/>
-        <enum value="0x8554" name="GL_COMBINER4_NV"/>
-        <enum value="0x8555" name="GL_COMBINER5_NV"/>
-        <enum value="0x8556" name="GL_COMBINER6_NV"/>
-        <enum value="0x8557" name="GL_COMBINER7_NV"/>
+        <enum value="0x8550" name="GL_COMBINER0_NV" group="CombinerStageNV"/>
+        <enum value="0x8551" name="GL_COMBINER1_NV" group="CombinerStageNV"/>
+        <enum value="0x8552" name="GL_COMBINER2_NV" group="CombinerStageNV"/>
+        <enum value="0x8553" name="GL_COMBINER3_NV" group="CombinerStageNV"/>
+        <enum value="0x8554" name="GL_COMBINER4_NV" group="CombinerStageNV"/>
+        <enum value="0x8555" name="GL_COMBINER5_NV" group="CombinerStageNV"/>
+        <enum value="0x8556" name="GL_COMBINER6_NV" group="CombinerStageNV"/>
+        <enum value="0x8557" name="GL_COMBINER7_NV" group="CombinerStageNV"/>
         <enum value="0x8558" name="GL_PRIMITIVE_RESTART_NV"/>
         <enum value="0x8559" name="GL_PRIMITIVE_RESTART_INDEX_NV"/>
         <enum value="0x855A" name="GL_FOG_DISTANCE_MODE_NV"/>
@@ -7428,95 +2960,95 @@ typedef unsigned int GLhandleARB;
             <unused start="0x8569" end="0x856F" vendor="ZiiLabs"/>
     </enums>
 
-    <enums namespace="GL" start="0x8570" end="0x859F" group="RegisterCombinerPname" vendor="AMD/NV">
-        <enum value="0x8570" name="GL_COMBINE"/>
-        <enum value="0x8570" name="GL_COMBINE_ARB"/>
-        <enum value="0x8570" name="GL_COMBINE_EXT"/>
-        <enum value="0x8571" name="GL_COMBINE_RGB"/>
-        <enum value="0x8571" name="GL_COMBINE_RGB_ARB"/>
-        <enum value="0x8571" name="GL_COMBINE_RGB_EXT"/>
-        <enum value="0x8572" name="GL_COMBINE_ALPHA"/>
-        <enum value="0x8572" name="GL_COMBINE_ALPHA_ARB"/>
-        <enum value="0x8572" name="GL_COMBINE_ALPHA_EXT"/>
-        <enum value="0x8573" name="GL_RGB_SCALE"/>
-        <enum value="0x8573" name="GL_RGB_SCALE_ARB"/>
-        <enum value="0x8573" name="GL_RGB_SCALE_EXT"/>
-        <enum value="0x8574" name="GL_ADD_SIGNED"/>
-        <enum value="0x8574" name="GL_ADD_SIGNED_ARB"/>
-        <enum value="0x8574" name="GL_ADD_SIGNED_EXT"/>
-        <enum value="0x8575" name="GL_INTERPOLATE"/>
-        <enum value="0x8575" name="GL_INTERPOLATE_ARB"/>
-        <enum value="0x8575" name="GL_INTERPOLATE_EXT"/>
-        <enum value="0x8576" name="GL_CONSTANT"/>
-        <enum value="0x8576" name="GL_CONSTANT_ARB"/>
-        <enum value="0x8576" name="GL_CONSTANT_EXT"/>
-        <enum value="0x8576" name="GL_CONSTANT_NV"/>
-        <enum value="0x8577" name="GL_PRIMARY_COLOR"/>
-        <enum value="0x8577" name="GL_PRIMARY_COLOR_ARB"/>
-        <enum value="0x8577" name="GL_PRIMARY_COLOR_EXT"/>
-        <enum value="0x8578" name="GL_PREVIOUS"/>
-        <enum value="0x8578" name="GL_PREVIOUS_ARB"/>
-        <enum value="0x8578" name="GL_PREVIOUS_EXT"/>
+    <enums namespace="GL" start="0x8570" end="0x859F" group="TextureEnvParameter" vendor="AMD/NV">
+        <enum value="0x8570" name="GL_COMBINE" group="TextureEnvParameter,TextureEnvMode"/>
+        <enum value="0x8570" name="GL_COMBINE_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8570" name="GL_COMBINE_EXT" group="TextureEnvParameter"/>
+        <enum value="0x8571" name="GL_COMBINE_RGB" group="TextureEnvParameter"/>
+        <enum value="0x8571" name="GL_COMBINE_RGB_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8571" name="GL_COMBINE_RGB_EXT" group="TextureEnvParameter"/>
+        <enum value="0x8572" name="GL_COMBINE_ALPHA" group="TextureEnvParameter"/>
+        <enum value="0x8572" name="GL_COMBINE_ALPHA_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8572" name="GL_COMBINE_ALPHA_EXT" group="TextureEnvParameter"/>
+        <enum value="0x8573" name="GL_RGB_SCALE" group="TextureEnvParameter"/>
+        <enum value="0x8573" name="GL_RGB_SCALE_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8573" name="GL_RGB_SCALE_EXT" group="TextureEnvParameter"/>
+        <enum value="0x8574" name="GL_ADD_SIGNED" group="TextureEnvParameter"/>
+        <enum value="0x8574" name="GL_ADD_SIGNED_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8574" name="GL_ADD_SIGNED_EXT" group="TextureEnvParameter"/>
+        <enum value="0x8575" name="GL_INTERPOLATE" group="TextureEnvParameter"/>
+        <enum value="0x8575" name="GL_INTERPOLATE_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8575" name="GL_INTERPOLATE_EXT" group="TextureEnvParameter"/>
+        <enum value="0x8576" name="GL_CONSTANT" group="TextureEnvParameter,PathGenMode"/>
+        <enum value="0x8576" name="GL_CONSTANT_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8576" name="GL_CONSTANT_EXT" group="TextureEnvParameter"/>
+        <enum value="0x8576" name="GL_CONSTANT_NV" group="TextureEnvParameter"/>
+        <enum value="0x8577" name="GL_PRIMARY_COLOR" group="TextureEnvParameter,PathColor,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8577" name="GL_PRIMARY_COLOR_ARB" group="TextureEnvParameter,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8577" name="GL_PRIMARY_COLOR_EXT" group="TextureEnvParameter,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8578" name="GL_PREVIOUS" group="TextureEnvParameter"/>
+        <enum value="0x8578" name="GL_PREVIOUS_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8578" name="GL_PREVIOUS_EXT" group="TextureEnvParameter"/>
             <unused start="0x8579" end="0x857F" comment="Additional combiner enums only"/>
-        <enum value="0x8580" name="GL_SOURCE0_RGB"/>
-        <enum value="0x8580" name="GL_SOURCE0_RGB_ARB"/>
-        <enum value="0x8580" name="GL_SOURCE0_RGB_EXT"/>
-        <enum value="0x8580" name="GL_SRC0_RGB" alias="GL_SOURCE0_RGB"/>
-        <enum value="0x8581" name="GL_SOURCE1_RGB"/>
-        <enum value="0x8581" name="GL_SOURCE1_RGB_ARB"/>
-        <enum value="0x8581" name="GL_SOURCE1_RGB_EXT"/>
-        <enum value="0x8581" name="GL_SRC1_RGB" alias="GL_SOURCE1_RGB"/>
-        <enum value="0x8582" name="GL_SOURCE2_RGB"/>
-        <enum value="0x8582" name="GL_SOURCE2_RGB_ARB"/>
-        <enum value="0x8582" name="GL_SOURCE2_RGB_EXT"/>
-        <enum value="0x8582" name="GL_SRC2_RGB" alias="GL_SOURCE2_RGB"/>
-        <enum value="0x8583" name="GL_SOURCE3_RGB_NV"/>
+        <enum value="0x8580" name="GL_SOURCE0_RGB" group="TextureEnvParameter"/>
+        <enum value="0x8580" name="GL_SOURCE0_RGB_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8580" name="GL_SOURCE0_RGB_EXT" group="TextureEnvParameter"/>
+        <enum value="0x8580" name="GL_SRC0_RGB" alias="GL_SOURCE0_RGB" group="TextureEnvParameter"/>
+        <enum value="0x8581" name="GL_SOURCE1_RGB" group="TextureEnvParameter"/>
+        <enum value="0x8581" name="GL_SOURCE1_RGB_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8581" name="GL_SOURCE1_RGB_EXT" group="TextureEnvParameter"/>
+        <enum value="0x8581" name="GL_SRC1_RGB" alias="GL_SOURCE1_RGB" group="TextureEnvParameter"/>
+        <enum value="0x8582" name="GL_SOURCE2_RGB" group="TextureEnvParameter"/>
+        <enum value="0x8582" name="GL_SOURCE2_RGB_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8582" name="GL_SOURCE2_RGB_EXT" group="TextureEnvParameter"/>
+        <enum value="0x8582" name="GL_SRC2_RGB" alias="GL_SOURCE2_RGB" group="TextureEnvParameter"/>
+        <enum value="0x8583" name="GL_SOURCE3_RGB_NV" group="TextureEnvParameter"/>
             <unused start="0x8584" end="0x8587" comment="Additional combiner enums only"/>
-        <enum value="0x8588" name="GL_SOURCE0_ALPHA"/>
-        <enum value="0x8588" name="GL_SOURCE0_ALPHA_ARB"/>
-        <enum value="0x8588" name="GL_SOURCE0_ALPHA_EXT"/>
-        <enum value="0x8588" name="GL_SRC0_ALPHA" alias="GL_SOURCE0_ALPHA"/>
-        <enum value="0x8589" name="GL_SOURCE1_ALPHA"/>
-        <enum value="0x8589" name="GL_SOURCE1_ALPHA_ARB"/>
-        <enum value="0x8589" name="GL_SOURCE1_ALPHA_EXT"/>
-        <enum value="0x8589" name="GL_SRC1_ALPHA" alias="GL_SOURCE1_ALPHA"/>
-        <enum value="0x8589" name="GL_SRC1_ALPHA_EXT"/>
-        <enum value="0x858A" name="GL_SOURCE2_ALPHA"/>
-        <enum value="0x858A" name="GL_SOURCE2_ALPHA_ARB"/>
-        <enum value="0x858A" name="GL_SOURCE2_ALPHA_EXT"/>
-        <enum value="0x858A" name="GL_SRC2_ALPHA" alias="GL_SOURCE2_ALPHA"/>
-        <enum value="0x858B" name="GL_SOURCE3_ALPHA_NV"/>
+        <enum value="0x8588" name="GL_SOURCE0_ALPHA" group="TextureEnvParameter"/>
+        <enum value="0x8588" name="GL_SOURCE0_ALPHA_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8588" name="GL_SOURCE0_ALPHA_EXT" group="TextureEnvParameter"/>
+        <enum value="0x8588" name="GL_SRC0_ALPHA" alias="GL_SOURCE0_ALPHA" group="TextureEnvParameter"/>
+        <enum value="0x8589" name="GL_SOURCE1_ALPHA" group="TextureEnvParameter"/>
+        <enum value="0x8589" name="GL_SOURCE1_ALPHA_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8589" name="GL_SOURCE1_ALPHA_EXT" group="TextureEnvParameter"/>
+        <enum value="0x8589" name="GL_SRC1_ALPHA" alias="GL_SOURCE1_ALPHA" group="TextureEnvParameter,BlendingFactor"/>
+        <enum value="0x8589" name="GL_SRC1_ALPHA_EXT" group="TextureEnvParameter"/>
+        <enum value="0x858A" name="GL_SOURCE2_ALPHA" group="TextureEnvParameter"/>
+        <enum value="0x858A" name="GL_SOURCE2_ALPHA_ARB" group="TextureEnvParameter"/>
+        <enum value="0x858A" name="GL_SOURCE2_ALPHA_EXT" group="TextureEnvParameter"/>
+        <enum value="0x858A" name="GL_SRC2_ALPHA" alias="GL_SOURCE2_ALPHA" group="TextureEnvParameter"/>
+        <enum value="0x858B" name="GL_SOURCE3_ALPHA_NV" group="TextureEnvParameter"/>
             <unused start="0x858C" end="0x858F" comment="Additional combiner enums only"/>
-        <enum value="0x8590" name="GL_OPERAND0_RGB"/>
-        <enum value="0x8590" name="GL_OPERAND0_RGB_ARB"/>
-        <enum value="0x8590" name="GL_OPERAND0_RGB_EXT"/>
-        <enum value="0x8591" name="GL_OPERAND1_RGB"/>
-        <enum value="0x8591" name="GL_OPERAND1_RGB_ARB"/>
-        <enum value="0x8591" name="GL_OPERAND1_RGB_EXT"/>
-        <enum value="0x8592" name="GL_OPERAND2_RGB"/>
-        <enum value="0x8592" name="GL_OPERAND2_RGB_ARB"/>
-        <enum value="0x8592" name="GL_OPERAND2_RGB_EXT"/>
-        <enum value="0x8593" name="GL_OPERAND3_RGB_NV"/>
+        <enum value="0x8590" name="GL_OPERAND0_RGB" group="TextureEnvParameter"/>
+        <enum value="0x8590" name="GL_OPERAND0_RGB_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8590" name="GL_OPERAND0_RGB_EXT" group="TextureEnvParameter"/>
+        <enum value="0x8591" name="GL_OPERAND1_RGB" group="TextureEnvParameter"/>
+        <enum value="0x8591" name="GL_OPERAND1_RGB_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8591" name="GL_OPERAND1_RGB_EXT" group="TextureEnvParameter"/>
+        <enum value="0x8592" name="GL_OPERAND2_RGB" group="TextureEnvParameter"/>
+        <enum value="0x8592" name="GL_OPERAND2_RGB_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8592" name="GL_OPERAND2_RGB_EXT" group="TextureEnvParameter"/>
+        <enum value="0x8593" name="GL_OPERAND3_RGB_NV" group="TextureEnvParameter"/>
             <unused start="0x8594" end="0x8597" comment="Additional combiner enums only"/>
-        <enum value="0x8598" name="GL_OPERAND0_ALPHA"/>
-        <enum value="0x8598" name="GL_OPERAND0_ALPHA_ARB"/>
-        <enum value="0x8598" name="GL_OPERAND0_ALPHA_EXT"/>
-        <enum value="0x8599" name="GL_OPERAND1_ALPHA"/>
-        <enum value="0x8599" name="GL_OPERAND1_ALPHA_ARB"/>
-        <enum value="0x8599" name="GL_OPERAND1_ALPHA_EXT"/>
-        <enum value="0x859A" name="GL_OPERAND2_ALPHA"/>
-        <enum value="0x859A" name="GL_OPERAND2_ALPHA_ARB"/>
-        <enum value="0x859A" name="GL_OPERAND2_ALPHA_EXT"/>
-        <enum value="0x859B" name="GL_OPERAND3_ALPHA_NV"/>
+        <enum value="0x8598" name="GL_OPERAND0_ALPHA" group="TextureEnvParameter"/>
+        <enum value="0x8598" name="GL_OPERAND0_ALPHA_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8598" name="GL_OPERAND0_ALPHA_EXT" group="TextureEnvParameter"/>
+        <enum value="0x8599" name="GL_OPERAND1_ALPHA" group="TextureEnvParameter"/>
+        <enum value="0x8599" name="GL_OPERAND1_ALPHA_ARB" group="TextureEnvParameter"/>
+        <enum value="0x8599" name="GL_OPERAND1_ALPHA_EXT" group="TextureEnvParameter"/>
+        <enum value="0x859A" name="GL_OPERAND2_ALPHA" group="TextureEnvParameter"/>
+        <enum value="0x859A" name="GL_OPERAND2_ALPHA_ARB" group="TextureEnvParameter"/>
+        <enum value="0x859A" name="GL_OPERAND2_ALPHA_EXT" group="TextureEnvParameter"/>
+        <enum value="0x859B" name="GL_OPERAND3_ALPHA_NV" group="TextureEnvParameter"/>
             <unused start="0x859C" end="0x859F" comment="Additional combiner enums only"/>
     </enums>
 
     <enums namespace="GL" start="0x85A0" end="0x85AF" vendor="SGI">
-        <enum value="0x85A0" name="GL_PACK_SUBSAMPLE_RATE_SGIX"/>
-        <enum value="0x85A1" name="GL_UNPACK_SUBSAMPLE_RATE_SGIX"/>
-        <enum value="0x85A2" name="GL_PIXEL_SUBSAMPLE_4444_SGIX"/>
-        <enum value="0x85A3" name="GL_PIXEL_SUBSAMPLE_2424_SGIX"/>
-        <enum value="0x85A4" name="GL_PIXEL_SUBSAMPLE_4242_SGIX"/>
+        <enum value="0x85A0" name="GL_PACK_SUBSAMPLE_RATE_SGIX" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x85A1" name="GL_UNPACK_SUBSAMPLE_RATE_SGIX" group="PixelStoreParameter,GetPName"/>
+        <enum value="0x85A2" name="GL_PIXEL_SUBSAMPLE_4444_SGIX" group="PixelStoreSubsampleRate"/>
+        <enum value="0x85A3" name="GL_PIXEL_SUBSAMPLE_2424_SGIX" group="PixelStoreSubsampleRate"/>
+        <enum value="0x85A4" name="GL_PIXEL_SUBSAMPLE_4242_SGIX" group="PixelStoreSubsampleRate"/>
             <unused start="0x85A5" end="0x85AD" comment="Incomplete extension SGIS_color_range"/>
             <!-- <enum value="0x85A5" name="GL_EXTENDED_RANGE_SGIS"/> -->
             <!-- <enum value="0x85A6" name="GL_MIN_RED_SGIS"/> -->
@@ -7527,17 +3059,17 @@ typedef unsigned int GLhandleARB;
             <!-- <enum value="0x85AB" name="GL_MAX_BLUE_SGIS"/> -->
             <!-- <enum value="0x85AC" name="GL_MIN_ALPHA_SGIS"/> -->
             <!-- <enum value="0x85AD" name="GL_MAX_ALPHA_SGIS"/> -->
-        <enum value="0x85AE" name="GL_PERTURB_EXT"/>
+        <enum value="0x85AE" name="GL_PERTURB_EXT" group="TextureNormalModeEXT"/>
         <enum value="0x85AF" name="GL_TEXTURE_NORMAL_EXT"/>
     </enums>
 
     <enums namespace="GL" start="0x85B0" end="0x85BF" vendor="APPLE">
         <enum value="0x85B0" name="GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE"/>
-        <enum value="0x85B1" name="GL_TRANSFORM_HINT_APPLE"/>
+        <enum value="0x85B1" name="GL_TRANSFORM_HINT_APPLE" group="HintTarget"/>
         <enum value="0x85B2" name="GL_UNPACK_CLIENT_STORAGE_APPLE"/>
         <enum value="0x85B3" name="GL_BUFFER_OBJECT_APPLE"/>
-        <enum value="0x85B4" name="GL_STORAGE_CLIENT_APPLE"/>
-        <enum value="0x85B5" name="GL_VERTEX_ARRAY_BINDING"/>
+        <enum value="0x85B4" name="GL_STORAGE_CLIENT_APPLE" group="VertexArrayPNameAPPLE"/>
+        <enum value="0x85B5" name="GL_VERTEX_ARRAY_BINDING" group="GetPName"/>
         <enum value="0x85B5" name="GL_VERTEX_ARRAY_BINDING_APPLE"/>
         <enum value="0x85B5" name="GL_VERTEX_ARRAY_BINDING_OES"/>
             <unused start="0x85B6" vendor="APPLE" comment="Unknown extension (Khronos bug 632)"/>
@@ -7549,10 +3081,10 @@ typedef unsigned int GLhandleARB;
         <enum value="0x85BA" name="GL_UNSIGNED_SHORT_8_8_MESA"/>
         <enum value="0x85BB" name="GL_UNSIGNED_SHORT_8_8_REV_APPLE"/>
         <enum value="0x85BB" name="GL_UNSIGNED_SHORT_8_8_REV_MESA"/>
-        <enum value="0x85BC" name="GL_TEXTURE_STORAGE_HINT_APPLE"/>
+        <enum value="0x85BC" name="GL_TEXTURE_STORAGE_HINT_APPLE" group="HintTarget"/>
         <enum value="0x85BD" name="GL_STORAGE_PRIVATE_APPLE"/>
-        <enum value="0x85BE" name="GL_STORAGE_CACHED_APPLE"/>
-        <enum value="0x85BF" name="GL_STORAGE_SHARED_APPLE"/>
+        <enum value="0x85BE" name="GL_STORAGE_CACHED_APPLE" group="VertexArrayPNameAPPLE"/>
+        <enum value="0x85BF" name="GL_STORAGE_SHARED_APPLE" group="VertexArrayPNameAPPLE"/>
     </enums>
 
     <enums namespace="GL" start="0x85C0" end="0x85CF" vendor="SUN">
@@ -7620,26 +3152,26 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x8620" end="0x867F" vendor="NV">
-        <enum value="0x8620" name="GL_VERTEX_PROGRAM_ARB"/>
+        <enum value="0x8620" name="GL_VERTEX_PROGRAM_ARB" group="ProgramTarget"/>
         <enum value="0x8620" name="GL_VERTEX_PROGRAM_NV"/>
         <enum value="0x8621" name="GL_VERTEX_STATE_PROGRAM_NV"/>
-        <enum value="0x8622" name="GL_VERTEX_ATTRIB_ARRAY_ENABLED"/>
+        <enum value="0x8622" name="GL_VERTEX_ATTRIB_ARRAY_ENABLED" group="VertexAttribEnum,VertexAttribPropertyARB,VertexArrayPName"/>
         <enum value="0x8622" name="GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB"/>
         <enum value="0x8623" name="GL_ATTRIB_ARRAY_SIZE_NV"/>
-        <enum value="0x8623" name="GL_VERTEX_ATTRIB_ARRAY_SIZE"/>
+        <enum value="0x8623" name="GL_VERTEX_ATTRIB_ARRAY_SIZE" group="VertexAttribEnum,VertexAttribPropertyARB,VertexArrayPName"/>
         <enum value="0x8623" name="GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB"/>
         <enum value="0x8624" name="GL_ATTRIB_ARRAY_STRIDE_NV"/>
-        <enum value="0x8624" name="GL_VERTEX_ATTRIB_ARRAY_STRIDE"/>
+        <enum value="0x8624" name="GL_VERTEX_ATTRIB_ARRAY_STRIDE" group="VertexAttribEnum,VertexAttribPropertyARB,VertexArrayPName"/>
         <enum value="0x8624" name="GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB"/>
         <enum value="0x8625" name="GL_ATTRIB_ARRAY_TYPE_NV"/>
-        <enum value="0x8625" name="GL_VERTEX_ATTRIB_ARRAY_TYPE"/>
+        <enum value="0x8625" name="GL_VERTEX_ATTRIB_ARRAY_TYPE" group="VertexAttribEnum,VertexAttribPropertyARB,VertexArrayPName"/>
         <enum value="0x8625" name="GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB"/>
         <enum value="0x8626" name="GL_CURRENT_ATTRIB_NV"/>
-        <enum value="0x8626" name="GL_CURRENT_VERTEX_ATTRIB"/>
+        <enum value="0x8626" name="GL_CURRENT_VERTEX_ATTRIB" group="VertexAttribEnum,VertexAttribPropertyARB"/>
         <enum value="0x8626" name="GL_CURRENT_VERTEX_ATTRIB_ARB"/>
         <enum value="0x8627" name="GL_PROGRAM_LENGTH_ARB"/>
         <enum value="0x8627" name="GL_PROGRAM_LENGTH_NV"/>
-        <enum value="0x8628" name="GL_PROGRAM_STRING_ARB"/>
+        <enum value="0x8628" name="GL_PROGRAM_STRING_ARB" group="ProgramStringProperty"/>
         <enum value="0x8628" name="GL_PROGRAM_STRING_NV"/>
         <enum value="0x8629" name="GL_MODELVIEW_PROJECTION_NV"/>
         <enum value="0x862A" name="GL_IDENTITY_NV"/>
@@ -7674,16 +3206,16 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8642" name="GL_VERTEX_PROGRAM_POINT_SIZE"/>
         <enum value="0x8642" name="GL_VERTEX_PROGRAM_POINT_SIZE_ARB"/>
         <enum value="0x8642" name="GL_VERTEX_PROGRAM_POINT_SIZE_NV"/>
-        <enum value="0x8642" name="GL_PROGRAM_POINT_SIZE" alias="GL_VERTEX_PROGRAM_POINT_SIZE"/>
+        <enum value="0x8642" name="GL_PROGRAM_POINT_SIZE" alias="GL_VERTEX_PROGRAM_POINT_SIZE" group="GetPName,EnableCap"/>
         <enum value="0x8642" name="GL_PROGRAM_POINT_SIZE_ARB"/>
         <enum value="0x8642" name="GL_PROGRAM_POINT_SIZE_EXT"/>
         <enum value="0x8643" name="GL_VERTEX_PROGRAM_TWO_SIDE"/>
         <enum value="0x8643" name="GL_VERTEX_PROGRAM_TWO_SIDE_ARB"/>
         <enum value="0x8643" name="GL_VERTEX_PROGRAM_TWO_SIDE_NV"/>
-        <enum value="0x8644" name="GL_PROGRAM_PARAMETER_NV"/>
+        <enum value="0x8644" name="GL_PROGRAM_PARAMETER_NV" group="VertexAttribEnumNV"/>
         <enum value="0x8645" name="GL_ATTRIB_ARRAY_POINTER_NV"/>
-        <enum value="0x8645" name="GL_VERTEX_ATTRIB_ARRAY_POINTER"/>
-        <enum value="0x8645" name="GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB"/>
+        <enum value="0x8645" name="GL_VERTEX_ATTRIB_ARRAY_POINTER" group="VertexAttribPointerPropertyARB"/>
+        <enum value="0x8645" name="GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB" group="VertexAttribPointerPropertyARB"/>
         <enum value="0x8646" name="GL_PROGRAM_TARGET_NV"/>
         <enum value="0x8647" name="GL_PROGRAM_RESIDENT_NV"/>
         <enum value="0x8648" name="GL_TRACK_MATRIX_NV"/>
@@ -7694,7 +3226,7 @@ typedef unsigned int GLhandleARB;
         <enum value="0x864C" name="GL_OFFSET_TEXTURE_RECTANGLE_NV"/>
         <enum value="0x864D" name="GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV"/>
         <enum value="0x864E" name="GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV"/>
-        <enum value="0x864F" name="GL_DEPTH_CLAMP"/>
+        <enum value="0x864F" name="GL_DEPTH_CLAMP" group="EnableCap"/>
         <enum value="0x864F" name="GL_DEPTH_CLAMP_NV"/>
         <enum value="0x864F" name="GL_DEPTH_CLAMP_EXT"/>
         <enum value="0x8650" name="GL_VERTEX_ATTRIB_ARRAY0_NV"/>
@@ -7755,11 +3287,11 @@ typedef unsigned int GLhandleARB;
     <enums namespace="GL" start="0x86A0" end="0x86AF" vendor="ARB">
         <enum value="0x86A0" name="GL_TEXTURE_COMPRESSED_IMAGE_SIZE"/>
         <enum value="0x86A0" name="GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB"/>
-        <enum value="0x86A1" name="GL_TEXTURE_COMPRESSED"/>
+        <enum value="0x86A1" name="GL_TEXTURE_COMPRESSED" group="InternalFormatPName"/>
         <enum value="0x86A1" name="GL_TEXTURE_COMPRESSED_ARB"/>
-        <enum value="0x86A2" name="GL_NUM_COMPRESSED_TEXTURE_FORMATS"/>
+        <enum value="0x86A2" name="GL_NUM_COMPRESSED_TEXTURE_FORMATS" group="GetPName"/>
         <enum value="0x86A2" name="GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB"/>
-        <enum value="0x86A3" name="GL_COMPRESSED_TEXTURE_FORMATS"/>
+        <enum value="0x86A3" name="GL_COMPRESSED_TEXTURE_FORMATS" group="GetPName"/>
         <enum value="0x86A3" name="GL_COMPRESSED_TEXTURE_FORMATS_ARB"/>
         <enum value="0x86A4" name="GL_MAX_VERTEX_UNITS_ARB"/>
         <enum value="0x86A4" name="GL_MAX_VERTEX_UNITS_OES"/>
@@ -7794,11 +3326,11 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x86C0" end="0x871F" vendor="NV">
-        <enum value="0x86C0" name="GL_EVAL_2D_NV"/>
-        <enum value="0x86C1" name="GL_EVAL_TRIANGULAR_2D_NV"/>
-        <enum value="0x86C2" name="GL_MAP_TESSELLATION_NV"/>
-        <enum value="0x86C3" name="GL_MAP_ATTRIB_U_ORDER_NV"/>
-        <enum value="0x86C4" name="GL_MAP_ATTRIB_V_ORDER_NV"/>
+        <enum value="0x86C0" name="GL_EVAL_2D_NV" group="EvalTargetNV"/>
+        <enum value="0x86C1" name="GL_EVAL_TRIANGULAR_2D_NV" group="EvalTargetNV"/>
+        <enum value="0x86C2" name="GL_MAP_TESSELLATION_NV" group="MapParameterNV"/>
+        <enum value="0x86C3" name="GL_MAP_ATTRIB_U_ORDER_NV" group="MapAttribParameterNV"/>
+        <enum value="0x86C4" name="GL_MAP_ATTRIB_V_ORDER_NV" group="MapAttribParameterNV"/>
         <enum value="0x86C5" name="GL_EVAL_FRACTIONAL_TESSELLATION_NV"/>
         <enum value="0x86C6" name="GL_EVAL_VERTEX_ATTRIB0_NV"/>
         <enum value="0x86C7" name="GL_EVAL_VERTEX_ATTRIB1_NV"/>
@@ -7934,7 +3466,7 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8740" name="GL_Z400_BINARY_AMD" comment="NOT an alias. Accidental reuse of GL_DOT3_RGB_EXT"/>
         <enum value="0x8741" name="GL_DOT3_RGBA_EXT"/>
         <enum value="0x8741" name="GL_PROGRAM_BINARY_LENGTH_OES" comment="NOT an alias. Accidental reuse of GL_DOT3_RGBA_EXT"/>
-        <enum value="0x8741" name="GL_PROGRAM_BINARY_LENGTH"/>
+        <enum value="0x8741" name="GL_PROGRAM_BINARY_LENGTH" group="ProgramPropertyARB"/>
         <enum value="0x8742" name="GL_MIRROR_CLAMP_ATI"/>
         <enum value="0x8742" name="GL_MIRROR_CLAMP_EXT"/>
         <enum value="0x8743" name="GL_MIRROR_CLAMP_TO_EDGE"/>
@@ -7948,12 +3480,12 @@ typedef unsigned int GLhandleARB;
         <enum value="0x874B" name="GL_REPLACE_VALUE_AMD"/>
         <enum value="0x874C" name="GL_STENCIL_OP_VALUE_AMD"/>
         <enum value="0x874D" name="GL_STENCIL_BACK_OP_VALUE_AMD"/>
-        <enum value="0x874E" name="GL_VERTEX_ATTRIB_ARRAY_LONG"/>
+        <enum value="0x874E" name="GL_VERTEX_ATTRIB_ARRAY_LONG" group="VertexArrayPName,VertexAttribPropertyARB"/>
         <enum value="0x874F" name="GL_OCCLUSION_QUERY_EVENT_MASK_AMD"/>
     </enums>
 
     <enums namespace="GL" start="0x8750" end="0x875F" vendor="MESA">
-        <enum value="0x8750" name="GL_DEPTH_STENCIL_MESA"/>
+        <enum value="0x8750" name="GL_DEPTH_STENCIL_MESA" group="InternalFormat"/>
         <enum value="0x8751" name="GL_UNSIGNED_INT_24_8_MESA"/>
         <enum value="0x8752" name="GL_UNSIGNED_INT_8_24_REV_MESA"/>
         <enum value="0x8753" name="GL_UNSIGNED_SHORT_15_1_MESA"/>
@@ -7975,35 +3507,35 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x8760" end="0x883F" vendor="AMD">
-        <enum value="0x8760" name="GL_STATIC_ATI"/>
-        <enum value="0x8761" name="GL_DYNAMIC_ATI"/>
-        <enum value="0x8762" name="GL_PRESERVE_ATI"/>
-        <enum value="0x8763" name="GL_DISCARD_ATI"/>
-        <enum value="0x8764" name="GL_BUFFER_SIZE"/>
-        <enum value="0x8764" name="GL_BUFFER_SIZE_ARB"/>
-        <enum value="0x8764" name="GL_OBJECT_BUFFER_SIZE_ATI"/>
-        <enum value="0x8765" name="GL_BUFFER_USAGE"/>
-        <enum value="0x8765" name="GL_BUFFER_USAGE_ARB"/>
-        <enum value="0x8765" name="GL_OBJECT_BUFFER_USAGE_ATI"/>
+        <enum value="0x8760" name="GL_STATIC_ATI" group="ArrayObjectUsageATI"/>
+        <enum value="0x8761" name="GL_DYNAMIC_ATI" group="ArrayObjectUsageATI"/>
+        <enum value="0x8762" name="GL_PRESERVE_ATI" group="PreserveModeATI"/>
+        <enum value="0x8763" name="GL_DISCARD_ATI" group="PreserveModeATI"/>
+        <enum value="0x8764" name="GL_BUFFER_SIZE" group="BufferPNameARB"/>
+        <enum value="0x8764" name="GL_BUFFER_SIZE_ARB" group="BufferPNameARB"/>
+        <enum value="0x8764" name="GL_OBJECT_BUFFER_SIZE_ATI" group="ArrayObjectPNameATI"/>
+        <enum value="0x8765" name="GL_BUFFER_USAGE" group="BufferPNameARB"/>
+        <enum value="0x8765" name="GL_BUFFER_USAGE_ARB" group="BufferPNameARB"/>
+        <enum value="0x8765" name="GL_OBJECT_BUFFER_USAGE_ATI" group="ArrayObjectPNameATI"/>
         <enum value="0x8766" name="GL_ARRAY_OBJECT_BUFFER_ATI"/>
         <enum value="0x8767" name="GL_ARRAY_OBJECT_OFFSET_ATI"/>
         <enum value="0x8768" name="GL_ELEMENT_ARRAY_ATI"/>
         <enum value="0x8769" name="GL_ELEMENT_ARRAY_TYPE_ATI"/>
         <enum value="0x876A" name="GL_ELEMENT_ARRAY_POINTER_ATI"/>
         <enum value="0x876B" name="GL_MAX_VERTEX_STREAMS_ATI"/>
-        <enum value="0x876C" name="GL_VERTEX_STREAM0_ATI"/>
-        <enum value="0x876D" name="GL_VERTEX_STREAM1_ATI"/>
-        <enum value="0x876E" name="GL_VERTEX_STREAM2_ATI"/>
-        <enum value="0x876F" name="GL_VERTEX_STREAM3_ATI"/>
-        <enum value="0x8770" name="GL_VERTEX_STREAM4_ATI"/>
-        <enum value="0x8771" name="GL_VERTEX_STREAM5_ATI"/>
-        <enum value="0x8772" name="GL_VERTEX_STREAM6_ATI"/>
-        <enum value="0x8773" name="GL_VERTEX_STREAM7_ATI"/>
+        <enum value="0x876C" name="GL_VERTEX_STREAM0_ATI" group="VertexStreamATI"/>
+        <enum value="0x876D" name="GL_VERTEX_STREAM1_ATI" group="VertexStreamATI"/>
+        <enum value="0x876E" name="GL_VERTEX_STREAM2_ATI" group="VertexStreamATI"/>
+        <enum value="0x876F" name="GL_VERTEX_STREAM3_ATI" group="VertexStreamATI"/>
+        <enum value="0x8770" name="GL_VERTEX_STREAM4_ATI" group="VertexStreamATI"/>
+        <enum value="0x8771" name="GL_VERTEX_STREAM5_ATI" group="VertexStreamATI"/>
+        <enum value="0x8772" name="GL_VERTEX_STREAM6_ATI" group="VertexStreamATI"/>
+        <enum value="0x8773" name="GL_VERTEX_STREAM7_ATI" group="VertexStreamATI"/>
         <enum value="0x8774" name="GL_VERTEX_SOURCE_ATI"/>
-        <enum value="0x8775" name="GL_BUMP_ROT_MATRIX_ATI"/>
-        <enum value="0x8776" name="GL_BUMP_ROT_MATRIX_SIZE_ATI"/>
-        <enum value="0x8777" name="GL_BUMP_NUM_TEX_UNITS_ATI"/>
-        <enum value="0x8778" name="GL_BUMP_TEX_UNITS_ATI"/>
+        <enum value="0x8775" name="GL_BUMP_ROT_MATRIX_ATI" group="GetTexBumpParameterATI,TexBumpParameterATI"/>
+        <enum value="0x8776" name="GL_BUMP_ROT_MATRIX_SIZE_ATI" group="GetTexBumpParameterATI"/>
+        <enum value="0x8777" name="GL_BUMP_NUM_TEX_UNITS_ATI" group="GetTexBumpParameterATI"/>
+        <enum value="0x8778" name="GL_BUMP_TEX_UNITS_ATI" group="GetTexBumpParameterATI"/>
         <enum value="0x8779" name="GL_DUDV_ATI"/>
         <enum value="0x877A" name="GL_DU8DV8_ATI"/>
         <enum value="0x877B" name="GL_BUMP_ENVMAP_ATI"/>
@@ -8011,30 +3543,30 @@ typedef unsigned int GLhandleARB;
             <unused start="0x877D" end="0x877F" vendor="AMD"/>
         <enum value="0x8780" name="GL_VERTEX_SHADER_EXT"/>
         <enum value="0x8781" name="GL_VERTEX_SHADER_BINDING_EXT"/>
-        <enum value="0x8782" name="GL_OP_INDEX_EXT"/>
-        <enum value="0x8783" name="GL_OP_NEGATE_EXT"/>
-        <enum value="0x8784" name="GL_OP_DOT3_EXT"/>
-        <enum value="0x8785" name="GL_OP_DOT4_EXT"/>
-        <enum value="0x8786" name="GL_OP_MUL_EXT"/>
-        <enum value="0x8787" name="GL_OP_ADD_EXT"/>
-        <enum value="0x8788" name="GL_OP_MADD_EXT"/>
-        <enum value="0x8789" name="GL_OP_FRAC_EXT"/>
-        <enum value="0x878A" name="GL_OP_MAX_EXT"/>
-        <enum value="0x878B" name="GL_OP_MIN_EXT"/>
-        <enum value="0x878C" name="GL_OP_SET_GE_EXT"/>
-        <enum value="0x878D" name="GL_OP_SET_LT_EXT"/>
-        <enum value="0x878E" name="GL_OP_CLAMP_EXT"/>
-        <enum value="0x878F" name="GL_OP_FLOOR_EXT"/>
-        <enum value="0x8790" name="GL_OP_ROUND_EXT"/>
-        <enum value="0x8791" name="GL_OP_EXP_BASE_2_EXT"/>
-        <enum value="0x8792" name="GL_OP_LOG_BASE_2_EXT"/>
-        <enum value="0x8793" name="GL_OP_POWER_EXT"/>
-        <enum value="0x8794" name="GL_OP_RECIP_EXT"/>
-        <enum value="0x8795" name="GL_OP_RECIP_SQRT_EXT"/>
-        <enum value="0x8796" name="GL_OP_SUB_EXT"/>
-        <enum value="0x8797" name="GL_OP_CROSS_PRODUCT_EXT"/>
-        <enum value="0x8798" name="GL_OP_MULTIPLY_MATRIX_EXT"/>
-        <enum value="0x8799" name="GL_OP_MOV_EXT"/>
+        <enum value="0x8782" name="GL_OP_INDEX_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x8783" name="GL_OP_NEGATE_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x8784" name="GL_OP_DOT3_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x8785" name="GL_OP_DOT4_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x8786" name="GL_OP_MUL_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x8787" name="GL_OP_ADD_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x8788" name="GL_OP_MADD_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x8789" name="GL_OP_FRAC_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x878A" name="GL_OP_MAX_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x878B" name="GL_OP_MIN_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x878C" name="GL_OP_SET_GE_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x878D" name="GL_OP_SET_LT_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x878E" name="GL_OP_CLAMP_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x878F" name="GL_OP_FLOOR_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x8790" name="GL_OP_ROUND_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x8791" name="GL_OP_EXP_BASE_2_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x8792" name="GL_OP_LOG_BASE_2_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x8793" name="GL_OP_POWER_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x8794" name="GL_OP_RECIP_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x8795" name="GL_OP_RECIP_SQRT_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x8796" name="GL_OP_SUB_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x8797" name="GL_OP_CROSS_PRODUCT_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x8798" name="GL_OP_MULTIPLY_MATRIX_EXT" group="VertexShaderOpEXT"/>
+        <enum value="0x8799" name="GL_OP_MOV_EXT" group="VertexShaderOpEXT"/>
         <enum value="0x879A" name="GL_OUTPUT_VERTEX_EXT"/>
         <enum value="0x879B" name="GL_OUTPUT_COLOR0_EXT"/>
         <enum value="0x879C" name="GL_OUTPUT_COLOR1_EXT"/>
@@ -8071,13 +3603,13 @@ typedef unsigned int GLhandleARB;
         <enum value="0x87BB" name="GL_OUTPUT_TEXTURE_COORD30_EXT"/>
         <enum value="0x87BC" name="GL_OUTPUT_TEXTURE_COORD31_EXT"/>
         <enum value="0x87BD" name="GL_OUTPUT_FOG_EXT"/>
-        <enum value="0x87BE" name="GL_SCALAR_EXT"/>
-        <enum value="0x87BF" name="GL_VECTOR_EXT"/>
-        <enum value="0x87C0" name="GL_MATRIX_EXT"/>
-        <enum value="0x87C1" name="GL_VARIANT_EXT"/>
-        <enum value="0x87C2" name="GL_INVARIANT_EXT"/>
-        <enum value="0x87C3" name="GL_LOCAL_CONSTANT_EXT"/>
-        <enum value="0x87C4" name="GL_LOCAL_EXT"/>
+        <enum value="0x87BE" name="GL_SCALAR_EXT" group="DataTypeEXT"/>
+        <enum value="0x87BF" name="GL_VECTOR_EXT" group="DataTypeEXT"/>
+        <enum value="0x87C0" name="GL_MATRIX_EXT" group="DataTypeEXT"/>
+        <enum value="0x87C1" name="GL_VARIANT_EXT" group="VertexShaderStorageTypeEXT"/>
+        <enum value="0x87C2" name="GL_INVARIANT_EXT" group="VertexShaderStorageTypeEXT"/>
+        <enum value="0x87C3" name="GL_LOCAL_CONSTANT_EXT" group="VertexShaderStorageTypeEXT"/>
+        <enum value="0x87C4" name="GL_LOCAL_EXT" group="VertexShaderStorageTypeEXT"/>
         <enum value="0x87C5" name="GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT"/>
         <enum value="0x87C6" name="GL_MAX_VERTEX_SHADER_VARIANTS_EXT"/>
         <enum value="0x87C7" name="GL_MAX_VERTEX_SHADER_INVARIANTS_EXT"/>
@@ -8094,26 +3626,26 @@ typedef unsigned int GLhandleARB;
         <enum value="0x87D2" name="GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT"/>
         <enum value="0x87D3" name="GL_VERTEX_SHADER_LOCALS_EXT"/>
         <enum value="0x87D4" name="GL_VERTEX_SHADER_OPTIMIZED_EXT"/>
-        <enum value="0x87D5" name="GL_X_EXT"/>
-        <enum value="0x87D6" name="GL_Y_EXT"/>
-        <enum value="0x87D7" name="GL_Z_EXT"/>
-        <enum value="0x87D8" name="GL_W_EXT"/>
-        <enum value="0x87D9" name="GL_NEGATIVE_X_EXT"/>
-        <enum value="0x87DA" name="GL_NEGATIVE_Y_EXT"/>
-        <enum value="0x87DB" name="GL_NEGATIVE_Z_EXT"/>
-        <enum value="0x87DC" name="GL_NEGATIVE_W_EXT"/>
-        <enum value="0x87DD" name="GL_ZERO_EXT"/>
-        <enum value="0x87DE" name="GL_ONE_EXT"/>
-        <enum value="0x87DF" name="GL_NEGATIVE_ONE_EXT"/>
-        <enum value="0x87E0" name="GL_NORMALIZED_RANGE_EXT"/>
-        <enum value="0x87E1" name="GL_FULL_RANGE_EXT"/>
-        <enum value="0x87E2" name="GL_CURRENT_VERTEX_EXT"/>
-        <enum value="0x87E3" name="GL_MVP_MATRIX_EXT"/>
-        <enum value="0x87E4" name="GL_VARIANT_VALUE_EXT"/>
-        <enum value="0x87E5" name="GL_VARIANT_DATATYPE_EXT"/>
-        <enum value="0x87E6" name="GL_VARIANT_ARRAY_STRIDE_EXT"/>
-        <enum value="0x87E7" name="GL_VARIANT_ARRAY_TYPE_EXT"/>
-        <enum value="0x87E8" name="GL_VARIANT_ARRAY_EXT"/>
+        <enum value="0x87D5" name="GL_X_EXT" group="VertexShaderCoordOutEXT"/>
+        <enum value="0x87D6" name="GL_Y_EXT" group="VertexShaderCoordOutEXT"/>
+        <enum value="0x87D7" name="GL_Z_EXT" group="VertexShaderCoordOutEXT"/>
+        <enum value="0x87D8" name="GL_W_EXT" group="VertexShaderCoordOutEXT"/>
+        <enum value="0x87D9" name="GL_NEGATIVE_X_EXT" group="VertexShaderCoordOutEXT"/>
+        <enum value="0x87DA" name="GL_NEGATIVE_Y_EXT" group="VertexShaderCoordOutEXT"/>
+        <enum value="0x87DB" name="GL_NEGATIVE_Z_EXT" group="VertexShaderCoordOutEXT"/>
+        <enum value="0x87DC" name="GL_NEGATIVE_W_EXT" group="VertexShaderCoordOutEXT"/>
+        <enum value="0x87DD" name="GL_ZERO_EXT" group="VertexShaderCoordOutEXT"/>
+        <enum value="0x87DE" name="GL_ONE_EXT" group="VertexShaderCoordOutEXT"/>
+        <enum value="0x87DF" name="GL_NEGATIVE_ONE_EXT" group="VertexShaderCoordOutEXT"/>
+        <enum value="0x87E0" name="GL_NORMALIZED_RANGE_EXT" group="ParameterRangeEXT"/>
+        <enum value="0x87E1" name="GL_FULL_RANGE_EXT" group="ParameterRangeEXT"/>
+        <enum value="0x87E2" name="GL_CURRENT_VERTEX_EXT" group="VertexShaderParameterEXT"/>
+        <enum value="0x87E3" name="GL_MVP_MATRIX_EXT" group="VertexShaderParameterEXT"/>
+        <enum value="0x87E4" name="GL_VARIANT_VALUE_EXT" group="GetVariantValueEXT"/>
+        <enum value="0x87E5" name="GL_VARIANT_DATATYPE_EXT" group="GetVariantValueEXT"/>
+        <enum value="0x87E6" name="GL_VARIANT_ARRAY_STRIDE_EXT" group="GetVariantValueEXT"/>
+        <enum value="0x87E7" name="GL_VARIANT_ARRAY_TYPE_EXT" group="GetVariantValueEXT"/>
+        <enum value="0x87E8" name="GL_VARIANT_ARRAY_EXT" group="VariantCapEXT"/>
         <enum value="0x87E9" name="GL_VARIANT_ARRAY_POINTER_EXT"/>
         <enum value="0x87EA" name="GL_INVARIANT_VALUE_EXT"/>
         <enum value="0x87EB" name="GL_INVARIANT_DATATYPE_EXT"/>
@@ -8122,9 +3654,9 @@ typedef unsigned int GLhandleARB;
         <enum value="0x87EE" name="GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD"/>
         <enum value="0x87F0" name="GL_PN_TRIANGLES_ATI"/>
         <enum value="0x87F1" name="GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI"/>
-        <enum value="0x87F2" name="GL_PN_TRIANGLES_POINT_MODE_ATI"/>
-        <enum value="0x87F3" name="GL_PN_TRIANGLES_NORMAL_MODE_ATI"/>
-        <enum value="0x87F4" name="GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI"/>
+        <enum value="0x87F2" name="GL_PN_TRIANGLES_POINT_MODE_ATI" group="PNTrianglesPNameATI"/>
+        <enum value="0x87F3" name="GL_PN_TRIANGLES_NORMAL_MODE_ATI" group="PNTrianglesPNameATI"/>
+        <enum value="0x87F4" name="GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI" group="PNTrianglesPNameATI"/>
         <enum value="0x87F5" name="GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI"/>
         <enum value="0x87F6" name="GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI"/>
         <enum value="0x87F7" name="GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI"/>
@@ -8134,19 +3666,19 @@ typedef unsigned int GLhandleARB;
         <enum value="0x87FB" name="GL_VBO_FREE_MEMORY_ATI"/>
         <enum value="0x87FC" name="GL_TEXTURE_FREE_MEMORY_ATI"/>
         <enum value="0x87FD" name="GL_RENDERBUFFER_FREE_MEMORY_ATI"/>
-        <enum value="0x87FE" name="GL_NUM_PROGRAM_BINARY_FORMATS"/>
+        <enum value="0x87FE" name="GL_NUM_PROGRAM_BINARY_FORMATS" group="GetPName"/>
         <enum value="0x87FE" name="GL_NUM_PROGRAM_BINARY_FORMATS_OES"/>
-        <enum value="0x87FF" name="GL_PROGRAM_BINARY_FORMATS"/>
+        <enum value="0x87FF" name="GL_PROGRAM_BINARY_FORMATS" group="GetPName"/>
         <enum value="0x87FF" name="GL_PROGRAM_BINARY_FORMATS_OES"/>
-        <enum value="0x8800" name="GL_STENCIL_BACK_FUNC"/>
+        <enum value="0x8800" name="GL_STENCIL_BACK_FUNC" group="GetPName"/>
         <enum value="0x8800" name="GL_STENCIL_BACK_FUNC_ATI"/>
-        <enum value="0x8801" name="GL_STENCIL_BACK_FAIL"/>
+        <enum value="0x8801" name="GL_STENCIL_BACK_FAIL" group="GetPName"/>
         <enum value="0x8801" name="GL_STENCIL_BACK_FAIL_ATI"/>
-        <enum value="0x8802" name="GL_STENCIL_BACK_PASS_DEPTH_FAIL"/>
+        <enum value="0x8802" name="GL_STENCIL_BACK_PASS_DEPTH_FAIL" group="GetPName"/>
         <enum value="0x8802" name="GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI"/>
-        <enum value="0x8803" name="GL_STENCIL_BACK_PASS_DEPTH_PASS"/>
+        <enum value="0x8803" name="GL_STENCIL_BACK_PASS_DEPTH_PASS" group="GetPName"/>
         <enum value="0x8803" name="GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI"/>
-        <enum value="0x8804" name="GL_FRAGMENT_PROGRAM_ARB"/>
+        <enum value="0x8804" name="GL_FRAGMENT_PROGRAM_ARB" group="ProgramTarget"/>
         <enum value="0x8805" name="GL_PROGRAM_ALU_INSTRUCTIONS_ARB"/>
         <enum value="0x8806" name="GL_PROGRAM_TEX_INSTRUCTIONS_ARB"/>
         <enum value="0x8807" name="GL_PROGRAM_TEX_INDIRECTIONS_ARB"/>
@@ -8160,14 +3692,14 @@ typedef unsigned int GLhandleARB;
         <enum value="0x880F" name="GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB"/>
         <enum value="0x8810" name="GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB"/>
             <unused start="0x8811" end="0x8813" vendor="AMD"/>
-        <enum value="0x8814" name="GL_RGBA32F"/>
-        <enum value="0x8814" name="GL_RGBA32F_ARB"/>
-        <enum value="0x8814" name="GL_RGBA32F_EXT"/>
+        <enum value="0x8814" name="GL_RGBA32F" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8814" name="GL_RGBA32F_ARB" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8814" name="GL_RGBA32F_EXT" group="InternalFormat,SizedInternalFormat"/>
         <enum value="0x8814" name="GL_RGBA_FLOAT32_APPLE"/>
         <enum value="0x8814" name="GL_RGBA_FLOAT32_ATI"/>
-        <enum value="0x8815" name="GL_RGB32F"/>
-        <enum value="0x8815" name="GL_RGB32F_ARB"/>
-        <enum value="0x8815" name="GL_RGB32F_EXT"/>
+        <enum value="0x8815" name="GL_RGB32F" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8815" name="GL_RGB32F_ARB" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8815" name="GL_RGB32F_EXT" group="InternalFormat,SizedInternalFormat"/>
         <enum value="0x8815" name="GL_RGB_FLOAT32_APPLE"/>
         <enum value="0x8815" name="GL_RGB_FLOAT32_ATI"/>
         <enum value="0x8816" name="GL_ALPHA32F_ARB"/>
@@ -8185,14 +3717,14 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8819" name="GL_LUMINANCE_ALPHA32F_EXT"/>
         <enum value="0x8819" name="GL_LUMINANCE_ALPHA_FLOAT32_APPLE"/>
         <enum value="0x8819" name="GL_LUMINANCE_ALPHA_FLOAT32_ATI"/>
-        <enum value="0x881A" name="GL_RGBA16F"/>
-        <enum value="0x881A" name="GL_RGBA16F_ARB"/>
-        <enum value="0x881A" name="GL_RGBA16F_EXT"/>
+        <enum value="0x881A" name="GL_RGBA16F" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x881A" name="GL_RGBA16F_ARB" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x881A" name="GL_RGBA16F_EXT" group="InternalFormat,SizedInternalFormat"/>
         <enum value="0x881A" name="GL_RGBA_FLOAT16_APPLE"/>
         <enum value="0x881A" name="GL_RGBA_FLOAT16_ATI"/>
-        <enum value="0x881B" name="GL_RGB16F"/>
-        <enum value="0x881B" name="GL_RGB16F_ARB"/>
-        <enum value="0x881B" name="GL_RGB16F_EXT"/>
+        <enum value="0x881B" name="GL_RGB16F" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x881B" name="GL_RGB16F_ARB" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x881B" name="GL_RGB16F_EXT" group="InternalFormat,SizedInternalFormat"/>
         <enum value="0x881B" name="GL_RGB_FLOAT16_APPLE"/>
         <enum value="0x881B" name="GL_RGB_FLOAT16_ATI"/>
         <enum value="0x881C" name="GL_ALPHA16F_ARB"/>
@@ -8215,7 +3747,7 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8820" name="GL_RGBA_FLOAT_MODE_ATI"/>
             <unused start="0x8821" end="0x8822" vendor="AMD"/>
         <enum value="0x8823" name="GL_WRITEONLY_RENDERING_QCOM"/>
-        <enum value="0x8824" name="GL_MAX_DRAW_BUFFERS"/>
+        <enum value="0x8824" name="GL_MAX_DRAW_BUFFERS" group="GetPName"/>
         <enum value="0x8824" name="GL_MAX_DRAW_BUFFERS_ARB"/>
         <enum value="0x8824" name="GL_MAX_DRAW_BUFFERS_ATI"/>
         <enum value="0x8824" name="GL_MAX_DRAW_BUFFERS_EXT"/>
@@ -8304,7 +3836,7 @@ typedef unsigned int GLhandleARB;
             <unused start="0x8836" vendor="AMD"/>
         <enum value="0x8837" name="GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI" comment="Defined by Mesa but not ATI"/>
             <unused start="0x8838" end="0x883C" vendor="AMD"/>
-        <enum value="0x883D" name="GL_BLEND_EQUATION_ALPHA"/>
+        <enum value="0x883D" name="GL_BLEND_EQUATION_ALPHA" group="GetPName"/>
         <enum value="0x883D" name="GL_BLEND_EQUATION_ALPHA_EXT"/>
         <enum value="0x883D" name="GL_BLEND_EQUATION_ALPHA_OES"/>
             <unused start="0x883E" vendor="AMD"/>
@@ -8334,18 +3866,18 @@ typedef unsigned int GLhandleARB;
         <enum value="0x884A" name="GL_TEXTURE_DEPTH_SIZE_ARB"/>
         <enum value="0x884B" name="GL_DEPTH_TEXTURE_MODE"/>
         <enum value="0x884B" name="GL_DEPTH_TEXTURE_MODE_ARB"/>
-        <enum value="0x884C" name="GL_TEXTURE_COMPARE_MODE"/>
+        <enum value="0x884C" name="GL_TEXTURE_COMPARE_MODE" group="SamplerParameterI,TextureParameterName"/>
         <enum value="0x884C" name="GL_TEXTURE_COMPARE_MODE_ARB"/>
         <enum value="0x884C" name="GL_TEXTURE_COMPARE_MODE_EXT"/>
-        <enum value="0x884D" name="GL_TEXTURE_COMPARE_FUNC"/>
+        <enum value="0x884D" name="GL_TEXTURE_COMPARE_FUNC" group="SamplerParameterI,TextureParameterName"/>
         <enum value="0x884D" name="GL_TEXTURE_COMPARE_FUNC_ARB"/>
         <enum value="0x884D" name="GL_TEXTURE_COMPARE_FUNC_EXT"/>
-        <enum value="0x884E" name="GL_COMPARE_R_TO_TEXTURE"/>
+        <enum value="0x884E" name="GL_COMPARE_R_TO_TEXTURE" group="TextureCompareMode"/>
         <enum value="0x884E" name="GL_COMPARE_R_TO_TEXTURE_ARB"/>
         <enum value="0x884E" name="GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT"/>
-        <enum value="0x884E" name="GL_COMPARE_REF_TO_TEXTURE" alias="GL_COMPARE_R_TO_TEXTURE"/>
+        <enum value="0x884E" name="GL_COMPARE_REF_TO_TEXTURE" alias="GL_COMPARE_R_TO_TEXTURE" group="TextureCompareMode"/>
         <enum value="0x884E" name="GL_COMPARE_REF_TO_TEXTURE_EXT"/>
-        <enum value="0x884F" name="GL_TEXTURE_CUBE_MAP_SEAMLESS"/>
+        <enum value="0x884F" name="GL_TEXTURE_CUBE_MAP_SEAMLESS" group="EnableCap"/>
     </enums>
 
     <enums namespace="GL" start="0x8850" end="0x891F" vendor="NV">
@@ -8366,35 +3898,35 @@ typedef unsigned int GLhandleARB;
         <enum value="0x885E" name="GL_HILO8_NV"/>
         <enum value="0x885F" name="GL_SIGNED_HILO8_NV"/>
         <enum value="0x8860" name="GL_FORCE_BLUE_TO_ONE_NV"/>
-        <enum value="0x8861" name="GL_POINT_SPRITE"/>
+        <enum value="0x8861" name="GL_POINT_SPRITE" group="TextureEnvTarget"/>
         <enum value="0x8861" name="GL_POINT_SPRITE_ARB"/>
         <enum value="0x8861" name="GL_POINT_SPRITE_NV"/>
         <enum value="0x8861" name="GL_POINT_SPRITE_OES"/>
-        <enum value="0x8862" name="GL_COORD_REPLACE"/>
+        <enum value="0x8862" name="GL_COORD_REPLACE" group="TextureEnvParameter" />
         <enum value="0x8862" name="GL_COORD_REPLACE_ARB"/>
         <enum value="0x8862" name="GL_COORD_REPLACE_NV"/>
         <enum value="0x8862" name="GL_COORD_REPLACE_OES"/>
         <enum value="0x8863" name="GL_POINT_SPRITE_R_MODE_NV"/>
         <enum value="0x8864" name="GL_PIXEL_COUNTER_BITS_NV"/>
-        <enum value="0x8864" name="GL_QUERY_COUNTER_BITS"/>
+        <enum value="0x8864" name="GL_QUERY_COUNTER_BITS" group="QueryParameterName"/>
         <enum value="0x8864" name="GL_QUERY_COUNTER_BITS_ARB"/>
         <enum value="0x8864" name="GL_QUERY_COUNTER_BITS_EXT"/>
         <enum value="0x8865" name="GL_CURRENT_OCCLUSION_QUERY_ID_NV"/>
-        <enum value="0x8865" name="GL_CURRENT_QUERY"/>
+        <enum value="0x8865" name="GL_CURRENT_QUERY" group="QueryParameterName"/>
         <enum value="0x8865" name="GL_CURRENT_QUERY_ARB"/>
         <enum value="0x8865" name="GL_CURRENT_QUERY_EXT"/>
-        <enum value="0x8866" name="GL_PIXEL_COUNT_NV"/>
-        <enum value="0x8866" name="GL_QUERY_RESULT"/>
+        <enum value="0x8866" name="GL_PIXEL_COUNT_NV" group="OcclusionQueryParameterNameNV"/>
+        <enum value="0x8866" name="GL_QUERY_RESULT" group="QueryObjectParameterName"/>
         <enum value="0x8866" name="GL_QUERY_RESULT_ARB"/>
         <enum value="0x8866" name="GL_QUERY_RESULT_EXT"/>
-        <enum value="0x8867" name="GL_PIXEL_COUNT_AVAILABLE_NV"/>
-        <enum value="0x8867" name="GL_QUERY_RESULT_AVAILABLE"/>
+        <enum value="0x8867" name="GL_PIXEL_COUNT_AVAILABLE_NV" group="OcclusionQueryParameterNameNV"/>
+        <enum value="0x8867" name="GL_QUERY_RESULT_AVAILABLE" group="QueryObjectParameterName"/>
         <enum value="0x8867" name="GL_QUERY_RESULT_AVAILABLE_ARB"/>
         <enum value="0x8867" name="GL_QUERY_RESULT_AVAILABLE_EXT"/>
         <enum value="0x8868" name="GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV"/>
-        <enum value="0x8869" name="GL_MAX_VERTEX_ATTRIBS"/>
+        <enum value="0x8869" name="GL_MAX_VERTEX_ATTRIBS" group="GetPName"/>
         <enum value="0x8869" name="GL_MAX_VERTEX_ATTRIBS_ARB"/>
-        <enum value="0x886A" name="GL_VERTEX_ATTRIB_ARRAY_NORMALIZED"/>
+        <enum value="0x886A" name="GL_VERTEX_ATTRIB_ARRAY_NORMALIZED" group="VertexAttribEnum,VertexAttribPropertyARB,VertexArrayPName"/>
         <enum value="0x886A" name="GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB"/>
             <unused start="0x886B" vendor="NV"/>
         <enum value="0x886C" name="GL_MAX_TESS_CONTROL_INPUT_COMPONENTS"/>
@@ -8409,17 +3941,17 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8871" name="GL_MAX_TEXTURE_COORDS"/>
         <enum value="0x8871" name="GL_MAX_TEXTURE_COORDS_ARB"/>
         <enum value="0x8871" name="GL_MAX_TEXTURE_COORDS_NV"/>
-        <enum value="0x8872" name="GL_MAX_TEXTURE_IMAGE_UNITS"/>
+        <enum value="0x8872" name="GL_MAX_TEXTURE_IMAGE_UNITS" group="GetPName"/>
         <enum value="0x8872" name="GL_MAX_TEXTURE_IMAGE_UNITS_ARB"/>
         <enum value="0x8872" name="GL_MAX_TEXTURE_IMAGE_UNITS_NV"/>
         <enum value="0x8873" name="GL_FRAGMENT_PROGRAM_BINDING_NV"/>
         <enum value="0x8874" name="GL_PROGRAM_ERROR_STRING_ARB"/>
         <enum value="0x8874" name="GL_PROGRAM_ERROR_STRING_NV"/>
-        <enum value="0x8875" name="GL_PROGRAM_FORMAT_ASCII_ARB"/>
+        <enum value="0x8875" name="GL_PROGRAM_FORMAT_ASCII_ARB" group="ProgramFormat"/>
         <enum value="0x8876" name="GL_PROGRAM_FORMAT_ARB"/>
             <unused start="0x8877" vendor="NV" comment="Should have been assigned to PROGRAM_BINDING_ARB"/>
-        <enum value="0x8878" name="GL_WRITE_PIXEL_DATA_RANGE_NV"/>
-        <enum value="0x8879" name="GL_READ_PIXEL_DATA_RANGE_NV"/>
+        <enum value="0x8878" name="GL_WRITE_PIXEL_DATA_RANGE_NV" group="PixelDataRangeTargetNV"/>
+        <enum value="0x8879" name="GL_READ_PIXEL_DATA_RANGE_NV" group="PixelDataRangeTargetNV"/>
         <enum value="0x887A" name="GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV"/>
         <enum value="0x887B" name="GL_READ_PIXEL_DATA_RANGE_LENGTH_NV"/>
         <enum value="0x887C" name="GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV"/>
@@ -8446,13 +3978,13 @@ typedef unsigned int GLhandleARB;
         <enum value="0x888F" name="GL_TEXTURE_UNSIGNED_REMAP_MODE_NV"/>
         <enum value="0x8890" name="GL_DEPTH_BOUNDS_TEST_EXT"/>
         <enum value="0x8891" name="GL_DEPTH_BOUNDS_EXT"/>
-        <enum value="0x8892" name="GL_ARRAY_BUFFER"/>
+        <enum value="0x8892" name="GL_ARRAY_BUFFER" group="CopyBufferSubDataTarget,BufferTargetARB,BufferStorageTarget"/>
         <enum value="0x8892" name="GL_ARRAY_BUFFER_ARB"/>
-        <enum value="0x8893" name="GL_ELEMENT_ARRAY_BUFFER"/>
+        <enum value="0x8893" name="GL_ELEMENT_ARRAY_BUFFER" group="CopyBufferSubDataTarget,BufferTargetARB,BufferStorageTarget"/>
         <enum value="0x8893" name="GL_ELEMENT_ARRAY_BUFFER_ARB"/>
-        <enum value="0x8894" name="GL_ARRAY_BUFFER_BINDING"/>
+        <enum value="0x8894" name="GL_ARRAY_BUFFER_BINDING" group="GetPName"/>
         <enum value="0x8894" name="GL_ARRAY_BUFFER_BINDING_ARB"/>
-        <enum value="0x8895" name="GL_ELEMENT_ARRAY_BUFFER_BINDING"/>
+        <enum value="0x8895" name="GL_ELEMENT_ARRAY_BUFFER_BINDING" group="GetPName"/>
         <enum value="0x8895" name="GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB"/>
         <enum value="0x8896" name="GL_VERTEX_ARRAY_BUFFER_BINDING"/>
         <enum value="0x8896" name="GL_VERTEX_ARRAY_BUFFER_BINDING_ARB"/>
@@ -8474,7 +4006,7 @@ typedef unsigned int GLhandleARB;
         <enum value="0x889E" name="GL_WEIGHT_ARRAY_BUFFER_BINDING"/>
         <enum value="0x889E" name="GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB"/>
         <enum value="0x889E" name="GL_WEIGHT_ARRAY_BUFFER_BINDING_OES"/>
-        <enum value="0x889F" name="GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING"/>
+        <enum value="0x889F" name="GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING" group="VertexAttribEnum,VertexAttribPropertyARB"/>
         <enum value="0x889F" name="GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB"/>
         <enum value="0x88A0" name="GL_PROGRAM_INSTRUCTIONS_ARB"/>
         <enum value="0x88A1" name="GL_MAX_PROGRAM_INSTRUCTIONS_ARB"/>
@@ -8500,24 +4032,24 @@ typedef unsigned int GLhandleARB;
         <enum value="0x88B5" name="GL_MAX_PROGRAM_ENV_PARAMETERS_ARB"/>
         <enum value="0x88B6" name="GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB"/>
         <enum value="0x88B7" name="GL_TRANSPOSE_CURRENT_MATRIX_ARB"/>
-        <enum value="0x88B8" name="GL_READ_ONLY"/>
+        <enum value="0x88B8" name="GL_READ_ONLY" group="BufferAccessARB"/>
         <enum value="0x88B8" name="GL_READ_ONLY_ARB"/>
-        <enum value="0x88B9" name="GL_WRITE_ONLY"/>
+        <enum value="0x88B9" name="GL_WRITE_ONLY" group="BufferAccessARB"/>
         <enum value="0x88B9" name="GL_WRITE_ONLY_ARB"/>
         <enum value="0x88B9" name="GL_WRITE_ONLY_OES"/>
-        <enum value="0x88BA" name="GL_READ_WRITE"/>
+        <enum value="0x88BA" name="GL_READ_WRITE" group="BufferAccessARB"/>
         <enum value="0x88BA" name="GL_READ_WRITE_ARB"/>
-        <enum value="0x88BB" name="GL_BUFFER_ACCESS"/>
-        <enum value="0x88BB" name="GL_BUFFER_ACCESS_ARB"/>
+        <enum value="0x88BB" name="GL_BUFFER_ACCESS" group="BufferPNameARB"/>
+        <enum value="0x88BB" name="GL_BUFFER_ACCESS_ARB" group="BufferPNameARB"/>
         <enum value="0x88BB" name="GL_BUFFER_ACCESS_OES"/>
-        <enum value="0x88BC" name="GL_BUFFER_MAPPED"/>
-        <enum value="0x88BC" name="GL_BUFFER_MAPPED_ARB"/>
+        <enum value="0x88BC" name="GL_BUFFER_MAPPED" group="BufferPNameARB"/>
+        <enum value="0x88BC" name="GL_BUFFER_MAPPED_ARB" group="BufferPNameARB"/>
         <enum value="0x88BC" name="GL_BUFFER_MAPPED_OES"/>
-        <enum value="0x88BD" name="GL_BUFFER_MAP_POINTER"/>
-        <enum value="0x88BD" name="GL_BUFFER_MAP_POINTER_ARB"/>
+        <enum value="0x88BD" name="GL_BUFFER_MAP_POINTER" group="BufferPointerNameARB"/>
+        <enum value="0x88BD" name="GL_BUFFER_MAP_POINTER_ARB" group="BufferPointerNameARB"/>
         <enum value="0x88BD" name="GL_BUFFER_MAP_POINTER_OES"/>
         <enum value="0x88BE" name="GL_WRITE_DISCARD_NV"/>
-        <enum value="0x88BF" name="GL_TIME_ELAPSED"/>
+        <enum value="0x88BF" name="GL_TIME_ELAPSED" group="QueryTarget"/>
         <enum value="0x88BF" name="GL_TIME_ELAPSED_EXT"/>
         <enum value="0x88C0" name="GL_MATRIX0_ARB"/>
         <enum value="0x88C1" name="GL_MATRIX1_ARB"/>
@@ -8551,46 +4083,46 @@ typedef unsigned int GLhandleARB;
         <enum value="0x88DD" name="GL_MATRIX29_ARB"/>
         <enum value="0x88DE" name="GL_MATRIX30_ARB"/>
         <enum value="0x88DF" name="GL_MATRIX31_ARB"/>
-        <enum value="0x88E0" name="GL_STREAM_DRAW"/>
+        <enum value="0x88E0" name="GL_STREAM_DRAW" group="VertexBufferObjectUsage,BufferUsageARB"/>
         <enum value="0x88E0" name="GL_STREAM_DRAW_ARB"/>
-        <enum value="0x88E1" name="GL_STREAM_READ"/>
+        <enum value="0x88E1" name="GL_STREAM_READ" group="VertexBufferObjectUsage,BufferUsageARB"/>
         <enum value="0x88E1" name="GL_STREAM_READ_ARB"/>
-        <enum value="0x88E2" name="GL_STREAM_COPY"/>
+        <enum value="0x88E2" name="GL_STREAM_COPY" group="VertexBufferObjectUsage,BufferUsageARB"/>
         <enum value="0x88E2" name="GL_STREAM_COPY_ARB"/>
             <unused start="0x88E3" vendor="NV" comment="To extend ARB_vbo"/>
-        <enum value="0x88E4" name="GL_STATIC_DRAW"/>
+        <enum value="0x88E4" name="GL_STATIC_DRAW" group="VertexBufferObjectUsage,BufferUsageARB"/>
         <enum value="0x88E4" name="GL_STATIC_DRAW_ARB"/>
-        <enum value="0x88E5" name="GL_STATIC_READ"/>
+        <enum value="0x88E5" name="GL_STATIC_READ" group="VertexBufferObjectUsage,BufferUsageARB"/>
         <enum value="0x88E5" name="GL_STATIC_READ_ARB"/>
-        <enum value="0x88E6" name="GL_STATIC_COPY"/>
+        <enum value="0x88E6" name="GL_STATIC_COPY" group="VertexBufferObjectUsage,BufferUsageARB"/>
         <enum value="0x88E6" name="GL_STATIC_COPY_ARB"/>
             <unused start="0x88E7" vendor="NV" comment="To extend ARB_vbo"/>
-        <enum value="0x88E8" name="GL_DYNAMIC_DRAW"/>
+        <enum value="0x88E8" name="GL_DYNAMIC_DRAW" group="VertexBufferObjectUsage,BufferUsageARB"/>
         <enum value="0x88E8" name="GL_DYNAMIC_DRAW_ARB"/>
-        <enum value="0x88E9" name="GL_DYNAMIC_READ"/>
+        <enum value="0x88E9" name="GL_DYNAMIC_READ" group="VertexBufferObjectUsage,BufferUsageARB"/>
         <enum value="0x88E9" name="GL_DYNAMIC_READ_ARB"/>
-        <enum value="0x88EA" name="GL_DYNAMIC_COPY"/>
+        <enum value="0x88EA" name="GL_DYNAMIC_COPY" group="VertexBufferObjectUsage,BufferUsageARB"/>
         <enum value="0x88EA" name="GL_DYNAMIC_COPY_ARB"/>
-        <enum value="0x88EB" name="GL_PIXEL_PACK_BUFFER"/>
+        <enum value="0x88EB" name="GL_PIXEL_PACK_BUFFER" group="CopyBufferSubDataTarget,BufferTargetARB,BufferStorageTarget"/>
         <enum value="0x88EB" name="GL_PIXEL_PACK_BUFFER_ARB"/>
         <enum value="0x88EB" name="GL_PIXEL_PACK_BUFFER_EXT"/>
         <enum value="0x88EB" name="GL_PIXEL_PACK_BUFFER_NV"/>
-        <enum value="0x88EC" name="GL_PIXEL_UNPACK_BUFFER"/>
+        <enum value="0x88EC" name="GL_PIXEL_UNPACK_BUFFER" group="CopyBufferSubDataTarget,BufferTargetARB,BufferStorageTarget"/>
         <enum value="0x88EC" name="GL_PIXEL_UNPACK_BUFFER_ARB"/>
         <enum value="0x88EC" name="GL_PIXEL_UNPACK_BUFFER_EXT"/>
         <enum value="0x88EC" name="GL_PIXEL_UNPACK_BUFFER_NV"/>
-        <enum value="0x88ED" name="GL_PIXEL_PACK_BUFFER_BINDING"/>
+        <enum value="0x88ED" name="GL_PIXEL_PACK_BUFFER_BINDING" group="GetPName"/>
         <enum value="0x88ED" name="GL_PIXEL_PACK_BUFFER_BINDING_ARB"/>
         <enum value="0x88ED" name="GL_PIXEL_PACK_BUFFER_BINDING_EXT"/>
         <enum value="0x88ED" name="GL_PIXEL_PACK_BUFFER_BINDING_NV"/>
         <enum value="0x88EE" name="GL_ETC1_SRGB8_NV"/>
-        <enum value="0x88EF" name="GL_PIXEL_UNPACK_BUFFER_BINDING"/>
+        <enum value="0x88EF" name="GL_PIXEL_UNPACK_BUFFER_BINDING" group="GetPName"/>
         <enum value="0x88EF" name="GL_PIXEL_UNPACK_BUFFER_BINDING_ARB"/>
         <enum value="0x88EF" name="GL_PIXEL_UNPACK_BUFFER_BINDING_EXT"/>
         <enum value="0x88EF" name="GL_PIXEL_UNPACK_BUFFER_BINDING_NV"/>
-        <enum value="0x88F0" name="GL_DEPTH24_STENCIL8"/>
-        <enum value="0x88F0" name="GL_DEPTH24_STENCIL8_EXT"/>
-        <enum value="0x88F0" name="GL_DEPTH24_STENCIL8_OES"/>
+        <enum value="0x88F0" name="GL_DEPTH24_STENCIL8" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x88F0" name="GL_DEPTH24_STENCIL8_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x88F0" name="GL_DEPTH24_STENCIL8_OES" group="InternalFormat,SizedInternalFormat"/>
         <enum value="0x88F1" name="GL_TEXTURE_STENCIL_SIZE"/>
         <enum value="0x88F1" name="GL_TEXTURE_STENCIL_SIZE_EXT"/>
         <enum value="0x88F2" name="GL_STENCIL_TAG_BITS_EXT"/>
@@ -8600,28 +4132,28 @@ typedef unsigned int GLhandleARB;
         <enum value="0x88F6" name="GL_MAX_PROGRAM_IF_DEPTH_NV"/>
         <enum value="0x88F7" name="GL_MAX_PROGRAM_LOOP_DEPTH_NV"/>
         <enum value="0x88F8" name="GL_MAX_PROGRAM_LOOP_COUNT_NV"/>
-        <enum value="0x88F9" name="GL_SRC1_COLOR"/>
+        <enum value="0x88F9" name="GL_SRC1_COLOR" group="BlendingFactor"/>
         <enum value="0x88F9" name="GL_SRC1_COLOR_EXT"/>
-        <enum value="0x88FA" name="GL_ONE_MINUS_SRC1_COLOR"/>
+        <enum value="0x88FA" name="GL_ONE_MINUS_SRC1_COLOR" group="BlendingFactor"/>
         <enum value="0x88FA" name="GL_ONE_MINUS_SRC1_COLOR_EXT"/>
-        <enum value="0x88FB" name="GL_ONE_MINUS_SRC1_ALPHA"/>
+        <enum value="0x88FB" name="GL_ONE_MINUS_SRC1_ALPHA" group="BlendingFactor"/>
         <enum value="0x88FB" name="GL_ONE_MINUS_SRC1_ALPHA_EXT"/>
-        <enum value="0x88FC" name="GL_MAX_DUAL_SOURCE_DRAW_BUFFERS"/>
+        <enum value="0x88FC" name="GL_MAX_DUAL_SOURCE_DRAW_BUFFERS" group="GetPName"/>
         <enum value="0x88FC" name="GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT"/>
-        <enum value="0x88FD" name="GL_VERTEX_ATTRIB_ARRAY_INTEGER"/>
-        <enum value="0x88FD" name="GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT"/>
+        <enum value="0x88FD" name="GL_VERTEX_ATTRIB_ARRAY_INTEGER" group="VertexAttribEnum,VertexAttribPropertyARB,VertexArrayPName"/>
+        <enum value="0x88FD" name="GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT" group="VertexAttribPropertyARB"/>
         <enum value="0x88FD" name="GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV"/>
-        <enum value="0x88FE" name="GL_VERTEX_ATTRIB_ARRAY_DIVISOR"/>
+        <enum value="0x88FE" name="GL_VERTEX_ATTRIB_ARRAY_DIVISOR" group="VertexAttribEnum,VertexAttribPropertyARB,VertexArrayPName"/>
         <enum value="0x88FE" name="GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE"/>
         <enum value="0x88FE" name="GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB"/>
         <enum value="0x88FE" name="GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT"/>
         <enum value="0x88FE" name="GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV"/>
-        <enum value="0x88FF" name="GL_MAX_ARRAY_TEXTURE_LAYERS"/>
+        <enum value="0x88FF" name="GL_MAX_ARRAY_TEXTURE_LAYERS" group="GetPName"/>
         <enum value="0x88FF" name="GL_MAX_ARRAY_TEXTURE_LAYERS_EXT"/>
-        <enum value="0x8904" name="GL_MIN_PROGRAM_TEXEL_OFFSET"/>
+        <enum value="0x8904" name="GL_MIN_PROGRAM_TEXEL_OFFSET" group="GetPName"/>
         <enum value="0x8904" name="GL_MIN_PROGRAM_TEXEL_OFFSET_EXT"/>
         <enum value="0x8904" name="GL_MIN_PROGRAM_TEXEL_OFFSET_NV"/>
-        <enum value="0x8905" name="GL_MAX_PROGRAM_TEXEL_OFFSET"/>
+        <enum value="0x8905" name="GL_MAX_PROGRAM_TEXEL_OFFSET" group="GetPName"/>
         <enum value="0x8905" name="GL_MAX_PROGRAM_TEXEL_OFFSET_EXT"/>
         <enum value="0x8905" name="GL_MAX_PROGRAM_TEXEL_OFFSET_NV"/>
         <enum value="0x8906" name="GL_PROGRAM_ATTRIB_COMPONENTS_NV"/>
@@ -8632,109 +4164,109 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8911" name="GL_ACTIVE_STENCIL_FACE_EXT"/>
         <enum value="0x8912" name="GL_MIRROR_CLAMP_TO_BORDER_EXT"/>
             <unused start="0x8913" vendor="NV"/>
-        <enum value="0x8914" name="GL_SAMPLES_PASSED"/>
+        <enum value="0x8914" name="GL_SAMPLES_PASSED" group="QueryTarget"/>
         <enum value="0x8914" name="GL_SAMPLES_PASSED_ARB"/>
             <unused start="0x8915" vendor="NV"/>
-        <enum value="0x8916" name="GL_GEOMETRY_VERTICES_OUT"/>
+        <enum value="0x8916" name="GL_GEOMETRY_VERTICES_OUT" group="ProgramPropertyARB"/>
         <enum value="0x8916" name="GL_GEOMETRY_LINKED_VERTICES_OUT_EXT"/>
         <enum value="0x8916" name="GL_GEOMETRY_LINKED_VERTICES_OUT_OES"/>
-        <enum value="0x8917" name="GL_GEOMETRY_INPUT_TYPE"/>
+        <enum value="0x8917" name="GL_GEOMETRY_INPUT_TYPE" group="ProgramPropertyARB"/>
         <enum value="0x8917" name="GL_GEOMETRY_LINKED_INPUT_TYPE_EXT"/>
         <enum value="0x8917" name="GL_GEOMETRY_LINKED_INPUT_TYPE_OES"/>
-        <enum value="0x8918" name="GL_GEOMETRY_OUTPUT_TYPE"/>
+        <enum value="0x8918" name="GL_GEOMETRY_OUTPUT_TYPE" group="ProgramPropertyARB"/>
         <enum value="0x8918" name="GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT"/>
         <enum value="0x8918" name="GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES"/>
-        <enum value="0x8919" name="GL_SAMPLER_BINDING"/>
+        <enum value="0x8919" name="GL_SAMPLER_BINDING" group="GetPName"/>
         <enum value="0x891A" name="GL_CLAMP_VERTEX_COLOR"/>
-        <enum value="0x891A" name="GL_CLAMP_VERTEX_COLOR_ARB"/>
+        <enum value="0x891A" name="GL_CLAMP_VERTEX_COLOR_ARB" group="ClampColorTargetARB"/>
         <enum value="0x891B" name="GL_CLAMP_FRAGMENT_COLOR"/>
-        <enum value="0x891B" name="GL_CLAMP_FRAGMENT_COLOR_ARB"/>
-        <enum value="0x891C" name="GL_CLAMP_READ_COLOR"/>
-        <enum value="0x891C" name="GL_CLAMP_READ_COLOR_ARB"/>
-        <enum value="0x891D" name="GL_FIXED_ONLY"/>
-        <enum value="0x891D" name="GL_FIXED_ONLY_ARB"/>
-        <enum value="0x891E" name="GL_TESS_CONTROL_PROGRAM_NV"/>
-        <enum value="0x891F" name="GL_TESS_EVALUATION_PROGRAM_NV"/>
+        <enum value="0x891B" name="GL_CLAMP_FRAGMENT_COLOR_ARB" group="ClampColorTargetARB"/>
+        <enum value="0x891C" name="GL_CLAMP_READ_COLOR" group="ClampColorTargetARB"/>
+        <enum value="0x891C" name="GL_CLAMP_READ_COLOR_ARB" group="ClampColorTargetARB"/>
+        <enum value="0x891D" name="GL_FIXED_ONLY" group="ClampColorModeARB"/>
+        <enum value="0x891D" name="GL_FIXED_ONLY_ARB" group="ClampColorModeARB"/>
+        <enum value="0x891E" name="GL_TESS_CONTROL_PROGRAM_NV" group="ProgramTarget"/>
+        <enum value="0x891F" name="GL_TESS_EVALUATION_PROGRAM_NV" group="ProgramTarget"/>
     </enums>
 
     <enums namespace="GL" start="0x8920" end="0x897F" vendor="AMD">
-        <enum value="0x8920" name="GL_FRAGMENT_SHADER_ATI"/>
-        <enum value="0x8921" name="GL_REG_0_ATI"/>
-        <enum value="0x8922" name="GL_REG_1_ATI"/>
-        <enum value="0x8923" name="GL_REG_2_ATI"/>
-        <enum value="0x8924" name="GL_REG_3_ATI"/>
-        <enum value="0x8925" name="GL_REG_4_ATI"/>
-        <enum value="0x8926" name="GL_REG_5_ATI"/>
-        <enum value="0x8927" name="GL_REG_6_ATI"/>
-        <enum value="0x8928" name="GL_REG_7_ATI"/>
-        <enum value="0x8929" name="GL_REG_8_ATI"/>
-        <enum value="0x892A" name="GL_REG_9_ATI"/>
-        <enum value="0x892B" name="GL_REG_10_ATI"/>
-        <enum value="0x892C" name="GL_REG_11_ATI"/>
-        <enum value="0x892D" name="GL_REG_12_ATI"/>
-        <enum value="0x892E" name="GL_REG_13_ATI"/>
-        <enum value="0x892F" name="GL_REG_14_ATI"/>
-        <enum value="0x8930" name="GL_REG_15_ATI"/>
-        <enum value="0x8931" name="GL_REG_16_ATI"/>
-        <enum value="0x8932" name="GL_REG_17_ATI"/>
-        <enum value="0x8933" name="GL_REG_18_ATI"/>
-        <enum value="0x8934" name="GL_REG_19_ATI"/>
-        <enum value="0x8935" name="GL_REG_20_ATI"/>
-        <enum value="0x8936" name="GL_REG_21_ATI"/>
-        <enum value="0x8937" name="GL_REG_22_ATI"/>
-        <enum value="0x8938" name="GL_REG_23_ATI"/>
-        <enum value="0x8939" name="GL_REG_24_ATI"/>
-        <enum value="0x893A" name="GL_REG_25_ATI"/>
-        <enum value="0x893B" name="GL_REG_26_ATI"/>
-        <enum value="0x893C" name="GL_REG_27_ATI"/>
-        <enum value="0x893D" name="GL_REG_28_ATI"/>
-        <enum value="0x893E" name="GL_REG_29_ATI"/>
-        <enum value="0x893F" name="GL_REG_30_ATI"/>
-        <enum value="0x8940" name="GL_REG_31_ATI"/>
-        <enum value="0x8941" name="GL_CON_0_ATI"/>
-        <enum value="0x8942" name="GL_CON_1_ATI"/>
-        <enum value="0x8943" name="GL_CON_2_ATI"/>
-        <enum value="0x8944" name="GL_CON_3_ATI"/>
-        <enum value="0x8945" name="GL_CON_4_ATI"/>
-        <enum value="0x8946" name="GL_CON_5_ATI"/>
-        <enum value="0x8947" name="GL_CON_6_ATI"/>
-        <enum value="0x8948" name="GL_CON_7_ATI"/>
-        <enum value="0x8949" name="GL_CON_8_ATI"/>
-        <enum value="0x894A" name="GL_CON_9_ATI"/>
-        <enum value="0x894B" name="GL_CON_10_ATI"/>
-        <enum value="0x894C" name="GL_CON_11_ATI"/>
-        <enum value="0x894D" name="GL_CON_12_ATI"/>
-        <enum value="0x894E" name="GL_CON_13_ATI"/>
-        <enum value="0x894F" name="GL_CON_14_ATI"/>
-        <enum value="0x8950" name="GL_CON_15_ATI"/>
-        <enum value="0x8951" name="GL_CON_16_ATI"/>
-        <enum value="0x8952" name="GL_CON_17_ATI"/>
-        <enum value="0x8953" name="GL_CON_18_ATI"/>
-        <enum value="0x8954" name="GL_CON_19_ATI"/>
-        <enum value="0x8955" name="GL_CON_20_ATI"/>
-        <enum value="0x8956" name="GL_CON_21_ATI"/>
-        <enum value="0x8957" name="GL_CON_22_ATI"/>
-        <enum value="0x8958" name="GL_CON_23_ATI"/>
-        <enum value="0x8959" name="GL_CON_24_ATI"/>
-        <enum value="0x895A" name="GL_CON_25_ATI"/>
-        <enum value="0x895B" name="GL_CON_26_ATI"/>
-        <enum value="0x895C" name="GL_CON_27_ATI"/>
-        <enum value="0x895D" name="GL_CON_28_ATI"/>
-        <enum value="0x895E" name="GL_CON_29_ATI"/>
-        <enum value="0x895F" name="GL_CON_30_ATI"/>
-        <enum value="0x8960" name="GL_CON_31_ATI"/>
-        <enum value="0x8961" name="GL_MOV_ATI"/>
-        <enum value="0x8963" name="GL_ADD_ATI"/>
-        <enum value="0x8964" name="GL_MUL_ATI"/>
-        <enum value="0x8965" name="GL_SUB_ATI"/>
-        <enum value="0x8966" name="GL_DOT3_ATI"/>
-        <enum value="0x8967" name="GL_DOT4_ATI"/>
-        <enum value="0x8968" name="GL_MAD_ATI"/>
-        <enum value="0x8969" name="GL_LERP_ATI"/>
-        <enum value="0x896A" name="GL_CND_ATI"/>
-        <enum value="0x896B" name="GL_CND0_ATI"/>
-        <enum value="0x896C" name="GL_DOT2_ADD_ATI"/>
-        <enum value="0x896D" name="GL_SECONDARY_INTERPOLATOR_ATI"/>
+        <enum value="0x8920" name="GL_FRAGMENT_SHADER_ATI" group="GetPName"/>
+        <enum value="0x8921" name="GL_REG_0_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8922" name="GL_REG_1_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8923" name="GL_REG_2_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8924" name="GL_REG_3_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8925" name="GL_REG_4_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8926" name="GL_REG_5_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8927" name="GL_REG_6_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8928" name="GL_REG_7_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8929" name="GL_REG_8_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x892A" name="GL_REG_9_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x892B" name="GL_REG_10_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x892C" name="GL_REG_11_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x892D" name="GL_REG_12_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x892E" name="GL_REG_13_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x892F" name="GL_REG_14_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8930" name="GL_REG_15_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8931" name="GL_REG_16_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8932" name="GL_REG_17_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8933" name="GL_REG_18_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8934" name="GL_REG_19_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8935" name="GL_REG_20_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8936" name="GL_REG_21_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8937" name="GL_REG_22_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8938" name="GL_REG_23_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8939" name="GL_REG_24_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x893A" name="GL_REG_25_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x893B" name="GL_REG_26_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x893C" name="GL_REG_27_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x893D" name="GL_REG_28_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x893E" name="GL_REG_29_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x893F" name="GL_REG_30_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8940" name="GL_REG_31_ATI" group="FragmentShaderRegATI,FragmentShaderTextureSourceATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8941" name="GL_CON_0_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8942" name="GL_CON_1_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8943" name="GL_CON_2_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8944" name="GL_CON_3_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8945" name="GL_CON_4_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8946" name="GL_CON_5_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8947" name="GL_CON_6_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8948" name="GL_CON_7_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8949" name="GL_CON_8_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x894A" name="GL_CON_9_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x894B" name="GL_CON_10_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x894C" name="GL_CON_11_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x894D" name="GL_CON_12_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x894E" name="GL_CON_13_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x894F" name="GL_CON_14_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8950" name="GL_CON_15_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8951" name="GL_CON_16_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8952" name="GL_CON_17_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8953" name="GL_CON_18_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8954" name="GL_CON_19_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8955" name="GL_CON_20_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8956" name="GL_CON_21_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8957" name="GL_CON_22_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8958" name="GL_CON_23_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8959" name="GL_CON_24_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x895A" name="GL_CON_25_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x895B" name="GL_CON_26_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x895C" name="GL_CON_27_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x895D" name="GL_CON_28_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x895E" name="GL_CON_29_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x895F" name="GL_CON_30_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8960" name="GL_CON_31_ATI" group="FragmentShaderConATI,FragmentShaderGenericSourceATI"/>
+        <enum value="0x8961" name="GL_MOV_ATI" group="FragmentOp1ATI"/>
+        <enum value="0x8963" name="GL_ADD_ATI" group="FragmentOp2ATI"/>
+        <enum value="0x8964" name="GL_MUL_ATI" group="FragmentOp2ATI"/>
+        <enum value="0x8965" name="GL_SUB_ATI" group="FragmentOp2ATI"/>
+        <enum value="0x8966" name="GL_DOT3_ATI" group="FragmentOp2ATI"/>
+        <enum value="0x8967" name="GL_DOT4_ATI" group="FragmentOp2ATI"/>
+        <enum value="0x8968" name="GL_MAD_ATI" group="FragmentOp3ATI"/>
+        <enum value="0x8969" name="GL_LERP_ATI" group="FragmentOp3ATI"/>
+        <enum value="0x896A" name="GL_CND_ATI" group="FragmentOp3ATI"/>
+        <enum value="0x896B" name="GL_CND0_ATI" group="FragmentOp3ATI"/>
+        <enum value="0x896C" name="GL_DOT2_ADD_ATI" group="FragmentOp3ATI"/>
+        <enum value="0x896D" name="GL_SECONDARY_INTERPOLATOR_ATI" group="FragmentShaderGenericSourceATI"/>
         <enum value="0x896E" name="GL_NUM_FRAGMENT_REGISTERS_ATI"/>
         <enum value="0x896F" name="GL_NUM_FRAGMENT_CONSTANTS_ATI"/>
         <enum value="0x8970" name="GL_NUM_PASSES_ATI"/>
@@ -8743,10 +4275,10 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8973" name="GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI"/>
         <enum value="0x8974" name="GL_NUM_LOOPBACK_COMPONENTS_ATI"/>
         <enum value="0x8975" name="GL_COLOR_ALPHA_PAIRING_ATI"/>
-        <enum value="0x8976" name="GL_SWIZZLE_STR_ATI"/>
-        <enum value="0x8977" name="GL_SWIZZLE_STQ_ATI"/>
-        <enum value="0x8978" name="GL_SWIZZLE_STR_DR_ATI"/>
-        <enum value="0x8979" name="GL_SWIZZLE_STQ_DQ_ATI"/>
+        <enum value="0x8976" name="GL_SWIZZLE_STR_ATI" group="SwizzleOpATI"/>
+        <enum value="0x8977" name="GL_SWIZZLE_STQ_ATI" group="SwizzleOpATI"/>
+        <enum value="0x8978" name="GL_SWIZZLE_STR_DR_ATI" group="SwizzleOpATI"/>
+        <enum value="0x8979" name="GL_SWIZZLE_STQ_DQ_ATI" group="SwizzleOpATI"/>
         <enum value="0x897A" name="GL_SWIZZLE_STRQ_ATI"/>
         <enum value="0x897B" name="GL_SWIZZLE_STRQ_DQ_ATI"/>
             <unused start="0x897C" end="0x897F" vendor="AMD"/>
@@ -8757,8 +4289,8 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8981" name="GL_INTERLACE_READ_OML"/>
         <enum value="0x8982" name="GL_FORMAT_SUBSAMPLE_24_24_OML"/>
         <enum value="0x8983" name="GL_FORMAT_SUBSAMPLE_244_244_OML"/>
-        <enum value="0x8984" name="GL_PACK_RESAMPLE_OML"/>
-        <enum value="0x8985" name="GL_UNPACK_RESAMPLE_OML"/>
+        <enum value="0x8984" name="GL_PACK_RESAMPLE_OML" group="PixelStoreParameter"/>
+        <enum value="0x8985" name="GL_UNPACK_RESAMPLE_OML" group="PixelStoreParameter"/>
         <enum value="0x8986" name="GL_RESAMPLE_REPLICATE_OML"/>
         <enum value="0x8987" name="GL_RESAMPLE_ZERO_FILL_OML"/>
         <enum value="0x8988" name="GL_RESAMPLE_AVERAGE_OML"/>
@@ -8790,15 +4322,15 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8A07" name="GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE"/>
         <enum value="0x8A08" name="GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE"/>
         <enum value="0x8A09" name="GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE"/>
-        <enum value="0x8A0A" name="GL_DRAW_PIXELS_APPLE"/>
-        <enum value="0x8A0B" name="GL_FENCE_APPLE"/>
+        <enum value="0x8A0A" name="GL_DRAW_PIXELS_APPLE" group="ObjectTypeAPPLE"/>
+        <enum value="0x8A0B" name="GL_FENCE_APPLE" group="ObjectTypeAPPLE"/>
         <enum value="0x8A0C" name="GL_ELEMENT_ARRAY_APPLE"/>
         <enum value="0x8A0D" name="GL_ELEMENT_ARRAY_TYPE_APPLE"/>
         <enum value="0x8A0E" name="GL_ELEMENT_ARRAY_POINTER_APPLE"/>
         <enum value="0x8A0F" name="GL_COLOR_FLOAT_APPLE"/>
             <unused start="0x8A10" vendor="APPLE" comment="Unknown extension (Khronos bug 632)"/>
             <!-- <enum value="0x8A10" name="GL_MIN_PBUFFER_VIEWPORT_DIMS_APPLE"/> -->
-        <enum value="0x8A11" name="GL_UNIFORM_BUFFER"/>
+        <enum value="0x8A11" name="GL_UNIFORM_BUFFER" group="CopyBufferSubDataTarget,BufferTargetARB,BufferStorageTarget"/>
         <enum value="0x8A12" name="GL_BUFFER_SERIALIZED_MODIFY_APPLE"/>
         <enum value="0x8A13" name="GL_BUFFER_FLUSHING_UNMAP_APPLE"/>
         <enum value="0x8A14" name="GL_AUX_DEPTH_STENCIL_APPLE"/>
@@ -8813,41 +4345,41 @@ typedef unsigned int GLhandleARB;
             <unused start="0x8A1E" vendor="APPLE"/>
         <enum value="0x8A1F" name="GL_RGB_422_APPLE"/>
             <unused start="0x8A20" end="0x8A27" vendor="APPLE"/>
-        <enum value="0x8A28" name="GL_UNIFORM_BUFFER_BINDING"/>
-        <enum value="0x8A29" name="GL_UNIFORM_BUFFER_START"/>
-        <enum value="0x8A2A" name="GL_UNIFORM_BUFFER_SIZE"/>
-        <enum value="0x8A2B" name="GL_MAX_VERTEX_UNIFORM_BLOCKS"/>
-        <enum value="0x8A2C" name="GL_MAX_GEOMETRY_UNIFORM_BLOCKS"/>
+        <enum value="0x8A28" name="GL_UNIFORM_BUFFER_BINDING" group="GetPName"/>
+        <enum value="0x8A29" name="GL_UNIFORM_BUFFER_START" group="GetPName"/>
+        <enum value="0x8A2A" name="GL_UNIFORM_BUFFER_SIZE" group="GetPName"/>
+        <enum value="0x8A2B" name="GL_MAX_VERTEX_UNIFORM_BLOCKS" group="GetPName"/>
+        <enum value="0x8A2C" name="GL_MAX_GEOMETRY_UNIFORM_BLOCKS" group="GetPName"/>
         <enum value="0x8A2C" name="GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT"/>
         <enum value="0x8A2C" name="GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES"/>
-        <enum value="0x8A2D" name="GL_MAX_FRAGMENT_UNIFORM_BLOCKS"/>
-        <enum value="0x8A2E" name="GL_MAX_COMBINED_UNIFORM_BLOCKS"/>
-        <enum value="0x8A2F" name="GL_MAX_UNIFORM_BUFFER_BINDINGS"/>
-        <enum value="0x8A30" name="GL_MAX_UNIFORM_BLOCK_SIZE"/>
-        <enum value="0x8A31" name="GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS"/>
-        <enum value="0x8A32" name="GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS"/>
+        <enum value="0x8A2D" name="GL_MAX_FRAGMENT_UNIFORM_BLOCKS" group="GetPName"/>
+        <enum value="0x8A2E" name="GL_MAX_COMBINED_UNIFORM_BLOCKS" group="GetPName"/>
+        <enum value="0x8A2F" name="GL_MAX_UNIFORM_BUFFER_BINDINGS" group="GetPName"/>
+        <enum value="0x8A30" name="GL_MAX_UNIFORM_BLOCK_SIZE" group="GetPName"/>
+        <enum value="0x8A31" name="GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS" group="GetPName"/>
+        <enum value="0x8A32" name="GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS" group="GetPName"/>
         <enum value="0x8A32" name="GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT"/>
         <enum value="0x8A32" name="GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES"/>
-        <enum value="0x8A33" name="GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS"/>
-        <enum value="0x8A34" name="GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT"/>
-        <enum value="0x8A35" name="GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH"/>
-        <enum value="0x8A36" name="GL_ACTIVE_UNIFORM_BLOCKS"/>
-        <enum value="0x8A37" name="GL_UNIFORM_TYPE"/>
-        <enum value="0x8A38" name="GL_UNIFORM_SIZE"/>
-        <enum value="0x8A39" name="GL_UNIFORM_NAME_LENGTH"/>
-        <enum value="0x8A3A" name="GL_UNIFORM_BLOCK_INDEX"/>
-        <enum value="0x8A3B" name="GL_UNIFORM_OFFSET"/>
-        <enum value="0x8A3C" name="GL_UNIFORM_ARRAY_STRIDE"/>
-        <enum value="0x8A3D" name="GL_UNIFORM_MATRIX_STRIDE"/>
-        <enum value="0x8A3E" name="GL_UNIFORM_IS_ROW_MAJOR"/>
-        <enum value="0x8A3F" name="GL_UNIFORM_BLOCK_BINDING"/>
-        <enum value="0x8A40" name="GL_UNIFORM_BLOCK_DATA_SIZE"/>
-        <enum value="0x8A41" name="GL_UNIFORM_BLOCK_NAME_LENGTH"/>
-        <enum value="0x8A42" name="GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS"/>
-        <enum value="0x8A43" name="GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES"/>
-        <enum value="0x8A44" name="GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER"/>
-        <enum value="0x8A45" name="GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER"/>
-        <enum value="0x8A46" name="GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER"/>
+        <enum value="0x8A33" name="GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS" group="GetPName"/>
+        <enum value="0x8A34" name="GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT" group="GetPName"/>
+        <enum value="0x8A35" name="GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH" group="ProgramPropertyARB"/>
+        <enum value="0x8A36" name="GL_ACTIVE_UNIFORM_BLOCKS" group="ProgramPropertyARB"/>
+        <enum value="0x8A37" name="GL_UNIFORM_TYPE" group="UniformPName"/>
+        <enum value="0x8A38" name="GL_UNIFORM_SIZE" group="SubroutineParameterName,UniformPName"/>
+        <enum value="0x8A39" name="GL_UNIFORM_NAME_LENGTH" group="SubroutineParameterName,UniformPName"/>
+        <enum value="0x8A3A" name="GL_UNIFORM_BLOCK_INDEX" group="UniformPName"/>
+        <enum value="0x8A3B" name="GL_UNIFORM_OFFSET" group="UniformPName"/>
+        <enum value="0x8A3C" name="GL_UNIFORM_ARRAY_STRIDE" group="UniformPName"/>
+        <enum value="0x8A3D" name="GL_UNIFORM_MATRIX_STRIDE" group="UniformPName"/>
+        <enum value="0x8A3E" name="GL_UNIFORM_IS_ROW_MAJOR" group="UniformPName"/>
+        <enum value="0x8A3F" name="GL_UNIFORM_BLOCK_BINDING" group="UniformBlockPName"/>
+        <enum value="0x8A40" name="GL_UNIFORM_BLOCK_DATA_SIZE" group="UniformBlockPName"/>
+        <enum value="0x8A41" name="GL_UNIFORM_BLOCK_NAME_LENGTH" group="UniformBlockPName"/>
+        <enum value="0x8A42" name="GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS" group="UniformBlockPName"/>
+        <enum value="0x8A43" name="GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES" group="UniformBlockPName"/>
+        <enum value="0x8A44" name="GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER" group="UniformBlockPName"/>
+        <enum value="0x8A45" name="GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER" group="UniformBlockPName"/>
+        <enum value="0x8A46" name="GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER" group="UniformBlockPName"/>
             <unused start="0x8A47" vendor="APPLE"/>
         <enum value="0x8A48" name="GL_TEXTURE_SRGB_DECODE_EXT"/>
         <enum value="0x8A49" name="GL_DECODE_EXT"/>
@@ -8874,128 +4406,128 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x8B30" end="0x8B3F" group="ShaderType" vendor="ARB">
-        <enum value="0x8B30" name="GL_FRAGMENT_SHADER"/>
-        <enum value="0x8B30" name="GL_FRAGMENT_SHADER_ARB"/>
-        <enum value="0x8B31" name="GL_VERTEX_SHADER"/>
-        <enum value="0x8B31" name="GL_VERTEX_SHADER_ARB"/>
+        <enum value="0x8B30" name="GL_FRAGMENT_SHADER" group="PipelineParameterName,ShaderType"/>
+        <enum value="0x8B30" name="GL_FRAGMENT_SHADER_ARB" group="ShaderType"/>
+        <enum value="0x8B31" name="GL_VERTEX_SHADER" group="PipelineParameterName,ShaderType"/>
+        <enum value="0x8B31" name="GL_VERTEX_SHADER_ARB" group="ShaderType"/>
             <unused start="0x8B32" end="0x8B3F" comment="For shader types"/>
     </enums>
 
     <enums namespace="GL" start="0x8B40" end="0x8B47" group="ContainerType" vendor="ARB">
-        <enum value="0x8B40" name="GL_PROGRAM_OBJECT_ARB"/>
-        <enum value="0x8B40" name="GL_PROGRAM_OBJECT_EXT"/>
+        <enum value="0x8B40" name="GL_PROGRAM_OBJECT_ARB" group="ContainerType"/>
+        <enum value="0x8B40" name="GL_PROGRAM_OBJECT_EXT" group="ContainerType"/>
             <unused start="0x8B41" end="0x8B47" comment="For container types"/>
     </enums>
 
     <enums namespace="GL" start="0x8B48" end="0x8B4F" vendor="ARB">
         <enum value="0x8B48" name="GL_SHADER_OBJECT_ARB"/>
         <enum value="0x8B48" name="GL_SHADER_OBJECT_EXT"/>
-        <enum value="0x8B49" name="GL_MAX_FRAGMENT_UNIFORM_COMPONENTS"/>
+        <enum value="0x8B49" name="GL_MAX_FRAGMENT_UNIFORM_COMPONENTS" group="GetPName"/>
         <enum value="0x8B49" name="GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB"/>
-        <enum value="0x8B4A" name="GL_MAX_VERTEX_UNIFORM_COMPONENTS"/>
+        <enum value="0x8B4A" name="GL_MAX_VERTEX_UNIFORM_COMPONENTS" group="GetPName"/>
         <enum value="0x8B4A" name="GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB"/>
-        <enum value="0x8B4B" name="GL_MAX_VARYING_FLOATS"/>
-        <enum value="0x8B4B" name="GL_MAX_VARYING_COMPONENTS" alias="MAX_VARYING_FLOATS"/>
+        <enum value="0x8B4B" name="GL_MAX_VARYING_FLOATS" group="GetPName"/>
+        <enum value="0x8B4B" name="GL_MAX_VARYING_COMPONENTS" alias="GL_MAX_VARYING_FLOATS" group="GetPName"/>
         <enum value="0x8B4B" name="GL_MAX_VARYING_COMPONENTS_EXT"/>
         <enum value="0x8B4B" name="GL_MAX_VARYING_FLOATS_ARB"/>
-        <enum value="0x8B4C" name="GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS"/>
+        <enum value="0x8B4C" name="GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS" group="GetPName"/>
         <enum value="0x8B4C" name="GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB"/>
-        <enum value="0x8B4D" name="GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS"/>
+        <enum value="0x8B4D" name="GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS" group="GetPName"/>
         <enum value="0x8B4D" name="GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB"/>
         <enum value="0x8B4E" name="GL_OBJECT_TYPE_ARB"/>
-        <enum value="0x8B4F" name="GL_SHADER_TYPE"/>
+        <enum value="0x8B4F" name="GL_SHADER_TYPE" group="ShaderParameterName"/>
         <enum value="0x8B4F" name="GL_OBJECT_SUBTYPE_ARB"/>
     </enums>
 
     <enums namespace="GL" start="0x8B50" end="0x8B7F" group="AttributeType" vendor="ARB">
-        <enum value="0x8B50" name="GL_FLOAT_VEC2"/>
-        <enum value="0x8B50" name="GL_FLOAT_VEC2_ARB"/>
-        <enum value="0x8B51" name="GL_FLOAT_VEC3"/>
-        <enum value="0x8B51" name="GL_FLOAT_VEC3_ARB"/>
-        <enum value="0x8B52" name="GL_FLOAT_VEC4"/>
-        <enum value="0x8B52" name="GL_FLOAT_VEC4_ARB"/>
-        <enum value="0x8B53" name="GL_INT_VEC2"/>
-        <enum value="0x8B53" name="GL_INT_VEC2_ARB"/>
-        <enum value="0x8B54" name="GL_INT_VEC3"/>
-        <enum value="0x8B54" name="GL_INT_VEC3_ARB"/>
-        <enum value="0x8B55" name="GL_INT_VEC4"/>
-        <enum value="0x8B55" name="GL_INT_VEC4_ARB"/>
-        <enum value="0x8B56" name="GL_BOOL"/>
-        <enum value="0x8B56" name="GL_BOOL_ARB"/>
-        <enum value="0x8B57" name="GL_BOOL_VEC2"/>
-        <enum value="0x8B57" name="GL_BOOL_VEC2_ARB"/>
-        <enum value="0x8B58" name="GL_BOOL_VEC3"/>
-        <enum value="0x8B58" name="GL_BOOL_VEC3_ARB"/>
-        <enum value="0x8B59" name="GL_BOOL_VEC4"/>
-        <enum value="0x8B59" name="GL_BOOL_VEC4_ARB"/>
-        <enum value="0x8B5A" name="GL_FLOAT_MAT2"/>
-        <enum value="0x8B5A" name="GL_FLOAT_MAT2_ARB"/>
-        <enum value="0x8B5B" name="GL_FLOAT_MAT3"/>
-        <enum value="0x8B5B" name="GL_FLOAT_MAT3_ARB"/>
-        <enum value="0x8B5C" name="GL_FLOAT_MAT4"/>
-        <enum value="0x8B5C" name="GL_FLOAT_MAT4_ARB"/>
-        <enum value="0x8B5D" name="GL_SAMPLER_1D"/>
-        <enum value="0x8B5D" name="GL_SAMPLER_1D_ARB"/>
-        <enum value="0x8B5E" name="GL_SAMPLER_2D"/>
-        <enum value="0x8B5E" name="GL_SAMPLER_2D_ARB"/>
-        <enum value="0x8B5F" name="GL_SAMPLER_3D"/>
-        <enum value="0x8B5F" name="GL_SAMPLER_3D_ARB"/>
-        <enum value="0x8B5F" name="GL_SAMPLER_3D_OES"/>
-        <enum value="0x8B60" name="GL_SAMPLER_CUBE"/>
-        <enum value="0x8B60" name="GL_SAMPLER_CUBE_ARB"/>
-        <enum value="0x8B61" name="GL_SAMPLER_1D_SHADOW"/>
-        <enum value="0x8B61" name="GL_SAMPLER_1D_SHADOW_ARB"/>
-        <enum value="0x8B62" name="GL_SAMPLER_2D_SHADOW"/>
-        <enum value="0x8B62" name="GL_SAMPLER_2D_SHADOW_ARB"/>
-        <enum value="0x8B62" name="GL_SAMPLER_2D_SHADOW_EXT"/>
-        <enum value="0x8B63" name="GL_SAMPLER_2D_RECT"/>
-        <enum value="0x8B63" name="GL_SAMPLER_2D_RECT_ARB"/>
-        <enum value="0x8B64" name="GL_SAMPLER_2D_RECT_SHADOW"/>
-        <enum value="0x8B64" name="GL_SAMPLER_2D_RECT_SHADOW_ARB"/>
-        <enum value="0x8B65" name="GL_FLOAT_MAT2x3"/>
-        <enum value="0x8B65" name="GL_FLOAT_MAT2x3_NV"/>
-        <enum value="0x8B66" name="GL_FLOAT_MAT2x4"/>
-        <enum value="0x8B66" name="GL_FLOAT_MAT2x4_NV"/>
-        <enum value="0x8B67" name="GL_FLOAT_MAT3x2"/>
-        <enum value="0x8B67" name="GL_FLOAT_MAT3x2_NV"/>
-        <enum value="0x8B68" name="GL_FLOAT_MAT3x4"/>
-        <enum value="0x8B68" name="GL_FLOAT_MAT3x4_NV"/>
-        <enum value="0x8B69" name="GL_FLOAT_MAT4x2"/>
-        <enum value="0x8B69" name="GL_FLOAT_MAT4x2_NV"/>
-        <enum value="0x8B6A" name="GL_FLOAT_MAT4x3"/>
-        <enum value="0x8B6A" name="GL_FLOAT_MAT4x3_NV"/>
+        <enum value="0x8B50" name="GL_FLOAT_VEC2" group="AttributeType,UniformType"/>
+        <enum value="0x8B50" name="GL_FLOAT_VEC2_ARB" group="AttributeType"/>
+        <enum value="0x8B51" name="GL_FLOAT_VEC3" group="AttributeType,UniformType"/>
+        <enum value="0x8B51" name="GL_FLOAT_VEC3_ARB" group="AttributeType"/>
+        <enum value="0x8B52" name="GL_FLOAT_VEC4" group="AttributeType,UniformType"/>
+        <enum value="0x8B52" name="GL_FLOAT_VEC4_ARB" group="AttributeType"/>
+        <enum value="0x8B53" name="GL_INT_VEC2" group="AttributeType,UniformType"/>
+        <enum value="0x8B53" name="GL_INT_VEC2_ARB" group="AttributeType"/>
+        <enum value="0x8B54" name="GL_INT_VEC3" group="AttributeType,UniformType"/>
+        <enum value="0x8B54" name="GL_INT_VEC3_ARB" group="AttributeType"/>
+        <enum value="0x8B55" name="GL_INT_VEC4" group="AttributeType,UniformType"/>
+        <enum value="0x8B55" name="GL_INT_VEC4_ARB" group="AttributeType"/>
+        <enum value="0x8B56" name="GL_BOOL" group="AttributeType,UniformType"/>
+        <enum value="0x8B56" name="GL_BOOL_ARB" group="AttributeType"/>
+        <enum value="0x8B57" name="GL_BOOL_VEC2" group="AttributeType,UniformType"/>
+        <enum value="0x8B57" name="GL_BOOL_VEC2_ARB" group="AttributeType"/>
+        <enum value="0x8B58" name="GL_BOOL_VEC3" group="AttributeType,UniformType"/>
+        <enum value="0x8B58" name="GL_BOOL_VEC3_ARB" group="AttributeType"/>
+        <enum value="0x8B59" name="GL_BOOL_VEC4" group="AttributeType,UniformType"/>
+        <enum value="0x8B59" name="GL_BOOL_VEC4_ARB" group="AttributeType"/>
+        <enum value="0x8B5A" name="GL_FLOAT_MAT2" group="AttributeType,UniformType"/>
+        <enum value="0x8B5A" name="GL_FLOAT_MAT2_ARB" group="AttributeType"/>
+        <enum value="0x8B5B" name="GL_FLOAT_MAT3" group="AttributeType,UniformType"/>
+        <enum value="0x8B5B" name="GL_FLOAT_MAT3_ARB" group="AttributeType"/>
+        <enum value="0x8B5C" name="GL_FLOAT_MAT4" group="AttributeType,UniformType"/>
+        <enum value="0x8B5C" name="GL_FLOAT_MAT4_ARB" group="AttributeType"/>
+        <enum value="0x8B5D" name="GL_SAMPLER_1D" group="AttributeType,UniformType"/>
+        <enum value="0x8B5D" name="GL_SAMPLER_1D_ARB" group="AttributeType"/>
+        <enum value="0x8B5E" name="GL_SAMPLER_2D" group="AttributeType,UniformType"/>
+        <enum value="0x8B5E" name="GL_SAMPLER_2D_ARB" group="AttributeType"/>
+        <enum value="0x8B5F" name="GL_SAMPLER_3D" group="AttributeType,UniformType"/>
+        <enum value="0x8B5F" name="GL_SAMPLER_3D_ARB" group="AttributeType"/>
+        <enum value="0x8B5F" name="GL_SAMPLER_3D_OES" group="AttributeType"/>
+        <enum value="0x8B60" name="GL_SAMPLER_CUBE" group="AttributeType,UniformType"/>
+        <enum value="0x8B60" name="GL_SAMPLER_CUBE_ARB" group="AttributeType"/>
+        <enum value="0x8B61" name="GL_SAMPLER_1D_SHADOW" group="AttributeType,UniformType"/>
+        <enum value="0x8B61" name="GL_SAMPLER_1D_SHADOW_ARB" group="AttributeType"/>
+        <enum value="0x8B62" name="GL_SAMPLER_2D_SHADOW" group="AttributeType,UniformType"/>
+        <enum value="0x8B62" name="GL_SAMPLER_2D_SHADOW_ARB" group="AttributeType"/>
+        <enum value="0x8B62" name="GL_SAMPLER_2D_SHADOW_EXT" group="AttributeType"/>
+        <enum value="0x8B63" name="GL_SAMPLER_2D_RECT" group="AttributeType,UniformType"/>
+        <enum value="0x8B63" name="GL_SAMPLER_2D_RECT_ARB" group="AttributeType"/>
+        <enum value="0x8B64" name="GL_SAMPLER_2D_RECT_SHADOW" group="AttributeType,UniformType"/>
+        <enum value="0x8B64" name="GL_SAMPLER_2D_RECT_SHADOW_ARB" group="AttributeType"/>
+        <enum value="0x8B65" name="GL_FLOAT_MAT2x3" group="AttributeType,UniformType"/>
+        <enum value="0x8B65" name="GL_FLOAT_MAT2x3_NV" group="AttributeType"/>
+        <enum value="0x8B66" name="GL_FLOAT_MAT2x4" group="AttributeType,UniformType"/>
+        <enum value="0x8B66" name="GL_FLOAT_MAT2x4_NV" group="AttributeType"/>
+        <enum value="0x8B67" name="GL_FLOAT_MAT3x2" group="AttributeType,UniformType"/>
+        <enum value="0x8B67" name="GL_FLOAT_MAT3x2_NV" group="AttributeType"/>
+        <enum value="0x8B68" name="GL_FLOAT_MAT3x4" group="AttributeType,UniformType"/>
+        <enum value="0x8B68" name="GL_FLOAT_MAT3x4_NV" group="AttributeType"/>
+        <enum value="0x8B69" name="GL_FLOAT_MAT4x2" group="AttributeType,UniformType"/>
+        <enum value="0x8B69" name="GL_FLOAT_MAT4x2_NV" group="AttributeType"/>
+        <enum value="0x8B6A" name="GL_FLOAT_MAT4x3" group="AttributeType,UniformType"/>
+        <enum value="0x8B6A" name="GL_FLOAT_MAT4x3_NV" group="AttributeType"/>
             <unused start="0x8B6B" end="0x8B7F" comment="For attribute types"/>
     </enums>
 
     <enums namespace="GL" start="0x8B80" end="0x8B8F" vendor="ARB">
-        <enum value="0x8B80" name="GL_DELETE_STATUS"/>
+        <enum value="0x8B80" name="GL_DELETE_STATUS" group="ProgramPropertyARB,ShaderParameterName"/>
         <enum value="0x8B80" name="GL_OBJECT_DELETE_STATUS_ARB"/>
-        <enum value="0x8B81" name="GL_COMPILE_STATUS"/>
+        <enum value="0x8B81" name="GL_COMPILE_STATUS" group="ShaderParameterName"/>
         <enum value="0x8B81" name="GL_OBJECT_COMPILE_STATUS_ARB"/>
-        <enum value="0x8B82" name="GL_LINK_STATUS"/>
+        <enum value="0x8B82" name="GL_LINK_STATUS" group="ProgramPropertyARB"/>
         <enum value="0x8B82" name="GL_OBJECT_LINK_STATUS_ARB"/>
-        <enum value="0x8B83" name="GL_VALIDATE_STATUS"/>
+        <enum value="0x8B83" name="GL_VALIDATE_STATUS" group="ProgramPropertyARB"/>
         <enum value="0x8B83" name="GL_OBJECT_VALIDATE_STATUS_ARB"/>
-        <enum value="0x8B84" name="GL_INFO_LOG_LENGTH"/>
+        <enum value="0x8B84" name="GL_INFO_LOG_LENGTH" group="ProgramPropertyARB,ShaderParameterName,PipelineParameterName"/>
         <enum value="0x8B84" name="GL_OBJECT_INFO_LOG_LENGTH_ARB"/>
-        <enum value="0x8B85" name="GL_ATTACHED_SHADERS"/>
+        <enum value="0x8B85" name="GL_ATTACHED_SHADERS" group="ProgramPropertyARB"/>
         <enum value="0x8B85" name="GL_OBJECT_ATTACHED_OBJECTS_ARB"/>
-        <enum value="0x8B86" name="GL_ACTIVE_UNIFORMS"/>
+        <enum value="0x8B86" name="GL_ACTIVE_UNIFORMS" group="ProgramPropertyARB"/>
         <enum value="0x8B86" name="GL_OBJECT_ACTIVE_UNIFORMS_ARB"/>
-        <enum value="0x8B87" name="GL_ACTIVE_UNIFORM_MAX_LENGTH"/>
+        <enum value="0x8B87" name="GL_ACTIVE_UNIFORM_MAX_LENGTH" group="ProgramPropertyARB"/>
         <enum value="0x8B87" name="GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB"/>
-        <enum value="0x8B88" name="GL_SHADER_SOURCE_LENGTH"/>
+        <enum value="0x8B88" name="GL_SHADER_SOURCE_LENGTH" group="ShaderParameterName"/>
         <enum value="0x8B88" name="GL_OBJECT_SHADER_SOURCE_LENGTH_ARB"/>
-        <enum value="0x8B89" name="GL_ACTIVE_ATTRIBUTES"/>
+        <enum value="0x8B89" name="GL_ACTIVE_ATTRIBUTES" group="ProgramPropertyARB"/>
         <enum value="0x8B89" name="GL_OBJECT_ACTIVE_ATTRIBUTES_ARB"/>
-        <enum value="0x8B8A" name="GL_ACTIVE_ATTRIBUTE_MAX_LENGTH"/>
+        <enum value="0x8B8A" name="GL_ACTIVE_ATTRIBUTE_MAX_LENGTH" group="ProgramPropertyARB"/>
         <enum value="0x8B8A" name="GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB"/>
-        <enum value="0x8B8B" name="GL_FRAGMENT_SHADER_DERIVATIVE_HINT"/>
-        <enum value="0x8B8B" name="GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB"/>
-        <enum value="0x8B8B" name="GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES"/>
-        <enum value="0x8B8C" name="GL_SHADING_LANGUAGE_VERSION"/>
+        <enum value="0x8B8B" name="GL_FRAGMENT_SHADER_DERIVATIVE_HINT" group="HintTarget,GetPName"/>
+        <enum value="0x8B8B" name="GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB" group="HintTarget"/>
+        <enum value="0x8B8B" name="GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES" group="HintTarget"/>
+        <enum value="0x8B8C" name="GL_SHADING_LANGUAGE_VERSION" group="StringName"/>
         <enum value="0x8B8C" name="GL_SHADING_LANGUAGE_VERSION_ARB"/>
-        <enum value="0x8B8D" name="GL_CURRENT_PROGRAM"/>
+        <enum value="0x8B8D" name="GL_CURRENT_PROGRAM" group="GetPName"/>
         <enum value="0x8B8D" api="gl" name="GL_ACTIVE_PROGRAM_EXT" alias="GL_CURRENT_PROGRAM" comment="For the OpenGL version of EXT_separate_shader_objects"/>
             <unused start="0x8B8E" end="0x8B8F" vendor="ARB"/>
     </enums>
@@ -9011,9 +4543,9 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8B97" name="GL_PALETTE8_R5_G6_B5_OES"/>
         <enum value="0x8B98" name="GL_PALETTE8_RGBA4_OES"/>
         <enum value="0x8B99" name="GL_PALETTE8_RGB5_A1_OES"/>
-        <enum value="0x8B9A" name="GL_IMPLEMENTATION_COLOR_READ_TYPE"/>
+        <enum value="0x8B9A" name="GL_IMPLEMENTATION_COLOR_READ_TYPE" group="GetFramebufferParameter,GetPName"/>
         <enum value="0x8B9A" name="GL_IMPLEMENTATION_COLOR_READ_TYPE_OES"/>
-        <enum value="0x8B9B" name="GL_IMPLEMENTATION_COLOR_READ_FORMAT"/>
+        <enum value="0x8B9B" name="GL_IMPLEMENTATION_COLOR_READ_FORMAT" group="GetFramebufferParameter,GetPName"/>
         <enum value="0x8B9B" name="GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES"/>
         <enum value="0x8B9C" name="GL_POINT_SIZE_ARRAY_OES"/>
         <enum value="0x8B9D" name="GL_TEXTURE_CROP_RECT_OES"/>
@@ -9037,7 +4569,9 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8BB8" name="GL_TILE_RASTER_ORDER_FIXED_MESA"/>
         <enum value="0x8BB9" name="GL_TILE_RASTER_ORDER_INCREASING_X_MESA"/>
         <enum value="0x8BBA" name="GL_TILE_RASTER_ORDER_INCREASING_Y_MESA"/>
-        <enum value="0x8BBB" name="GL_FRAMEBUFFER_FLIP_Y_MESA" />
+        <enum value="0x8BBB" name="GL_FRAMEBUFFER_FLIP_Y_MESA"/>
+        <enum value="0x8BBC" name="GL_FRAMEBUFFER_FLIP_X_MESA" />
+        <enum value="0x8BBD" name="GL_FRAMEBUFFER_SWAP_XY_MESA" />
     </enums>
 
     <enums namespace="GL" start="0x8BC0" end="0x8BFF" vendor="QCOM" comment="Reassigned from AMD to QCOM">
@@ -9082,7 +4616,7 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8C07" name="GL_FACTOR_ALPHA_MODULATE_IMG"/>
         <enum value="0x8C08" name="GL_FRAGMENT_ALPHA_MODULATE_IMG"/>
         <enum value="0x8C09" name="GL_ADD_BLEND_IMG"/>
-        <enum value="0x8C0A" name="GL_SGX_BINARY_IMG"/>
+        <enum value="0x8C0A" name="GL_SGX_BINARY_IMG" group="ShaderBinaryFormat"/>
             <unused start="0x8C0B" end="0x8C0F" vendor="IMG"/>
     </enums>
 
@@ -9104,38 +4638,38 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8C17" name="GL_UNSIGNED_NORMALIZED"/>
         <enum value="0x8C17" name="GL_UNSIGNED_NORMALIZED_ARB"/>
         <enum value="0x8C17" name="GL_UNSIGNED_NORMALIZED_EXT"/>
-        <enum value="0x8C18" name="GL_TEXTURE_1D_ARRAY"/>
+        <enum value="0x8C18" name="GL_TEXTURE_1D_ARRAY" group="CopyImageSubDataTarget,TextureTarget"/>
         <enum value="0x8C18" name="GL_TEXTURE_1D_ARRAY_EXT"/>
-        <enum value="0x8C19" name="GL_PROXY_TEXTURE_1D_ARRAY"/>
-        <enum value="0x8C19" name="GL_PROXY_TEXTURE_1D_ARRAY_EXT"/>
-        <enum value="0x8C1A" name="GL_TEXTURE_2D_ARRAY"/>
+        <enum value="0x8C19" name="GL_PROXY_TEXTURE_1D_ARRAY" group="TextureTarget"/>
+        <enum value="0x8C19" name="GL_PROXY_TEXTURE_1D_ARRAY_EXT" group="TextureTarget"/>
+        <enum value="0x8C1A" name="GL_TEXTURE_2D_ARRAY" group="CopyImageSubDataTarget,TextureTarget"/>
         <enum value="0x8C1A" name="GL_TEXTURE_2D_ARRAY_EXT"/>
-        <enum value="0x8C1B" name="GL_PROXY_TEXTURE_2D_ARRAY"/>
-        <enum value="0x8C1B" name="GL_PROXY_TEXTURE_2D_ARRAY_EXT"/>
-        <enum value="0x8C1C" name="GL_TEXTURE_BINDING_1D_ARRAY"/>
+        <enum value="0x8C1B" name="GL_PROXY_TEXTURE_2D_ARRAY" group="TextureTarget"/>
+        <enum value="0x8C1B" name="GL_PROXY_TEXTURE_2D_ARRAY_EXT" group="TextureTarget"/>
+        <enum value="0x8C1C" name="GL_TEXTURE_BINDING_1D_ARRAY" group="GetPName"/>
         <enum value="0x8C1C" name="GL_TEXTURE_BINDING_1D_ARRAY_EXT"/>
-        <enum value="0x8C1D" name="GL_TEXTURE_BINDING_2D_ARRAY"/>
+        <enum value="0x8C1D" name="GL_TEXTURE_BINDING_2D_ARRAY" group="GetPName"/>
         <enum value="0x8C1D" name="GL_TEXTURE_BINDING_2D_ARRAY_EXT"/>
             <unused start="0x8C1E" end="0x8C25" vendor="NV"/>
-        <enum value="0x8C26" name="GL_GEOMETRY_PROGRAM_NV"/>
+        <enum value="0x8C26" name="GL_GEOMETRY_PROGRAM_NV" group="ProgramTarget"/>
         <enum value="0x8C27" name="GL_MAX_PROGRAM_OUTPUT_VERTICES_NV"/>
         <enum value="0x8C28" name="GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV"/>
-        <enum value="0x8C29" name="GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS"/>
+        <enum value="0x8C29" name="GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS" group="GetPName"/>
         <enum value="0x8C29" name="GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB"/>
         <enum value="0x8C29" name="GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT"/>
         <enum value="0x8C29" name="GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES"/>
-        <enum value="0x8C2A" name="GL_TEXTURE_BUFFER"/>
+        <enum value="0x8C2A" name="GL_TEXTURE_BUFFER" group="TextureTarget,CopyBufferSubDataTarget,BufferTargetARB,BufferStorageTarget"/>
         <enum value="0x8C2A" name="GL_TEXTURE_BUFFER_ARB"/>
         <enum value="0x8C2A" name="GL_TEXTURE_BUFFER_EXT"/>
         <enum value="0x8C2A" name="GL_TEXTURE_BUFFER_OES"/>
         <enum value="0x8C2A" name="GL_TEXTURE_BUFFER_BINDING" comment="Equivalent to GL_TEXTURE_BUFFER_ARB query, but named more consistently"/>
         <enum value="0x8C2A" name="GL_TEXTURE_BUFFER_BINDING_EXT"/>
         <enum value="0x8C2A" name="GL_TEXTURE_BUFFER_BINDING_OES"/>
-        <enum value="0x8C2B" name="GL_MAX_TEXTURE_BUFFER_SIZE"/>
+        <enum value="0x8C2B" name="GL_MAX_TEXTURE_BUFFER_SIZE" group="GetPName"/>
         <enum value="0x8C2B" name="GL_MAX_TEXTURE_BUFFER_SIZE_ARB"/>
         <enum value="0x8C2B" name="GL_MAX_TEXTURE_BUFFER_SIZE_EXT"/>
         <enum value="0x8C2B" name="GL_MAX_TEXTURE_BUFFER_SIZE_OES"/>
-        <enum value="0x8C2C" name="GL_TEXTURE_BINDING_BUFFER"/>
+        <enum value="0x8C2C" name="GL_TEXTURE_BINDING_BUFFER" group="GetPName"/>
         <enum value="0x8C2C" name="GL_TEXTURE_BINDING_BUFFER_ARB"/>
         <enum value="0x8C2C" name="GL_TEXTURE_BINDING_BUFFER_EXT"/>
         <enum value="0x8C2C" name="GL_TEXTURE_BINDING_BUFFER_OES"/>
@@ -9145,40 +4679,40 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8C2D" name="GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES"/>
         <enum value="0x8C2E" name="GL_TEXTURE_BUFFER_FORMAT_ARB"/>
         <enum value="0x8C2E" name="GL_TEXTURE_BUFFER_FORMAT_EXT"/>
-        <enum value="0x8C2F" name="GL_ANY_SAMPLES_PASSED"/>
+        <enum value="0x8C2F" name="GL_ANY_SAMPLES_PASSED" group="QueryTarget"/>
         <enum value="0x8C2F" name="GL_ANY_SAMPLES_PASSED_EXT"/>
             <unused start="0x8C30" end="0x8C35" vendor="NV"/>
-        <enum value="0x8C36" name="GL_SAMPLE_SHADING"/>
+        <enum value="0x8C36" name="GL_SAMPLE_SHADING" group="EnableCap"/>
         <enum value="0x8C36" name="GL_SAMPLE_SHADING_ARB"/>
         <enum value="0x8C36" name="GL_SAMPLE_SHADING_OES"/>
         <enum value="0x8C37" name="GL_MIN_SAMPLE_SHADING_VALUE"/>
         <enum value="0x8C37" name="GL_MIN_SAMPLE_SHADING_VALUE_ARB"/>
         <enum value="0x8C37" name="GL_MIN_SAMPLE_SHADING_VALUE_OES"/>
             <unused start="0x8C38" end="0x8C39" vendor="NV"/>
-        <enum value="0x8C3A" name="GL_R11F_G11F_B10F"/>
-        <enum value="0x8C3A" name="GL_R11F_G11F_B10F_APPLE"/>
-        <enum value="0x8C3A" name="GL_R11F_G11F_B10F_EXT"/>
-        <enum value="0x8C3B" name="GL_UNSIGNED_INT_10F_11F_11F_REV"/>
-        <enum value="0x8C3B" name="GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE"/>
-        <enum value="0x8C3B" name="GL_UNSIGNED_INT_10F_11F_11F_REV_EXT"/>
+        <enum value="0x8C3A" name="GL_R11F_G11F_B10F" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8C3A" name="GL_R11F_G11F_B10F_APPLE" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8C3A" name="GL_R11F_G11F_B10F_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8C3B" name="GL_UNSIGNED_INT_10F_11F_11F_REV" group="PixelType,VertexAttribPointerType,VertexAttribType"/>
+        <enum value="0x8C3B" name="GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE" group="PixelType"/>
+        <enum value="0x8C3B" name="GL_UNSIGNED_INT_10F_11F_11F_REV_EXT" group="PixelType"/>
         <enum value="0x8C3C" name="GL_RGBA_SIGNED_COMPONENTS_EXT"/>
-        <enum value="0x8C3D" name="GL_RGB9_E5"/>
-        <enum value="0x8C3D" name="GL_RGB9_E5_APPLE"/>
-        <enum value="0x8C3D" name="GL_RGB9_E5_EXT"/>
-        <enum value="0x8C3E" name="GL_UNSIGNED_INT_5_9_9_9_REV"/>
-        <enum value="0x8C3E" name="GL_UNSIGNED_INT_5_9_9_9_REV_APPLE"/>
-        <enum value="0x8C3E" name="GL_UNSIGNED_INT_5_9_9_9_REV_EXT"/>
+        <enum value="0x8C3D" name="GL_RGB9_E5" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8C3D" name="GL_RGB9_E5_APPLE" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8C3D" name="GL_RGB9_E5_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8C3E" name="GL_UNSIGNED_INT_5_9_9_9_REV" group="PixelType"/>
+        <enum value="0x8C3E" name="GL_UNSIGNED_INT_5_9_9_9_REV_APPLE" group="PixelType"/>
+        <enum value="0x8C3E" name="GL_UNSIGNED_INT_5_9_9_9_REV_EXT" group="PixelType"/>
         <enum value="0x8C3F" name="GL_TEXTURE_SHARED_SIZE"/>
         <enum value="0x8C3F" name="GL_TEXTURE_SHARED_SIZE_EXT"/>
-        <enum value="0x8C40" name="GL_SRGB"/>
-        <enum value="0x8C40" name="GL_SRGB_EXT"/>
-        <enum value="0x8C41" name="GL_SRGB8"/>
-        <enum value="0x8C41" name="GL_SRGB8_EXT"/>
-        <enum value="0x8C41" name="GL_SRGB8_NV"/>
-        <enum value="0x8C42" name="GL_SRGB_ALPHA"/>
-        <enum value="0x8C42" name="GL_SRGB_ALPHA_EXT"/>
-        <enum value="0x8C43" name="GL_SRGB8_ALPHA8"/>
-        <enum value="0x8C43" name="GL_SRGB8_ALPHA8_EXT"/>
+        <enum value="0x8C40" name="GL_SRGB" group="InternalFormat"/>
+        <enum value="0x8C40" name="GL_SRGB_EXT" group="InternalFormat"/>
+        <enum value="0x8C41" name="GL_SRGB8" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8C41" name="GL_SRGB8_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8C41" name="GL_SRGB8_NV" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8C42" name="GL_SRGB_ALPHA" group="InternalFormat"/>
+        <enum value="0x8C42" name="GL_SRGB_ALPHA_EXT" group="InternalFormat"/>
+        <enum value="0x8C43" name="GL_SRGB8_ALPHA8" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8C43" name="GL_SRGB8_ALPHA8_EXT" group="InternalFormat,SizedInternalFormat"/>
         <enum value="0x8C44" name="GL_SLUMINANCE_ALPHA"/>
         <enum value="0x8C44" name="GL_SLUMINANCE_ALPHA_EXT"/>
         <enum value="0x8C44" name="GL_SLUMINANCE_ALPHA_NV"/>
@@ -9191,22 +4725,22 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8C47" name="GL_SLUMINANCE8"/>
         <enum value="0x8C47" name="GL_SLUMINANCE8_EXT"/>
         <enum value="0x8C47" name="GL_SLUMINANCE8_NV"/>
-        <enum value="0x8C48" name="GL_COMPRESSED_SRGB"/>
+        <enum value="0x8C48" name="GL_COMPRESSED_SRGB" group="InternalFormat"/>
         <enum value="0x8C48" name="GL_COMPRESSED_SRGB_EXT"/>
-        <enum value="0x8C49" name="GL_COMPRESSED_SRGB_ALPHA"/>
+        <enum value="0x8C49" name="GL_COMPRESSED_SRGB_ALPHA" group="InternalFormat"/>
         <enum value="0x8C49" name="GL_COMPRESSED_SRGB_ALPHA_EXT"/>
         <enum value="0x8C4A" name="GL_COMPRESSED_SLUMINANCE"/>
         <enum value="0x8C4A" name="GL_COMPRESSED_SLUMINANCE_EXT"/>
         <enum value="0x8C4B" name="GL_COMPRESSED_SLUMINANCE_ALPHA"/>
         <enum value="0x8C4B" name="GL_COMPRESSED_SLUMINANCE_ALPHA_EXT"/>
-        <enum value="0x8C4C" name="GL_COMPRESSED_SRGB_S3TC_DXT1_EXT"/>
-        <enum value="0x8C4C" name="GL_COMPRESSED_SRGB_S3TC_DXT1_NV"/>
-        <enum value="0x8C4D" name="GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT"/>
-        <enum value="0x8C4D" name="GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV"/>
-        <enum value="0x8C4E" name="GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT"/>
-        <enum value="0x8C4E" name="GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV"/>
-        <enum value="0x8C4F" name="GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT"/>
-        <enum value="0x8C4F" name="GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV"/>
+        <enum value="0x8C4C" name="GL_COMPRESSED_SRGB_S3TC_DXT1_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8C4C" name="GL_COMPRESSED_SRGB_S3TC_DXT1_NV" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8C4D" name="GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8C4D" name="GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8C4E" name="GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8C4E" name="GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8C4F" name="GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8C4F" name="GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV" group="InternalFormat,SizedInternalFormat"/>
             <unused start="0x8C50" end="0x8C6F" vendor="NV"/>
         <enum value="0x8C70" name="GL_COMPRESSED_LUMINANCE_LATC1_EXT"/>
         <enum value="0x8C71" name="GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT"/>
@@ -9214,7 +4748,7 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8C73" name="GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT"/>
         <enum value="0x8C74" name="GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV"/>
         <enum value="0x8C75" name="GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV"/>
-        <enum value="0x8C76" name="GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH"/>
+        <enum value="0x8C76" name="GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH" group="ProgramPropertyARB"/>
         <enum value="0x8C76" name="GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT"/>
         <enum value="0x8C77" name="GL_BACK_PRIMARY_COLOR_NV"/>
         <enum value="0x8C78" name="GL_BACK_SECONDARY_COLOR_NV"/>
@@ -9224,7 +4758,7 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8C7C" name="GL_PRIMITIVE_ID_NV"/>
         <enum value="0x8C7D" name="GL_GENERIC_ATTRIB_NV"/>
         <enum value="0x8C7E" name="GL_TRANSFORM_FEEDBACK_ATTRIBS_NV"/>
-        <enum value="0x8C7F" name="GL_TRANSFORM_FEEDBACK_BUFFER_MODE"/>
+        <enum value="0x8C7F" name="GL_TRANSFORM_FEEDBACK_BUFFER_MODE" group="ProgramPropertyARB"/>
         <enum value="0x8C7F" name="GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT"/>
         <enum value="0x8C7F" name="GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV"/>
         <enum value="0x8C80" name="GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS"/>
@@ -9232,24 +4766,24 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8C80" name="GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV"/>
         <enum value="0x8C81" name="GL_ACTIVE_VARYINGS_NV"/>
         <enum value="0x8C82" name="GL_ACTIVE_VARYING_MAX_LENGTH_NV"/>
-        <enum value="0x8C83" name="GL_TRANSFORM_FEEDBACK_VARYINGS"/>
+        <enum value="0x8C83" name="GL_TRANSFORM_FEEDBACK_VARYINGS" group="ProgramPropertyARB"/>
         <enum value="0x8C83" name="GL_TRANSFORM_FEEDBACK_VARYINGS_EXT"/>
         <enum value="0x8C83" name="GL_TRANSFORM_FEEDBACK_VARYINGS_NV"/>
-        <enum value="0x8C84" name="GL_TRANSFORM_FEEDBACK_BUFFER_START"/>
+        <enum value="0x8C84" name="GL_TRANSFORM_FEEDBACK_BUFFER_START" group="TransformFeedbackPName,GetPName"/>
         <enum value="0x8C84" name="GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT"/>
         <enum value="0x8C84" name="GL_TRANSFORM_FEEDBACK_BUFFER_START_NV"/>
-        <enum value="0x8C85" name="GL_TRANSFORM_FEEDBACK_BUFFER_SIZE"/>
+        <enum value="0x8C85" name="GL_TRANSFORM_FEEDBACK_BUFFER_SIZE" group="TransformFeedbackPName,GetPName"/>
         <enum value="0x8C85" name="GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT"/>
         <enum value="0x8C85" name="GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV"/>
         <enum value="0x8C86" name="GL_TRANSFORM_FEEDBACK_RECORD_NV"/>
-        <enum value="0x8C87" name="GL_PRIMITIVES_GENERATED"/>
+        <enum value="0x8C87" name="GL_PRIMITIVES_GENERATED" group="QueryTarget"/>
         <enum value="0x8C87" name="GL_PRIMITIVES_GENERATED_EXT"/>
         <enum value="0x8C87" name="GL_PRIMITIVES_GENERATED_NV"/>
         <enum value="0x8C87" name="GL_PRIMITIVES_GENERATED_OES"/>
-        <enum value="0x8C88" name="GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN"/>
+        <enum value="0x8C88" name="GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN" group="QueryTarget"/>
         <enum value="0x8C88" name="GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT"/>
         <enum value="0x8C88" name="GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV"/>
-        <enum value="0x8C89" name="GL_RASTERIZER_DISCARD"/>
+        <enum value="0x8C89" name="GL_RASTERIZER_DISCARD" group="EnableCap"/>
         <enum value="0x8C89" name="GL_RASTERIZER_DISCARD_EXT"/>
         <enum value="0x8C89" name="GL_RASTERIZER_DISCARD_NV"/>
         <enum value="0x8C8A" name="GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS"/>
@@ -9258,36 +4792,37 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8C8B" name="GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS"/>
         <enum value="0x8C8B" name="GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT"/>
         <enum value="0x8C8B" name="GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV"/>
-        <enum value="0x8C8C" name="GL_INTERLEAVED_ATTRIBS"/>
+        <enum value="0x8C8C" name="GL_INTERLEAVED_ATTRIBS" group="TransformFeedbackBufferMode"/>
         <enum value="0x8C8C" name="GL_INTERLEAVED_ATTRIBS_EXT"/>
         <enum value="0x8C8C" name="GL_INTERLEAVED_ATTRIBS_NV"/>
-        <enum value="0x8C8D" name="GL_SEPARATE_ATTRIBS"/>
+        <enum value="0x8C8D" name="GL_SEPARATE_ATTRIBS" group="TransformFeedbackBufferMode"/>
         <enum value="0x8C8D" name="GL_SEPARATE_ATTRIBS_EXT"/>
         <enum value="0x8C8D" name="GL_SEPARATE_ATTRIBS_NV"/>
-        <enum value="0x8C8E" name="GL_TRANSFORM_FEEDBACK_BUFFER"/>
+        <enum value="0x8C8E" name="GL_TRANSFORM_FEEDBACK_BUFFER" group="ProgramInterface,BufferTargetARB,BufferStorageTarget,CopyBufferSubDataTarget"/>
         <enum value="0x8C8E" name="GL_TRANSFORM_FEEDBACK_BUFFER_EXT"/>
         <enum value="0x8C8E" name="GL_TRANSFORM_FEEDBACK_BUFFER_NV"/>
-        <enum value="0x8C8F" name="GL_TRANSFORM_FEEDBACK_BUFFER_BINDING"/>
+        <enum value="0x8C8F" name="GL_TRANSFORM_FEEDBACK_BUFFER_BINDING" group="TransformFeedbackPName,GetPName"/>
         <enum value="0x8C8F" name="GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT"/>
         <enum value="0x8C8F" name="GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV"/>
     </enums>
 
     <enums namespace="GL" start="0x8C90" end="0x8C9F" vendor="QCOM" comment="For Affie Munshi. Reassigned from AMD to QCOM (bug 5874)">
-            <unused start="0x8C90" end="0x8C91" vendor="QCOM"/>
+        <enum value="0x8C90" name="GL_MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM" group="GetPName"/>
+        <enum value="0x8C91" name="GL_MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM" group="GetPName"/>
         <enum value="0x8C92" name="GL_ATC_RGB_AMD"/>
         <enum value="0x8C93" name="GL_ATC_RGBA_EXPLICIT_ALPHA_AMD"/>
             <unused start="0x8C94" end="0x8C9F" vendor="QCOM"/>
     </enums>
     <enums namespace="GL" start="0x8CA0" end="0x8CAF" vendor="ARB">
         <enum value="0x8CA0" name="GL_POINT_SPRITE_COORD_ORIGIN"/>
-        <enum value="0x8CA1" name="GL_LOWER_LEFT"/>
+        <enum value="0x8CA1" name="GL_LOWER_LEFT" group="ClipControlOrigin"/>
         <enum value="0x8CA1" name="GL_LOWER_LEFT_EXT" alias="GL_LOWER_LEFT"/>
-        <enum value="0x8CA2" name="GL_UPPER_LEFT"/>
+        <enum value="0x8CA2" name="GL_UPPER_LEFT" group="ClipControlOrigin"/>
         <enum value="0x8CA2" name="GL_UPPER_LEFT_EXT" alias="GL_UPPER_LEFT"/>
-        <enum value="0x8CA3" name="GL_STENCIL_BACK_REF"/>
-        <enum value="0x8CA4" name="GL_STENCIL_BACK_VALUE_MASK"/>
-        <enum value="0x8CA5" name="GL_STENCIL_BACK_WRITEMASK"/>
-        <enum value="0x8CA6" name="GL_DRAW_FRAMEBUFFER_BINDING"/>
+        <enum value="0x8CA3" name="GL_STENCIL_BACK_REF" group="GetPName"/>
+        <enum value="0x8CA4" name="GL_STENCIL_BACK_VALUE_MASK" group="GetPName"/>
+        <enum value="0x8CA5" name="GL_STENCIL_BACK_WRITEMASK" group="GetPName"/>
+        <enum value="0x8CA6" name="GL_DRAW_FRAMEBUFFER_BINDING" group="GetPName"/>
         <enum value="0x8CA6" name="GL_DRAW_FRAMEBUFFER_BINDING_ANGLE"/>
         <enum value="0x8CA6" name="GL_DRAW_FRAMEBUFFER_BINDING_APPLE"/>
         <enum value="0x8CA6" name="GL_DRAW_FRAMEBUFFER_BINDING_EXT"/>
@@ -9296,33 +4831,33 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8CA6" name="GL_FRAMEBUFFER_BINDING_ANGLE"/>
         <enum value="0x8CA6" name="GL_FRAMEBUFFER_BINDING_EXT"/>
         <enum value="0x8CA6" name="GL_FRAMEBUFFER_BINDING_OES"/>
-        <enum value="0x8CA7" name="GL_RENDERBUFFER_BINDING"/>
+        <enum value="0x8CA7" name="GL_RENDERBUFFER_BINDING" group="GetPName"/>
         <enum value="0x8CA7" name="GL_RENDERBUFFER_BINDING_ANGLE"/>
         <enum value="0x8CA7" name="GL_RENDERBUFFER_BINDING_EXT"/>
         <enum value="0x8CA7" name="GL_RENDERBUFFER_BINDING_OES"/>
-        <enum value="0x8CA8" name="GL_READ_FRAMEBUFFER"/>
+        <enum value="0x8CA8" name="GL_READ_FRAMEBUFFER" group="FramebufferTarget"/>
         <enum value="0x8CA8" name="GL_READ_FRAMEBUFFER_ANGLE"/>
         <enum value="0x8CA8" name="GL_READ_FRAMEBUFFER_APPLE"/>
         <enum value="0x8CA8" name="GL_READ_FRAMEBUFFER_EXT"/>
         <enum value="0x8CA8" name="GL_READ_FRAMEBUFFER_NV"/>
-        <enum value="0x8CA9" name="GL_DRAW_FRAMEBUFFER"/>
+        <enum value="0x8CA9" name="GL_DRAW_FRAMEBUFFER" group="FramebufferTarget"/>
         <enum value="0x8CA9" name="GL_DRAW_FRAMEBUFFER_ANGLE"/>
         <enum value="0x8CA9" name="GL_DRAW_FRAMEBUFFER_APPLE"/>
         <enum value="0x8CA9" name="GL_DRAW_FRAMEBUFFER_EXT"/>
         <enum value="0x8CA9" name="GL_DRAW_FRAMEBUFFER_NV"/>
-        <enum value="0x8CAA" name="GL_READ_FRAMEBUFFER_BINDING"/>
+        <enum value="0x8CAA" name="GL_READ_FRAMEBUFFER_BINDING" group="GetPName"/>
         <enum value="0x8CAA" name="GL_READ_FRAMEBUFFER_BINDING_ANGLE"/>
         <enum value="0x8CAA" name="GL_READ_FRAMEBUFFER_BINDING_APPLE"/>
         <enum value="0x8CAA" name="GL_READ_FRAMEBUFFER_BINDING_EXT"/>
         <enum value="0x8CAA" name="GL_READ_FRAMEBUFFER_BINDING_NV"/>
-        <enum value="0x8CAB" name="GL_RENDERBUFFER_COVERAGE_SAMPLES_NV"/>
-        <enum value="0x8CAB" name="GL_RENDERBUFFER_SAMPLES"/>
-        <enum value="0x8CAB" name="GL_RENDERBUFFER_SAMPLES_ANGLE"/>
-        <enum value="0x8CAB" name="GL_RENDERBUFFER_SAMPLES_APPLE"/>
-        <enum value="0x8CAB" name="GL_RENDERBUFFER_SAMPLES_EXT"/>
-        <enum value="0x8CAB" name="GL_RENDERBUFFER_SAMPLES_NV"/>
-        <enum value="0x8CAC" name="GL_DEPTH_COMPONENT32F"/>
-        <enum value="0x8CAD" name="GL_DEPTH32F_STENCIL8"/>
+        <enum value="0x8CAB" name="GL_RENDERBUFFER_COVERAGE_SAMPLES_NV" group="RenderbufferParameterName"/>
+        <enum value="0x8CAB" name="GL_RENDERBUFFER_SAMPLES" group="RenderbufferParameterName"/>
+        <enum value="0x8CAB" name="GL_RENDERBUFFER_SAMPLES_ANGLE" group="RenderbufferParameterName"/>
+        <enum value="0x8CAB" name="GL_RENDERBUFFER_SAMPLES_APPLE" group="RenderbufferParameterName"/>
+        <enum value="0x8CAB" name="GL_RENDERBUFFER_SAMPLES_EXT" group="RenderbufferParameterName"/>
+        <enum value="0x8CAB" name="GL_RENDERBUFFER_SAMPLES_NV" group="RenderbufferParameterName"/>
+        <enum value="0x8CAC" name="GL_DEPTH_COMPONENT32F" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8CAD" name="GL_DEPTH32F_STENCIL8" group="InternalFormat,SizedInternalFormat"/>
             <unused start="0x8CAE" end="0x8CAF" vendor="ARB"/>
     </enums>
 
@@ -9331,29 +4866,29 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x8CD0" end="0x8D5F" vendor="ARB" comment="Framebuffer object specification + headroom">
-        <enum value="0x8CD0" name="GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE"/>
-        <enum value="0x8CD0" name="GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT"/>
-        <enum value="0x8CD0" name="GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES"/>
-        <enum value="0x8CD1" name="GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME"/>
-        <enum value="0x8CD1" name="GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT"/>
-        <enum value="0x8CD1" name="GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES"/>
-        <enum value="0x8CD2" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL"/>
-        <enum value="0x8CD2" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT"/>
-        <enum value="0x8CD2" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES"/>
-        <enum value="0x8CD3" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE"/>
-        <enum value="0x8CD3" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT"/>
-        <enum value="0x8CD3" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES"/>
-        <enum value="0x8CD4" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT"/>
-        <enum value="0x8CD4" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES"/>
-        <enum value="0x8CD4" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER"/>
-        <enum value="0x8CD4" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT"/>
-        <enum value="0x8CD5" name="GL_FRAMEBUFFER_COMPLETE"/>
+        <enum value="0x8CD0" name="GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8CD0" name="GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8CD0" name="GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8CD1" name="GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8CD1" name="GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8CD1" name="GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8CD2" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8CD2" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8CD2" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8CD3" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8CD3" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8CD3" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8CD4" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8CD4" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8CD4" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8CD4" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8CD5" name="GL_FRAMEBUFFER_COMPLETE" group="FramebufferStatus"/>
         <enum value="0x8CD5" name="GL_FRAMEBUFFER_COMPLETE_EXT"/>
         <enum value="0x8CD5" name="GL_FRAMEBUFFER_COMPLETE_OES"/>
-        <enum value="0x8CD6" name="GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT"/>
+        <enum value="0x8CD6" name="GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT" group="FramebufferStatus"/>
         <enum value="0x8CD6" name="GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT"/>
         <enum value="0x8CD6" name="GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES"/>
-        <enum value="0x8CD7" name="GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"/>
+        <enum value="0x8CD7" name="GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT" group="FramebufferStatus"/>
         <enum value="0x8CD7" name="GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT"/>
         <enum value="0x8CD7" name="GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES"/>
             <unused start="0x8CD8" vendor="ARB" comment="Removed 2005/09/26 in revision #117 of the FBO extension spec"/>
@@ -9363,140 +4898,140 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8CD9" name="GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES"/>
         <enum value="0x8CDA" name="GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT"/>
         <enum value="0x8CDA" name="GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES"/>
-        <enum value="0x8CDB" name="GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER"/>
+        <enum value="0x8CDB" name="GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER" group="FramebufferStatus"/>
         <enum value="0x8CDB" name="GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT"/>
         <enum value="0x8CDB" name="GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES"/>
-        <enum value="0x8CDC" name="GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER"/>
+        <enum value="0x8CDC" name="GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER" group="FramebufferStatus"/>
         <enum value="0x8CDC" name="GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT"/>
         <enum value="0x8CDC" name="GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES"/>
-        <enum value="0x8CDD" name="GL_FRAMEBUFFER_UNSUPPORTED"/>
+        <enum value="0x8CDD" name="GL_FRAMEBUFFER_UNSUPPORTED" group="FramebufferStatus"/>
         <enum value="0x8CDD" name="GL_FRAMEBUFFER_UNSUPPORTED_EXT"/>
         <enum value="0x8CDD" name="GL_FRAMEBUFFER_UNSUPPORTED_OES"/>
             <unused start="0x8CDE" vendor="ARB" comment="Removed 2005/05/31 in revision #113 of the FBO extension spec"/>
             <!-- <enum value="0x8CDE" name="GL_FRAMEBUFFER_STATUS_ERROR_EXT"/> -->
-        <enum value="0x8CDF" name="GL_MAX_COLOR_ATTACHMENTS"/>
-        <enum value="0x8CDF" name="GL_MAX_COLOR_ATTACHMENTS_EXT"/>
-        <enum value="0x8CDF" name="GL_MAX_COLOR_ATTACHMENTS_NV"/>
-        <enum value="0x8CE0" name="GL_COLOR_ATTACHMENT0"/>
-        <enum value="0x8CE0" name="GL_COLOR_ATTACHMENT0_EXT"/>
-        <enum value="0x8CE0" name="GL_COLOR_ATTACHMENT0_NV"/>
-        <enum value="0x8CE0" name="GL_COLOR_ATTACHMENT0_OES"/>
-        <enum value="0x8CE1" name="GL_COLOR_ATTACHMENT1"/>
-        <enum value="0x8CE1" name="GL_COLOR_ATTACHMENT1_EXT"/>
-        <enum value="0x8CE1" name="GL_COLOR_ATTACHMENT1_NV"/>
-        <enum value="0x8CE2" name="GL_COLOR_ATTACHMENT2"/>
-        <enum value="0x8CE2" name="GL_COLOR_ATTACHMENT2_EXT"/>
-        <enum value="0x8CE2" name="GL_COLOR_ATTACHMENT2_NV"/>
-        <enum value="0x8CE3" name="GL_COLOR_ATTACHMENT3"/>
-        <enum value="0x8CE3" name="GL_COLOR_ATTACHMENT3_EXT"/>
-        <enum value="0x8CE3" name="GL_COLOR_ATTACHMENT3_NV"/>
-        <enum value="0x8CE4" name="GL_COLOR_ATTACHMENT4"/>
-        <enum value="0x8CE4" name="GL_COLOR_ATTACHMENT4_EXT"/>
-        <enum value="0x8CE4" name="GL_COLOR_ATTACHMENT4_NV"/>
-        <enum value="0x8CE5" name="GL_COLOR_ATTACHMENT5"/>
-        <enum value="0x8CE5" name="GL_COLOR_ATTACHMENT5_EXT"/>
-        <enum value="0x8CE5" name="GL_COLOR_ATTACHMENT5_NV"/>
-        <enum value="0x8CE6" name="GL_COLOR_ATTACHMENT6"/>
-        <enum value="0x8CE6" name="GL_COLOR_ATTACHMENT6_EXT"/>
-        <enum value="0x8CE6" name="GL_COLOR_ATTACHMENT6_NV"/>
-        <enum value="0x8CE7" name="GL_COLOR_ATTACHMENT7"/>
-        <enum value="0x8CE7" name="GL_COLOR_ATTACHMENT7_EXT"/>
-        <enum value="0x8CE7" name="GL_COLOR_ATTACHMENT7_NV"/>
-        <enum value="0x8CE8" name="GL_COLOR_ATTACHMENT8"/>
-        <enum value="0x8CE8" name="GL_COLOR_ATTACHMENT8_EXT"/>
-        <enum value="0x8CE8" name="GL_COLOR_ATTACHMENT8_NV"/>
-        <enum value="0x8CE9" name="GL_COLOR_ATTACHMENT9"/>
-        <enum value="0x8CE9" name="GL_COLOR_ATTACHMENT9_EXT"/>
-        <enum value="0x8CE9" name="GL_COLOR_ATTACHMENT9_NV"/>
-        <enum value="0x8CEA" name="GL_COLOR_ATTACHMENT10"/>
-        <enum value="0x8CEA" name="GL_COLOR_ATTACHMENT10_EXT"/>
-        <enum value="0x8CEA" name="GL_COLOR_ATTACHMENT10_NV"/>
-        <enum value="0x8CEB" name="GL_COLOR_ATTACHMENT11"/>
-        <enum value="0x8CEB" name="GL_COLOR_ATTACHMENT11_EXT"/>
-        <enum value="0x8CEB" name="GL_COLOR_ATTACHMENT11_NV"/>
-        <enum value="0x8CEC" name="GL_COLOR_ATTACHMENT12"/>
-        <enum value="0x8CEC" name="GL_COLOR_ATTACHMENT12_EXT"/>
-        <enum value="0x8CEC" name="GL_COLOR_ATTACHMENT12_NV"/>
-        <enum value="0x8CED" name="GL_COLOR_ATTACHMENT13"/>
-        <enum value="0x8CED" name="GL_COLOR_ATTACHMENT13_EXT"/>
-        <enum value="0x8CED" name="GL_COLOR_ATTACHMENT13_NV"/>
-        <enum value="0x8CEE" name="GL_COLOR_ATTACHMENT14"/>
-        <enum value="0x8CEE" name="GL_COLOR_ATTACHMENT14_EXT"/>
-        <enum value="0x8CEE" name="GL_COLOR_ATTACHMENT14_NV"/>
-        <enum value="0x8CEF" name="GL_COLOR_ATTACHMENT15"/>
-        <enum value="0x8CEF" name="GL_COLOR_ATTACHMENT15_EXT"/>
-        <enum value="0x8CEF" name="GL_COLOR_ATTACHMENT15_NV"/>
-        <enum value="0x8CF0" name="GL_COLOR_ATTACHMENT16"/>
-        <enum value="0x8CF1" name="GL_COLOR_ATTACHMENT17"/>
-        <enum value="0x8CF2" name="GL_COLOR_ATTACHMENT18"/>
-        <enum value="0x8CF3" name="GL_COLOR_ATTACHMENT19"/>
-        <enum value="0x8CF4" name="GL_COLOR_ATTACHMENT20"/>
-        <enum value="0x8CF5" name="GL_COLOR_ATTACHMENT21"/>
-        <enum value="0x8CF6" name="GL_COLOR_ATTACHMENT22"/>
-        <enum value="0x8CF7" name="GL_COLOR_ATTACHMENT23"/>
-        <enum value="0x8CF8" name="GL_COLOR_ATTACHMENT24"/>
-        <enum value="0x8CF9" name="GL_COLOR_ATTACHMENT25"/>
-        <enum value="0x8CFA" name="GL_COLOR_ATTACHMENT26"/>
-        <enum value="0x8CFB" name="GL_COLOR_ATTACHMENT27"/>
-        <enum value="0x8CFC" name="GL_COLOR_ATTACHMENT28"/>
-        <enum value="0x8CFD" name="GL_COLOR_ATTACHMENT29"/>
-        <enum value="0x8CFE" name="GL_COLOR_ATTACHMENT30"/>
-        <enum value="0x8CFF" name="GL_COLOR_ATTACHMENT31"/>
-        <enum value="0x8D00" name="GL_DEPTH_ATTACHMENT"/>
-        <enum value="0x8D00" name="GL_DEPTH_ATTACHMENT_EXT"/>
-        <enum value="0x8D00" name="GL_DEPTH_ATTACHMENT_OES"/>
+        <enum value="0x8CDF" name="GL_MAX_COLOR_ATTACHMENTS" group="GetPName"/>
+        <enum value="0x8CDF" name="GL_MAX_COLOR_ATTACHMENTS_EXT" group="GetPName"/>
+        <enum value="0x8CDF" name="GL_MAX_COLOR_ATTACHMENTS_NV" group="GetPName"/>
+        <enum value="0x8CE0" name="GL_COLOR_ATTACHMENT0" group="ColorBuffer,DrawBufferMode,ReadBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE0" name="GL_COLOR_ATTACHMENT0_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE0" name="GL_COLOR_ATTACHMENT0_NV" group="InvalidateFramebufferAttachment,DrawBufferMode"/>
+        <enum value="0x8CE0" name="GL_COLOR_ATTACHMENT0_OES" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE1" name="GL_COLOR_ATTACHMENT1" group="ColorBuffer,DrawBufferMode,ReadBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE1" name="GL_COLOR_ATTACHMENT1_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE1" name="GL_COLOR_ATTACHMENT1_NV" group="InvalidateFramebufferAttachment,DrawBufferMode"/>
+        <enum value="0x8CE2" name="GL_COLOR_ATTACHMENT2" group="ColorBuffer,DrawBufferMode,ReadBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE2" name="GL_COLOR_ATTACHMENT2_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE2" name="GL_COLOR_ATTACHMENT2_NV" group="InvalidateFramebufferAttachment,DrawBufferMode"/>
+        <enum value="0x8CE3" name="GL_COLOR_ATTACHMENT3" group="ColorBuffer,DrawBufferMode,ReadBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE3" name="GL_COLOR_ATTACHMENT3_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE3" name="GL_COLOR_ATTACHMENT3_NV" group="InvalidateFramebufferAttachment,DrawBufferMode"/>
+        <enum value="0x8CE4" name="GL_COLOR_ATTACHMENT4" group="ColorBuffer,DrawBufferMode,ReadBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE4" name="GL_COLOR_ATTACHMENT4_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE4" name="GL_COLOR_ATTACHMENT4_NV" group="InvalidateFramebufferAttachment,DrawBufferMode"/>
+        <enum value="0x8CE5" name="GL_COLOR_ATTACHMENT5" group="ColorBuffer,DrawBufferMode,ReadBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE5" name="GL_COLOR_ATTACHMENT5_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE5" name="GL_COLOR_ATTACHMENT5_NV" group="InvalidateFramebufferAttachment,DrawBufferMode"/>
+        <enum value="0x8CE6" name="GL_COLOR_ATTACHMENT6" group="ColorBuffer,DrawBufferMode,ReadBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE6" name="GL_COLOR_ATTACHMENT6_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE6" name="GL_COLOR_ATTACHMENT6_NV" group="InvalidateFramebufferAttachment,DrawBufferMode"/>
+        <enum value="0x8CE7" name="GL_COLOR_ATTACHMENT7" group="ColorBuffer,DrawBufferMode,ReadBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE7" name="GL_COLOR_ATTACHMENT7_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE7" name="GL_COLOR_ATTACHMENT7_NV" group="InvalidateFramebufferAttachment,DrawBufferMode"/>
+        <enum value="0x8CE8" name="GL_COLOR_ATTACHMENT8" group="ColorBuffer,DrawBufferMode,ReadBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE8" name="GL_COLOR_ATTACHMENT8_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE8" name="GL_COLOR_ATTACHMENT8_NV" group="InvalidateFramebufferAttachment,DrawBufferMode"/>
+        <enum value="0x8CE9" name="GL_COLOR_ATTACHMENT9" group="ColorBuffer,DrawBufferMode,ReadBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE9" name="GL_COLOR_ATTACHMENT9_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8CE9" name="GL_COLOR_ATTACHMENT9_NV" group="InvalidateFramebufferAttachment,DrawBufferMode"/>
+        <enum value="0x8CEA" name="GL_COLOR_ATTACHMENT10" group="ColorBuffer,DrawBufferMode,ReadBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CEA" name="GL_COLOR_ATTACHMENT10_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8CEA" name="GL_COLOR_ATTACHMENT10_NV" group="InvalidateFramebufferAttachment,DrawBufferMode"/>
+        <enum value="0x8CEB" name="GL_COLOR_ATTACHMENT11" group="ColorBuffer,DrawBufferMode,ReadBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CEB" name="GL_COLOR_ATTACHMENT11_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8CEB" name="GL_COLOR_ATTACHMENT11_NV" group="InvalidateFramebufferAttachment,DrawBufferMode"/>
+        <enum value="0x8CEC" name="GL_COLOR_ATTACHMENT12" group="ColorBuffer,DrawBufferMode,ReadBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CEC" name="GL_COLOR_ATTACHMENT12_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8CEC" name="GL_COLOR_ATTACHMENT12_NV" group="InvalidateFramebufferAttachment,DrawBufferMode"/>
+        <enum value="0x8CED" name="GL_COLOR_ATTACHMENT13" group="ColorBuffer,DrawBufferMode,ReadBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CED" name="GL_COLOR_ATTACHMENT13_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8CED" name="GL_COLOR_ATTACHMENT13_NV" group="InvalidateFramebufferAttachment,DrawBufferMode"/>
+        <enum value="0x8CEE" name="GL_COLOR_ATTACHMENT14" group="ColorBuffer,DrawBufferMode,ReadBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CEE" name="GL_COLOR_ATTACHMENT14_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8CEE" name="GL_COLOR_ATTACHMENT14_NV" group="InvalidateFramebufferAttachment,DrawBufferMode"/>
+        <enum value="0x8CEF" name="GL_COLOR_ATTACHMENT15" group="ColorBuffer,DrawBufferMode,ReadBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CEF" name="GL_COLOR_ATTACHMENT15_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8CEF" name="GL_COLOR_ATTACHMENT15_NV" group="InvalidateFramebufferAttachment,DrawBufferMode"/>
+        <enum value="0x8CF0" name="GL_COLOR_ATTACHMENT16" group="ColorBuffer,DrawBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CF1" name="GL_COLOR_ATTACHMENT17" group="ColorBuffer,DrawBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CF2" name="GL_COLOR_ATTACHMENT18" group="ColorBuffer,DrawBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CF3" name="GL_COLOR_ATTACHMENT19" group="ColorBuffer,DrawBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CF4" name="GL_COLOR_ATTACHMENT20" group="ColorBuffer,DrawBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CF5" name="GL_COLOR_ATTACHMENT21" group="ColorBuffer,DrawBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CF6" name="GL_COLOR_ATTACHMENT22" group="ColorBuffer,DrawBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CF7" name="GL_COLOR_ATTACHMENT23" group="ColorBuffer,DrawBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CF8" name="GL_COLOR_ATTACHMENT24" group="ColorBuffer,DrawBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CF9" name="GL_COLOR_ATTACHMENT25" group="ColorBuffer,DrawBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CFA" name="GL_COLOR_ATTACHMENT26" group="ColorBuffer,DrawBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CFB" name="GL_COLOR_ATTACHMENT27" group="ColorBuffer,DrawBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CFC" name="GL_COLOR_ATTACHMENT28" group="ColorBuffer,DrawBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CFD" name="GL_COLOR_ATTACHMENT29" group="ColorBuffer,DrawBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CFE" name="GL_COLOR_ATTACHMENT30" group="ColorBuffer,DrawBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8CFF" name="GL_COLOR_ATTACHMENT31" group="ColorBuffer,DrawBufferMode,FramebufferAttachment,InvalidateFramebufferAttachment"/>
+        <enum value="0x8D00" name="GL_DEPTH_ATTACHMENT" group="InvalidateFramebufferAttachment,FramebufferAttachment"/>
+        <enum value="0x8D00" name="GL_DEPTH_ATTACHMENT_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8D00" name="GL_DEPTH_ATTACHMENT_OES" group="InvalidateFramebufferAttachment"/>
             <unused start="0x8D01" end="0x8D1F" vendor="ARB" comment="For depth attachments 16-31"/>
-        <enum value="0x8D20" name="GL_STENCIL_ATTACHMENT"/>
-        <enum value="0x8D20" name="GL_STENCIL_ATTACHMENT_EXT"/>
-        <enum value="0x8D20" name="GL_STENCIL_ATTACHMENT_OES"/>
+        <enum value="0x8D20" name="GL_STENCIL_ATTACHMENT" group="FramebufferAttachment"/>
+        <enum value="0x8D20" name="GL_STENCIL_ATTACHMENT_EXT" group="InvalidateFramebufferAttachment"/>
+        <enum value="0x8D20" name="GL_STENCIL_ATTACHMENT_OES" group="InvalidateFramebufferAttachment"/>
             <unused start="0x8D21" end="0x8D3F" vendor="ARB" comment="For stencil attachments 16-31"/>
-        <enum value="0x8D40" name="GL_FRAMEBUFFER"/>
+        <enum value="0x8D40" name="GL_FRAMEBUFFER" group="ObjectIdentifier,FramebufferTarget"/>
         <enum value="0x8D40" name="GL_FRAMEBUFFER_EXT"/>
-        <enum value="0x8D40" name="GL_FRAMEBUFFER_OES"/>
-        <enum value="0x8D41" name="GL_RENDERBUFFER"/>
+        <enum value="0x8D40" name="GL_FRAMEBUFFER_OES" group="FramebufferTarget"/>
+        <enum value="0x8D41" name="GL_RENDERBUFFER" group="ObjectIdentifier,RenderbufferTarget,CopyImageSubDataTarget,TextureTarget"/>
         <enum value="0x8D41" name="GL_RENDERBUFFER_EXT"/>
-        <enum value="0x8D41" name="GL_RENDERBUFFER_OES"/>
-        <enum value="0x8D42" name="GL_RENDERBUFFER_WIDTH"/>
-        <enum value="0x8D42" name="GL_RENDERBUFFER_WIDTH_EXT"/>
-        <enum value="0x8D42" name="GL_RENDERBUFFER_WIDTH_OES"/>
-        <enum value="0x8D43" name="GL_RENDERBUFFER_HEIGHT"/>
-        <enum value="0x8D43" name="GL_RENDERBUFFER_HEIGHT_EXT"/>
-        <enum value="0x8D43" name="GL_RENDERBUFFER_HEIGHT_OES"/>
-        <enum value="0x8D44" name="GL_RENDERBUFFER_INTERNAL_FORMAT"/>
-        <enum value="0x8D44" name="GL_RENDERBUFFER_INTERNAL_FORMAT_EXT"/>
-        <enum value="0x8D44" name="GL_RENDERBUFFER_INTERNAL_FORMAT_OES"/>
+        <enum value="0x8D41" name="GL_RENDERBUFFER_OES" group="RenderbufferTarget"/>
+        <enum value="0x8D42" name="GL_RENDERBUFFER_WIDTH" group="RenderbufferParameterName"/>
+        <enum value="0x8D42" name="GL_RENDERBUFFER_WIDTH_EXT" group="RenderbufferParameterName"/>
+        <enum value="0x8D42" name="GL_RENDERBUFFER_WIDTH_OES" group="RenderbufferParameterName"/>
+        <enum value="0x8D43" name="GL_RENDERBUFFER_HEIGHT" group="RenderbufferParameterName"/>
+        <enum value="0x8D43" name="GL_RENDERBUFFER_HEIGHT_EXT" group="RenderbufferParameterName"/>
+        <enum value="0x8D43" name="GL_RENDERBUFFER_HEIGHT_OES" group="RenderbufferParameterName"/>
+        <enum value="0x8D44" name="GL_RENDERBUFFER_INTERNAL_FORMAT" group="RenderbufferParameterName"/>
+        <enum value="0x8D44" name="GL_RENDERBUFFER_INTERNAL_FORMAT_EXT" group="RenderbufferParameterName"/>
+        <enum value="0x8D44" name="GL_RENDERBUFFER_INTERNAL_FORMAT_OES" group="RenderbufferParameterName"/>
             <unused start="0x8D45" vendor="ARB" comment="Was for GL_STENCIL_INDEX_EXT, but now use core STENCIL_INDEX instead"/>
-        <enum value="0x8D46" name="GL_STENCIL_INDEX1"/>
-        <enum value="0x8D46" name="GL_STENCIL_INDEX1_EXT"/>
-        <enum value="0x8D46" name="GL_STENCIL_INDEX1_OES"/>
-        <enum value="0x8D47" name="GL_STENCIL_INDEX4"/>
-        <enum value="0x8D47" name="GL_STENCIL_INDEX4_EXT"/>
-        <enum value="0x8D47" name="GL_STENCIL_INDEX4_OES"/>
-        <enum value="0x8D48" name="GL_STENCIL_INDEX8"/>
-        <enum value="0x8D48" name="GL_STENCIL_INDEX8_EXT"/>
-        <enum value="0x8D48" name="GL_STENCIL_INDEX8_OES"/>
-        <enum value="0x8D49" name="GL_STENCIL_INDEX16"/>
-        <enum value="0x8D49" name="GL_STENCIL_INDEX16_EXT"/>
+        <enum value="0x8D46" name="GL_STENCIL_INDEX1" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D46" name="GL_STENCIL_INDEX1_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D46" name="GL_STENCIL_INDEX1_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D47" name="GL_STENCIL_INDEX4" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D47" name="GL_STENCIL_INDEX4_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D47" name="GL_STENCIL_INDEX4_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D48" name="GL_STENCIL_INDEX8" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D48" name="GL_STENCIL_INDEX8_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D48" name="GL_STENCIL_INDEX8_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D49" name="GL_STENCIL_INDEX16" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D49" name="GL_STENCIL_INDEX16_EXT" group="InternalFormat,SizedInternalFormat"/>
             <unused start="0x8D4A" end="0x8D4F" vendor="ARB" comment="For additional stencil formats"/>
-        <enum value="0x8D50" name="GL_RENDERBUFFER_RED_SIZE"/>
-        <enum value="0x8D50" name="GL_RENDERBUFFER_RED_SIZE_EXT"/>
-        <enum value="0x8D50" name="GL_RENDERBUFFER_RED_SIZE_OES"/>
-        <enum value="0x8D51" name="GL_RENDERBUFFER_GREEN_SIZE"/>
-        <enum value="0x8D51" name="GL_RENDERBUFFER_GREEN_SIZE_EXT"/>
-        <enum value="0x8D51" name="GL_RENDERBUFFER_GREEN_SIZE_OES"/>
-        <enum value="0x8D52" name="GL_RENDERBUFFER_BLUE_SIZE"/>
-        <enum value="0x8D52" name="GL_RENDERBUFFER_BLUE_SIZE_EXT"/>
-        <enum value="0x8D52" name="GL_RENDERBUFFER_BLUE_SIZE_OES"/>
-        <enum value="0x8D53" name="GL_RENDERBUFFER_ALPHA_SIZE"/>
-        <enum value="0x8D53" name="GL_RENDERBUFFER_ALPHA_SIZE_EXT"/>
-        <enum value="0x8D53" name="GL_RENDERBUFFER_ALPHA_SIZE_OES"/>
-        <enum value="0x8D54" name="GL_RENDERBUFFER_DEPTH_SIZE"/>
-        <enum value="0x8D54" name="GL_RENDERBUFFER_DEPTH_SIZE_EXT"/>
-        <enum value="0x8D54" name="GL_RENDERBUFFER_DEPTH_SIZE_OES"/>
-        <enum value="0x8D55" name="GL_RENDERBUFFER_STENCIL_SIZE"/>
-        <enum value="0x8D55" name="GL_RENDERBUFFER_STENCIL_SIZE_EXT"/>
-        <enum value="0x8D55" name="GL_RENDERBUFFER_STENCIL_SIZE_OES"/>
-        <enum value="0x8D56" name="GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE"/>
+        <enum value="0x8D50" name="GL_RENDERBUFFER_RED_SIZE" group="RenderbufferParameterName"/>
+        <enum value="0x8D50" name="GL_RENDERBUFFER_RED_SIZE_EXT" group="RenderbufferParameterName"/>
+        <enum value="0x8D50" name="GL_RENDERBUFFER_RED_SIZE_OES" group="RenderbufferParameterName"/>
+        <enum value="0x8D51" name="GL_RENDERBUFFER_GREEN_SIZE" group="RenderbufferParameterName"/>
+        <enum value="0x8D51" name="GL_RENDERBUFFER_GREEN_SIZE_EXT" group="RenderbufferParameterName"/>
+        <enum value="0x8D51" name="GL_RENDERBUFFER_GREEN_SIZE_OES" group="RenderbufferParameterName"/>
+        <enum value="0x8D52" name="GL_RENDERBUFFER_BLUE_SIZE" group="RenderbufferParameterName"/>
+        <enum value="0x8D52" name="GL_RENDERBUFFER_BLUE_SIZE_EXT" group="RenderbufferParameterName"/>
+        <enum value="0x8D52" name="GL_RENDERBUFFER_BLUE_SIZE_OES" group="RenderbufferParameterName"/>
+        <enum value="0x8D53" name="GL_RENDERBUFFER_ALPHA_SIZE" group="RenderbufferParameterName"/>
+        <enum value="0x8D53" name="GL_RENDERBUFFER_ALPHA_SIZE_EXT" group="RenderbufferParameterName"/>
+        <enum value="0x8D53" name="GL_RENDERBUFFER_ALPHA_SIZE_OES" group="RenderbufferParameterName"/>
+        <enum value="0x8D54" name="GL_RENDERBUFFER_DEPTH_SIZE" group="RenderbufferParameterName"/>
+        <enum value="0x8D54" name="GL_RENDERBUFFER_DEPTH_SIZE_EXT" group="RenderbufferParameterName"/>
+        <enum value="0x8D54" name="GL_RENDERBUFFER_DEPTH_SIZE_OES" group="RenderbufferParameterName"/>
+        <enum value="0x8D55" name="GL_RENDERBUFFER_STENCIL_SIZE" group="RenderbufferParameterName"/>
+        <enum value="0x8D55" name="GL_RENDERBUFFER_STENCIL_SIZE_EXT" group="RenderbufferParameterName"/>
+        <enum value="0x8D55" name="GL_RENDERBUFFER_STENCIL_SIZE_OES" group="RenderbufferParameterName"/>
+        <enum value="0x8D56" name="GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE" group="FramebufferStatus"/>
         <enum value="0x8D56" name="GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE"/>
         <enum value="0x8D56" name="GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE"/>
         <enum value="0x8D56" name="GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT"/>
@@ -9510,93 +5045,93 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x8D60" end="0x8D6F" vendor="OES">
-        <enum value="0x8D60" name="GL_TEXTURE_GEN_STR_OES"/>
+        <enum value="0x8D60" name="GL_TEXTURE_GEN_STR_OES" group="EnableCap,GetPName,TextureCoordName"/>
         <enum value="0x8D61" name="GL_HALF_FLOAT_OES"/>
-        <enum value="0x8D62" name="GL_RGB565_OES"/>
-        <enum value="0x8D62" name="GL_RGB565"/>
+        <enum value="0x8D62" name="GL_RGB565_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D62" name="GL_RGB565" group="InternalFormat,SizedInternalFormat"/>
             <unused start="0x8D63" vendor="OES" comment="Was GL_TEXTURE_IMMUTABLE_LEVELS in draft ES 3.0 spec"/>
-        <enum value="0x8D64" name="GL_ETC1_RGB8_OES"/>
+        <enum value="0x8D64" name="GL_ETC1_RGB8_OES" group="InternalFormat,SizedInternalFormat"/>
         <enum value="0x8D65" name="GL_TEXTURE_EXTERNAL_OES"/>
         <enum value="0x8D66" name="GL_SAMPLER_EXTERNAL_OES"/>
         <enum value="0x8D67" name="GL_TEXTURE_BINDING_EXTERNAL_OES"/>
         <enum value="0x8D68" name="GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES"/>
-        <enum value="0x8D69" name="GL_PRIMITIVE_RESTART_FIXED_INDEX"/>
-        <enum value="0x8D6A" name="GL_ANY_SAMPLES_PASSED_CONSERVATIVE"/>
+        <enum value="0x8D69" name="GL_PRIMITIVE_RESTART_FIXED_INDEX" group="EnableCap"/>
+        <enum value="0x8D6A" name="GL_ANY_SAMPLES_PASSED_CONSERVATIVE" group="QueryTarget"/>
         <enum value="0x8D6A" name="GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT"/>
-        <enum value="0x8D6B" name="GL_MAX_ELEMENT_INDEX"/>
-        <enum value="0x8D6C" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT"/>
+        <enum value="0x8D6B" name="GL_MAX_ELEMENT_INDEX" group="GetPName"/>
+        <enum value="0x8D6C" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT" group="FramebufferAttachmentParameterName"/>
             <unused start="0x8D6D" end="0x8D6F" vendor="OES"/>
     </enums>
 
     <enums namespace="GL" start="0x8D70" end="0x8DEF" vendor="NV" comment="For Pat Brown 2005/10/13">
-        <enum value="0x8D70" name="GL_RGBA32UI"/>
-        <enum value="0x8D70" name="GL_RGBA32UI_EXT"/>
-        <enum value="0x8D71" name="GL_RGB32UI"/>
-        <enum value="0x8D71" name="GL_RGB32UI_EXT"/>
-        <enum value="0x8D72" name="GL_ALPHA32UI_EXT"/>
-        <enum value="0x8D73" name="GL_INTENSITY32UI_EXT"/>
-        <enum value="0x8D74" name="GL_LUMINANCE32UI_EXT"/>
-        <enum value="0x8D75" name="GL_LUMINANCE_ALPHA32UI_EXT"/>
-        <enum value="0x8D76" name="GL_RGBA16UI"/>
-        <enum value="0x8D76" name="GL_RGBA16UI_EXT"/>
-        <enum value="0x8D77" name="GL_RGB16UI"/>
-        <enum value="0x8D77" name="GL_RGB16UI_EXT"/>
-        <enum value="0x8D78" name="GL_ALPHA16UI_EXT"/>
-        <enum value="0x8D79" name="GL_INTENSITY16UI_EXT"/>
-        <enum value="0x8D7A" name="GL_LUMINANCE16UI_EXT"/>
-        <enum value="0x8D7B" name="GL_LUMINANCE_ALPHA16UI_EXT"/>
-        <enum value="0x8D7C" name="GL_RGBA8UI"/>
-        <enum value="0x8D7C" name="GL_RGBA8UI_EXT"/>
-        <enum value="0x8D7D" name="GL_RGB8UI"/>
-        <enum value="0x8D7D" name="GL_RGB8UI_EXT"/>
-        <enum value="0x8D7E" name="GL_ALPHA8UI_EXT"/>
-        <enum value="0x8D7F" name="GL_INTENSITY8UI_EXT"/>
-        <enum value="0x8D80" name="GL_LUMINANCE8UI_EXT"/>
-        <enum value="0x8D81" name="GL_LUMINANCE_ALPHA8UI_EXT"/>
-        <enum value="0x8D82" name="GL_RGBA32I"/>
-        <enum value="0x8D82" name="GL_RGBA32I_EXT"/>
-        <enum value="0x8D83" name="GL_RGB32I"/>
-        <enum value="0x8D83" name="GL_RGB32I_EXT"/>
-        <enum value="0x8D84" name="GL_ALPHA32I_EXT"/>
-        <enum value="0x8D85" name="GL_INTENSITY32I_EXT"/>
-        <enum value="0x8D86" name="GL_LUMINANCE32I_EXT"/>
-        <enum value="0x8D87" name="GL_LUMINANCE_ALPHA32I_EXT"/>
-        <enum value="0x8D88" name="GL_RGBA16I"/>
-        <enum value="0x8D88" name="GL_RGBA16I_EXT"/>
-        <enum value="0x8D89" name="GL_RGB16I"/>
-        <enum value="0x8D89" name="GL_RGB16I_EXT"/>
-        <enum value="0x8D8A" name="GL_ALPHA16I_EXT"/>
-        <enum value="0x8D8B" name="GL_INTENSITY16I_EXT"/>
-        <enum value="0x8D8C" name="GL_LUMINANCE16I_EXT"/>
-        <enum value="0x8D8D" name="GL_LUMINANCE_ALPHA16I_EXT"/>
-        <enum value="0x8D8E" name="GL_RGBA8I"/>
-        <enum value="0x8D8E" name="GL_RGBA8I_EXT"/>
-        <enum value="0x8D8F" name="GL_RGB8I"/>
-        <enum value="0x8D8F" name="GL_RGB8I_EXT"/>
-        <enum value="0x8D90" name="GL_ALPHA8I_EXT"/>
-        <enum value="0x8D91" name="GL_INTENSITY8I_EXT"/>
-        <enum value="0x8D92" name="GL_LUMINANCE8I_EXT"/>
-        <enum value="0x8D93" name="GL_LUMINANCE_ALPHA8I_EXT"/>
-        <enum value="0x8D94" name="GL_RED_INTEGER"/>
+        <enum value="0x8D70" name="GL_RGBA32UI" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D70" name="GL_RGBA32UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D71" name="GL_RGB32UI" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D71" name="GL_RGB32UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D72" name="GL_ALPHA32UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D73" name="GL_INTENSITY32UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D74" name="GL_LUMINANCE32UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D75" name="GL_LUMINANCE_ALPHA32UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D76" name="GL_RGBA16UI" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D76" name="GL_RGBA16UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D77" name="GL_RGB16UI" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D77" name="GL_RGB16UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D78" name="GL_ALPHA16UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D79" name="GL_INTENSITY16UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D7A" name="GL_LUMINANCE16UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D7B" name="GL_LUMINANCE_ALPHA16UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D7C" name="GL_RGBA8UI" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D7C" name="GL_RGBA8UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D7D" name="GL_RGB8UI" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D7D" name="GL_RGB8UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D7E" name="GL_ALPHA8UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D7F" name="GL_INTENSITY8UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D80" name="GL_LUMINANCE8UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D81" name="GL_LUMINANCE_ALPHA8UI_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D82" name="GL_RGBA32I" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D82" name="GL_RGBA32I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D83" name="GL_RGB32I" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D83" name="GL_RGB32I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D84" name="GL_ALPHA32I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D85" name="GL_INTENSITY32I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D86" name="GL_LUMINANCE32I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D87" name="GL_LUMINANCE_ALPHA32I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D88" name="GL_RGBA16I" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D88" name="GL_RGBA16I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D89" name="GL_RGB16I" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D89" name="GL_RGB16I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D8A" name="GL_ALPHA16I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D8B" name="GL_INTENSITY16I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D8C" name="GL_LUMINANCE16I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D8D" name="GL_LUMINANCE_ALPHA16I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D8E" name="GL_RGBA8I" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D8E" name="GL_RGBA8I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D8F" name="GL_RGB8I" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D8F" name="GL_RGB8I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D90" name="GL_ALPHA8I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D91" name="GL_INTENSITY8I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D92" name="GL_LUMINANCE8I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D93" name="GL_LUMINANCE_ALPHA8I_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8D94" name="GL_RED_INTEGER" group="PixelFormat"/>
         <enum value="0x8D94" name="GL_RED_INTEGER_EXT"/>
-        <enum value="0x8D95" name="GL_GREEN_INTEGER"/>
+        <enum value="0x8D95" name="GL_GREEN_INTEGER" group="PixelFormat"/>
         <enum value="0x8D95" name="GL_GREEN_INTEGER_EXT"/>
-        <enum value="0x8D96" name="GL_BLUE_INTEGER"/>
+        <enum value="0x8D96" name="GL_BLUE_INTEGER" group="PixelFormat"/>
         <enum value="0x8D96" name="GL_BLUE_INTEGER_EXT"/>
         <enum value="0x8D97" name="GL_ALPHA_INTEGER"/>
         <enum value="0x8D97" name="GL_ALPHA_INTEGER_EXT"/>
-        <enum value="0x8D98" name="GL_RGB_INTEGER"/>
+        <enum value="0x8D98" name="GL_RGB_INTEGER" group="PixelFormat"/>
         <enum value="0x8D98" name="GL_RGB_INTEGER_EXT"/>
-        <enum value="0x8D99" name="GL_RGBA_INTEGER"/>
+        <enum value="0x8D99" name="GL_RGBA_INTEGER" group="PixelFormat"/>
         <enum value="0x8D99" name="GL_RGBA_INTEGER_EXT"/>
-        <enum value="0x8D9A" name="GL_BGR_INTEGER"/>
+        <enum value="0x8D9A" name="GL_BGR_INTEGER" group="PixelFormat"/>
         <enum value="0x8D9A" name="GL_BGR_INTEGER_EXT"/>
-        <enum value="0x8D9B" name="GL_BGRA_INTEGER"/>
+        <enum value="0x8D9B" name="GL_BGRA_INTEGER" group="PixelFormat"/>
         <enum value="0x8D9B" name="GL_BGRA_INTEGER_EXT"/>
         <enum value="0x8D9C" name="GL_LUMINANCE_INTEGER_EXT"/>
         <enum value="0x8D9D" name="GL_LUMINANCE_ALPHA_INTEGER_EXT"/>
         <enum value="0x8D9E" name="GL_RGBA_INTEGER_MODE_EXT"/>
-        <enum value="0x8D9F" name="GL_INT_2_10_10_10_REV"/>
+        <enum value="0x8D9F" name="GL_INT_2_10_10_10_REV" group="VertexAttribPointerType,VertexAttribType"/>
         <enum value="0x8DA0" name="GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV"/>
         <enum value="0x8DA1" name="GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV"/>
         <enum value="0x8DA2" name="GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV"/>
@@ -9604,11 +5139,11 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8DA4" name="GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV"/>
         <enum value="0x8DA5" name="GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV"/>
         <enum value="0x8DA6" name="GL_MAX_PROGRAM_GENERIC_RESULTS_NV"/>
-        <enum value="0x8DA7" name="GL_FRAMEBUFFER_ATTACHMENT_LAYERED"/>
-        <enum value="0x8DA7" name="GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB"/>
-        <enum value="0x8DA7" name="GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT"/>
-        <enum value="0x8DA7" name="GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES"/>
-        <enum value="0x8DA8" name="GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS"/>
+        <enum value="0x8DA7" name="GL_FRAMEBUFFER_ATTACHMENT_LAYERED" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8DA7" name="GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8DA7" name="GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8DA7" name="GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES" group="FramebufferAttachmentParameterName"/>
+        <enum value="0x8DA8" name="GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS" group="FramebufferStatus"/>
         <enum value="0x8DA8" name="GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB"/>
         <enum value="0x8DA8" name="GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT"/>
         <enum value="0x8DA8" name="GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES"/>
@@ -9616,80 +5151,80 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8DA9" name="GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT"/>
             <!-- Also see the odd namespace "NVTransformFeedbackToken" above -->
         <enum value="0x8DAA" name="GL_LAYER_NV"/>
-        <enum value="0x8DAB" name="GL_DEPTH_COMPONENT32F_NV"/>
-        <enum value="0x8DAC" name="GL_DEPTH32F_STENCIL8_NV"/>
-        <enum value="0x8DAD" name="GL_FLOAT_32_UNSIGNED_INT_24_8_REV"/>
-        <enum value="0x8DAD" name="GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV"/>
+        <enum value="0x8DAB" name="GL_DEPTH_COMPONENT32F_NV" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8DAC" name="GL_DEPTH32F_STENCIL8_NV" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8DAD" name="GL_FLOAT_32_UNSIGNED_INT_24_8_REV" group="PixelType"/>
+        <enum value="0x8DAD" name="GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV" group="PixelType"/>
         <enum value="0x8DAE" name="GL_SHADER_INCLUDE_ARB"/>
         <enum value="0x8DAF" name="GL_DEPTH_BUFFER_FLOAT_MODE_NV"/>
             <unused start="0x8DB0" end="0x8DB8" vendor="NV"/>
-        <enum value="0x8DB9" name="GL_FRAMEBUFFER_SRGB"/>
+        <enum value="0x8DB9" name="GL_FRAMEBUFFER_SRGB" group="EnableCap"/>
         <enum value="0x8DB9" name="GL_FRAMEBUFFER_SRGB_EXT"/>
         <enum value="0x8DBA" name="GL_FRAMEBUFFER_SRGB_CAPABLE_EXT"/>
-        <enum value="0x8DBB" name="GL_COMPRESSED_RED_RGTC1"/>
-        <enum value="0x8DBB" name="GL_COMPRESSED_RED_RGTC1_EXT"/>
-        <enum value="0x8DBC" name="GL_COMPRESSED_SIGNED_RED_RGTC1"/>
-        <enum value="0x8DBC" name="GL_COMPRESSED_SIGNED_RED_RGTC1_EXT"/>
-        <enum value="0x8DBD" name="GL_COMPRESSED_RED_GREEN_RGTC2_EXT"/>
-        <enum value="0x8DBD" name="GL_COMPRESSED_RG_RGTC2"/>
-        <enum value="0x8DBE" name="GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT"/>
-        <enum value="0x8DBE" name="GL_COMPRESSED_SIGNED_RG_RGTC2"/>
-        <enum value="0x8DC0" name="GL_SAMPLER_1D_ARRAY"/>
+        <enum value="0x8DBB" name="GL_COMPRESSED_RED_RGTC1" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8DBB" name="GL_COMPRESSED_RED_RGTC1_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8DBC" name="GL_COMPRESSED_SIGNED_RED_RGTC1" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8DBC" name="GL_COMPRESSED_SIGNED_RED_RGTC1_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8DBD" name="GL_COMPRESSED_RED_GREEN_RGTC2_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8DBD" name="GL_COMPRESSED_RG_RGTC2" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8DBE" name="GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8DBE" name="GL_COMPRESSED_SIGNED_RG_RGTC2" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8DC0" name="GL_SAMPLER_1D_ARRAY" group="UniformType"/>
         <enum value="0x8DC0" name="GL_SAMPLER_1D_ARRAY_EXT"/>
-        <enum value="0x8DC1" name="GL_SAMPLER_2D_ARRAY"/>
+        <enum value="0x8DC1" name="GL_SAMPLER_2D_ARRAY" group="UniformType"/>
         <enum value="0x8DC1" name="GL_SAMPLER_2D_ARRAY_EXT"/>
-        <enum value="0x8DC2" name="GL_SAMPLER_BUFFER"/>
+        <enum value="0x8DC2" name="GL_SAMPLER_BUFFER" group="AttributeType,UniformType"/>
         <enum value="0x8DC2" name="GL_SAMPLER_BUFFER_EXT"/>
         <enum value="0x8DC2" name="GL_SAMPLER_BUFFER_OES"/>
-        <enum value="0x8DC3" name="GL_SAMPLER_1D_ARRAY_SHADOW"/>
+        <enum value="0x8DC3" name="GL_SAMPLER_1D_ARRAY_SHADOW" group="AttributeType,UniformType"/>
         <enum value="0x8DC3" name="GL_SAMPLER_1D_ARRAY_SHADOW_EXT"/>
-        <enum value="0x8DC4" name="GL_SAMPLER_2D_ARRAY_SHADOW"/>
+        <enum value="0x8DC4" name="GL_SAMPLER_2D_ARRAY_SHADOW" group="AttributeType,UniformType"/>
         <enum value="0x8DC4" name="GL_SAMPLER_2D_ARRAY_SHADOW_EXT"/>
         <enum value="0x8DC4" name="GL_SAMPLER_2D_ARRAY_SHADOW_NV"/>
-        <enum value="0x8DC5" name="GL_SAMPLER_CUBE_SHADOW"/>
+        <enum value="0x8DC5" name="GL_SAMPLER_CUBE_SHADOW" group="AttributeType,UniformType"/>
         <enum value="0x8DC5" name="GL_SAMPLER_CUBE_SHADOW_EXT"/>
         <enum value="0x8DC5" name="GL_SAMPLER_CUBE_SHADOW_NV"/>
-        <enum value="0x8DC6" name="GL_UNSIGNED_INT_VEC2"/>
+        <enum value="0x8DC6" name="GL_UNSIGNED_INT_VEC2" group="AttributeType,UniformType"/>
         <enum value="0x8DC6" name="GL_UNSIGNED_INT_VEC2_EXT"/>
-        <enum value="0x8DC7" name="GL_UNSIGNED_INT_VEC3"/>
+        <enum value="0x8DC7" name="GL_UNSIGNED_INT_VEC3" group="AttributeType,UniformType"/>
         <enum value="0x8DC7" name="GL_UNSIGNED_INT_VEC3_EXT"/>
-        <enum value="0x8DC8" name="GL_UNSIGNED_INT_VEC4"/>
+        <enum value="0x8DC8" name="GL_UNSIGNED_INT_VEC4" group="AttributeType,UniformType"/>
         <enum value="0x8DC8" name="GL_UNSIGNED_INT_VEC4_EXT"/>
-        <enum value="0x8DC9" name="GL_INT_SAMPLER_1D"/>
+        <enum value="0x8DC9" name="GL_INT_SAMPLER_1D" group="AttributeType,UniformType"/>
         <enum value="0x8DC9" name="GL_INT_SAMPLER_1D_EXT"/>
-        <enum value="0x8DCA" name="GL_INT_SAMPLER_2D"/>
+        <enum value="0x8DCA" name="GL_INT_SAMPLER_2D" group="AttributeType,UniformType"/>
         <enum value="0x8DCA" name="GL_INT_SAMPLER_2D_EXT"/>
-        <enum value="0x8DCB" name="GL_INT_SAMPLER_3D"/>
+        <enum value="0x8DCB" name="GL_INT_SAMPLER_3D" group="AttributeType,UniformType"/>
         <enum value="0x8DCB" name="GL_INT_SAMPLER_3D_EXT"/>
-        <enum value="0x8DCC" name="GL_INT_SAMPLER_CUBE"/>
+        <enum value="0x8DCC" name="GL_INT_SAMPLER_CUBE" group="AttributeType,UniformType"/>
         <enum value="0x8DCC" name="GL_INT_SAMPLER_CUBE_EXT"/>
-        <enum value="0x8DCD" name="GL_INT_SAMPLER_2D_RECT"/>
+        <enum value="0x8DCD" name="GL_INT_SAMPLER_2D_RECT" group="AttributeType,UniformType"/>
         <enum value="0x8DCD" name="GL_INT_SAMPLER_2D_RECT_EXT"/>
-        <enum value="0x8DCE" name="GL_INT_SAMPLER_1D_ARRAY"/>
+        <enum value="0x8DCE" name="GL_INT_SAMPLER_1D_ARRAY" group="AttributeType,UniformType"/>
         <enum value="0x8DCE" name="GL_INT_SAMPLER_1D_ARRAY_EXT"/>
-        <enum value="0x8DCF" name="GL_INT_SAMPLER_2D_ARRAY"/>
+        <enum value="0x8DCF" name="GL_INT_SAMPLER_2D_ARRAY" group="AttributeType,UniformType"/>
         <enum value="0x8DCF" name="GL_INT_SAMPLER_2D_ARRAY_EXT"/>
-        <enum value="0x8DD0" name="GL_INT_SAMPLER_BUFFER"/>
+        <enum value="0x8DD0" name="GL_INT_SAMPLER_BUFFER" group="AttributeType,UniformType"/>
         <enum value="0x8DD0" name="GL_INT_SAMPLER_BUFFER_EXT"/>
         <enum value="0x8DD0" name="GL_INT_SAMPLER_BUFFER_OES"/>
-        <enum value="0x8DD1" name="GL_UNSIGNED_INT_SAMPLER_1D"/>
+        <enum value="0x8DD1" name="GL_UNSIGNED_INT_SAMPLER_1D" group="AttributeType,UniformType"/>
         <enum value="0x8DD1" name="GL_UNSIGNED_INT_SAMPLER_1D_EXT"/>
-        <enum value="0x8DD2" name="GL_UNSIGNED_INT_SAMPLER_2D"/>
+        <enum value="0x8DD2" name="GL_UNSIGNED_INT_SAMPLER_2D" group="AttributeType,UniformType"/>
         <enum value="0x8DD2" name="GL_UNSIGNED_INT_SAMPLER_2D_EXT"/>
-        <enum value="0x8DD3" name="GL_UNSIGNED_INT_SAMPLER_3D"/>
+        <enum value="0x8DD3" name="GL_UNSIGNED_INT_SAMPLER_3D" group="AttributeType,UniformType"/>
         <enum value="0x8DD3" name="GL_UNSIGNED_INT_SAMPLER_3D_EXT"/>
-        <enum value="0x8DD4" name="GL_UNSIGNED_INT_SAMPLER_CUBE"/>
+        <enum value="0x8DD4" name="GL_UNSIGNED_INT_SAMPLER_CUBE" group="AttributeType,UniformType"/>
         <enum value="0x8DD4" name="GL_UNSIGNED_INT_SAMPLER_CUBE_EXT"/>
-        <enum value="0x8DD5" name="GL_UNSIGNED_INT_SAMPLER_2D_RECT"/>
+        <enum value="0x8DD5" name="GL_UNSIGNED_INT_SAMPLER_2D_RECT" group="AttributeType,UniformType"/>
         <enum value="0x8DD5" name="GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT"/>
-        <enum value="0x8DD6" name="GL_UNSIGNED_INT_SAMPLER_1D_ARRAY"/>
+        <enum value="0x8DD6" name="GL_UNSIGNED_INT_SAMPLER_1D_ARRAY" group="AttributeType,UniformType"/>
         <enum value="0x8DD6" name="GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT"/>
-        <enum value="0x8DD7" name="GL_UNSIGNED_INT_SAMPLER_2D_ARRAY"/>
+        <enum value="0x8DD7" name="GL_UNSIGNED_INT_SAMPLER_2D_ARRAY" group="AttributeType,UniformType"/>
         <enum value="0x8DD7" name="GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT"/>
-        <enum value="0x8DD8" name="GL_UNSIGNED_INT_SAMPLER_BUFFER"/>
+        <enum value="0x8DD8" name="GL_UNSIGNED_INT_SAMPLER_BUFFER" group="AttributeType,UniformType"/>
         <enum value="0x8DD8" name="GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT"/>
         <enum value="0x8DD8" name="GL_UNSIGNED_INT_SAMPLER_BUFFER_OES"/>
-        <enum value="0x8DD9" name="GL_GEOMETRY_SHADER"/>
+        <enum value="0x8DD9" name="GL_GEOMETRY_SHADER" group="PipelineParameterName,ShaderType"/>
         <enum value="0x8DD9" name="GL_GEOMETRY_SHADER_ARB"/>
         <enum value="0x8DD9" name="GL_GEOMETRY_SHADER_EXT"/>
         <enum value="0x8DD9" name="GL_GEOMETRY_SHADER_OES"/>
@@ -9703,7 +5238,7 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8DDD" name="GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT"/>
         <enum value="0x8DDE" name="GL_MAX_VERTEX_VARYING_COMPONENTS_ARB"/>
         <enum value="0x8DDE" name="GL_MAX_VERTEX_VARYING_COMPONENTS_EXT"/>
-        <enum value="0x8DDF" name="GL_MAX_GEOMETRY_UNIFORM_COMPONENTS"/>
+        <enum value="0x8DDF" name="GL_MAX_GEOMETRY_UNIFORM_COMPONENTS" group="GetPName"/>
         <enum value="0x8DDF" name="GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB"/>
         <enum value="0x8DDF" name="GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT"/>
         <enum value="0x8DDF" name="GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES"/>
@@ -9718,8 +5253,8 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8DE2" name="GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT"/>
         <enum value="0x8DE3" name="GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT"/>
         <enum value="0x8DE4" name="GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT"/>
-        <enum value="0x8DE5" name="GL_ACTIVE_SUBROUTINES"/>
-        <enum value="0x8DE6" name="GL_ACTIVE_SUBROUTINE_UNIFORMS"/>
+        <enum value="0x8DE5" name="GL_ACTIVE_SUBROUTINES" group="ProgramStagePName"/>
+        <enum value="0x8DE6" name="GL_ACTIVE_SUBROUTINE_UNIFORMS" group="ProgramStagePName"/>
         <enum value="0x8DE7" name="GL_MAX_SUBROUTINES"/>
         <enum value="0x8DE8" name="GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS"/>
         <enum value="0x8DE9" name="GL_NAMED_STRING_LENGTH_ARB"/>
@@ -9731,39 +5266,39 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x8DF0" end="0x8E0F" vendor="OES">
-        <enum value="0x8DF0" name="GL_LOW_FLOAT"/>
-        <enum value="0x8DF1" name="GL_MEDIUM_FLOAT"/>
-        <enum value="0x8DF2" name="GL_HIGH_FLOAT"/>
-        <enum value="0x8DF3" name="GL_LOW_INT"/>
-        <enum value="0x8DF4" name="GL_MEDIUM_INT"/>
-        <enum value="0x8DF5" name="GL_HIGH_INT"/>
+        <enum value="0x8DF0" name="GL_LOW_FLOAT" group="PrecisionType"/>
+        <enum value="0x8DF1" name="GL_MEDIUM_FLOAT" group="PrecisionType"/>
+        <enum value="0x8DF2" name="GL_HIGH_FLOAT" group="PrecisionType"/>
+        <enum value="0x8DF3" name="GL_LOW_INT" group="PrecisionType"/>
+        <enum value="0x8DF4" name="GL_MEDIUM_INT" group="PrecisionType"/>
+        <enum value="0x8DF5" name="GL_HIGH_INT" group="PrecisionType"/>
         <enum value="0x8DF6" name="GL_UNSIGNED_INT_10_10_10_2_OES"/>
         <enum value="0x8DF7" name="GL_INT_10_10_10_2_OES"/>
-        <enum value="0x8DF8" name="GL_SHADER_BINARY_FORMATS"/>
-        <enum value="0x8DF9" name="GL_NUM_SHADER_BINARY_FORMATS"/>
-        <enum value="0x8DFA" name="GL_SHADER_COMPILER"/>
-        <enum value="0x8DFB" name="GL_MAX_VERTEX_UNIFORM_VECTORS"/>
-        <enum value="0x8DFC" name="GL_MAX_VARYING_VECTORS"/>
-        <enum value="0x8DFD" name="GL_MAX_FRAGMENT_UNIFORM_VECTORS"/>
+        <enum value="0x8DF8" name="GL_SHADER_BINARY_FORMATS" group="GetPName"/>
+        <enum value="0x8DF9" name="GL_NUM_SHADER_BINARY_FORMATS" group="GetPName"/>
+        <enum value="0x8DFA" name="GL_SHADER_COMPILER" group="GetPName"/>
+        <enum value="0x8DFB" name="GL_MAX_VERTEX_UNIFORM_VECTORS" group="GetPName"/>
+        <enum value="0x8DFC" name="GL_MAX_VARYING_VECTORS" group="GetPName"/>
+        <enum value="0x8DFD" name="GL_MAX_FRAGMENT_UNIFORM_VECTORS" group="GetPName"/>
             <unused start="0x8DFE" end="0x8E0F" vendor="OES"/>
     </enums>
 
     <enums namespace="GL" start="0x8E10" end="0x8E8F" vendor="NV" comment="For Michael Gold 2006/08/07">
-        <enum value="0x8E10" name="GL_RENDERBUFFER_COLOR_SAMPLES_NV"/>
+        <enum value="0x8E10" name="GL_RENDERBUFFER_COLOR_SAMPLES_NV" group="RenderbufferParameterName"/>
         <enum value="0x8E11" name="GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV"/>
         <enum value="0x8E12" name="GL_MULTISAMPLE_COVERAGE_MODES_NV"/>
-        <enum value="0x8E13" name="GL_QUERY_WAIT"/>
+        <enum value="0x8E13" name="GL_QUERY_WAIT" group="ConditionalRenderMode"/>
         <enum value="0x8E13" name="GL_QUERY_WAIT_NV"/>
-        <enum value="0x8E14" name="GL_QUERY_NO_WAIT"/>
+        <enum value="0x8E14" name="GL_QUERY_NO_WAIT" group="ConditionalRenderMode"/>
         <enum value="0x8E14" name="GL_QUERY_NO_WAIT_NV"/>
-        <enum value="0x8E15" name="GL_QUERY_BY_REGION_WAIT"/>
+        <enum value="0x8E15" name="GL_QUERY_BY_REGION_WAIT" group="ConditionalRenderMode"/>
         <enum value="0x8E15" name="GL_QUERY_BY_REGION_WAIT_NV"/>
-        <enum value="0x8E16" name="GL_QUERY_BY_REGION_NO_WAIT"/>
+        <enum value="0x8E16" name="GL_QUERY_BY_REGION_NO_WAIT" group="ConditionalRenderMode"/>
         <enum value="0x8E16" name="GL_QUERY_BY_REGION_NO_WAIT_NV"/>
-        <enum value="0x8E17" name="GL_QUERY_WAIT_INVERTED"/>
-        <enum value="0x8E18" name="GL_QUERY_NO_WAIT_INVERTED"/>
-        <enum value="0x8E19" name="GL_QUERY_BY_REGION_WAIT_INVERTED"/>
-        <enum value="0x8E1A" name="GL_QUERY_BY_REGION_NO_WAIT_INVERTED"/>
+        <enum value="0x8E17" name="GL_QUERY_WAIT_INVERTED" group="ConditionalRenderMode"/>
+        <enum value="0x8E18" name="GL_QUERY_NO_WAIT_INVERTED" group="ConditionalRenderMode"/>
+        <enum value="0x8E19" name="GL_QUERY_BY_REGION_WAIT_INVERTED" group="ConditionalRenderMode"/>
+        <enum value="0x8E1A" name="GL_QUERY_BY_REGION_NO_WAIT_INVERTED" group="ConditionalRenderMode"/>
         <enum value="0x8E1B" name="GL_POLYGON_OFFSET_CLAMP"/>
         <enum value="0x8E1B" name="GL_POLYGON_OFFSET_CLAMP_EXT" alias="GL_POLYGON_OFFSET_CLAMP"/>
             <unused start="0x8E1C" end="0x8E1D" vendor="NV"/>
@@ -9775,21 +5310,21 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8E1F" name="GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES"/>
         <enum value="0x8E20" name="GL_COLOR_SAMPLES_NV"/>
             <unused start="0x8E21" vendor="NV"/>
-        <enum value="0x8E22" name="GL_TRANSFORM_FEEDBACK"/>
+        <enum value="0x8E22" name="GL_TRANSFORM_FEEDBACK" group="ObjectIdentifier,BindTransformFeedbackTarget"/>
         <enum value="0x8E22" name="GL_TRANSFORM_FEEDBACK_NV"/>
         <enum value="0x8E23" name="GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED"/>
-        <enum value="0x8E23" name="GL_TRANSFORM_FEEDBACK_PAUSED" alias="GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED"/>
+        <enum value="0x8E23" name="GL_TRANSFORM_FEEDBACK_PAUSED" alias="GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED" group="TransformFeedbackPName"/>
         <enum value="0x8E23" name="GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV"/>
         <enum value="0x8E24" name="GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE"/>
-        <enum value="0x8E24" name="GL_TRANSFORM_FEEDBACK_ACTIVE" alias="GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE"/>
+        <enum value="0x8E24" name="GL_TRANSFORM_FEEDBACK_ACTIVE" alias="GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE" group="TransformFeedbackPName"/>
         <enum value="0x8E24" name="GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV"/>
         <enum value="0x8E25" name="GL_TRANSFORM_FEEDBACK_BINDING"/>
         <enum value="0x8E25" name="GL_TRANSFORM_FEEDBACK_BINDING_NV"/>
         <enum value="0x8E26" name="GL_FRAME_NV"/>
         <enum value="0x8E27" name="GL_FIELDS_NV"/>
         <enum value="0x8E28" name="GL_CURRENT_TIME_NV"/>
-        <enum value="0x8E28" name="GL_TIMESTAMP"/>
-        <enum value="0x8E28" name="GL_TIMESTAMP_EXT"/>
+        <enum value="0x8E28" name="GL_TIMESTAMP" group="QueryCounterTarget,GetPName"/>
+        <enum value="0x8E28" name="GL_TIMESTAMP_EXT" group="QueryCounterTarget,GetPName"/>
         <enum value="0x8E29" name="GL_NUM_FILL_STREAMS_NV"/>
         <enum value="0x8E2A" name="GL_PRESENT_TIME_NV"/>
         <enum value="0x8E2B" name="GL_PRESENT_DURATION_NV"/>
@@ -9798,36 +5333,36 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8E2E" name="GL_TRANSPOSE_PROGRAM_MATRIX_EXT"/>
         <enum value="0x8E2F" name="GL_PROGRAM_MATRIX_STACK_DEPTH_EXT"/>
             <unused start="0x8E30" end="0x8E41" vendor="NV"/>
-        <enum value="0x8E42" name="GL_TEXTURE_SWIZZLE_R"/>
+        <enum value="0x8E42" name="GL_TEXTURE_SWIZZLE_R" group="TextureParameterName"/>
         <enum value="0x8E42" name="GL_TEXTURE_SWIZZLE_R_EXT"/>
-        <enum value="0x8E43" name="GL_TEXTURE_SWIZZLE_G"/>
+        <enum value="0x8E43" name="GL_TEXTURE_SWIZZLE_G" group="TextureParameterName"/>
         <enum value="0x8E43" name="GL_TEXTURE_SWIZZLE_G_EXT"/>
-        <enum value="0x8E44" name="GL_TEXTURE_SWIZZLE_B"/>
+        <enum value="0x8E44" name="GL_TEXTURE_SWIZZLE_B" group="TextureParameterName"/>
         <enum value="0x8E44" name="GL_TEXTURE_SWIZZLE_B_EXT"/>
-        <enum value="0x8E45" name="GL_TEXTURE_SWIZZLE_A"/>
+        <enum value="0x8E45" name="GL_TEXTURE_SWIZZLE_A" group="TextureParameterName"/>
         <enum value="0x8E45" name="GL_TEXTURE_SWIZZLE_A_EXT"/>
-        <enum value="0x8E46" name="GL_TEXTURE_SWIZZLE_RGBA"/>
+        <enum value="0x8E46" name="GL_TEXTURE_SWIZZLE_RGBA" group="TextureParameterName"/>
         <enum value="0x8E46" name="GL_TEXTURE_SWIZZLE_RGBA_EXT"/>
-        <enum value="0x8E47" name="GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS"/>
-        <enum value="0x8E48" name="GL_ACTIVE_SUBROUTINE_MAX_LENGTH"/>
-        <enum value="0x8E49" name="GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH"/>
-        <enum value="0x8E4A" name="GL_NUM_COMPATIBLE_SUBROUTINES"/>
-        <enum value="0x8E4B" name="GL_COMPATIBLE_SUBROUTINES"/>
+        <enum value="0x8E47" name="GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS" group="ProgramStagePName"/>
+        <enum value="0x8E48" name="GL_ACTIVE_SUBROUTINE_MAX_LENGTH" group="ProgramStagePName"/>
+        <enum value="0x8E49" name="GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH" group="ProgramStagePName"/>
+        <enum value="0x8E4A" name="GL_NUM_COMPATIBLE_SUBROUTINES" group="ProgramResourceProperty,SubroutineParameterName"/>
+        <enum value="0x8E4B" name="GL_COMPATIBLE_SUBROUTINES" group="ProgramResourceProperty,SubroutineParameterName"/>
         <enum value="0x8E4C" name="GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION"/>
         <enum value="0x8E4C" name="GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT"/>
-        <enum value="0x8E4D" name="GL_FIRST_VERTEX_CONVENTION"/>
+        <enum value="0x8E4D" name="GL_FIRST_VERTEX_CONVENTION" group="VertexProvokingMode"/>
         <enum value="0x8E4D" name="GL_FIRST_VERTEX_CONVENTION_EXT"/>
         <enum value="0x8E4D" name="GL_FIRST_VERTEX_CONVENTION_OES"/>
-        <enum value="0x8E4E" name="GL_LAST_VERTEX_CONVENTION"/>
+        <enum value="0x8E4E" name="GL_LAST_VERTEX_CONVENTION" group="VertexProvokingMode"/>
         <enum value="0x8E4E" name="GL_LAST_VERTEX_CONVENTION_EXT"/>
         <enum value="0x8E4E" name="GL_LAST_VERTEX_CONVENTION_OES"/>
-        <enum value="0x8E4F" name="GL_PROVOKING_VERTEX"/>
+        <enum value="0x8E4F" name="GL_PROVOKING_VERTEX" group="GetPName"/>
         <enum value="0x8E4F" name="GL_PROVOKING_VERTEX_EXT"/>
-        <enum value="0x8E50" name="GL_SAMPLE_POSITION"/>
+        <enum value="0x8E50" name="GL_SAMPLE_POSITION" group="GetMultisamplePNameNV"/>
         <enum value="0x8E50" name="GL_SAMPLE_POSITION_NV"/>
-        <enum value="0x8E50" name="GL_SAMPLE_LOCATION_ARB" alias="GL_SAMPLE_POSITION"/>
+        <enum value="0x8E50" name="GL_SAMPLE_LOCATION_ARB" alias="GL_SAMPLE_POSITION" group="GetMultisamplePNameNV"/>
         <enum value="0x8E50" name="GL_SAMPLE_LOCATION_NV" alias="GL_SAMPLE_POSITION_NV"/>
-        <enum value="0x8E51" name="GL_SAMPLE_MASK"/>
+        <enum value="0x8E51" name="GL_SAMPLE_MASK" group="EnableCap"/>
         <enum value="0x8E51" name="GL_SAMPLE_MASK_NV"/>
         <enum value="0x8E52" name="GL_SAMPLE_MASK_VALUE"/>
         <enum value="0x8E52" name="GL_SAMPLE_MASK_VALUE_NV"/>
@@ -9837,7 +5372,7 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8E56" name="GL_SAMPLER_RENDERBUFFER_NV"/>
         <enum value="0x8E57" name="GL_INT_SAMPLER_RENDERBUFFER_NV"/>
         <enum value="0x8E58" name="GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV"/>
-        <enum value="0x8E59" name="GL_MAX_SAMPLE_MASK_WORDS"/>
+        <enum value="0x8E59" name="GL_MAX_SAMPLE_MASK_WORDS" group="GetPName"/>
         <enum value="0x8E59" name="GL_MAX_SAMPLE_MASK_WORDS_NV"/>
         <enum value="0x8E5A" name="GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV"/>
         <enum value="0x8E5A" name="GL_MAX_GEOMETRY_SHADER_INVOCATIONS"/>
@@ -9876,12 +5411,12 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8E6F" name="GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV"/>
         <enum value="0x8E70" name="GL_MAX_TRANSFORM_FEEDBACK_BUFFERS"/>
         <enum value="0x8E71" name="GL_MAX_VERTEX_STREAMS"/>
-        <enum value="0x8E72" name="GL_PATCH_VERTICES"/>
+        <enum value="0x8E72" name="GL_PATCH_VERTICES" group="PatchParameterName"/>
         <enum value="0x8E72" name="GL_PATCH_VERTICES_EXT"/>
         <enum value="0x8E72" name="GL_PATCH_VERTICES_OES"/>
-        <enum value="0x8E73" name="GL_PATCH_DEFAULT_INNER_LEVEL"/>
+        <enum value="0x8E73" name="GL_PATCH_DEFAULT_INNER_LEVEL" group="PatchParameterName"/>
         <enum value="0x8E73" name="GL_PATCH_DEFAULT_INNER_LEVEL_EXT"/>
-        <enum value="0x8E74" name="GL_PATCH_DEFAULT_OUTER_LEVEL"/>
+        <enum value="0x8E74" name="GL_PATCH_DEFAULT_OUTER_LEVEL" group="PatchParameterName"/>
         <enum value="0x8E74" name="GL_PATCH_DEFAULT_OUTER_LEVEL_EXT"/>
         <enum value="0x8E75" name="GL_TESS_CONTROL_OUTPUT_VERTICES"/>
         <enum value="0x8E75" name="GL_TESS_CONTROL_OUTPUT_VERTICES_EXT"/>
@@ -9937,31 +5472,31 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8E86" name="GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS"/>
         <enum value="0x8E86" name="GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT"/>
         <enum value="0x8E86" name="GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES"/>
-        <enum value="0x8E87" name="GL_TESS_EVALUATION_SHADER"/>
+        <enum value="0x8E87" name="GL_TESS_EVALUATION_SHADER" group="PipelineParameterName,ShaderType"/>
         <enum value="0x8E87" name="GL_TESS_EVALUATION_SHADER_EXT"/>
         <enum value="0x8E87" name="GL_TESS_EVALUATION_SHADER_OES"/>
-        <enum value="0x8E88" name="GL_TESS_CONTROL_SHADER"/>
+        <enum value="0x8E88" name="GL_TESS_CONTROL_SHADER" group="PipelineParameterName,ShaderType"/>
         <enum value="0x8E88" name="GL_TESS_CONTROL_SHADER_EXT"/>
         <enum value="0x8E88" name="GL_TESS_CONTROL_SHADER_OES"/>
-        <enum value="0x8E89" name="GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS"/>
+        <enum value="0x8E89" name="GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS" group="GetPName"/>
         <enum value="0x8E89" name="GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT"/>
         <enum value="0x8E89" name="GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES"/>
-        <enum value="0x8E8A" name="GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS"/>
+        <enum value="0x8E8A" name="GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS" group="GetPName"/>
         <enum value="0x8E8A" name="GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT"/>
         <enum value="0x8E8A" name="GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES"/>
             <unused start="0x8E8B" vendor="NV"/>
-        <enum value="0x8E8C" name="GL_COMPRESSED_RGBA_BPTC_UNORM"/>
-        <enum value="0x8E8C" name="GL_COMPRESSED_RGBA_BPTC_UNORM_ARB"/>
-        <enum value="0x8E8C" name="GL_COMPRESSED_RGBA_BPTC_UNORM_EXT"/>
-        <enum value="0x8E8D" name="GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM"/>
-        <enum value="0x8E8D" name="GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB"/>
-        <enum value="0x8E8D" name="GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT"/>
-        <enum value="0x8E8E" name="GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT"/>
-        <enum value="0x8E8E" name="GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB"/>
-        <enum value="0x8E8E" name="GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT"/>
-        <enum value="0x8E8F" name="GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT"/>
-        <enum value="0x8E8F" name="GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB"/>
-        <enum value="0x8E8F" name="GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT"/>
+        <enum value="0x8E8C" name="GL_COMPRESSED_RGBA_BPTC_UNORM" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8E8C" name="GL_COMPRESSED_RGBA_BPTC_UNORM_ARB" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8E8C" name="GL_COMPRESSED_RGBA_BPTC_UNORM_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8E8D" name="GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8E8D" name="GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8E8D" name="GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8E8E" name="GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8E8E" name="GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8E8E" name="GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8E8F" name="GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8E8F" name="GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8E8F" name="GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT" group="InternalFormat,SizedInternalFormat"/>
     </enums>
 
     <enums namespace="GL" start="0x8E90" end="0x8E9F" vendor="QNX" comment="For QNX_texture_tiling, QNX_complex_polygon, QNX_stippled_lines (Khronos bug 696)">
@@ -9969,7 +5504,11 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x8EA0" end="0x8EAF" vendor="IMG">
-            <unused start="0x8EA0" end="0x8EAF" vendor="IMG"/>
+        <enum value="0x8EA0" name="GL_TRP_IMG"/>
+        <enum value="0x8EA1" name="GL_TRP_ERROR_CONTEXT_RESET_IMG"/>
+        <enum value="0x8EA2" name="GL_TRP_UNSUPPORTED_CONTEXT_IMG"/>
+        <enum value="0x8EA3" name="GL_PVRIC_SIGNATURE_MISMATCH_IMG"/>
+            <unused start="0x8EA4" end="0x8EAF" vendor="IMG"/>
     </enums>
 
     <enums namespace="GL" start="0x8EB0" end="0x8EBF" vendor="OES" comment="For Affie Munshi 2007/07/20">
@@ -10022,10 +5561,10 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8F33" name="GL_ELEMENT_ARRAY_LENGTH_NV"/>
         <enum value="0x8F34" name="GL_GPU_ADDRESS_NV"/>
         <enum value="0x8F35" name="GL_MAX_SHADER_BUFFER_ADDRESS_NV"/>
-        <enum value="0x8F36" name="GL_COPY_READ_BUFFER"/>
+        <enum value="0x8F36" name="GL_COPY_READ_BUFFER" group="CopyBufferSubDataTarget,BufferTargetARB,BufferStorageTarget"/>
         <enum value="0x8F36" name="GL_COPY_READ_BUFFER_NV"/>
         <enum value="0x8F36" name="GL_COPY_READ_BUFFER_BINDING" alias="GL_COPY_READ_BUFFER"/>
-        <enum value="0x8F37" name="GL_COPY_WRITE_BUFFER"/>
+        <enum value="0x8F37" name="GL_COPY_WRITE_BUFFER" group="CopyBufferSubDataTarget,BufferTargetARB,BufferStorageTarget"/>
         <enum value="0x8F37" name="GL_COPY_WRITE_BUFFER_NV"/>
         <enum value="0x8F37" name="GL_COPY_WRITE_BUFFER_BINDING" alias="GL_COPY_WRITE_BUFFER"/>
         <enum value="0x8F38" name="GL_MAX_IMAGE_UNITS"/>
@@ -10043,30 +5582,30 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8F3D" name="GL_IMAGE_BINDING_LAYER_EXT"/>
         <enum value="0x8F3E" name="GL_IMAGE_BINDING_ACCESS"/>
         <enum value="0x8F3E" name="GL_IMAGE_BINDING_ACCESS_EXT"/>
-        <enum value="0x8F3F" name="GL_DRAW_INDIRECT_BUFFER"/>
+        <enum value="0x8F3F" name="GL_DRAW_INDIRECT_BUFFER" group="CopyBufferSubDataTarget,BufferTargetARB,BufferStorageTarget"/>
         <enum value="0x8F40" name="GL_DRAW_INDIRECT_UNIFIED_NV"/>
         <enum value="0x8F41" name="GL_DRAW_INDIRECT_ADDRESS_NV"/>
         <enum value="0x8F42" name="GL_DRAW_INDIRECT_LENGTH_NV"/>
         <enum value="0x8F43" name="GL_DRAW_INDIRECT_BUFFER_BINDING"/>
         <enum value="0x8F44" name="GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV"/>
         <enum value="0x8F45" name="GL_MAX_PROGRAM_SUBROUTINE_NUM_NV"/>
-        <enum value="0x8F46" name="GL_DOUBLE_MAT2"/>
+        <enum value="0x8F46" name="GL_DOUBLE_MAT2" group="AttributeType,UniformType"/>
         <enum value="0x8F46" name="GL_DOUBLE_MAT2_EXT"/>
-        <enum value="0x8F47" name="GL_DOUBLE_MAT3"/>
+        <enum value="0x8F47" name="GL_DOUBLE_MAT3" group="AttributeType,UniformType"/>
         <enum value="0x8F47" name="GL_DOUBLE_MAT3_EXT"/>
-        <enum value="0x8F48" name="GL_DOUBLE_MAT4"/>
+        <enum value="0x8F48" name="GL_DOUBLE_MAT4" group="AttributeType,UniformType"/>
         <enum value="0x8F48" name="GL_DOUBLE_MAT4_EXT"/>
-        <enum value="0x8F49" name="GL_DOUBLE_MAT2x3"/>
+        <enum value="0x8F49" name="GL_DOUBLE_MAT2x3" group="UniformType,AttributeType"/>
         <enum value="0x8F49" name="GL_DOUBLE_MAT2x3_EXT"/>
-        <enum value="0x8F4A" name="GL_DOUBLE_MAT2x4"/>
+        <enum value="0x8F4A" name="GL_DOUBLE_MAT2x4" group="UniformType,AttributeType"/>
         <enum value="0x8F4A" name="GL_DOUBLE_MAT2x4_EXT"/>
-        <enum value="0x8F4B" name="GL_DOUBLE_MAT3x2"/>
+        <enum value="0x8F4B" name="GL_DOUBLE_MAT3x2" group="UniformType,AttributeType"/>
         <enum value="0x8F4B" name="GL_DOUBLE_MAT3x2_EXT"/>
-        <enum value="0x8F4C" name="GL_DOUBLE_MAT3x4"/>
+        <enum value="0x8F4C" name="GL_DOUBLE_MAT3x4" group="UniformType,AttributeType"/>
         <enum value="0x8F4C" name="GL_DOUBLE_MAT3x4_EXT"/>
-        <enum value="0x8F4D" name="GL_DOUBLE_MAT4x2"/>
+        <enum value="0x8F4D" name="GL_DOUBLE_MAT4x2" group="UniformType,AttributeType"/>
         <enum value="0x8F4D" name="GL_DOUBLE_MAT4x2_EXT"/>
-        <enum value="0x8F4E" name="GL_DOUBLE_MAT4x3"/>
+        <enum value="0x8F4E" name="GL_DOUBLE_MAT4x3" group="UniformType,AttributeType"/>
         <enum value="0x8F4E" name="GL_DOUBLE_MAT4x3_EXT"/>
         <enum value="0x8F4F" name="GL_VERTEX_BINDING_BUFFER"/>
     </enums>
@@ -10076,17 +5615,20 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x8F60" end="0x8F6F" vendor="ARM" comment="For Remi Pedersen, Khronos bug 3745">
-        <enum value="0x8F60" name="GL_MALI_SHADER_BINARY_ARM"/>
+        <enum value="0x8F60" name="GL_MALI_SHADER_BINARY_ARM" group="ShaderBinaryFormat"/>
         <enum value="0x8F61" name="GL_MALI_PROGRAM_BINARY_ARM"/>
             <unused start="0x8F62" vendor="ARM"/>
         <enum value="0x8F63" name="GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT"/>
         <enum value="0x8F64" name="GL_SHADER_PIXEL_LOCAL_STORAGE_EXT"/>
-        <enum value="0x8F65" name="GL_FETCH_PER_SAMPLE_ARM"/>
-        <enum value="0x8F66" name="GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM"/>
+        <enum value="0x8F65" name="GL_FETCH_PER_SAMPLE_ARM" group="EnableCap,GetPName"/>
+        <enum value="0x8F66" name="GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM" group="GetPName"/>
         <enum value="0x8F67" name="GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT"/>
             <unused start="0x8F68" vendor="ARM"/>
         <enum value="0x8F69" name="GL_TEXTURE_ASTC_DECODE_PRECISION_EXT"/>
-            <unused start="0x8F6A" end="0x8F6F" vendor="ARM"/>
+        <enum value="0x8F6A" name="GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM" group="SamplerParameterF,SamplerParameterI,GetTextureParameter,TextureParameterName"/>
+            <unused start="0x8F6B" end="0x8F6D" vendor="ARM"/>
+        <enum value="0x8F6E" name="GL_NUM_SURFACE_COMPRESSION_FIXED_RATES_EXT" group="InternalFormatPName"/>
+        <enum value="0x8F6F" name="GL_FRAGMENT_SHADING_RATE_NON_TRIVIAL_COMBINERS_SUPPORTED_EXT" group="GetPName"/>
     </enums>
 
     <enums namespace="GL" start="0x8F70" end="0x8F7F" vendor="HI" comment="For Mark Callow, Khronos bug 4055. Shared with EGL.">
@@ -10102,21 +5644,21 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8F91" name="GL_RG_SNORM"/>
         <enum value="0x8F92" name="GL_RGB_SNORM"/>
         <enum value="0x8F93" name="GL_RGBA_SNORM"/>
-        <enum value="0x8F94" name="GL_R8_SNORM"/>
-        <enum value="0x8F95" name="GL_RG8_SNORM"/>
-        <enum value="0x8F96" name="GL_RGB8_SNORM"/>
-        <enum value="0x8F97" name="GL_RGBA8_SNORM"/>
-        <enum value="0x8F98" name="GL_R16_SNORM"/>
-        <enum value="0x8F98" name="GL_R16_SNORM_EXT"/>
-        <enum value="0x8F99" name="GL_RG16_SNORM"/>
-        <enum value="0x8F99" name="GL_RG16_SNORM_EXT"/>
-        <enum value="0x8F9A" name="GL_RGB16_SNORM"/>
-        <enum value="0x8F9A" name="GL_RGB16_SNORM_EXT"/>
-        <enum value="0x8F9B" name="GL_RGBA16_SNORM"/>
-        <enum value="0x8F9B" name="GL_RGBA16_SNORM_EXT"/>
+        <enum value="0x8F94" name="GL_R8_SNORM" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8F95" name="GL_RG8_SNORM" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8F96" name="GL_RGB8_SNORM" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8F97" name="GL_RGBA8_SNORM" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8F98" name="GL_R16_SNORM" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8F98" name="GL_R16_SNORM_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8F99" name="GL_RG16_SNORM" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8F99" name="GL_RG16_SNORM_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8F9A" name="GL_RGB16_SNORM" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8F9A" name="GL_RGB16_SNORM_EXT" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8F9B" name="GL_RGBA16_SNORM" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x8F9B" name="GL_RGBA16_SNORM_EXT" group="InternalFormat,SizedInternalFormat"/>
         <enum value="0x8F9C" name="GL_SIGNED_NORMALIZED"/>
-        <enum value="0x8F9D" name="GL_PRIMITIVE_RESTART"/>
-        <enum value="0x8F9E" name="GL_PRIMITIVE_RESTART_INDEX"/>
+        <enum value="0x8F9D" name="GL_PRIMITIVE_RESTART" group="EnableCap"/>
+        <enum value="0x8F9E" name="GL_PRIMITIVE_RESTART_INDEX" group="GetPName"/>
         <enum value="0x8F9F" name="GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB"/>
     </enums>
 
@@ -10124,20 +5666,20 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8FA0" name="GL_PERFMON_GLOBAL_MODE_QCOM"/>
         <enum value="0x8FA1" name="GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM"/>
             <unused start="0x8FA2" end="0x8FAF" vendor="QCOM"/>
-        <enum value="0x8FB0" name="GL_BINNING_CONTROL_HINT_QCOM"/>
+        <enum value="0x8FB0" name="GL_BINNING_CONTROL_HINT_QCOM" group="HintTarget"/>
         <enum value="0x8FB1" name="GL_CPU_OPTIMIZED_QCOM"/>
         <enum value="0x8FB2" name="GL_GPU_OPTIMIZED_QCOM"/>
         <enum value="0x8FB3" name="GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM"/>
             <unused start="0x8FB4" end="0x8FBA" vendor="QCOM"/>
         <enum value="0x8FBB" name="GL_GPU_DISJOINT_EXT"/>
             <unused start="0x8FBC" vendor="QCOM"/>
-        <enum value="0x8FBD" name="GL_SR8_EXT"/>
-        <enum value="0x8FBE" name="GL_SRG8_EXT"/>
+        <enum value="0x8FBD" name="GL_SR8_EXT" group="InternalFormat"/>
+        <enum value="0x8FBE" name="GL_SRG8_EXT" group="InternalFormat"/>
         <enum value="0x8FBF" name="GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT"/>
     </enums>
 
     <enums namespace="GL" start="0x8FC0" end="0x8FDF" vendor="VIV" comment="For Frido Garritsen, bug 4526">
-        <enum value="0x8FC4" name="GL_SHADER_BINARY_VIV"/>
+        <enum value="0x8FC4" name="GL_SHADER_BINARY_VIV" group="ShaderBinaryFormat"/>
     </enums>
 
     <enums namespace="GL" start="0x8FE0" end="0x8FFF" vendor="NV" comment="For Pat Brown, bug 4935">
@@ -10149,11 +5691,11 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8FE5" name="GL_INT16_VEC2_NV"/>
         <enum value="0x8FE6" name="GL_INT16_VEC3_NV"/>
         <enum value="0x8FE7" name="GL_INT16_VEC4_NV"/>
-        <enum value="0x8FE9" name="GL_INT64_VEC2_ARB"/>
+        <enum value="0x8FE9" name="GL_INT64_VEC2_ARB" group="AttributeType"/>
         <enum value="0x8FE9" name="GL_INT64_VEC2_NV"/>
-        <enum value="0x8FEA" name="GL_INT64_VEC3_ARB"/>
+        <enum value="0x8FEA" name="GL_INT64_VEC3_ARB" group="AttributeType"/>
         <enum value="0x8FEA" name="GL_INT64_VEC3_NV"/>
-        <enum value="0x8FEB" name="GL_INT64_VEC4_ARB"/>
+        <enum value="0x8FEB" name="GL_INT64_VEC4_ARB" group="AttributeType"/>
         <enum value="0x8FEB" name="GL_INT64_VEC4_NV"/>
         <enum value="0x8FEC" name="GL_UNSIGNED_INT8_NV"/>
         <enum value="0x8FED" name="GL_UNSIGNED_INT8_VEC2_NV"/>
@@ -10163,21 +5705,21 @@ typedef unsigned int GLhandleARB;
         <enum value="0x8FF1" name="GL_UNSIGNED_INT16_VEC2_NV"/>
         <enum value="0x8FF2" name="GL_UNSIGNED_INT16_VEC3_NV"/>
         <enum value="0x8FF3" name="GL_UNSIGNED_INT16_VEC4_NV"/>
-        <enum value="0x8FF5" name="GL_UNSIGNED_INT64_VEC2_ARB"/>
+        <enum value="0x8FF5" name="GL_UNSIGNED_INT64_VEC2_ARB" group="AttributeType"/>
         <enum value="0x8FF5" name="GL_UNSIGNED_INT64_VEC2_NV"/>
-        <enum value="0x8FF6" name="GL_UNSIGNED_INT64_VEC3_ARB"/>
+        <enum value="0x8FF6" name="GL_UNSIGNED_INT64_VEC3_ARB" group="AttributeType"/>
         <enum value="0x8FF6" name="GL_UNSIGNED_INT64_VEC3_NV"/>
-        <enum value="0x8FF7" name="GL_UNSIGNED_INT64_VEC4_ARB"/>
+        <enum value="0x8FF7" name="GL_UNSIGNED_INT64_VEC4_ARB" group="AttributeType"/>
         <enum value="0x8FF7" name="GL_UNSIGNED_INT64_VEC4_NV"/>
         <enum value="0x8FF8" name="GL_FLOAT16_NV"/>
         <enum value="0x8FF9" name="GL_FLOAT16_VEC2_NV"/>
         <enum value="0x8FFA" name="GL_FLOAT16_VEC3_NV"/>
         <enum value="0x8FFB" name="GL_FLOAT16_VEC4_NV"/>
-        <enum value="0x8FFC" name="GL_DOUBLE_VEC2"/>
+        <enum value="0x8FFC" name="GL_DOUBLE_VEC2" group="AttributeType,UniformType"/>
         <enum value="0x8FFC" name="GL_DOUBLE_VEC2_EXT"/>
-        <enum value="0x8FFD" name="GL_DOUBLE_VEC3"/>
+        <enum value="0x8FFD" name="GL_DOUBLE_VEC3" group="AttributeType,UniformType"/>
         <enum value="0x8FFD" name="GL_DOUBLE_VEC3_EXT"/>
-        <enum value="0x8FFE" name="GL_DOUBLE_VEC4"/>
+        <enum value="0x8FFE" name="GL_DOUBLE_VEC4" group="AttributeType,UniformType"/>
         <enum value="0x8FFE" name="GL_DOUBLE_VEC4_EXT"/>
             <unused start="0x8FFF" vendor="NV"/>
     </enums>
@@ -10191,29 +5733,29 @@ typedef unsigned int GLhandleARB;
         <enum value="0x9006" name="GL_DISCRETE_AMD"/>
         <enum value="0x9007" name="GL_CONTINUOUS_AMD"/>
             <unused start="0x9008" vendor="AMD"/>
-        <enum value="0x9009" name="GL_TEXTURE_CUBE_MAP_ARRAY"/>
-        <enum value="0x9009" name="GL_TEXTURE_CUBE_MAP_ARRAY_ARB"/>
-        <enum value="0x9009" name="GL_TEXTURE_CUBE_MAP_ARRAY_EXT"/>
-        <enum value="0x9009" name="GL_TEXTURE_CUBE_MAP_ARRAY_OES"/>
+        <enum value="0x9009" name="GL_TEXTURE_CUBE_MAP_ARRAY" group="CopyImageSubDataTarget,TextureTarget"/>
+        <enum value="0x9009" name="GL_TEXTURE_CUBE_MAP_ARRAY_ARB" group="TextureTarget"/>
+        <enum value="0x9009" name="GL_TEXTURE_CUBE_MAP_ARRAY_EXT" group="TextureTarget"/>
+        <enum value="0x9009" name="GL_TEXTURE_CUBE_MAP_ARRAY_OES" group="TextureTarget"/>
         <enum value="0x900A" name="GL_TEXTURE_BINDING_CUBE_MAP_ARRAY"/>
         <enum value="0x900A" name="GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB"/>
         <enum value="0x900A" name="GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT"/>
         <enum value="0x900A" name="GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES"/>
-        <enum value="0x900B" name="GL_PROXY_TEXTURE_CUBE_MAP_ARRAY"/>
-        <enum value="0x900B" name="GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB"/>
-        <enum value="0x900C" name="GL_SAMPLER_CUBE_MAP_ARRAY"/>
+        <enum value="0x900B" name="GL_PROXY_TEXTURE_CUBE_MAP_ARRAY" group="TextureTarget"/>
+        <enum value="0x900B" name="GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB" group="TextureTarget"/>
+        <enum value="0x900C" name="GL_SAMPLER_CUBE_MAP_ARRAY" group="AttributeType,UniformType"/>
         <enum value="0x900C" name="GL_SAMPLER_CUBE_MAP_ARRAY_ARB"/>
         <enum value="0x900C" name="GL_SAMPLER_CUBE_MAP_ARRAY_EXT"/>
         <enum value="0x900C" name="GL_SAMPLER_CUBE_MAP_ARRAY_OES"/>
-        <enum value="0x900D" name="GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW"/>
+        <enum value="0x900D" name="GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW" group="AttributeType,UniformType"/>
         <enum value="0x900D" name="GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB"/>
         <enum value="0x900D" name="GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT"/>
         <enum value="0x900D" name="GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES"/>
-        <enum value="0x900E" name="GL_INT_SAMPLER_CUBE_MAP_ARRAY"/>
+        <enum value="0x900E" name="GL_INT_SAMPLER_CUBE_MAP_ARRAY" group="AttributeType,UniformType"/>
         <enum value="0x900E" name="GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB"/>
         <enum value="0x900E" name="GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT"/>
         <enum value="0x900E" name="GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES"/>
-        <enum value="0x900F" name="GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY"/>
+        <enum value="0x900F" name="GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY" group="AttributeType,UniformType"/>
         <enum value="0x900F" name="GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB"/>
         <enum value="0x900F" name="GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT"/>
         <enum value="0x900F" name="GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES"/>
@@ -10273,152 +5815,152 @@ typedef unsigned int GLhandleARB;
         <enum value="0x9049" name="GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX"/>
         <enum value="0x904A" name="GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX"/>
         <enum value="0x904B" name="GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX"/>
-        <enum value="0x904C" name="GL_IMAGE_1D"/>
+        <enum value="0x904C" name="GL_IMAGE_1D" group="AttributeType"/>
         <enum value="0x904C" name="GL_IMAGE_1D_EXT"/>
-        <enum value="0x904D" name="GL_IMAGE_2D"/>
+        <enum value="0x904D" name="GL_IMAGE_2D" group="AttributeType"/>
         <enum value="0x904D" name="GL_IMAGE_2D_EXT"/>
-        <enum value="0x904E" name="GL_IMAGE_3D"/>
+        <enum value="0x904E" name="GL_IMAGE_3D" group="AttributeType"/>
         <enum value="0x904E" name="GL_IMAGE_3D_EXT"/>
-        <enum value="0x904F" name="GL_IMAGE_2D_RECT"/>
+        <enum value="0x904F" name="GL_IMAGE_2D_RECT" group="AttributeType"/>
         <enum value="0x904F" name="GL_IMAGE_2D_RECT_EXT"/>
-        <enum value="0x9050" name="GL_IMAGE_CUBE"/>
+        <enum value="0x9050" name="GL_IMAGE_CUBE" group="AttributeType"/>
         <enum value="0x9050" name="GL_IMAGE_CUBE_EXT"/>
-        <enum value="0x9051" name="GL_IMAGE_BUFFER"/>
+        <enum value="0x9051" name="GL_IMAGE_BUFFER" group="AttributeType"/>
         <enum value="0x9051" name="GL_IMAGE_BUFFER_EXT"/>
         <enum value="0x9051" name="GL_IMAGE_BUFFER_OES"/>
-        <enum value="0x9052" name="GL_IMAGE_1D_ARRAY"/>
+        <enum value="0x9052" name="GL_IMAGE_1D_ARRAY" group="AttributeType"/>
         <enum value="0x9052" name="GL_IMAGE_1D_ARRAY_EXT"/>
-        <enum value="0x9053" name="GL_IMAGE_2D_ARRAY"/>
+        <enum value="0x9053" name="GL_IMAGE_2D_ARRAY" group="AttributeType"/>
         <enum value="0x9053" name="GL_IMAGE_2D_ARRAY_EXT"/>
-        <enum value="0x9054" name="GL_IMAGE_CUBE_MAP_ARRAY"/>
+        <enum value="0x9054" name="GL_IMAGE_CUBE_MAP_ARRAY" group="AttributeType"/>
         <enum value="0x9054" name="GL_IMAGE_CUBE_MAP_ARRAY_EXT"/>
         <enum value="0x9054" name="GL_IMAGE_CUBE_MAP_ARRAY_OES"/>
-        <enum value="0x9055" name="GL_IMAGE_2D_MULTISAMPLE"/>
+        <enum value="0x9055" name="GL_IMAGE_2D_MULTISAMPLE" group="AttributeType"/>
         <enum value="0x9055" name="GL_IMAGE_2D_MULTISAMPLE_EXT"/>
-        <enum value="0x9056" name="GL_IMAGE_2D_MULTISAMPLE_ARRAY"/>
+        <enum value="0x9056" name="GL_IMAGE_2D_MULTISAMPLE_ARRAY" group="AttributeType"/>
         <enum value="0x9056" name="GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT"/>
-        <enum value="0x9057" name="GL_INT_IMAGE_1D"/>
+        <enum value="0x9057" name="GL_INT_IMAGE_1D" group="AttributeType"/>
         <enum value="0x9057" name="GL_INT_IMAGE_1D_EXT"/>
-        <enum value="0x9058" name="GL_INT_IMAGE_2D"/>
+        <enum value="0x9058" name="GL_INT_IMAGE_2D" group="AttributeType"/>
         <enum value="0x9058" name="GL_INT_IMAGE_2D_EXT"/>
-        <enum value="0x9059" name="GL_INT_IMAGE_3D"/>
+        <enum value="0x9059" name="GL_INT_IMAGE_3D" group="AttributeType"/>
         <enum value="0x9059" name="GL_INT_IMAGE_3D_EXT"/>
-        <enum value="0x905A" name="GL_INT_IMAGE_2D_RECT"/>
+        <enum value="0x905A" name="GL_INT_IMAGE_2D_RECT" group="AttributeType"/>
         <enum value="0x905A" name="GL_INT_IMAGE_2D_RECT_EXT"/>
-        <enum value="0x905B" name="GL_INT_IMAGE_CUBE"/>
+        <enum value="0x905B" name="GL_INT_IMAGE_CUBE" group="AttributeType"/>
         <enum value="0x905B" name="GL_INT_IMAGE_CUBE_EXT"/>
-        <enum value="0x905C" name="GL_INT_IMAGE_BUFFER"/>
+        <enum value="0x905C" name="GL_INT_IMAGE_BUFFER" group="AttributeType"/>
         <enum value="0x905C" name="GL_INT_IMAGE_BUFFER_EXT"/>
         <enum value="0x905C" name="GL_INT_IMAGE_BUFFER_OES"/>
-        <enum value="0x905D" name="GL_INT_IMAGE_1D_ARRAY"/>
+        <enum value="0x905D" name="GL_INT_IMAGE_1D_ARRAY" group="AttributeType"/>
         <enum value="0x905D" name="GL_INT_IMAGE_1D_ARRAY_EXT"/>
-        <enum value="0x905E" name="GL_INT_IMAGE_2D_ARRAY"/>
+        <enum value="0x905E" name="GL_INT_IMAGE_2D_ARRAY" group="AttributeType"/>
         <enum value="0x905E" name="GL_INT_IMAGE_2D_ARRAY_EXT"/>
-        <enum value="0x905F" name="GL_INT_IMAGE_CUBE_MAP_ARRAY"/>
+        <enum value="0x905F" name="GL_INT_IMAGE_CUBE_MAP_ARRAY" group="AttributeType"/>
         <enum value="0x905F" name="GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT"/>
         <enum value="0x905F" name="GL_INT_IMAGE_CUBE_MAP_ARRAY_OES"/>
-        <enum value="0x9060" name="GL_INT_IMAGE_2D_MULTISAMPLE"/>
+        <enum value="0x9060" name="GL_INT_IMAGE_2D_MULTISAMPLE" group="AttributeType"/>
         <enum value="0x9060" name="GL_INT_IMAGE_2D_MULTISAMPLE_EXT"/>
-        <enum value="0x9061" name="GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY"/>
+        <enum value="0x9061" name="GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY" group="AttributeType"/>
         <enum value="0x9061" name="GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT"/>
-        <enum value="0x9062" name="GL_UNSIGNED_INT_IMAGE_1D"/>
+        <enum value="0x9062" name="GL_UNSIGNED_INT_IMAGE_1D" group="AttributeType"/>
         <enum value="0x9062" name="GL_UNSIGNED_INT_IMAGE_1D_EXT"/>
-        <enum value="0x9063" name="GL_UNSIGNED_INT_IMAGE_2D"/>
+        <enum value="0x9063" name="GL_UNSIGNED_INT_IMAGE_2D" group="AttributeType"/>
         <enum value="0x9063" name="GL_UNSIGNED_INT_IMAGE_2D_EXT"/>
-        <enum value="0x9064" name="GL_UNSIGNED_INT_IMAGE_3D"/>
+        <enum value="0x9064" name="GL_UNSIGNED_INT_IMAGE_3D" group="AttributeType"/>
         <enum value="0x9064" name="GL_UNSIGNED_INT_IMAGE_3D_EXT"/>
-        <enum value="0x9065" name="GL_UNSIGNED_INT_IMAGE_2D_RECT"/>
+        <enum value="0x9065" name="GL_UNSIGNED_INT_IMAGE_2D_RECT" group="AttributeType"/>
         <enum value="0x9065" name="GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT"/>
-        <enum value="0x9066" name="GL_UNSIGNED_INT_IMAGE_CUBE"/>
+        <enum value="0x9066" name="GL_UNSIGNED_INT_IMAGE_CUBE" group="AttributeType"/>
         <enum value="0x9066" name="GL_UNSIGNED_INT_IMAGE_CUBE_EXT"/>
-        <enum value="0x9067" name="GL_UNSIGNED_INT_IMAGE_BUFFER"/>
+        <enum value="0x9067" name="GL_UNSIGNED_INT_IMAGE_BUFFER" group="AttributeType"/>
         <enum value="0x9067" name="GL_UNSIGNED_INT_IMAGE_BUFFER_EXT"/>
         <enum value="0x9067" name="GL_UNSIGNED_INT_IMAGE_BUFFER_OES"/>
-        <enum value="0x9068" name="GL_UNSIGNED_INT_IMAGE_1D_ARRAY"/>
+        <enum value="0x9068" name="GL_UNSIGNED_INT_IMAGE_1D_ARRAY" group="AttributeType"/>
         <enum value="0x9068" name="GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT"/>
-        <enum value="0x9069" name="GL_UNSIGNED_INT_IMAGE_2D_ARRAY"/>
+        <enum value="0x9069" name="GL_UNSIGNED_INT_IMAGE_2D_ARRAY" group="AttributeType"/>
         <enum value="0x9069" name="GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT"/>
-        <enum value="0x906A" name="GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY"/>
+        <enum value="0x906A" name="GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY" group="AttributeType"/>
         <enum value="0x906A" name="GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT"/>
         <enum value="0x906A" name="GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES"/>
-        <enum value="0x906B" name="GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE"/>
+        <enum value="0x906B" name="GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE" group="AttributeType"/>
         <enum value="0x906B" name="GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT"/>
-        <enum value="0x906C" name="GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY"/>
+        <enum value="0x906C" name="GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY" group="AttributeType"/>
         <enum value="0x906C" name="GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT"/>
         <enum value="0x906D" name="GL_MAX_IMAGE_SAMPLES"/>
         <enum value="0x906D" name="GL_MAX_IMAGE_SAMPLES_EXT"/>
         <enum value="0x906E" name="GL_IMAGE_BINDING_FORMAT"/>
         <enum value="0x906E" name="GL_IMAGE_BINDING_FORMAT_EXT"/>
-        <enum value="0x906F" name="GL_RGB10_A2UI"/>
-        <enum value="0x9070" name="GL_PATH_FORMAT_SVG_NV"/>
-        <enum value="0x9071" name="GL_PATH_FORMAT_PS_NV"/>
-        <enum value="0x9072" name="GL_STANDARD_FONT_NAME_NV"/>
-        <enum value="0x9073" name="GL_SYSTEM_FONT_NAME_NV"/>
-        <enum value="0x9074" name="GL_FILE_NAME_NV"/>
-        <enum value="0x9075" name="GL_PATH_STROKE_WIDTH_NV"/>
-        <enum value="0x9076" name="GL_PATH_END_CAPS_NV"/>
-        <enum value="0x9077" name="GL_PATH_INITIAL_END_CAP_NV"/>
-        <enum value="0x9078" name="GL_PATH_TERMINAL_END_CAP_NV"/>
-        <enum value="0x9079" name="GL_PATH_JOIN_STYLE_NV"/>
-        <enum value="0x907A" name="GL_PATH_MITER_LIMIT_NV"/>
-        <enum value="0x907B" name="GL_PATH_DASH_CAPS_NV"/>
-        <enum value="0x907C" name="GL_PATH_INITIAL_DASH_CAP_NV"/>
-        <enum value="0x907D" name="GL_PATH_TERMINAL_DASH_CAP_NV"/>
-        <enum value="0x907E" name="GL_PATH_DASH_OFFSET_NV"/>
-        <enum value="0x907F" name="GL_PATH_CLIENT_LENGTH_NV"/>
-        <enum value="0x9080" name="GL_PATH_FILL_MODE_NV"/>
-        <enum value="0x9081" name="GL_PATH_FILL_MASK_NV"/>
-        <enum value="0x9082" name="GL_PATH_FILL_COVER_MODE_NV"/>
-        <enum value="0x9083" name="GL_PATH_STROKE_COVER_MODE_NV"/>
-        <enum value="0x9084" name="GL_PATH_STROKE_MASK_NV"/>
+        <enum value="0x906F" name="GL_RGB10_A2UI" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9070" name="GL_PATH_FORMAT_SVG_NV" group="PathStringFormat"/>
+        <enum value="0x9071" name="GL_PATH_FORMAT_PS_NV" group="PathStringFormat"/>
+        <enum value="0x9072" name="GL_STANDARD_FONT_NAME_NV" group="PathFontTarget"/>
+        <enum value="0x9073" name="GL_SYSTEM_FONT_NAME_NV" group="PathFontTarget"/>
+        <enum value="0x9074" name="GL_FILE_NAME_NV" group="PathFontTarget"/>
+        <enum value="0x9075" name="GL_PATH_STROKE_WIDTH_NV" group="PathParameter"/>
+        <enum value="0x9076" name="GL_PATH_END_CAPS_NV" group="PathParameter"/>
+        <enum value="0x9077" name="GL_PATH_INITIAL_END_CAP_NV" group="PathParameter"/>
+        <enum value="0x9078" name="GL_PATH_TERMINAL_END_CAP_NV" group="PathParameter"/>
+        <enum value="0x9079" name="GL_PATH_JOIN_STYLE_NV" group="PathParameter"/>
+        <enum value="0x907A" name="GL_PATH_MITER_LIMIT_NV" group="PathParameter"/>
+        <enum value="0x907B" name="GL_PATH_DASH_CAPS_NV" group="PathParameter"/>
+        <enum value="0x907C" name="GL_PATH_INITIAL_DASH_CAP_NV" group="PathParameter"/>
+        <enum value="0x907D" name="GL_PATH_TERMINAL_DASH_CAP_NV" group="PathParameter"/>
+        <enum value="0x907E" name="GL_PATH_DASH_OFFSET_NV" group="PathParameter"/>
+        <enum value="0x907F" name="GL_PATH_CLIENT_LENGTH_NV" group="PathParameter"/>
+        <enum value="0x9080" name="GL_PATH_FILL_MODE_NV" group="PathParameter,PathFillMode"/>
+        <enum value="0x9081" name="GL_PATH_FILL_MASK_NV" group="PathParameter"/>
+        <enum value="0x9082" name="GL_PATH_FILL_COVER_MODE_NV" group="PathCoverMode,InstancedPathCoverMode,PathParameter"/>
+        <enum value="0x9083" name="GL_PATH_STROKE_COVER_MODE_NV" group="PathParameter"/>
+        <enum value="0x9084" name="GL_PATH_STROKE_MASK_NV" group="PathParameter"/>
             <!-- <enum value="0x9085" name="GL_PATH_SAMPLE_QUALITY_NV"          comment="Removed from extension"/> -->
             <!-- <enum value="0x9086" name="GL_PATH_STROKE_BOUND_NV"            comment="Removed from extension"/> -->
             <!-- <enum value="0x9087" name="GL_PATH_STROKE_OVERSAMPLE_COUNT_NV" comment="Removed from extension"/> -->
-        <enum value="0x9088" name="GL_COUNT_UP_NV"/>
-        <enum value="0x9089" name="GL_COUNT_DOWN_NV"/>
-        <enum value="0x908A" name="GL_PATH_OBJECT_BOUNDING_BOX_NV"/>
-        <enum value="0x908B" name="GL_CONVEX_HULL_NV"/>
+        <enum value="0x9088" name="GL_COUNT_UP_NV" group="PathFillMode"/>
+        <enum value="0x9089" name="GL_COUNT_DOWN_NV" group="PathFillMode"/>
+        <enum value="0x908A" name="GL_PATH_OBJECT_BOUNDING_BOX_NV" group="PathGenMode,PathParameter"/>
+        <enum value="0x908B" name="GL_CONVEX_HULL_NV" group="PathCoverMode,InstancedPathCoverMode"/>
             <!-- <enum value="0x908C" name="GL_MULTI_HULLS_NV"                  comment="Removed from extension"/> -->
-        <enum value="0x908D" name="GL_BOUNDING_BOX_NV"/>
-        <enum value="0x908E" name="GL_TRANSLATE_X_NV"/>
-        <enum value="0x908F" name="GL_TRANSLATE_Y_NV"/>
-        <enum value="0x9090" name="GL_TRANSLATE_2D_NV"/>
-        <enum value="0x9091" name="GL_TRANSLATE_3D_NV"/>
-        <enum value="0x9092" name="GL_AFFINE_2D_NV"/>
+        <enum value="0x908D" name="GL_BOUNDING_BOX_NV" group="PathCoverMode,InstancedPathCoverMode"/>
+        <enum value="0x908E" name="GL_TRANSLATE_X_NV" group="PathTransformType"/>
+        <enum value="0x908F" name="GL_TRANSLATE_Y_NV" group="PathTransformType"/>
+        <enum value="0x9090" name="GL_TRANSLATE_2D_NV" group="PathTransformType"/>
+        <enum value="0x9091" name="GL_TRANSLATE_3D_NV" group="PathTransformType"/>
+        <enum value="0x9092" name="GL_AFFINE_2D_NV" group="PathTransformType"/>
             <!-- <enum value="0x9093" name="GL_PROJECTIVE_2D_NV"                comment="Removed from extension"/> -->
-        <enum value="0x9094" name="GL_AFFINE_3D_NV"/>
+        <enum value="0x9094" name="GL_AFFINE_3D_NV" group="PathTransformType"/>
             <!-- <enum value="0x9095" name="GL_PROJECTIVE_3D_NV"                comment="Removed from extension"/> -->
-        <enum value="0x9096" name="GL_TRANSPOSE_AFFINE_2D_NV"/>
+        <enum value="0x9096" name="GL_TRANSPOSE_AFFINE_2D_NV" group="PathTransformType"/>
             <!-- <enum value="0x9097" name="GL_TRANSPOSE_PROJECTIVE_2D_NV"      comment="Removed from extension"/> -->
-        <enum value="0x9098" name="GL_TRANSPOSE_AFFINE_3D_NV"/>
+        <enum value="0x9098" name="GL_TRANSPOSE_AFFINE_3D_NV" group="PathTransformType"/>
             <!-- <enum value="0x9099" name="GL_TRANSPOSE_PROJECTIVE_3D_NV"      comment="Removed from extension"/> -->
-        <enum value="0x909A" name="GL_UTF8_NV"/>
-        <enum value="0x909B" name="GL_UTF16_NV"/>
-        <enum value="0x909C" name="GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV"/>
-        <enum value="0x909D" name="GL_PATH_COMMAND_COUNT_NV"/>
-        <enum value="0x909E" name="GL_PATH_COORD_COUNT_NV"/>
-        <enum value="0x909F" name="GL_PATH_DASH_ARRAY_COUNT_NV"/>
-        <enum value="0x90A0" name="GL_PATH_COMPUTED_LENGTH_NV"/>
-        <enum value="0x90A1" name="GL_PATH_FILL_BOUNDING_BOX_NV"/>
-        <enum value="0x90A2" name="GL_PATH_STROKE_BOUNDING_BOX_NV"/>
+        <enum value="0x909A" name="GL_UTF8_NV" group="PathElementType"/>
+        <enum value="0x909B" name="GL_UTF16_NV" group="PathElementType"/>
+        <enum value="0x909C" name="GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV" group="InstancedPathCoverMode"/>
+        <enum value="0x909D" name="GL_PATH_COMMAND_COUNT_NV" group="PathParameter"/>
+        <enum value="0x909E" name="GL_PATH_COORD_COUNT_NV" group="PathParameter"/>
+        <enum value="0x909F" name="GL_PATH_DASH_ARRAY_COUNT_NV" group="PathParameter"/>
+        <enum value="0x90A0" name="GL_PATH_COMPUTED_LENGTH_NV" group="PathParameter"/>
+        <enum value="0x90A1" name="GL_PATH_FILL_BOUNDING_BOX_NV" group="PathParameter"/>
+        <enum value="0x90A2" name="GL_PATH_STROKE_BOUNDING_BOX_NV" group="PathParameter"/>
         <enum value="0x90A3" name="GL_SQUARE_NV"/>
         <enum value="0x90A4" name="GL_ROUND_NV"/>
         <enum value="0x90A5" name="GL_TRIANGULAR_NV"/>
         <enum value="0x90A6" name="GL_BEVEL_NV"/>
         <enum value="0x90A7" name="GL_MITER_REVERT_NV"/>
         <enum value="0x90A8" name="GL_MITER_TRUNCATE_NV"/>
-        <enum value="0x90A9" name="GL_SKIP_MISSING_GLYPH_NV"/>
-        <enum value="0x90AA" name="GL_USE_MISSING_GLYPH_NV"/>
+        <enum value="0x90A9" name="GL_SKIP_MISSING_GLYPH_NV" group="PathHandleMissingGlyphs"/>
+        <enum value="0x90AA" name="GL_USE_MISSING_GLYPH_NV" group="PathHandleMissingGlyphs"/>
         <enum value="0x90AB" name="GL_PATH_ERROR_POSITION_NV"/>
         <enum value="0x90AC" name="GL_PATH_FOG_GEN_MODE_NV"/>
-        <enum value="0x90AD" name="GL_ACCUM_ADJACENT_PAIRS_NV"/>
-        <enum value="0x90AE" name="GL_ADJACENT_PAIRS_NV"/>
-        <enum value="0x90AF" name="GL_FIRST_TO_REST_NV"/>
+        <enum value="0x90AD" name="GL_ACCUM_ADJACENT_PAIRS_NV" group="PathListMode"/>
+        <enum value="0x90AE" name="GL_ADJACENT_PAIRS_NV" group="PathListMode"/>
+        <enum value="0x90AF" name="GL_FIRST_TO_REST_NV" group="PathListMode"/>
         <enum value="0x90B0" name="GL_PATH_GEN_MODE_NV"/>
         <enum value="0x90B1" name="GL_PATH_GEN_COEFF_NV"/>
         <enum value="0x90B2" name="GL_PATH_GEN_COLOR_FORMAT_NV"/>
         <enum value="0x90B3" name="GL_PATH_GEN_COMPONENTS_NV"/>
-        <enum value="0x90B4" name="GL_PATH_DASH_OFFSET_RESET_NV"/>
+        <enum value="0x90B4" name="GL_PATH_DASH_OFFSET_RESET_NV" group="PathParameter"/>
         <enum value="0x90B5" name="GL_MOVE_TO_RESETS_NV"/>
         <enum value="0x90B6" name="GL_MOVE_TO_CONTINUES_NV"/>
         <enum value="0x90B7" name="GL_PATH_STENCIL_FUNC_NV"/>
@@ -10426,12 +5968,12 @@ typedef unsigned int GLhandleARB;
         <enum value="0x90B9" name="GL_PATH_STENCIL_VALUE_MASK_NV"/>
         <enum value="0x90BA" name="GL_SCALED_RESOLVE_FASTEST_EXT"/>
         <enum value="0x90BB" name="GL_SCALED_RESOLVE_NICEST_EXT"/>
-        <enum value="0x90BC" name="GL_MIN_MAP_BUFFER_ALIGNMENT"/>
+        <enum value="0x90BC" name="GL_MIN_MAP_BUFFER_ALIGNMENT" group="GetPName"/>
         <enum value="0x90BD" name="GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV"/>
         <enum value="0x90BE" name="GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV"/>
         <enum value="0x90BF" name="GL_PATH_COVER_DEPTH_FUNC_NV"/>
             <unused start="0x90C0" end="0x90C6" vendor="NV"/>
-        <enum value="0x90C7" name="GL_IMAGE_FORMAT_COMPATIBILITY_TYPE"/>
+        <enum value="0x90C7" name="GL_IMAGE_FORMAT_COMPATIBILITY_TYPE" group="InternalFormatPName"/>
         <enum value="0x90C8" name="GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE"/>
         <enum value="0x90C9" name="GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS"/>
         <enum value="0x90CA" name="GL_MAX_VERTEX_IMAGE_UNIFORMS"/>
@@ -10448,36 +5990,36 @@ typedef unsigned int GLhandleARB;
         <enum value="0x90CF" name="GL_MAX_COMBINED_IMAGE_UNIFORMS"/>
         <enum value="0x90D0" name="GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV"/>
         <enum value="0x90D1" name="GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV"/>
-        <enum value="0x90D2" name="GL_SHADER_STORAGE_BUFFER"/>
-        <enum value="0x90D3" name="GL_SHADER_STORAGE_BUFFER_BINDING"/>
-        <enum value="0x90D4" name="GL_SHADER_STORAGE_BUFFER_START"/>
-        <enum value="0x90D5" name="GL_SHADER_STORAGE_BUFFER_SIZE"/>
-        <enum value="0x90D6" name="GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS"/>
-        <enum value="0x90D7" name="GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS"/>
+        <enum value="0x90D2" name="GL_SHADER_STORAGE_BUFFER" group="CopyBufferSubDataTarget,BufferTargetARB,BufferStorageTarget"/>
+        <enum value="0x90D3" name="GL_SHADER_STORAGE_BUFFER_BINDING" group="GetPName"/>
+        <enum value="0x90D4" name="GL_SHADER_STORAGE_BUFFER_START" group="GetPName"/>
+        <enum value="0x90D5" name="GL_SHADER_STORAGE_BUFFER_SIZE" group="GetPName"/>
+        <enum value="0x90D6" name="GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS" group="GetPName"/>
+        <enum value="0x90D7" name="GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS" group="GetPName"/>
         <enum value="0x90D7" name="GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT"/>
         <enum value="0x90D7" name="GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES"/>
-        <enum value="0x90D8" name="GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS"/>
+        <enum value="0x90D8" name="GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS" group="GetPName"/>
         <enum value="0x90D8" name="GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT"/>
         <enum value="0x90D8" name="GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES"/>
-        <enum value="0x90D9" name="GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS"/>
+        <enum value="0x90D9" name="GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS" group="GetPName"/>
         <enum value="0x90D9" name="GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT"/>
         <enum value="0x90D9" name="GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES"/>
-        <enum value="0x90DA" name="GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS"/>
-        <enum value="0x90DB" name="GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS"/>
-        <enum value="0x90DC" name="GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS"/>
-        <enum value="0x90DD" name="GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS"/>
+        <enum value="0x90DA" name="GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS" group="GetPName"/>
+        <enum value="0x90DB" name="GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS" group="GetPName"/>
+        <enum value="0x90DC" name="GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS" group="GetPName"/>
+        <enum value="0x90DD" name="GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS" group="GetPName"/>
         <enum value="0x90DE" name="GL_MAX_SHADER_STORAGE_BLOCK_SIZE"/>
-        <enum value="0x90DF" name="GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT"/>
+        <enum value="0x90DF" name="GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT" group="GetPName"/>
             <unused start="0x90E0" vendor="NV"/>
         <enum value="0x90E1" name="GL_SYNC_X11_FENCE_EXT"/>
             <unused start="0x90E2" end="0x90E9" vendor="NV"/>
-        <enum value="0x90EA" name="GL_DEPTH_STENCIL_TEXTURE_MODE"/>
-        <enum value="0x90EB" name="GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS"/>
+        <enum value="0x90EA" name="GL_DEPTH_STENCIL_TEXTURE_MODE" group="TextureParameterName"/>
+        <enum value="0x90EB" name="GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS" group="GetPName"/>
         <enum value="0x90EB" name="GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB" alias="GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS"/>
-        <enum value="0x90EC" name="GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER"/>
-        <enum value="0x90ED" name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER"/>
-        <enum value="0x90EE" name="GL_DISPATCH_INDIRECT_BUFFER"/>
-        <enum value="0x90EF" name="GL_DISPATCH_INDIRECT_BUFFER_BINDING"/>
+        <enum value="0x90EC" name="GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER" group="UniformBlockPName"/>
+        <enum value="0x90ED" name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER" group="AtomicCounterBufferPName"/>
+        <enum value="0x90EE" name="GL_DISPATCH_INDIRECT_BUFFER" group="CopyBufferSubDataTarget,BufferTargetARB,BufferStorageTarget"/>
+        <enum value="0x90EF" name="GL_DISPATCH_INDIRECT_BUFFER_BINDING" group="GetPName"/>
         <enum value="0x90F0" name="GL_COLOR_ATTACHMENT_EXT"/>
         <enum value="0x90F1" name="GL_MULTIVIEW_EXT"/>
         <enum value="0x90F2" name="GL_MAX_MULTIVIEW_BUFFERS_EXT"/>
@@ -10485,72 +6027,72 @@ typedef unsigned int GLhandleARB;
         <enum value="0x90F3" name="GL_CONTEXT_ROBUST_ACCESS_EXT"/>
         <enum value="0x90F3" name="GL_CONTEXT_ROBUST_ACCESS_KHR"/>
             <unused start="0x90F4" end="0x90FA" vendor="NV"/>
-        <enum value="0x90FB" name="GL_COMPUTE_PROGRAM_NV"/>
+        <enum value="0x90FB" name="GL_COMPUTE_PROGRAM_NV" group="ProgramTarget"/>
         <enum value="0x90FC" name="GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV"/>
             <unused start="0x90FD" end="0x90FF" vendor="NV"/>
     </enums>
 
     <enums namespace="GL" start="0x9100" end="0x912F" vendor="ARB">
-        <enum value="0x9100" name="GL_TEXTURE_2D_MULTISAMPLE"/>
-        <enum value="0x9101" name="GL_PROXY_TEXTURE_2D_MULTISAMPLE"/>
-        <enum value="0x9102" name="GL_TEXTURE_2D_MULTISAMPLE_ARRAY"/>
+        <enum value="0x9100" name="GL_TEXTURE_2D_MULTISAMPLE" group="CopyImageSubDataTarget,TextureTarget"/>
+        <enum value="0x9101" name="GL_PROXY_TEXTURE_2D_MULTISAMPLE" group="TextureTarget"/>
+        <enum value="0x9102" name="GL_TEXTURE_2D_MULTISAMPLE_ARRAY" group="CopyImageSubDataTarget,TextureTarget"/>
         <enum value="0x9102" name="GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES"/>
-        <enum value="0x9103" name="GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY"/>
-        <enum value="0x9104" name="GL_TEXTURE_BINDING_2D_MULTISAMPLE"/>
-        <enum value="0x9105" name="GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY"/>
+        <enum value="0x9103" name="GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY" group="TextureTarget"/>
+        <enum value="0x9104" name="GL_TEXTURE_BINDING_2D_MULTISAMPLE" group="GetPName"/>
+        <enum value="0x9105" name="GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY" group="GetPName"/>
         <enum value="0x9105" name="GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES"/>
         <enum value="0x9106" name="GL_TEXTURE_SAMPLES"/>
         <enum value="0x9107" name="GL_TEXTURE_FIXED_SAMPLE_LOCATIONS"/>
-        <enum value="0x9108" name="GL_SAMPLER_2D_MULTISAMPLE"/>
-        <enum value="0x9109" name="GL_INT_SAMPLER_2D_MULTISAMPLE"/>
-        <enum value="0x910A" name="GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE"/>
-        <enum value="0x910B" name="GL_SAMPLER_2D_MULTISAMPLE_ARRAY"/>
+        <enum value="0x9108" name="GL_SAMPLER_2D_MULTISAMPLE" group="AttributeType,UniformType"/>
+        <enum value="0x9109" name="GL_INT_SAMPLER_2D_MULTISAMPLE" group="AttributeType,UniformType"/>
+        <enum value="0x910A" name="GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE" group="AttributeType,UniformType"/>
+        <enum value="0x910B" name="GL_SAMPLER_2D_MULTISAMPLE_ARRAY" group="AttributeType,UniformType"/>
         <enum value="0x910B" name="GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES"/>
-        <enum value="0x910C" name="GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY"/>
+        <enum value="0x910C" name="GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY" group="AttributeType,UniformType"/>
         <enum value="0x910C" name="GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES"/>
-        <enum value="0x910D" name="GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY"/>
+        <enum value="0x910D" name="GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY" group="AttributeType,UniformType"/>
         <enum value="0x910D" name="GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES"/>
-        <enum value="0x910E" name="GL_MAX_COLOR_TEXTURE_SAMPLES"/>
-        <enum value="0x910F" name="GL_MAX_DEPTH_TEXTURE_SAMPLES"/>
-        <enum value="0x9110" name="GL_MAX_INTEGER_SAMPLES"/>
-        <enum value="0x9111" name="GL_MAX_SERVER_WAIT_TIMEOUT"/>
+        <enum value="0x910E" name="GL_MAX_COLOR_TEXTURE_SAMPLES" group="GetPName"/>
+        <enum value="0x910F" name="GL_MAX_DEPTH_TEXTURE_SAMPLES" group="GetPName"/>
+        <enum value="0x9110" name="GL_MAX_INTEGER_SAMPLES" group="GetPName"/>
+        <enum value="0x9111" name="GL_MAX_SERVER_WAIT_TIMEOUT" group="GetPName"/>
         <enum value="0x9111" name="GL_MAX_SERVER_WAIT_TIMEOUT_APPLE"/>
-        <enum value="0x9112" name="GL_OBJECT_TYPE"/>
+        <enum value="0x9112" name="GL_OBJECT_TYPE" group="SyncParameterName"/>
         <enum value="0x9112" name="GL_OBJECT_TYPE_APPLE"/>
-        <enum value="0x9113" name="GL_SYNC_CONDITION"/>
+        <enum value="0x9113" name="GL_SYNC_CONDITION" group="SyncParameterName"/>
         <enum value="0x9113" name="GL_SYNC_CONDITION_APPLE"/>
-        <enum value="0x9114" name="GL_SYNC_STATUS"/>
+        <enum value="0x9114" name="GL_SYNC_STATUS" group="SyncParameterName"/>
         <enum value="0x9114" name="GL_SYNC_STATUS_APPLE"/>
-        <enum value="0x9115" name="GL_SYNC_FLAGS"/>
+        <enum value="0x9115" name="GL_SYNC_FLAGS" group="SyncParameterName"/>
         <enum value="0x9115" name="GL_SYNC_FLAGS_APPLE"/>
         <enum value="0x9116" name="GL_SYNC_FENCE"/>
         <enum value="0x9116" name="GL_SYNC_FENCE_APPLE"/>
-        <enum value="0x9117" name="GL_SYNC_GPU_COMMANDS_COMPLETE"/>
+        <enum value="0x9117" name="GL_SYNC_GPU_COMMANDS_COMPLETE" group="SyncCondition"/>
         <enum value="0x9117" name="GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE"/>
         <enum value="0x9118" name="GL_UNSIGNALED"/>
         <enum value="0x9118" name="GL_UNSIGNALED_APPLE"/>
         <enum value="0x9119" name="GL_SIGNALED"/>
         <enum value="0x9119" name="GL_SIGNALED_APPLE"/>
-        <enum value="0x911A" name="GL_ALREADY_SIGNALED"/>
+        <enum value="0x911A" name="GL_ALREADY_SIGNALED" group="SyncStatus"/>
         <enum value="0x911A" name="GL_ALREADY_SIGNALED_APPLE"/>
-        <enum value="0x911B" name="GL_TIMEOUT_EXPIRED"/>
+        <enum value="0x911B" name="GL_TIMEOUT_EXPIRED" group="SyncStatus"/>
         <enum value="0x911B" name="GL_TIMEOUT_EXPIRED_APPLE"/>
-        <enum value="0x911C" name="GL_CONDITION_SATISFIED"/>
+        <enum value="0x911C" name="GL_CONDITION_SATISFIED" group="SyncStatus"/>
         <enum value="0x911C" name="GL_CONDITION_SATISFIED_APPLE"/>
-        <enum value="0x911D" name="GL_WAIT_FAILED"/>
+        <enum value="0x911D" name="GL_WAIT_FAILED" group="SyncStatus"/>
         <enum value="0x911D" name="GL_WAIT_FAILED_APPLE"/>
-        <enum value="0x911F" name="GL_BUFFER_ACCESS_FLAGS"/>
-        <enum value="0x9120" name="GL_BUFFER_MAP_LENGTH"/>
-        <enum value="0x9121" name="GL_BUFFER_MAP_OFFSET"/>
-        <enum value="0x9122" name="GL_MAX_VERTEX_OUTPUT_COMPONENTS"/>
-        <enum value="0x9123" name="GL_MAX_GEOMETRY_INPUT_COMPONENTS"/>
+        <enum value="0x911F" name="GL_BUFFER_ACCESS_FLAGS" group="BufferPNameARB"/>
+        <enum value="0x9120" name="GL_BUFFER_MAP_LENGTH" group="BufferPNameARB"/>
+        <enum value="0x9121" name="GL_BUFFER_MAP_OFFSET" group="BufferPNameARB"/>
+        <enum value="0x9122" name="GL_MAX_VERTEX_OUTPUT_COMPONENTS" group="GetPName"/>
+        <enum value="0x9123" name="GL_MAX_GEOMETRY_INPUT_COMPONENTS" group="GetPName"/>
         <enum value="0x9123" name="GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT"/>
         <enum value="0x9123" name="GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES"/>
-        <enum value="0x9124" name="GL_MAX_GEOMETRY_OUTPUT_COMPONENTS"/>
+        <enum value="0x9124" name="GL_MAX_GEOMETRY_OUTPUT_COMPONENTS" group="GetPName"/>
         <enum value="0x9124" name="GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT"/>
         <enum value="0x9124" name="GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES"/>
-        <enum value="0x9125" name="GL_MAX_FRAGMENT_INPUT_COMPONENTS"/>
-        <enum value="0x9126" name="GL_CONTEXT_PROFILE_MASK"/>
+        <enum value="0x9125" name="GL_MAX_FRAGMENT_INPUT_COMPONENTS" group="GetPName"/>
+        <enum value="0x9126" name="GL_CONTEXT_PROFILE_MASK" group="GetPName"/>
         <enum value="0x9127" name="GL_UNPACK_COMPRESSED_BLOCK_WIDTH"/>
         <enum value="0x9128" name="GL_UNPACK_COMPRESSED_BLOCK_HEIGHT"/>
         <enum value="0x9129" name="GL_UNPACK_COMPRESSED_BLOCK_DEPTH"/>
@@ -10566,7 +6108,7 @@ typedef unsigned int GLhandleARB;
     <enums namespace="GL" start="0x9130" end="0x913F" vendor="IMG" comment="Khronos bug 882">
         <enum value="0x9130" name="GL_SGX_PROGRAM_BINARY_IMG"/>
             <unused start="0x9131" end="0x9132" vendor="IMG"/>
-        <enum value="0x9133" name="GL_RENDERBUFFER_SAMPLES_IMG"/>
+        <enum value="0x9133" name="GL_RENDERBUFFER_SAMPLES_IMG" group="RenderbufferParameterName"/>
         <enum value="0x9134" name="GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG"/>
         <enum value="0x9135" name="GL_MAX_SAMPLES_IMG"/>
         <enum value="0x9136" name="GL_TEXTURE_SAMPLES_IMG"/>
@@ -10578,7 +6120,7 @@ typedef unsigned int GLhandleARB;
         <enum value="0x913C" name="GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG"/>
         <enum value="0x913D" name="GL_NUM_DOWNSAMPLE_SCALES_IMG"/>
         <enum value="0x913E" name="GL_DOWNSAMPLE_SCALES_IMG"/>
-        <enum value="0x913F" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG"/>
+        <enum value="0x913F" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG" group="FramebufferAttachmentParameterName"/>
     </enums>
 
     <enums namespace="GL" start="0x9140" end="0x923F" vendor="AMD" comment="Khronos bugs 5899, 6004">
@@ -10595,15 +6137,15 @@ typedef unsigned int GLhandleARB;
         <enum value="0x9145" name="GL_DEBUG_LOGGED_MESSAGES_AMD"/>
         <enum value="0x9145" name="GL_DEBUG_LOGGED_MESSAGES_ARB"/>
         <enum value="0x9145" name="GL_DEBUG_LOGGED_MESSAGES_KHR"/>
-        <enum value="0x9146" name="GL_DEBUG_SEVERITY_HIGH"/>
+        <enum value="0x9146" name="GL_DEBUG_SEVERITY_HIGH" group="DebugSeverity"/>
         <enum value="0x9146" name="GL_DEBUG_SEVERITY_HIGH_AMD"/>
         <enum value="0x9146" name="GL_DEBUG_SEVERITY_HIGH_ARB"/>
         <enum value="0x9146" name="GL_DEBUG_SEVERITY_HIGH_KHR"/>
-        <enum value="0x9147" name="GL_DEBUG_SEVERITY_MEDIUM"/>
+        <enum value="0x9147" name="GL_DEBUG_SEVERITY_MEDIUM" group="DebugSeverity"/>
         <enum value="0x9147" name="GL_DEBUG_SEVERITY_MEDIUM_AMD"/>
         <enum value="0x9147" name="GL_DEBUG_SEVERITY_MEDIUM_ARB"/>
         <enum value="0x9147" name="GL_DEBUG_SEVERITY_MEDIUM_KHR"/>
-        <enum value="0x9148" name="GL_DEBUG_SEVERITY_LOW"/>
+        <enum value="0x9148" name="GL_DEBUG_SEVERITY_LOW" group="DebugSeverity"/>
         <enum value="0x9148" name="GL_DEBUG_SEVERITY_LOW_AMD"/>
         <enum value="0x9148" name="GL_DEBUG_SEVERITY_LOW_ARB"/>
         <enum value="0x9148" name="GL_DEBUG_SEVERITY_LOW_KHR"/>
@@ -10626,11 +6168,11 @@ typedef unsigned int GLhandleARB;
             <unused start="0x9156" end="0x915F" vendor="AMD"/>
         <enum value="0x9160" name="GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD"/>
             <unused start="0x9161" vendor="AMD"/>
-        <enum value="0x9192" name="GL_QUERY_BUFFER"/>
+        <enum value="0x9192" name="GL_QUERY_BUFFER" group="CopyBufferSubDataTarget,BufferTargetARB,BufferStorageTarget"/>
         <enum value="0x9192" name="GL_QUERY_BUFFER_AMD"/>
         <enum value="0x9193" name="GL_QUERY_BUFFER_BINDING"/>
         <enum value="0x9193" name="GL_QUERY_BUFFER_BINDING_AMD"/>
-        <enum value="0x9194" name="GL_QUERY_RESULT_NO_WAIT"/>
+        <enum value="0x9194" name="GL_QUERY_RESULT_NO_WAIT" group="QueryObjectParameterName"/>
         <enum value="0x9194" name="GL_QUERY_RESULT_NO_WAIT_AMD"/>
         <enum value="0x9195" name="GL_VIRTUAL_PAGE_SIZE_X_ARB"/>
         <enum value="0x9195" name="GL_VIRTUAL_PAGE_SIZE_X_EXT"/>
@@ -10658,7 +6200,7 @@ typedef unsigned int GLhandleARB;
         <enum value="0x919E" name="GL_TEXTURE_BUFFER_SIZE"/>
         <enum value="0x919E" name="GL_TEXTURE_BUFFER_SIZE_EXT"/>
         <enum value="0x919E" name="GL_TEXTURE_BUFFER_SIZE_OES"/>
-        <enum value="0x919F" name="GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT"/>
+        <enum value="0x919F" name="GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT" group="GetPName"/>
         <enum value="0x919F" name="GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT"/>
         <enum value="0x919F" name="GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES"/>
         <enum value="0x91A0" name="GL_STREAM_RASTERIZATION_AMD"/>
@@ -10682,20 +6224,20 @@ typedef unsigned int GLhandleARB;
         <enum value="0x91B0" name="GL_MAX_SHADER_COMPILER_THREADS_ARB" alias="GL_MAX_SHADER_COMPILER_THREADS_KHR"/>
         <enum value="0x91B1" name="GL_COMPLETION_STATUS_KHR"/>
         <enum value="0x91B1" name="GL_COMPLETION_STATUS_ARB" alias="GL_COMPLETION_STATUS_KHR"/>
-        <enum value="0x91B2" name="GL_RENDERBUFFER_STORAGE_SAMPLES_AMD"/>
+        <enum value="0x91B2" name="GL_RENDERBUFFER_STORAGE_SAMPLES_AMD" group="RenderbufferParameterName"/>
         <enum value="0x91B3" name="GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD"/>
         <enum value="0x91B4" name="GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD"/>
         <enum value="0x91B5" name="GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD"/>
         <enum value="0x91B6" name="GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD"/>
         <enum value="0x91B7" name="GL_SUPPORTED_MULTISAMPLE_MODES_AMD"/>
             <unused start="0x91B8" end="0x91B8" vendor="AMD"/>
-        <enum value="0x91B9" name="GL_COMPUTE_SHADER"/>
+        <enum value="0x91B9" name="GL_COMPUTE_SHADER" group="ShaderType"/>
             <unused start="0x91BA" vendor="AMD"/>
-        <enum value="0x91BB" name="GL_MAX_COMPUTE_UNIFORM_BLOCKS"/>
-        <enum value="0x91BC" name="GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS"/>
+        <enum value="0x91BB" name="GL_MAX_COMPUTE_UNIFORM_BLOCKS" group="GetPName"/>
+        <enum value="0x91BC" name="GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS" group="GetPName"/>
         <enum value="0x91BD" name="GL_MAX_COMPUTE_IMAGE_UNIFORMS"/>
-        <enum value="0x91BE" name="GL_MAX_COMPUTE_WORK_GROUP_COUNT"/>
-        <enum value="0x91BF" name="GL_MAX_COMPUTE_WORK_GROUP_SIZE"/>
+        <enum value="0x91BE" name="GL_MAX_COMPUTE_WORK_GROUP_COUNT" group="GetPName"/>
+        <enum value="0x91BF" name="GL_MAX_COMPUTE_WORK_GROUP_SIZE" group="GetPName"/>
         <enum value="0x91BF" name="GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB" alias="GL_MAX_COMPUTE_WORK_GROUP_SIZE"/>
             <unused start="0x91C0" end="0x91C4" vendor="AMD"/>
         <enum value="0x91C5" name="GL_FLOAT16_MAT2_AMD"/>
@@ -10716,11 +6258,16 @@ typedef unsigned int GLhandleARB;
         <enum value="0x9242" name="GL_CONTEXT_LOST_WEBGL"/>
         <enum value="0x9243" name="GL_UNPACK_COLORSPACE_CONVERSION_WEBGL"/>
         <enum value="0x9244" name="GL_BROWSER_DEFAULT_WEBGL"/>
-            <unused start="0x9245" end="0x924F" vendor="WEBGL"/>
+        <enum value="0x9245" name="GL_UNMASKED_VENDOR_WEBGL" comment="From the WEBGL_debug_renderer_info extension"/>
+        <enum value="0x9246" name="GL_UNMASKED_RENDERER_WEBGL" comment="From the WEBGL_debug_renderer_info extension"/>
+        <enum value="0x9247" name="GL_MAX_CLIENT_WAIT_TIMEOUT_WEBGL"/>
+        <enum value="0x9248" name="GL_TEXTURE_VIDEO_IMAGE_WEBGL" comment="From the WEBGL_video_texture extension"/>
+        <enum value="0x9249" name="GL_SAMPLER_VIDEO_IMAGE_WEBGL" comment="From the WEBGL_video_texture extension"/>
+            <unused start="0x924A" end="0x924F" vendor="WEBGL"/>
     </enums>
 
     <enums namespace="GL" start="0x9250" end="0x925F" vendor="DMP" comment="For Eisaku Ohbuchi via email">
-        <enum value="0x9250" name="GL_SHADER_BINARY_DMP"/>
+        <enum value="0x9250" name="GL_SHADER_BINARY_DMP" group="ShaderBinaryFormat"/>
         <enum value="0x9251" name="GL_SMAPHS30_PROGRAM_BINARY_DMP"/>
         <enum value="0x9252" name="GL_SMAPHS_PROGRAM_BINARY_DMP"/>
         <enum value="0x9253" name="GL_DMP_PROGRAM_BINARY_DMP"/>
@@ -10728,31 +6275,31 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x9260" end="0x926F" vendor="FJ" comment="Khronos bug 7486">
-        <enum value="0x9260" name="GL_GCCSO_SHADER_BINARY_FJ"/>
+        <enum value="0x9260" name="GL_GCCSO_SHADER_BINARY_FJ" group="ShaderBinaryFormat"/>
             <unused start="0x9261" end="0x926F" vendor="FJ"/>
     </enums>
 
     <enums namespace="GL" start="0x9270" end="0x927F" vendor="OES" comment="Khronos bug 7625">
-        <enum value="0x9270" name="GL_COMPRESSED_R11_EAC"/>
-        <enum value="0x9270" name="GL_COMPRESSED_R11_EAC_OES"/>
-        <enum value="0x9271" name="GL_COMPRESSED_SIGNED_R11_EAC"/>
-        <enum value="0x9271" name="GL_COMPRESSED_SIGNED_R11_EAC_OES"/>
-        <enum value="0x9272" name="GL_COMPRESSED_RG11_EAC"/>
-        <enum value="0x9272" name="GL_COMPRESSED_RG11_EAC_OES"/>
-        <enum value="0x9273" name="GL_COMPRESSED_SIGNED_RG11_EAC"/>
-        <enum value="0x9273" name="GL_COMPRESSED_SIGNED_RG11_EAC_OES"/>
-        <enum value="0x9274" name="GL_COMPRESSED_RGB8_ETC2"/>
-        <enum value="0x9274" name="GL_COMPRESSED_RGB8_ETC2_OES"/>
-        <enum value="0x9275" name="GL_COMPRESSED_SRGB8_ETC2"/>
-        <enum value="0x9275" name="GL_COMPRESSED_SRGB8_ETC2_OES"/>
-        <enum value="0x9276" name="GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2"/>
-        <enum value="0x9276" name="GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES"/>
-        <enum value="0x9277" name="GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2"/>
-        <enum value="0x9277" name="GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES"/>
-        <enum value="0x9278" name="GL_COMPRESSED_RGBA8_ETC2_EAC"/>
-        <enum value="0x9278" name="GL_COMPRESSED_RGBA8_ETC2_EAC_OES"/>
-        <enum value="0x9279" name="GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC"/>
-        <enum value="0x9279" name="GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES"/>
+        <enum value="0x9270" name="GL_COMPRESSED_R11_EAC" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9270" name="GL_COMPRESSED_R11_EAC_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9271" name="GL_COMPRESSED_SIGNED_R11_EAC" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9271" name="GL_COMPRESSED_SIGNED_R11_EAC_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9272" name="GL_COMPRESSED_RG11_EAC" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9272" name="GL_COMPRESSED_RG11_EAC_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9273" name="GL_COMPRESSED_SIGNED_RG11_EAC" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9273" name="GL_COMPRESSED_SIGNED_RG11_EAC_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9274" name="GL_COMPRESSED_RGB8_ETC2" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9274" name="GL_COMPRESSED_RGB8_ETC2_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9275" name="GL_COMPRESSED_SRGB8_ETC2" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9275" name="GL_COMPRESSED_SRGB8_ETC2_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9276" name="GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9276" name="GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9277" name="GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9277" name="GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9278" name="GL_COMPRESSED_RGBA8_ETC2_EAC" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9278" name="GL_COMPRESSED_RGBA8_ETC2_EAC_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9279" name="GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x9279" name="GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES" group="InternalFormat,SizedInternalFormat"/>
             <unused start="0x927A" end="0x927F" vendor="OES"/>
     </enums>
 
@@ -10849,18 +6396,18 @@ typedef unsigned int GLhandleARB;
         <enum value="0x92BE" name="GL_PRIMITIVE_BOUNDING_BOX_EXT"/>
         <enum value="0x92BE" name="GL_PRIMITIVE_BOUNDING_BOX_OES"/>
         <enum value="0x92BF" name="GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV"/>
-        <enum value="0x92C0" name="GL_ATOMIC_COUNTER_BUFFER"/>
-        <enum value="0x92C1" name="GL_ATOMIC_COUNTER_BUFFER_BINDING"/>
+        <enum value="0x92C0" name="GL_ATOMIC_COUNTER_BUFFER" group="CopyBufferSubDataTarget,BufferTargetARB,BufferStorageTarget"/>
+        <enum value="0x92C1" name="GL_ATOMIC_COUNTER_BUFFER_BINDING" group="AtomicCounterBufferPName"/>
         <enum value="0x92C2" name="GL_ATOMIC_COUNTER_BUFFER_START"/>
         <enum value="0x92C3" name="GL_ATOMIC_COUNTER_BUFFER_SIZE"/>
-        <enum value="0x92C4" name="GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE"/>
-        <enum value="0x92C5" name="GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS"/>
-        <enum value="0x92C6" name="GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES"/>
-        <enum value="0x92C7" name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER"/>
-        <enum value="0x92C8" name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER"/>
-        <enum value="0x92C9" name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER"/>
-        <enum value="0x92CA" name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER"/>
-        <enum value="0x92CB" name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER"/>
+        <enum value="0x92C4" name="GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE" group="AtomicCounterBufferPName"/>
+        <enum value="0x92C5" name="GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS" group="AtomicCounterBufferPName"/>
+        <enum value="0x92C6" name="GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES" group="AtomicCounterBufferPName"/>
+        <enum value="0x92C7" name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER" group="AtomicCounterBufferPName"/>
+        <enum value="0x92C8" name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER" group="AtomicCounterBufferPName"/>
+        <enum value="0x92C9" name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER" group="AtomicCounterBufferPName"/>
+        <enum value="0x92CA" name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER" group="AtomicCounterBufferPName"/>
+        <enum value="0x92CB" name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER" group="AtomicCounterBufferPName"/>
         <enum value="0x92CC" name="GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS"/>
         <enum value="0x92CD" name="GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS"/>
         <enum value="0x92CD" name="GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT"/>
@@ -10873,97 +6420,97 @@ typedef unsigned int GLhandleARB;
         <enum value="0x92CF" name="GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES"/>
         <enum value="0x92D0" name="GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS"/>
         <enum value="0x92D1" name="GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS"/>
-        <enum value="0x92D2" name="GL_MAX_VERTEX_ATOMIC_COUNTERS"/>
-        <enum value="0x92D3" name="GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS"/>
+        <enum value="0x92D2" name="GL_MAX_VERTEX_ATOMIC_COUNTERS" group="GetPName"/>
+        <enum value="0x92D3" name="GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS" group="GetPName"/>
         <enum value="0x92D3" name="GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT"/>
         <enum value="0x92D3" name="GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES"/>
-        <enum value="0x92D4" name="GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS"/>
+        <enum value="0x92D4" name="GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS" group="GetPName"/>
         <enum value="0x92D4" name="GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT"/>
         <enum value="0x92D4" name="GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES"/>
-        <enum value="0x92D5" name="GL_MAX_GEOMETRY_ATOMIC_COUNTERS"/>
+        <enum value="0x92D5" name="GL_MAX_GEOMETRY_ATOMIC_COUNTERS" group="GetPName"/>
         <enum value="0x92D5" name="GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT"/>
         <enum value="0x92D5" name="GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES"/>
-        <enum value="0x92D6" name="GL_MAX_FRAGMENT_ATOMIC_COUNTERS"/>
-        <enum value="0x92D7" name="GL_MAX_COMBINED_ATOMIC_COUNTERS"/>
+        <enum value="0x92D6" name="GL_MAX_FRAGMENT_ATOMIC_COUNTERS" group="GetPName"/>
+        <enum value="0x92D7" name="GL_MAX_COMBINED_ATOMIC_COUNTERS" group="GetPName"/>
         <enum value="0x92D8" name="GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE"/>
-        <enum value="0x92D9" name="GL_ACTIVE_ATOMIC_COUNTER_BUFFERS"/>
-        <enum value="0x92DA" name="GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX"/>
+        <enum value="0x92D9" name="GL_ACTIVE_ATOMIC_COUNTER_BUFFERS" group="ProgramPropertyARB"/>
+        <enum value="0x92DA" name="GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX" group="UniformPName"/>
         <enum value="0x92DB" name="GL_UNSIGNED_INT_ATOMIC_COUNTER"/>
         <enum value="0x92DC" name="GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS"/>
         <enum value="0x92DD" name="GL_FRAGMENT_COVERAGE_TO_COLOR_NV"/>
         <enum value="0x92DE" name="GL_FRAGMENT_COVERAGE_COLOR_NV"/>
         <enum value="0x92DF" name="GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV"/>
-        <enum value="0x92E0" name="GL_DEBUG_OUTPUT"/>
+        <enum value="0x92E0" name="GL_DEBUG_OUTPUT" group="EnableCap"/>
         <enum value="0x92E0" name="GL_DEBUG_OUTPUT_KHR"/>
-        <enum value="0x92E1" name="GL_UNIFORM"/>
-        <enum value="0x92E2" name="GL_UNIFORM_BLOCK"/>
-        <enum value="0x92E3" name="GL_PROGRAM_INPUT"/>
-        <enum value="0x92E4" name="GL_PROGRAM_OUTPUT"/>
-        <enum value="0x92E5" name="GL_BUFFER_VARIABLE"/>
-        <enum value="0x92E6" name="GL_SHADER_STORAGE_BLOCK"/>
-        <enum value="0x92E7" name="GL_IS_PER_PATCH"/>
+        <enum value="0x92E1" name="GL_UNIFORM" group="ProgramResourceProperty,ProgramInterface"/>
+        <enum value="0x92E2" name="GL_UNIFORM_BLOCK" group="ProgramInterface"/>
+        <enum value="0x92E3" name="GL_PROGRAM_INPUT" group="ProgramInterface"/>
+        <enum value="0x92E4" name="GL_PROGRAM_OUTPUT" group="ProgramInterface"/>
+        <enum value="0x92E5" name="GL_BUFFER_VARIABLE" group="ProgramInterface"/>
+        <enum value="0x92E6" name="GL_SHADER_STORAGE_BLOCK" group="ProgramInterface"/>
+        <enum value="0x92E7" name="GL_IS_PER_PATCH" group="ProgramResourceProperty"/>
         <enum value="0x92E7" name="GL_IS_PER_PATCH_EXT"/>
         <enum value="0x92E7" name="GL_IS_PER_PATCH_OES"/>
-        <enum value="0x92E8" name="GL_VERTEX_SUBROUTINE"/>
-        <enum value="0x92E9" name="GL_TESS_CONTROL_SUBROUTINE"/>
-        <enum value="0x92EA" name="GL_TESS_EVALUATION_SUBROUTINE"/>
-        <enum value="0x92EB" name="GL_GEOMETRY_SUBROUTINE"/>
-        <enum value="0x92EC" name="GL_FRAGMENT_SUBROUTINE"/>
-        <enum value="0x92ED" name="GL_COMPUTE_SUBROUTINE"/>
-        <enum value="0x92EE" name="GL_VERTEX_SUBROUTINE_UNIFORM"/>
-        <enum value="0x92EF" name="GL_TESS_CONTROL_SUBROUTINE_UNIFORM"/>
-        <enum value="0x92F0" name="GL_TESS_EVALUATION_SUBROUTINE_UNIFORM"/>
-        <enum value="0x92F1" name="GL_GEOMETRY_SUBROUTINE_UNIFORM"/>
-        <enum value="0x92F2" name="GL_FRAGMENT_SUBROUTINE_UNIFORM"/>
-        <enum value="0x92F3" name="GL_COMPUTE_SUBROUTINE_UNIFORM"/>
-        <enum value="0x92F4" name="GL_TRANSFORM_FEEDBACK_VARYING"/>
-        <enum value="0x92F5" name="GL_ACTIVE_RESOURCES"/>
-        <enum value="0x92F6" name="GL_MAX_NAME_LENGTH"/>
-        <enum value="0x92F7" name="GL_MAX_NUM_ACTIVE_VARIABLES"/>
-        <enum value="0x92F8" name="GL_MAX_NUM_COMPATIBLE_SUBROUTINES"/>
-        <enum value="0x92F9" name="GL_NAME_LENGTH"/>
-        <enum value="0x92FA" name="GL_TYPE"/>
-        <enum value="0x92FB" name="GL_ARRAY_SIZE"/>
-        <enum value="0x92FC" name="GL_OFFSET"/>
-        <enum value="0x92FD" name="GL_BLOCK_INDEX"/>
-        <enum value="0x92FE" name="GL_ARRAY_STRIDE"/>
-        <enum value="0x92FF" name="GL_MATRIX_STRIDE"/>
-        <enum value="0x9300" name="GL_IS_ROW_MAJOR"/>
-        <enum value="0x9301" name="GL_ATOMIC_COUNTER_BUFFER_INDEX"/>
-        <enum value="0x9302" name="GL_BUFFER_BINDING"/>
-        <enum value="0x9303" name="GL_BUFFER_DATA_SIZE"/>
-        <enum value="0x9304" name="GL_NUM_ACTIVE_VARIABLES"/>
-        <enum value="0x9305" name="GL_ACTIVE_VARIABLES"/>
-        <enum value="0x9306" name="GL_REFERENCED_BY_VERTEX_SHADER"/>
-        <enum value="0x9307" name="GL_REFERENCED_BY_TESS_CONTROL_SHADER"/>
+        <enum value="0x92E8" name="GL_VERTEX_SUBROUTINE" group="ProgramInterface"/>
+        <enum value="0x92E9" name="GL_TESS_CONTROL_SUBROUTINE" group="ProgramInterface"/>
+        <enum value="0x92EA" name="GL_TESS_EVALUATION_SUBROUTINE" group="ProgramInterface"/>
+        <enum value="0x92EB" name="GL_GEOMETRY_SUBROUTINE" group="ProgramInterface"/>
+        <enum value="0x92EC" name="GL_FRAGMENT_SUBROUTINE" group="ProgramInterface"/>
+        <enum value="0x92ED" name="GL_COMPUTE_SUBROUTINE" group="ProgramInterface"/>
+        <enum value="0x92EE" name="GL_VERTEX_SUBROUTINE_UNIFORM" group="ProgramInterface"/>
+        <enum value="0x92EF" name="GL_TESS_CONTROL_SUBROUTINE_UNIFORM" group="ProgramInterface"/>
+        <enum value="0x92F0" name="GL_TESS_EVALUATION_SUBROUTINE_UNIFORM" group="ProgramInterface"/>
+        <enum value="0x92F1" name="GL_GEOMETRY_SUBROUTINE_UNIFORM" group="ProgramInterface"/>
+        <enum value="0x92F2" name="GL_FRAGMENT_SUBROUTINE_UNIFORM" group="ProgramInterface"/>
+        <enum value="0x92F3" name="GL_COMPUTE_SUBROUTINE_UNIFORM" group="ProgramInterface"/>
+        <enum value="0x92F4" name="GL_TRANSFORM_FEEDBACK_VARYING" group="ProgramInterface"/>
+        <enum value="0x92F5" name="GL_ACTIVE_RESOURCES" group="ProgramInterfacePName"/>
+        <enum value="0x92F6" name="GL_MAX_NAME_LENGTH" group="ProgramInterfacePName"/>
+        <enum value="0x92F7" name="GL_MAX_NUM_ACTIVE_VARIABLES" group="ProgramInterfacePName"/>
+        <enum value="0x92F8" name="GL_MAX_NUM_COMPATIBLE_SUBROUTINES" group="ProgramInterfacePName"/>
+        <enum value="0x92F9" name="GL_NAME_LENGTH" group="ProgramResourceProperty"/>
+        <enum value="0x92FA" name="GL_TYPE" group="ProgramResourceProperty"/>
+        <enum value="0x92FB" name="GL_ARRAY_SIZE" group="ProgramResourceProperty"/>
+        <enum value="0x92FC" name="GL_OFFSET" group="ProgramResourceProperty"/>
+        <enum value="0x92FD" name="GL_BLOCK_INDEX" group="ProgramResourceProperty"/>
+        <enum value="0x92FE" name="GL_ARRAY_STRIDE" group="ProgramResourceProperty"/>
+        <enum value="0x92FF" name="GL_MATRIX_STRIDE" group="ProgramResourceProperty"/>
+        <enum value="0x9300" name="GL_IS_ROW_MAJOR" group="ProgramResourceProperty"/>
+        <enum value="0x9301" name="GL_ATOMIC_COUNTER_BUFFER_INDEX" group="ProgramResourceProperty"/>
+        <enum value="0x9302" name="GL_BUFFER_BINDING" group="ProgramResourceProperty"/>
+        <enum value="0x9303" name="GL_BUFFER_DATA_SIZE" group="ProgramResourceProperty"/>
+        <enum value="0x9304" name="GL_NUM_ACTIVE_VARIABLES" group="ProgramResourceProperty"/>
+        <enum value="0x9305" name="GL_ACTIVE_VARIABLES" group="ProgramResourceProperty"/>
+        <enum value="0x9306" name="GL_REFERENCED_BY_VERTEX_SHADER" group="ProgramResourceProperty"/>
+        <enum value="0x9307" name="GL_REFERENCED_BY_TESS_CONTROL_SHADER" group="ProgramResourceProperty"/>
         <enum value="0x9307" name="GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT"/>
         <enum value="0x9307" name="GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES"/>
-        <enum value="0x9308" name="GL_REFERENCED_BY_TESS_EVALUATION_SHADER"/>
+        <enum value="0x9308" name="GL_REFERENCED_BY_TESS_EVALUATION_SHADER" group="ProgramResourceProperty"/>
         <enum value="0x9308" name="GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT"/>
         <enum value="0x9308" name="GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES"/>
-        <enum value="0x9309" name="GL_REFERENCED_BY_GEOMETRY_SHADER"/>
+        <enum value="0x9309" name="GL_REFERENCED_BY_GEOMETRY_SHADER" group="ProgramResourceProperty"/>
         <enum value="0x9309" name="GL_REFERENCED_BY_GEOMETRY_SHADER_EXT"/>
         <enum value="0x9309" name="GL_REFERENCED_BY_GEOMETRY_SHADER_OES"/>
-        <enum value="0x930A" name="GL_REFERENCED_BY_FRAGMENT_SHADER"/>
-        <enum value="0x930B" name="GL_REFERENCED_BY_COMPUTE_SHADER"/>
-        <enum value="0x930C" name="GL_TOP_LEVEL_ARRAY_SIZE"/>
-        <enum value="0x930D" name="GL_TOP_LEVEL_ARRAY_STRIDE"/>
-        <enum value="0x930E" name="GL_LOCATION"/>
-        <enum value="0x930F" name="GL_LOCATION_INDEX"/>
+        <enum value="0x930A" name="GL_REFERENCED_BY_FRAGMENT_SHADER" group="ProgramResourceProperty"/>
+        <enum value="0x930B" name="GL_REFERENCED_BY_COMPUTE_SHADER" group="ProgramResourceProperty"/>
+        <enum value="0x930C" name="GL_TOP_LEVEL_ARRAY_SIZE" group="ProgramResourceProperty"/>
+        <enum value="0x930D" name="GL_TOP_LEVEL_ARRAY_STRIDE" group="ProgramResourceProperty"/>
+        <enum value="0x930E" name="GL_LOCATION" group="ProgramResourceProperty"/>
+        <enum value="0x930F" name="GL_LOCATION_INDEX" group="ProgramResourceProperty"/>
         <enum value="0x930F" name="GL_LOCATION_INDEX_EXT"/>
-        <enum value="0x9310" name="GL_FRAMEBUFFER_DEFAULT_WIDTH"/>
-        <enum value="0x9311" name="GL_FRAMEBUFFER_DEFAULT_HEIGHT"/>
-        <enum value="0x9312" name="GL_FRAMEBUFFER_DEFAULT_LAYERS"/>
+        <enum value="0x9310" name="GL_FRAMEBUFFER_DEFAULT_WIDTH" group="GetFramebufferParameter,FramebufferParameterName"/>
+        <enum value="0x9311" name="GL_FRAMEBUFFER_DEFAULT_HEIGHT" group="GetFramebufferParameter,FramebufferParameterName"/>
+        <enum value="0x9312" name="GL_FRAMEBUFFER_DEFAULT_LAYERS" group="GetFramebufferParameter,FramebufferParameterName"/>
         <enum value="0x9312" name="GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT"/>
         <enum value="0x9312" name="GL_FRAMEBUFFER_DEFAULT_LAYERS_OES"/>
-        <enum value="0x9313" name="GL_FRAMEBUFFER_DEFAULT_SAMPLES"/>
-        <enum value="0x9314" name="GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS"/>
-        <enum value="0x9315" name="GL_MAX_FRAMEBUFFER_WIDTH"/>
-        <enum value="0x9316" name="GL_MAX_FRAMEBUFFER_HEIGHT"/>
-        <enum value="0x9317" name="GL_MAX_FRAMEBUFFER_LAYERS"/>
+        <enum value="0x9313" name="GL_FRAMEBUFFER_DEFAULT_SAMPLES" group="GetFramebufferParameter,FramebufferParameterName"/>
+        <enum value="0x9314" name="GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS" group="GetFramebufferParameter,FramebufferParameterName"/>
+        <enum value="0x9315" name="GL_MAX_FRAMEBUFFER_WIDTH" group="GetPName"/>
+        <enum value="0x9316" name="GL_MAX_FRAMEBUFFER_HEIGHT" group="GetPName"/>
+        <enum value="0x9317" name="GL_MAX_FRAMEBUFFER_LAYERS" group="GetPName"/>
         <enum value="0x9317" name="GL_MAX_FRAMEBUFFER_LAYERS_EXT"/>
         <enum value="0x9317" name="GL_MAX_FRAMEBUFFER_LAYERS_OES"/>
-        <enum value="0x9318" name="GL_MAX_FRAMEBUFFER_SAMPLES"/>
+        <enum value="0x9318" name="GL_MAX_FRAMEBUFFER_SAMPLES" group="GetPName"/>
             <unused start="0x9319" end="0x9326" vendor="NV"/>
         <enum value="0x9327" name="GL_RASTER_MULTISAMPLE_EXT"/>
         <enum value="0x9328" name="GL_RASTER_SAMPLES_EXT"/>
@@ -10991,7 +6538,7 @@ typedef unsigned int GLhandleARB;
         <enum value="0x933F" name="GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV"/>
         <enum value="0x9340" name="GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB"/>
         <enum value="0x9340" name="GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV"/>
-        <enum value="0x9341" name="GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB"/>
+        <enum value="0x9341" name="GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB" group="GetMultisamplePNameNV"/>
         <enum value="0x9341" name="GL_PROGRAMMABLE_SAMPLE_LOCATION_NV"/>
         <enum value="0x9342" name="GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB"/>
         <enum value="0x9342" name="GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV"/>
@@ -11003,9 +6550,9 @@ typedef unsigned int GLhandleARB;
         <enum value="0x9347" name="GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV"/>
         <enum value="0x9348" name="GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV"/>
         <enum value="0x9349" name="GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV"/>
-        <enum value="0x934A" name="GL_LOCATION_COMPONENT"/>
-        <enum value="0x934B" name="GL_TRANSFORM_FEEDBACK_BUFFER_INDEX"/>
-        <enum value="0x934C" name="GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE"/>
+        <enum value="0x934A" name="GL_LOCATION_COMPONENT" group="ProgramResourceProperty"/>
+        <enum value="0x934B" name="GL_TRANSFORM_FEEDBACK_BUFFER_INDEX" group="ProgramResourceProperty"/>
+        <enum value="0x934C" name="GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE" group="ProgramResourceProperty"/>
         <enum value="0x934D" name="GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV"/>
         <enum value="0x934E" name="GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV"/>
         <enum value="0x934F" name="GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV"/>
@@ -11025,12 +6572,12 @@ typedef unsigned int GLhandleARB;
         <enum value="0x935C" name="GL_CLIP_ORIGIN_EXT" alias="GL_CLIP_ORIGIN"/>
         <enum value="0x935D" name="GL_CLIP_DEPTH_MODE"/>
         <enum value="0x935D" name="GL_CLIP_DEPTH_MODE_EXT" alias="GL_CLIP_DEPTH_MODE"/>
-        <enum value="0x935E" name="GL_NEGATIVE_ONE_TO_ONE"/>
+        <enum value="0x935E" name="GL_NEGATIVE_ONE_TO_ONE" group="ClipControlDepth"/>
         <enum value="0x935E" name="GL_NEGATIVE_ONE_TO_ONE_EXT" alias="GL_NEGATIVE_ONE_TO_ONE"/>
-        <enum value="0x935F" name="GL_ZERO_TO_ONE"/>
+        <enum value="0x935F" name="GL_ZERO_TO_ONE" group="ClipControlDepth"/>
         <enum value="0x935F" name="GL_ZERO_TO_ONE_EXT" alias="GL_ZERO_TO_ONE"/>
             <unused start="0x9360" end="0x9364" vendor="NV"/>
-        <enum value="0x9365" name="GL_CLEAR_TEXTURE"/>
+        <enum value="0x9365" name="GL_CLEAR_TEXTURE" group="InternalFormatPName"/>
         <enum value="0x9366" name="GL_TEXTURE_REDUCTION_MODE_ARB"/>
         <enum value="0x9366" name="GL_TEXTURE_REDUCTION_MODE_EXT" alias="GL_TEXTURE_REDUCTION_MODE_ARB"/>
         <enum value="0x9367" name="GL_WEIGHTED_AVERAGE_ARB"/>
@@ -11059,7 +6606,7 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x9380" end="0x939F" vendor="ARB">
-        <enum value="0x9380" name="GL_NUM_SAMPLE_COUNTS"/>
+        <enum value="0x9380" name="GL_NUM_SAMPLE_COUNTS" group="InternalFormatPName"/>
         <enum value="0x9381" name="GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB"/>
         <enum value="0x9381" name="GL_MULTISAMPLE_LINE_WIDTH_RANGE"/>
         <enum value="0x9382" name="GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB"/>
@@ -11108,85 +6655,85 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x93B0" end="0x93EF" vendor="OES" comment="Khronos bug 8853">
-        <enum value="0x93B0" name="GL_COMPRESSED_RGBA_ASTC_4x4"/>
-        <enum value="0x93B0" name="GL_COMPRESSED_RGBA_ASTC_4x4_KHR"/>
-        <enum value="0x93B1" name="GL_COMPRESSED_RGBA_ASTC_5x4"/>
-        <enum value="0x93B1" name="GL_COMPRESSED_RGBA_ASTC_5x4_KHR"/>
-        <enum value="0x93B2" name="GL_COMPRESSED_RGBA_ASTC_5x5"/>
-        <enum value="0x93B2" name="GL_COMPRESSED_RGBA_ASTC_5x5_KHR"/>
-        <enum value="0x93B3" name="GL_COMPRESSED_RGBA_ASTC_6x5"/>
-        <enum value="0x93B3" name="GL_COMPRESSED_RGBA_ASTC_6x5_KHR"/>
-        <enum value="0x93B4" name="GL_COMPRESSED_RGBA_ASTC_6x6"/>
-        <enum value="0x93B4" name="GL_COMPRESSED_RGBA_ASTC_6x6_KHR"/>
-        <enum value="0x93B5" name="GL_COMPRESSED_RGBA_ASTC_8x5"/>
-        <enum value="0x93B5" name="GL_COMPRESSED_RGBA_ASTC_8x5_KHR"/>
-        <enum value="0x93B6" name="GL_COMPRESSED_RGBA_ASTC_8x6"/>
-        <enum value="0x93B6" name="GL_COMPRESSED_RGBA_ASTC_8x6_KHR"/>
-        <enum value="0x93B7" name="GL_COMPRESSED_RGBA_ASTC_8x8"/>
-        <enum value="0x93B7" name="GL_COMPRESSED_RGBA_ASTC_8x8_KHR"/>
-        <enum value="0x93B8" name="GL_COMPRESSED_RGBA_ASTC_10x5"/>
-        <enum value="0x93B8" name="GL_COMPRESSED_RGBA_ASTC_10x5_KHR"/>
-        <enum value="0x93B9" name="GL_COMPRESSED_RGBA_ASTC_10x6"/>
-        <enum value="0x93B9" name="GL_COMPRESSED_RGBA_ASTC_10x6_KHR"/>
-        <enum value="0x93BA" name="GL_COMPRESSED_RGBA_ASTC_10x8"/>
-        <enum value="0x93BA" name="GL_COMPRESSED_RGBA_ASTC_10x8_KHR"/>
-        <enum value="0x93BB" name="GL_COMPRESSED_RGBA_ASTC_10x10"/>
-        <enum value="0x93BB" name="GL_COMPRESSED_RGBA_ASTC_10x10_KHR"/>
-        <enum value="0x93BC" name="GL_COMPRESSED_RGBA_ASTC_12x10"/>
-        <enum value="0x93BC" name="GL_COMPRESSED_RGBA_ASTC_12x10_KHR"/>
-        <enum value="0x93BD" name="GL_COMPRESSED_RGBA_ASTC_12x12"/>
-        <enum value="0x93BD" name="GL_COMPRESSED_RGBA_ASTC_12x12_KHR"/>
+        <enum value="0x93B0" name="GL_COMPRESSED_RGBA_ASTC_4x4" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B0" name="GL_COMPRESSED_RGBA_ASTC_4x4_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B1" name="GL_COMPRESSED_RGBA_ASTC_5x4" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B1" name="GL_COMPRESSED_RGBA_ASTC_5x4_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B2" name="GL_COMPRESSED_RGBA_ASTC_5x5" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B2" name="GL_COMPRESSED_RGBA_ASTC_5x5_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B3" name="GL_COMPRESSED_RGBA_ASTC_6x5" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B3" name="GL_COMPRESSED_RGBA_ASTC_6x5_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B4" name="GL_COMPRESSED_RGBA_ASTC_6x6" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B4" name="GL_COMPRESSED_RGBA_ASTC_6x6_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B5" name="GL_COMPRESSED_RGBA_ASTC_8x5" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B5" name="GL_COMPRESSED_RGBA_ASTC_8x5_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B6" name="GL_COMPRESSED_RGBA_ASTC_8x6" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B6" name="GL_COMPRESSED_RGBA_ASTC_8x6_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B7" name="GL_COMPRESSED_RGBA_ASTC_8x8" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B7" name="GL_COMPRESSED_RGBA_ASTC_8x8_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B8" name="GL_COMPRESSED_RGBA_ASTC_10x5" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B8" name="GL_COMPRESSED_RGBA_ASTC_10x5_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B9" name="GL_COMPRESSED_RGBA_ASTC_10x6" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93B9" name="GL_COMPRESSED_RGBA_ASTC_10x6_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93BA" name="GL_COMPRESSED_RGBA_ASTC_10x8" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93BA" name="GL_COMPRESSED_RGBA_ASTC_10x8_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93BB" name="GL_COMPRESSED_RGBA_ASTC_10x10" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93BB" name="GL_COMPRESSED_RGBA_ASTC_10x10_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93BC" name="GL_COMPRESSED_RGBA_ASTC_12x10" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93BC" name="GL_COMPRESSED_RGBA_ASTC_12x10_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93BD" name="GL_COMPRESSED_RGBA_ASTC_12x12" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93BD" name="GL_COMPRESSED_RGBA_ASTC_12x12_KHR" group="InternalFormat,SizedInternalFormat"/>
             <unused start="0x93BE" end="0x93BF" vendor="OES"/>
-        <enum value="0x93C0" name="GL_COMPRESSED_RGBA_ASTC_3x3x3_OES"/>
-        <enum value="0x93C1" name="GL_COMPRESSED_RGBA_ASTC_4x3x3_OES"/>
-        <enum value="0x93C2" name="GL_COMPRESSED_RGBA_ASTC_4x4x3_OES"/>
-        <enum value="0x93C3" name="GL_COMPRESSED_RGBA_ASTC_4x4x4_OES"/>
-        <enum value="0x93C4" name="GL_COMPRESSED_RGBA_ASTC_5x4x4_OES"/>
-        <enum value="0x93C5" name="GL_COMPRESSED_RGBA_ASTC_5x5x4_OES"/>
-        <enum value="0x93C6" name="GL_COMPRESSED_RGBA_ASTC_5x5x5_OES"/>
-        <enum value="0x93C7" name="GL_COMPRESSED_RGBA_ASTC_6x5x5_OES"/>
-        <enum value="0x93C8" name="GL_COMPRESSED_RGBA_ASTC_6x6x5_OES"/>
-        <enum value="0x93C9" name="GL_COMPRESSED_RGBA_ASTC_6x6x6_OES"/>
+        <enum value="0x93C0" name="GL_COMPRESSED_RGBA_ASTC_3x3x3_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93C1" name="GL_COMPRESSED_RGBA_ASTC_4x3x3_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93C2" name="GL_COMPRESSED_RGBA_ASTC_4x4x3_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93C3" name="GL_COMPRESSED_RGBA_ASTC_4x4x4_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93C4" name="GL_COMPRESSED_RGBA_ASTC_5x4x4_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93C5" name="GL_COMPRESSED_RGBA_ASTC_5x5x4_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93C6" name="GL_COMPRESSED_RGBA_ASTC_5x5x5_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93C7" name="GL_COMPRESSED_RGBA_ASTC_6x5x5_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93C8" name="GL_COMPRESSED_RGBA_ASTC_6x6x5_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93C9" name="GL_COMPRESSED_RGBA_ASTC_6x6x6_OES" group="InternalFormat,SizedInternalFormat"/>
             <unused start="0x93CA" end="0x93CF" vendor="OES"/>
-        <enum value="0x93D0" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4"/>
-        <enum value="0x93D0" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR"/>
-        <enum value="0x93D1" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4"/>
-        <enum value="0x93D1" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR"/>
-        <enum value="0x93D2" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5"/>
-        <enum value="0x93D2" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR"/>
-        <enum value="0x93D3" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5"/>
-        <enum value="0x93D3" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR"/>
-        <enum value="0x93D4" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6"/>
-        <enum value="0x93D4" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR"/>
-        <enum value="0x93D5" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5"/>
-        <enum value="0x93D5" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR"/>
-        <enum value="0x93D6" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6"/>
-        <enum value="0x93D6" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR"/>
-        <enum value="0x93D7" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8"/>
-        <enum value="0x93D7" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR"/>
-        <enum value="0x93D8" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5"/>
-        <enum value="0x93D8" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR"/>
-        <enum value="0x93D9" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6"/>
-        <enum value="0x93D9" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR"/>
-        <enum value="0x93DA" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8"/>
-        <enum value="0x93DA" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR"/>
-        <enum value="0x93DB" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10"/>
-        <enum value="0x93DB" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR"/>
-        <enum value="0x93DC" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10"/>
-        <enum value="0x93DC" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR"/>
-        <enum value="0x93DD" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12"/>
-        <enum value="0x93DD" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR"/>
+        <enum value="0x93D0" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D0" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D1" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D1" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D2" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D2" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D3" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D3" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D4" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D4" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D5" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D5" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D6" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D6" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D7" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D7" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D8" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D8" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D9" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93D9" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93DA" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93DA" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93DB" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93DB" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93DC" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93DC" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93DD" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93DD" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR" group="InternalFormat,SizedInternalFormat"/>
             <unused start="0x93DE" end="0x93DF" vendor="OES"/>
-        <enum value="0x93E0" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES"/>
-        <enum value="0x93E1" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES"/>
-        <enum value="0x93E2" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES"/>
-        <enum value="0x93E3" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES"/>
-        <enum value="0x93E4" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES"/>
-        <enum value="0x93E5" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES"/>
-        <enum value="0x93E6" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES"/>
-        <enum value="0x93E7" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES"/>
-        <enum value="0x93E8" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES"/>
-        <enum value="0x93E9" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES"/>
+        <enum value="0x93E0" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93E1" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93E2" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93E3" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93E4" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93E5" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93E6" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93E7" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93E8" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES" group="InternalFormat,SizedInternalFormat"/>
+        <enum value="0x93E9" name="GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES" group="InternalFormat,SizedInternalFormat"/>
             <unused start="0x93EA" end="0x93EF" vendor="OES"/>
     </enums>
 
@@ -11221,8 +6768,8 @@ typedef unsigned int GLhandleARB;
     </enums>
 
     <enums namespace="GL" start="0x9530" end="0x962F" vendor="NV" comment="Khronos bug 12977">
-        <enum value="0x9530" name="GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT"/>
-        <enum value="0x9531" name="GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT"/>
+        <enum value="0x9530" name="GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT" group="TextureLayout"/>
+        <enum value="0x9531" name="GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT" group="TextureLayout"/>
         <enum value="0x9532" name="GL_SUBGROUP_SIZE_KHR"/>
         <enum value="0x9533" name="GL_SUBGROUP_SUPPORTED_STAGES_KHR"/>
         <enum value="0x9534" name="GL_SUBGROUP_SUPPORTED_FEATURES_KHR"/>
@@ -11253,7 +6800,7 @@ typedef unsigned int GLhandleARB;
         <enum value="0x954E" name="GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV"/>
         <enum value="0x954F" name="GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV"/>
         <enum value="0x9550" name="GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV"/>
-        <enum value="0x9551" name="GL_SHADER_BINARY_FORMAT_SPIR_V"/>
+        <enum value="0x9551" name="GL_SHADER_BINARY_FORMAT_SPIR_V" group="ShaderBinaryFormat"/>
         <enum value="0x9551" name="GL_SHADER_BINARY_FORMAT_SPIR_V_ARB" alias="GL_SHADER_BINARY_FORMAT_SPIR_V"/>
         <enum value="0x9552" name="GL_SPIR_V_BINARY"/>
         <enum value="0x9552" name="GL_SPIR_V_BINARY_ARB" alias="GL_SPIR_V_BINARY"/>
@@ -11292,34 +6839,35 @@ typedef unsigned int GLhandleARB;
         <enum value="0x957D" name="GL_TASK_SUBROUTINE_NV"/>
         <enum value="0x957E" name="GL_MESH_SUBROUTINE_UNIFORM_NV"/>
         <enum value="0x957F" name="GL_TASK_SUBROUTINE_UNIFORM_NV"/>
-        <enum value="0x9580" name="GL_TEXTURE_TILING_EXT"/>
-        <enum value="0x9581" name="GL_DEDICATED_MEMORY_OBJECT_EXT"/>
+        <enum value="0x9580" name="GL_TEXTURE_TILING_EXT" group="TextureParameterName"/>
+        <enum value="0x9581" name="GL_DEDICATED_MEMORY_OBJECT_EXT" group="MemoryObjectParameterName"/>
         <enum value="0x9582" name="GL_NUM_TILING_TYPES_EXT"/>
         <enum value="0x9583" name="GL_TILING_TYPES_EXT"/>
         <enum value="0x9584" name="GL_OPTIMAL_TILING_EXT"/>
         <enum value="0x9585" name="GL_LINEAR_TILING_EXT"/>
-        <enum value="0x9586" name="GL_HANDLE_TYPE_OPAQUE_FD_EXT"/>
-        <enum value="0x9587" name="GL_HANDLE_TYPE_OPAQUE_WIN32_EXT"/>
-        <enum value="0x9588" name="GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT"/>
-        <enum value="0x9589" name="GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT"/>
-        <enum value="0x958A" name="GL_HANDLE_TYPE_D3D12_RESOURCE_EXT"/>
-        <enum value="0x958B" name="GL_HANDLE_TYPE_D3D11_IMAGE_EXT"/>
-        <enum value="0x958C" name="GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT"/>
-        <enum value="0x958D" name="GL_LAYOUT_GENERAL_EXT"/>
-        <enum value="0x958E" name="GL_LAYOUT_COLOR_ATTACHMENT_EXT"/>
-        <enum value="0x958F" name="GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT"/>
-        <enum value="0x9590" name="GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT"/>
-        <enum value="0x9591" name="GL_LAYOUT_SHADER_READ_ONLY_EXT"/>
-        <enum value="0x9592" name="GL_LAYOUT_TRANSFER_SRC_EXT"/>
-        <enum value="0x9593" name="GL_LAYOUT_TRANSFER_DST_EXT"/>
-        <enum value="0x9594" name="GL_HANDLE_TYPE_D3D12_FENCE_EXT"/>
-        <enum value="0x9595" name="GL_D3D12_FENCE_VALUE_EXT"/>
-        <enum value="0x9596" name="GL_NUM_DEVICE_UUIDS_EXT"/>
-        <enum value="0x9597" name="GL_DEVICE_UUID_EXT"/>
-        <enum value="0x9598" name="GL_DRIVER_UUID_EXT"/>
-        <enum value="0x9599" name="GL_DEVICE_LUID_EXT"/>
-        <enum value="0x959A" name="GL_DEVICE_NODE_MASK_EXT"/>
-        <enum value="0x959B" name="GL_PROTECTED_MEMORY_OBJECT_EXT"/>
+        <enum value="0x9586" name="GL_HANDLE_TYPE_OPAQUE_FD_EXT" group="ExternalHandleType"/>
+        <enum value="0x9587" name="GL_HANDLE_TYPE_OPAQUE_WIN32_EXT" group="ExternalHandleType"/>
+        <enum value="0x9588" name="GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT" group="ExternalHandleType"/>
+        <enum value="0x9589" name="GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT" group="ExternalHandleType"/>
+        <enum value="0x958A" name="GL_HANDLE_TYPE_D3D12_RESOURCE_EXT" group="ExternalHandleType"/>
+        <enum value="0x958B" name="GL_HANDLE_TYPE_D3D11_IMAGE_EXT" group="ExternalHandleType"/>
+        <enum value="0x958C" name="GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT" group="ExternalHandleType"/>
+        <enum value="0x958D" name="GL_LAYOUT_GENERAL_EXT" group="TextureLayout"/>
+        <enum value="0x958E" name="GL_LAYOUT_COLOR_ATTACHMENT_EXT" group="TextureLayout"/>
+        <enum value="0x958F" name="GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT" group="TextureLayout"/>
+        <enum value="0x9590" name="GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT" group="TextureLayout"/>
+        <enum value="0x9591" name="GL_LAYOUT_SHADER_READ_ONLY_EXT" group="TextureLayout"/>
+        <enum value="0x9592" name="GL_LAYOUT_TRANSFER_SRC_EXT" group="TextureLayout"/>
+        <enum value="0x9593" name="GL_LAYOUT_TRANSFER_DST_EXT" group="TextureLayout"/>
+        <enum value="0x9594" name="GL_HANDLE_TYPE_D3D12_FENCE_EXT" group="ExternalHandleType"/>
+        <enum value="0x9595" name="GL_D3D12_FENCE_VALUE_EXT" group="SemaphoreParameterName"/>
+        <enum value="0x9595" name="GL_TIMELINE_SEMAPHORE_VALUE_NV" group="SemaphoreParameterName"/>
+        <enum value="0x9596" name="GL_NUM_DEVICE_UUIDS_EXT" group="GetPName"/>
+        <enum value="0x9597" name="GL_DEVICE_UUID_EXT" group="GetPName"/>
+        <enum value="0x9598" name="GL_DRIVER_UUID_EXT" group="GetPName"/>
+        <enum value="0x9599" name="GL_DEVICE_LUID_EXT" group="GetPName"/>
+        <enum value="0x959A" name="GL_DEVICE_NODE_MASK_EXT" group="GetPName"/>
+        <enum value="0x959B" name="GL_PROTECTED_MEMORY_OBJECT_EXT" group="MemoryObjectParameterName"/>
         <enum value="0x959C" name="GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV"/>
         <enum value="0x959D" name="GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV"/>
         <enum value="0x959E" name="GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV"/>
@@ -11341,13 +6889,19 @@ typedef unsigned int GLhandleARB;
         <enum value="0x95AE" name="GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV"/>
         <enum value="0x95AF" name="GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV"/>
         <enum value="0x95B0" name="GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV"/>
-        <unused start="0x9581" end="0x962F" vendor="NV"/>
+        <enum value="0x95B1" name="GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV" group="EnableCap,GetPName"/>
+        <enum value="0x95B2" name="GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV" group="GetPName"/>
+        <enum value="0x95B3" name="GL_SEMAPHORE_TYPE_NV" group="SemaphoreParameterName"/>
+        <enum value="0x95B4" name="GL_SEMAPHORE_TYPE_BINARY_NV" group="SemaphoreParameterName"/>
+        <enum value="0x95B5" name="GL_SEMAPHORE_TYPE_TIMELINE_NV" group="SemaphoreParameterName"/>
+        <enum value="0x95B6" name="GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV" group="GetPName"/>
+        <unused start="0x95B7" end="0x962F" vendor="NV"/>
     </enums>
 
     <enums namespace="GL" start="0x9630" end="0x963F" vendor="Oculus" comment="Email from Cass Everitt">
-        <enum value="0x9630" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR"/>
+        <enum value="0x9630" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR" group="FramebufferAttachmentParameterName"/>
         <enum value="0x9631" name="GL_MAX_VIEWS_OVR"/>
-        <enum value="0x9632" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR"/>
+        <enum value="0x9632" name="GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR" group="FramebufferAttachmentParameterName"/>
         <enum value="0x9633" name="GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR"/>
             <unused start="0x9634" end="0x963F" vendor="Oculus"/>
     </enums>
@@ -11369,11 +6923,82 @@ typedef unsigned int GLhandleARB;
             <unused start="0x9690" end="0x969F" vendor="ANGLE"/>
     </enums>
 
-    <enums namespace="GL" start="0x96A0" end="0x96AF" vendor="Qualcomm" comment="contact Maurice Ribble">
-            <unused start="0x96A0" end="0x96A1" vendor="Qualcomm"/>
-        <enum value="0x96A2" name="GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM"/>
+    <enums namespace="GL" start="0x96A0" end="0x96AF" vendor="Qualcomm" comment="contact Jeff Leger">
+        <enum value="0x96A0" name="GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM" group="TextureParameterName"/>
+            <unused start="0x96A1" end="0x96A1" vendor="Qualcomm"/>
+        <enum value="0x96A2" name="GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM" group="GetPName,EnableCap"/>
         <enum value="0x96A3" name="GL_VALIDATE_SHADER_BINARY_QCOM"/>
-            <unused start="0x96A4" end="0x96AF" vendor="Qualcomm"/>
+        <enum value="0x96A4" name="GL_SHADING_RATE_QCOM" group="GetPName"/>
+        <enum value="0x96A5" name="GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM" group="EnableCap"/>
+        <enum value="0x96A6" name="GL_SHADING_RATE_1X1_PIXELS_QCOM" group="ShadingRateQCOM"/>
+        <enum value="0x96A7" name="GL_SHADING_RATE_1X2_PIXELS_QCOM" group="ShadingRateQCOM"/>
+        <enum value="0x96A8" name="GL_SHADING_RATE_2X1_PIXELS_QCOM" group="ShadingRateQCOM"/>
+        <enum value="0x96A9" name="GL_SHADING_RATE_2X2_PIXELS_QCOM" group="ShadingRateQCOM"/>
+        <enum value="0x96AA" name="GL_SHADING_RATE_1X4_PIXELS_QCOM" group="ShadingRateQCOM"/>
+        <enum value="0x96AB" name="GL_SHADING_RATE_4X1_PIXELS_QCOM" group="ShadingRateQCOM"/>
+        <enum value="0x96AC" name="GL_SHADING_RATE_4X2_PIXELS_QCOM" group="ShadingRateQCOM"/>
+        <enum value="0x96AD" name="GL_SHADING_RATE_2X4_PIXELS_QCOM" group="ShadingRateQCOM"/>
+        <enum value="0x96AE" name="GL_SHADING_RATE_4X4_PIXELS_QCOM" group="ShadingRateQCOM"/>
+        <enum value="0x96A6" name="GL_SHADING_RATE_1X1_PIXELS_EXT" alias="GL_SHADING_RATE_1X1_PIXELS_QCOM" group="ShadingRate"/>
+        <enum value="0x96A7" name="GL_SHADING_RATE_1X2_PIXELS_EXT" alias="GL_SHADING_RATE_1X2_PIXELS_QCOM" group="ShadingRate"/>
+        <enum value="0x96A8" name="GL_SHADING_RATE_2X1_PIXELS_EXT" alias="GL_SHADING_RATE_2X1_PIXELS_QCOM" group="ShadingRate"/>
+        <enum value="0x96A9" name="GL_SHADING_RATE_2X2_PIXELS_EXT" alias="GL_SHADING_RATE_2X2_PIXELS_QCOM" group="ShadingRate"/>
+        <enum value="0x96AA" name="GL_SHADING_RATE_1X4_PIXELS_EXT" alias="GL_SHADING_RATE_1X4_PIXELS_QCOM" group="ShadingRate"/>
+        <enum value="0x96AB" name="GL_SHADING_RATE_4X1_PIXELS_EXT" alias="GL_SHADING_RATE_4X1_PIXELS_QCOM" group="ShadingRate"/>
+        <enum value="0x96AC" name="GL_SHADING_RATE_4X2_PIXELS_EXT" alias="GL_SHADING_RATE_4X2_PIXELS_QCOM" group="ShadingRate"/>
+        <enum value="0x96AD" name="GL_SHADING_RATE_2X4_PIXELS_EXT" alias="GL_SHADING_RATE_2X4_PIXELS_QCOM" group="ShadingRate"/>
+        <enum value="0x96AE" name="GL_SHADING_RATE_4X4_PIXELS_EXT" alias="GL_SHADING_RATE_4X4_PIXELS_QCOM" group="ShadingRate"/>
+            <unused start="0x96AF" end="0x96AF" vendor="Qualcomm"/>
+    </enums>
+
+    <enums namespace="GL" start="0x96B0" end="0x96BF" vendor="ANGLE" comment="github pull request">
+            <unused start="0x96B0" end="0x96BF" vendor="ANGLE"/>
+    </enums>
+
+    <enums namespace="GL" start="0x96C0" end="0x96CF" vendor="ARM" comment="Contact Jan-Harald Fredriksen">
+        <enum value="0x96C0" name="GL_SURFACE_COMPRESSION_EXT" group="TexStorageAttribs,GetTextureParameter"/>
+        <enum value="0x96C1" name="GL_SURFACE_COMPRESSION_FIXED_RATE_NONE_EXT" group="TexStorageAttribs"/>
+        <enum value="0x96C2" name="GL_SURFACE_COMPRESSION_FIXED_RATE_DEFAULT_EXT" group="TexStorageAttribs"/>
+            <unused start="0x96C3" end="0x96C3" vendor="ARM"/>
+        <enum value="0x96C4" name="GL_SURFACE_COMPRESSION_FIXED_RATE_1BPC_EXT" group="TexStorageAttribs"/>
+        <enum value="0x96C5" name="GL_SURFACE_COMPRESSION_FIXED_RATE_2BPC_EXT" group="TexStorageAttribs"/>
+        <enum value="0x96C6" name="GL_SURFACE_COMPRESSION_FIXED_RATE_3BPC_EXT" group="TexStorageAttribs"/>
+        <enum value="0x96C7" name="GL_SURFACE_COMPRESSION_FIXED_RATE_4BPC_EXT" group="TexStorageAttribs"/>
+        <enum value="0x96C8" name="GL_SURFACE_COMPRESSION_FIXED_RATE_5BPC_EXT" group="TexStorageAttribs"/>
+        <enum value="0x96C9" name="GL_SURFACE_COMPRESSION_FIXED_RATE_6BPC_EXT" group="TexStorageAttribs"/>
+        <enum value="0x96CA" name="GL_SURFACE_COMPRESSION_FIXED_RATE_7BPC_EXT" group="TexStorageAttribs"/>
+        <enum value="0x96CB" name="GL_SURFACE_COMPRESSION_FIXED_RATE_8BPC_EXT" group="TexStorageAttribs"/>
+        <enum value="0x96CC" name="GL_SURFACE_COMPRESSION_FIXED_RATE_9BPC_EXT" group="TexStorageAttribs"/>
+        <enum value="0x96CD" name="GL_SURFACE_COMPRESSION_FIXED_RATE_10BPC_EXT" group="TexStorageAttribs"/>
+        <enum value="0x96CE" name="GL_SURFACE_COMPRESSION_FIXED_RATE_11BPC_EXT" group="TexStorageAttribs"/>
+        <enum value="0x96CF" name="GL_SURFACE_COMPRESSION_FIXED_RATE_12BPC_EXT" group="TexStorageAttribs"/>
+    </enums>
+
+    <enums namespace="GL" start="0x96D0" end="0x96DF" vendor="ARM" comment="Contact Jan-Harald Fredriksen">
+        <enum value="0x96D0" name="GL_SHADING_RATE_EXT" group="GetPName"/>
+        <enum value="0x96D1" name="GL_SHADING_RATE_ATTACHMENT_EXT" group="FramebufferAttachment"/>
+        <enum value="0x96D2" name="GL_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_EXT" group="ShadingRateCombinerOp"/>
+        <enum value="0x96D3" name="GL_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_EXT" group="ShadingRateCombinerOp"/>
+        <enum value="0x96D4" name="GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_EXT" group="ShadingRateCombinerOp"/>
+        <enum value="0x96D5" name="GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_EXT" group="ShadingRateCombinerOp"/>
+        <enum value="0x96D6" name="GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_EXT" group="ShadingRateCombinerOp"/>
+        <enum value="0x96D7" name="GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT" group="GetPName"/>
+        <enum value="0x96D8" name="GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT" group="GetPName"/>
+        <enum value="0x96D9" name="GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT" group="GetPName"/>
+        <enum value="0x96DA" name="GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT" group="GetPName"/>
+        <enum value="0x96DB" name="GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_ASPECT_RATIO_EXT" group="GetPName"/>
+        <enum value="0x96DC" name="GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_LAYERS_EXT" group="GetPName"/>
+        <enum value="0x96DD" name="GL_FRAGMENT_SHADING_RATE_WITH_SHADER_DEPTH_STENCIL_WRITES_SUPPORTED_EXT" group="GetPName"/>
+        <enum value="0x96DE" name="GL_FRAGMENT_SHADING_RATE_WITH_SAMPLE_MASK_SUPPORTED_EXT" group="GetPName"/>
+        <enum value="0x96DF" name="GL_FRAGMENT_SHADING_RATE_ATTACHMENT_WITH_DEFAULT_FRAMEBUFFER_SUPPORTED_EXT" group="GetPName"/>
+    </enums>
+
+    <enums namespace="GL" start="0x96E0" end="0x96EF" vendor="ANGLE" comment="Reserved for Ken Russell - ANGLE (via github pull request)">
+            <unused start="0x96E0" end="0x96EF" vendor="ANGLE"/>
+    </enums>
+
+    <enums namespace="GL" start="0x96F0" end="0x96FF" vendor="ARM" comment="Contact Jan-Harald Fredriksen">
+            <unused start="0x96F0" end="0x96FF" vendor="ARM"/>
     </enums>
 
 <!-- Enums reservable for future use. To reserve a new range, allocate one
@@ -11385,8 +7010,8 @@ typedef unsigned int GLhandleARB;
      file) File requests in the Khronos Bugzilla, OpenGL project, Registry
      component. -->
 
-    <enums namespace="GL" start="0x96B0" end="99999" vendor="ARB" comment="RESERVED FOR FUTURE ALLOCATIONS BY KHRONOS">
-        <unused start="0x96B0" end="99999" comment="RESERVED"/>
+    <enums namespace="GL" start="0x9700" end="99999" vendor="ARB" comment="RESERVED FOR FUTURE ALLOCATIONS BY KHRONOS">
+        <unused start="0x9700" end="99999" comment="RESERVED"/>
     </enums>
 
 <!-- Historical large block allocations, all unused except (in older days) by IBM -->
@@ -11422,30 +7047,30 @@ typedef unsigned int GLhandleARB;
     <enums namespace="GL" start="106000" end="106999" vendor="KPC" comment="Kubota Pacific is out of business"/>
     <enums namespace="GL" start="107000" end="107999" vendor="PGI" comment="Portland Graphics was acquired by Template Graphics, which is out of business">
             <!-- lots of <unused> areas here which won't be computed yet -->
-        <enum value="0x1A1F8" name="GL_PREFER_DOUBLEBUFFER_HINT_PGI"/>
-        <enum value="0x1A1FD" name="GL_CONSERVE_MEMORY_HINT_PGI"/>
-        <enum value="0x1A1FE" name="GL_RECLAIM_MEMORY_HINT_PGI"/>
+        <enum value="0x1A1F8" name="GL_PREFER_DOUBLEBUFFER_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A1FD" name="GL_CONSERVE_MEMORY_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A1FE" name="GL_RECLAIM_MEMORY_HINT_PGI" group="HintTarget"/>
         <enum value="0x1A202" name="GL_NATIVE_GRAPHICS_HANDLE_PGI"/>
-        <enum value="0x1A203" name="GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI"/>
-        <enum value="0x1A204" name="GL_NATIVE_GRAPHICS_END_HINT_PGI"/>
-        <enum value="0x1A20C" name="GL_ALWAYS_FAST_HINT_PGI"/>
-        <enum value="0x1A20D" name="GL_ALWAYS_SOFT_HINT_PGI"/>
-        <enum value="0x1A20E" name="GL_ALLOW_DRAW_OBJ_HINT_PGI"/>
-        <enum value="0x1A20F" name="GL_ALLOW_DRAW_WIN_HINT_PGI"/>
-        <enum value="0x1A210" name="GL_ALLOW_DRAW_FRG_HINT_PGI"/>
-        <enum value="0x1A211" name="GL_ALLOW_DRAW_MEM_HINT_PGI"/>
-        <enum value="0x1A216" name="GL_STRICT_DEPTHFUNC_HINT_PGI"/>
-        <enum value="0x1A217" name="GL_STRICT_LIGHTING_HINT_PGI"/>
-        <enum value="0x1A218" name="GL_STRICT_SCISSOR_HINT_PGI"/>
-        <enum value="0x1A219" name="GL_FULL_STIPPLE_HINT_PGI"/>
-        <enum value="0x1A220" name="GL_CLIP_NEAR_HINT_PGI"/>
-        <enum value="0x1A221" name="GL_CLIP_FAR_HINT_PGI"/>
-        <enum value="0x1A222" name="GL_WIDE_LINE_HINT_PGI"/>
-        <enum value="0x1A223" name="GL_BACK_NORMALS_HINT_PGI"/>
-        <enum value="0x1A22A" name="GL_VERTEX_DATA_HINT_PGI"/>
-        <enum value="0x1A22B" name="GL_VERTEX_CONSISTENT_HINT_PGI"/>
-        <enum value="0x1A22C" name="GL_MATERIAL_SIDE_HINT_PGI"/>
-        <enum value="0x1A22D" name="GL_MAX_VERTEX_HINT_PGI"/>
+        <enum value="0x1A203" name="GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A204" name="GL_NATIVE_GRAPHICS_END_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A20C" name="GL_ALWAYS_FAST_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A20D" name="GL_ALWAYS_SOFT_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A20E" name="GL_ALLOW_DRAW_OBJ_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A20F" name="GL_ALLOW_DRAW_WIN_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A210" name="GL_ALLOW_DRAW_FRG_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A211" name="GL_ALLOW_DRAW_MEM_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A216" name="GL_STRICT_DEPTHFUNC_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A217" name="GL_STRICT_LIGHTING_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A218" name="GL_STRICT_SCISSOR_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A219" name="GL_FULL_STIPPLE_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A220" name="GL_CLIP_NEAR_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A221" name="GL_CLIP_FAR_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A222" name="GL_WIDE_LINE_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A223" name="GL_BACK_NORMALS_HINT_PGI" group="HintTarget"/>
+        <enum value="0x1A22A" name="GL_VERTEX_DATA_HINT_PGI" group="HintTarget,HintTargetPGI"/>
+        <enum value="0x1A22B" name="GL_VERTEX_CONSISTENT_HINT_PGI" group="HintTarget,HintTargetPGI"/>
+        <enum value="0x1A22C" name="GL_MATERIAL_SIDE_HINT_PGI" group="HintTarget,HintTargetPGI"/>
+        <enum value="0x1A22D" name="GL_MAX_VERTEX_HINT_PGI" group="HintTarget,HintTargetPGI"/>
     </enums>
 
     <enums namespace="GL" start="108000" end="108999" vendor="ES" comment="Evans and Sutherland is out of the graphics hardware business"/>
@@ -11455,7 +7080,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glAccum</name></proto>
             <param group="AccumOp"><ptype>GLenum</ptype> <name>op</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>value</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>value</name></param>
             <glx type="render" opcode="137"/>
         </command>
         <command>
@@ -11465,21 +7090,21 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glActiveProgramEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
         </command>
         <command>
             <proto>void <name>glActiveShaderProgram</name></proto>
-            <param><ptype>GLuint</ptype> <name>pipeline</name></param>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program pipeline"><ptype>GLuint</ptype> <name>pipeline</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
         </command>
         <command>
             <proto>void <name>glActiveShaderProgramEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>pipeline</name></param>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program pipeline"><ptype>GLuint</ptype> <name>pipeline</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
         </command>
         <command>
             <proto>void <name>glActiveStencilFaceEXT</name></proto>
-            <param group="StencilFaceDirection"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <glx type="render" opcode="4220"/>
         </command>
         <command>
@@ -11495,44 +7120,44 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glActiveVaryingNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param len="COMPSIZE(name)">const <ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto>void <name>glAlphaFragmentOp1ATI</name></proto>
-            <param group="FragmentOpATI"><ptype>GLenum</ptype> <name>op</name></param>
-            <param><ptype>GLuint</ptype> <name>dst</name></param>
-            <param><ptype>GLuint</ptype> <name>dstMod</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1Rep</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1Mod</name></param>
+            <param group="FragmentOp1ATI"><ptype>GLenum</ptype> <name>op</name></param>
+            <param group="FragmentShaderRegATI"><ptype>GLuint</ptype> <name>dst</name></param>
+            <param group="FragmentShaderDestModMaskATI"><ptype>GLuint</ptype> <name>dstMod</name></param>
+            <param group="FragmentShaderGenericSourceATI"><ptype>GLuint</ptype> <name>arg1</name></param>
+            <param group="FragmentShaderValueRepATI"><ptype>GLuint</ptype> <name>arg1Rep</name></param>
+            <param group="FragmentShaderColorModMaskATI"><ptype>GLuint</ptype> <name>arg1Mod</name></param>
         </command>
         <command>
             <proto>void <name>glAlphaFragmentOp2ATI</name></proto>
-            <param group="FragmentOpATI"><ptype>GLenum</ptype> <name>op</name></param>
-            <param><ptype>GLuint</ptype> <name>dst</name></param>
-            <param><ptype>GLuint</ptype> <name>dstMod</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1Rep</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1Mod</name></param>
-            <param><ptype>GLuint</ptype> <name>arg2</name></param>
-            <param><ptype>GLuint</ptype> <name>arg2Rep</name></param>
-            <param><ptype>GLuint</ptype> <name>arg2Mod</name></param>
+            <param group="FragmentOp2ATI"><ptype>GLenum</ptype> <name>op</name></param>
+            <param group="FragmentShaderRegATI"><ptype>GLuint</ptype> <name>dst</name></param>
+            <param group="FragmentShaderDestModMaskATI"><ptype>GLuint</ptype> <name>dstMod</name></param>
+            <param group="FragmentShaderGenericSourceATI"><ptype>GLuint</ptype> <name>arg1</name></param>
+            <param group="FragmentShaderValueRepATI"><ptype>GLuint</ptype> <name>arg1Rep</name></param>
+            <param group="FragmentShaderColorModMaskATI"><ptype>GLuint</ptype> <name>arg1Mod</name></param>
+            <param group="FragmentShaderGenericSourceATI"><ptype>GLuint</ptype> <name>arg2</name></param>
+            <param group="FragmentShaderValueRepATI"><ptype>GLuint</ptype> <name>arg2Rep</name></param>
+            <param group="FragmentShaderColorModMaskATI"><ptype>GLuint</ptype> <name>arg2Mod</name></param>
         </command>
         <command>
             <proto>void <name>glAlphaFragmentOp3ATI</name></proto>
-            <param group="FragmentOpATI"><ptype>GLenum</ptype> <name>op</name></param>
-            <param><ptype>GLuint</ptype> <name>dst</name></param>
-            <param><ptype>GLuint</ptype> <name>dstMod</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1Rep</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1Mod</name></param>
-            <param><ptype>GLuint</ptype> <name>arg2</name></param>
-            <param><ptype>GLuint</ptype> <name>arg2Rep</name></param>
-            <param><ptype>GLuint</ptype> <name>arg2Mod</name></param>
-            <param><ptype>GLuint</ptype> <name>arg3</name></param>
-            <param><ptype>GLuint</ptype> <name>arg3Rep</name></param>
-            <param><ptype>GLuint</ptype> <name>arg3Mod</name></param>
+            <param group="FragmentOp3ATI"><ptype>GLenum</ptype> <name>op</name></param>
+            <param group="FragmentShaderRegATI"><ptype>GLuint</ptype> <name>dst</name></param>
+            <param group="FragmentShaderDestModMaskATI"><ptype>GLuint</ptype> <name>dstMod</name></param>
+            <param group="FragmentShaderGenericSourceATI"><ptype>GLuint</ptype> <name>arg1</name></param>
+            <param group="FragmentShaderValueRepATI"><ptype>GLuint</ptype> <name>arg1Rep</name></param>
+            <param group="FragmentShaderColorModMaskATI"><ptype>GLuint</ptype> <name>arg1Mod</name></param>
+            <param group="FragmentShaderGenericSourceATI"><ptype>GLuint</ptype> <name>arg2</name></param>
+            <param group="FragmentShaderValueRepATI"><ptype>GLuint</ptype> <name>arg2Rep</name></param>
+            <param group="FragmentShaderColorModMaskATI"><ptype>GLuint</ptype> <name>arg2Mod</name></param>
+            <param group="FragmentShaderGenericSourceATI"><ptype>GLuint</ptype> <name>arg3</name></param>
+            <param group="FragmentShaderValueRepATI"><ptype>GLuint</ptype> <name>arg3Rep</name></param>
+            <param group="FragmentShaderColorModMaskATI"><ptype>GLuint</ptype> <name>arg3Mod</name></param>
         </command>
         <command>
             <proto>void <name>glAlphaFunc</name></proto>
@@ -11553,7 +7178,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glAlphaFuncxOES</name></proto>
             <param group="AlphaFunction"><ptype>GLenum</ptype> <name>func</name></param>
-            <param group="ClampedFixed"><ptype>GLfixed</ptype> <name>ref</name></param>
+            <param kind="Clamped[0; 1]"><ptype>GLfixed</ptype> <name>ref</name></param>
         </command>
         <command>
             <proto>void <name>glAlphaToCoverageDitherControlNV</name></proto>
@@ -11573,24 +7198,24 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLuint</ptype> <name>timeout</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glAreProgramsResidentNV</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glAreProgramsResidentNV</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>programs</name></param>
-            <param group="Boolean" len="n"><ptype>GLboolean</ptype> *<name>residences</name></param>
+            <param class="program" len="n">const <ptype>GLuint</ptype> *<name>programs</name></param>
+            <param len="n"><ptype>GLboolean</ptype> *<name>residences</name></param>
             <glx type="vendor" opcode="1293"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glAreTexturesResident</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glAreTexturesResident</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param group="Texture" len="n">const <ptype>GLuint</ptype> *<name>textures</name></param>
-            <param group="Boolean" len="n"><ptype>GLboolean</ptype> *<name>residences</name></param>
+            <param class="texture" len="n">const <ptype>GLuint</ptype> *<name>textures</name></param>
+            <param len="n"><ptype>GLboolean</ptype> *<name>residences</name></param>
             <glx type="single" opcode="143"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glAreTexturesResidentEXT</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glAreTexturesResidentEXT</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param group="Texture" len="n">const <ptype>GLuint</ptype> *<name>textures</name></param>
-            <param group="Boolean" len="n"><ptype>GLboolean</ptype> *<name>residences</name></param>
+            <param class="texture" len="n">const <ptype>GLuint</ptype> *<name>textures</name></param>
+            <param len="n"><ptype>GLboolean</ptype> *<name>residences</name></param>
             <glx type="vendor" opcode="11"/>
         </command>
         <command>
@@ -11608,7 +7233,7 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="ScalarType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLuint</ptype> <name>offset</name></param>
         </command>
         <command>
@@ -11618,8 +7243,8 @@ typedef unsigned int GLhandleARB;
             <param len="waitSemaphoreCount">const <ptype>GLuint64</ptype> *<name>fenceValueArray</name></param>
             <param><ptype>GLuint</ptype> <name>readGpu</name></param>
             <param><ptype>GLbitfield</ptype> <name>writeGpuMask</name></param>
-            <param><ptype>GLuint</ptype> <name>readBuffer</name></param>
-            <param><ptype>GLuint</ptype> <name>writeBuffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>readBuffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>writeBuffer</name></param>
             <param><ptype>GLintptr</ptype> <name>readOffset</name></param>
             <param><ptype>GLintptr</ptype> <name>writeOffset</name></param>
             <param><ptype>GLsizeiptr</ptype> <name>size</name></param>
@@ -11659,14 +7284,14 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glAttachObjectARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>containerObj</name></param>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>obj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>containerObj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>obj</name></param>
             <alias name="glAttachShader"/>
         </command>
         <command>
             <proto>void <name>glAttachShader</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
-            <param><ptype>GLuint</ptype> <name>shader</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="shader"><ptype>GLuint</ptype> <name>shader</name></param>
         </command>
         <command>
             <proto>void <name>glBegin</name></proto>
@@ -11707,25 +7332,25 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glBeginQuery</name></proto>
             <param group="QueryTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
             <glx type="render" opcode="231"/>
         </command>
         <command>
             <proto>void <name>glBeginQueryARB</name></proto>
-            <param><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param group="QueryTarget"><ptype>GLenum</ptype> <name>target</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
             <alias name="glBeginQuery"/>
         </command>
         <command>
             <proto>void <name>glBeginQueryEXT</name></proto>
             <param group="QueryTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
         </command>
         <command>
             <proto>void <name>glBeginQueryIndexed</name></proto>
             <param group="QueryTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
         </command>
         <command>
             <proto>void <name>glBeginTransformFeedback</name></proto>
@@ -11751,13 +7376,13 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glBindAttribLocation</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param>const <ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto>void <name>glBindAttribLocationARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>programObj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>programObj</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param>const <ptype>GLcharARB</ptype> *<name>name</name></param>
             <alias name="glBindAttribLocation"/>
@@ -11765,75 +7390,75 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glBindBuffer</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
             <proto>void <name>glBindBufferARB</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <alias name="glBindBuffer"/>
         </command>
         <command>
             <proto>void <name>glBindBufferBase</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <glx type="render" opcode="356"/>
         </command>
         <command>
             <proto>void <name>glBindBufferBaseEXT</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <alias name="glBindBufferBase"/>
         </command>
         <command>
             <proto>void <name>glBindBufferBaseNV</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <alias name="glBindBufferBase"/>
         </command>
         <command>
             <proto>void <name>glBindBufferOffsetEXT</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
         </command>
         <command>
             <proto>void <name>glBindBufferOffsetNV</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
             <alias name="glBindBufferOffsetEXT"/>
         </command>
         <command>
             <proto>void <name>glBindBufferRange</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <glx type="render" opcode="355"/>
         </command>
         <command>
             <proto>void <name>glBindBufferRangeEXT</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <alias name="glBindBufferRange"/>
         </command>
         <command>
             <proto>void <name>glBindBufferRangeNV</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <alias name="glBindBufferRange"/>
         </command>
         <command>
@@ -11841,40 +7466,40 @@ typedef unsigned int GLhandleARB;
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>first</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLuint</ptype> *<name>buffers</name></param>
+            <param class="buffer" len="count">const <ptype>GLuint</ptype> *<name>buffers</name></param>
         </command>
         <command>
             <proto>void <name>glBindBuffersRange</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>first</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLuint</ptype> *<name>buffers</name></param>
+            <param class="buffer" len="count">const <ptype>GLuint</ptype> *<name>buffers</name></param>
             <param len="count">const <ptype>GLintptr</ptype> *<name>offsets</name></param>
             <param len="count">const <ptype>GLsizeiptr</ptype> *<name>sizes</name></param>
         </command>
         <command>
             <proto>void <name>glBindFragDataLocation</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLuint</ptype> <name>color</name></param>
             <param len="COMPSIZE(name)">const <ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto>void <name>glBindFragDataLocationEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLuint</ptype> <name>color</name></param>
             <param len="COMPSIZE(name)">const <ptype>GLchar</ptype> *<name>name</name></param>
             <alias name="glBindFragDataLocation"/>
         </command>
         <command>
             <proto>void <name>glBindFragDataLocationIndexed</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLuint</ptype> <name>colorNumber</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param>const <ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto>void <name>glBindFragDataLocationIndexedEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLuint</ptype> <name>colorNumber</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param>const <ptype>GLchar</ptype> *<name>name</name></param>
@@ -11887,26 +7512,26 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glBindFramebuffer</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <glx type="render" opcode="236"/>
         </command>
         <command>
             <proto>void <name>glBindFramebufferEXT</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <glx type="render" opcode="4319"/>
         </command>
         <command>
             <proto>void <name>glBindFramebufferOES</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
         </command>
         <command>
             <proto>void <name>glBindImageTexture</name></proto>
             <param><ptype>GLuint</ptype> <name>unit</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>layered</name></param>
+            <param><ptype>GLboolean</ptype> <name>layered</name></param>
             <param><ptype>GLint</ptype> <name>layer</name></param>
             <param group="BufferAccessARB"><ptype>GLenum</ptype> <name>access</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>format</name></param>
@@ -11914,9 +7539,9 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glBindImageTextureEXT</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>layered</name></param>
+            <param><ptype>GLboolean</ptype> <name>layered</name></param>
             <param><ptype>GLint</ptype> <name>layer</name></param>
             <param group="BufferAccessARB"><ptype>GLenum</ptype> <name>access</name></param>
             <param><ptype>GLint</ptype> <name>format</name></param>
@@ -11925,7 +7550,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glBindImageTextures</name></proto>
             <param><ptype>GLuint</ptype> <name>first</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLuint</ptype> *<name>textures</name></param>
+            <param class="texture" len="count">const <ptype>GLuint</ptype> *<name>textures</name></param>
         </command>
         <command>
             <proto><ptype>GLuint</ptype> <name>glBindLightParameterEXT</name></proto>
@@ -11934,14 +7559,14 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto><ptype>GLuint</ptype> <name>glBindMaterialParameterEXT</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>value</name></param>
         </command>
         <command>
             <proto>void <name>glBindMultiTextureEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
         </command>
         <command>
             <proto><ptype>GLuint</ptype> <name>glBindParameterEXT</name></proto>
@@ -11949,56 +7574,56 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glBindProgramARB</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <glx type="render" opcode="4180"/>
         </command>
         <command>
             <proto>void <name>glBindProgramNV</name></proto>
             <param group="VertexAttribEnumNV"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>id</name></param>
             <alias name="glBindProgramARB"/>
             <glx type="render" opcode="4180"/>
         </command>
         <command>
             <proto>void <name>glBindProgramPipeline</name></proto>
-            <param><ptype>GLuint</ptype> <name>pipeline</name></param>
+            <param class="program pipeline"><ptype>GLuint</ptype> <name>pipeline</name></param>
         </command>
         <command>
             <proto>void <name>glBindProgramPipelineEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>pipeline</name></param>
+            <param class="program pipeline"><ptype>GLuint</ptype> <name>pipeline</name></param>
         </command>
         <command>
             <proto>void <name>glBindRenderbuffer</name></proto>
             <param group="RenderbufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
             <glx type="render" opcode="235"/>
         </command>
         <command>
             <proto>void <name>glBindRenderbufferEXT</name></proto>
             <param group="RenderbufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
             <glx type="render" opcode="4316"/>
         </command>
         <command>
             <proto>void <name>glBindRenderbufferOES</name></proto>
             <param group="RenderbufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
         </command>
         <command>
             <proto>void <name>glBindSampler</name></proto>
             <param><ptype>GLuint</ptype> <name>unit</name></param>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
         </command>
         <command>
             <proto>void <name>glBindSamplers</name></proto>
             <param><ptype>GLuint</ptype> <name>first</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLuint</ptype> *<name>samplers</name></param>
+            <param class="sampler" len="count">const <ptype>GLuint</ptype> *<name>samplers</name></param>
         </command>
         <command>
             <proto>void <name>glBindShadingRateImageNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
         </command>
         <command>
             <proto><ptype>GLuint</ptype> <name>glBindTexGenParameterEXT</name></proto>
@@ -12009,20 +7634,20 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glBindTexture</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <glx type="render" opcode="4117"/>
         </command>
         <command>
             <proto>void <name>glBindTextureEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <alias name="glBindTexture"/>
             <glx type="render" opcode="4117"/>
         </command>
         <command>
             <proto>void <name>glBindTextureUnit</name></proto>
             <param><ptype>GLuint</ptype> <name>unit</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
         </command>
         <command>
             <proto><ptype>GLuint</ptype> <name>glBindTextureUnitParameterEXT</name></proto>
@@ -12033,44 +7658,44 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glBindTextures</name></proto>
             <param><ptype>GLuint</ptype> <name>first</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLuint</ptype> *<name>textures</name></param>
+            <param class="texture" len="count">const <ptype>GLuint</ptype> *<name>textures</name></param>
         </command>
         <command>
             <proto>void <name>glBindTransformFeedback</name></proto>
             <param group="BindTransformFeedbackTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="transform feedback"><ptype>GLuint</ptype> <name>id</name></param>
         </command>
         <command>
             <proto>void <name>glBindTransformFeedbackNV</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="transform feedback"><ptype>GLuint</ptype> <name>id</name></param>
         </command>
         <command>
             <proto>void <name>glBindVertexArray</name></proto>
-            <param><ptype>GLuint</ptype> <name>array</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>array</name></param>
             <glx type="render" opcode="350"/>
         </command>
         <command>
             <proto>void <name>glBindVertexArrayAPPLE</name></proto>
-            <param><ptype>GLuint</ptype> <name>array</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>array</name></param>
         </command>
         <command>
             <proto>void <name>glBindVertexArrayOES</name></proto>
-            <param><ptype>GLuint</ptype> <name>array</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>array</name></param>
             <alias name="glBindVertexArray"/>
         </command>
         <command>
             <proto>void <name>glBindVertexBuffer</name></proto>
             <param><ptype>GLuint</ptype> <name>bindingindex</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
         </command>
         <command>
             <proto>void <name>glBindVertexBuffers</name></proto>
             <param><ptype>GLuint</ptype> <name>first</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLuint</ptype> *<name>buffers</name></param>
+            <param len="count" class="buffer">const <ptype>GLuint</ptype> *<name>buffers</name></param>
             <param len="count">const <ptype>GLintptr</ptype> *<name>offsets</name></param>
             <param len="count">const <ptype>GLsizei</ptype> *<name>strides</name></param>
         </command>
@@ -12083,7 +7708,7 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLuint</ptype> <name>video_capture_slot</name></param>
             <param><ptype>GLuint</ptype> <name>stream</name></param>
             <param><ptype>GLenum</ptype> <name>frame_region</name></param>
-            <param group="BufferOffsetARB"><ptype>GLintptrARB</ptype> <name>offset</name></param>
+            <param kind="BufferOffset"><ptype>GLintptrARB</ptype> <name>offset</name></param>
         </command>
         <command>
             <proto>void <name>glBindVideoCaptureStreamTextureNV</name></proto>
@@ -12091,7 +7716,7 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLuint</ptype> <name>stream</name></param>
             <param><ptype>GLenum</ptype> <name>frame_region</name></param>
             <param><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
         </command>
         <command>
             <proto>void <name>glBinormal3bEXT</name></proto>
@@ -12106,25 +7731,25 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glBinormal3dEXT</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>bx</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>by</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>bz</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>bx</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>by</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>bz</name></param>
             <vecequiv name="glBinormal3dvEXT"/>
         </command>
         <command>
             <proto>void <name>glBinormal3dvEXT</name></proto>
-            <param group="CoordD" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glBinormal3fEXT</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>bx</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>by</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>bz</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>bx</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>by</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>bz</name></param>
             <vecequiv name="glBinormal3fvEXT"/>
         </command>
         <command>
             <proto>void <name>glBinormal3fvEXT</name></proto>
-            <param group="CoordF" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glBinormal3iEXT</name></proto>
@@ -12158,10 +7783,10 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glBitmap</name></proto>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>xorig</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>yorig</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>xmove</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>ymove</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>xorig</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>yorig</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>xmove</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>ymove</name></param>
             <param len="COMPSIZE(width,height)">const <ptype>GLubyte</ptype> *<name>bitmap</name></param>
             <glx type="render" opcode="5"/>
             <glx type="render" opcode="311" name="glBitmapPBO" comment="PBO protocol"/>
@@ -12189,27 +7814,27 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glBlendColor</name></proto>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>red</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>green</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>blue</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>alpha</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfloat</ptype> <name>red</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfloat</ptype> <name>green</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfloat</ptype> <name>blue</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfloat</ptype> <name>alpha</name></param>
             <glx type="render" opcode="4096"/>
         </command>
         <command>
             <proto>void <name>glBlendColorEXT</name></proto>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>red</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>green</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>blue</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>alpha</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfloat</ptype> <name>red</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfloat</ptype> <name>green</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfloat</ptype> <name>blue</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfloat</ptype> <name>alpha</name></param>
             <alias name="glBlendColor"/>
             <glx type="render" opcode="4096"/>
         </command>
         <command>
             <proto>void <name>glBlendColorxOES</name></proto>
-            <param group="ClampedFixed"><ptype>GLfixed</ptype> <name>red</name></param>
-            <param group="ClampedFixed"><ptype>GLfixed</ptype> <name>green</name></param>
-            <param group="ClampedFixed"><ptype>GLfixed</ptype> <name>blue</name></param>
-            <param group="ClampedFixed"><ptype>GLfixed</ptype> <name>alpha</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfixed</ptype> <name>red</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfixed</ptype> <name>green</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfixed</ptype> <name>blue</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfixed</ptype> <name>alpha</name></param>
         </command>
         <command>
             <proto>void <name>glBlendEquation</name></proto>
@@ -12471,6 +8096,34 @@ typedef unsigned int GLhandleARB;
             <alias name="glBlitFramebuffer"/>
             <glx type="render" opcode="4330"/>
         </command>
+        <command>
+            <proto>void <name>glBlitFramebufferLayerEXT</name></proto>
+            <param><ptype>GLint</ptype> <name>srcX0</name></param>
+            <param><ptype>GLint</ptype> <name>srcY0</name></param>
+            <param><ptype>GLint</ptype> <name>srcX1</name></param>
+            <param><ptype>GLint</ptype> <name>srcY1</name></param>
+            <param><ptype>GLint</ptype> <name>srcLayer</name></param>
+            <param><ptype>GLint</ptype> <name>dstX0</name></param>
+            <param><ptype>GLint</ptype> <name>dstY0</name></param>
+            <param><ptype>GLint</ptype> <name>dstX1</name></param>
+            <param><ptype>GLint</ptype> <name>dstY1</name></param>
+            <param><ptype>GLint</ptype> <name>dstLayer</name></param>
+            <param group="ClearBufferMask"><ptype>GLbitfield</ptype> <name>mask</name></param>
+            <param group="BlitFramebufferFilter"><ptype>GLenum</ptype> <name>filter</name></param>
+        </command>
+        <command>
+            <proto>void <name>glBlitFramebufferLayersEXT</name></proto>
+            <param><ptype>GLint</ptype> <name>srcX0</name></param>
+            <param><ptype>GLint</ptype> <name>srcY0</name></param>
+            <param><ptype>GLint</ptype> <name>srcX1</name></param>
+            <param><ptype>GLint</ptype> <name>srcY1</name></param>
+            <param><ptype>GLint</ptype> <name>dstX0</name></param>
+            <param><ptype>GLint</ptype> <name>dstY0</name></param>
+            <param><ptype>GLint</ptype> <name>dstX1</name></param>
+            <param><ptype>GLint</ptype> <name>dstY1</name></param>
+            <param group="ClearBufferMask"><ptype>GLbitfield</ptype> <name>mask</name></param>
+            <param group="BlitFramebufferFilter"><ptype>GLenum</ptype> <name>filter</name></param>
+        </command>
         <command>
             <proto>void <name>glBlitFramebufferNV</name></proto>
             <param><ptype>GLint</ptype> <name>srcX0</name></param>
@@ -12487,8 +8140,8 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glBlitNamedFramebuffer</name></proto>
-            <param><ptype>GLuint</ptype> <name>readFramebuffer</name></param>
-            <param><ptype>GLuint</ptype> <name>drawFramebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>readFramebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>drawFramebuffer</name></param>
             <param><ptype>GLint</ptype> <name>srcX0</name></param>
             <param><ptype>GLint</ptype> <name>srcY0</name></param>
             <param><ptype>GLint</ptype> <name>srcX1</name></param>
@@ -12505,7 +8158,7 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLuint64EXT</ptype> <name>address</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>length</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>length</name></param>
         </command>
         <command>
             <proto>void <name>glBufferAttachMemoryNV</name></proto>
@@ -12516,14 +8169,14 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glBufferData</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param len="size">const void *<name>data</name></param>
             <param group="BufferUsageARB"><ptype>GLenum</ptype> <name>usage</name></param>
         </command>
         <command>
             <proto>void <name>glBufferDataARB</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="BufferSizeARB"><ptype>GLsizeiptrARB</ptype> <name>size</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptrARB</ptype> <name>size</name></param>
             <param len="size">const void *<name>data</name></param>
             <param group="BufferUsageARB"><ptype>GLenum</ptype> <name>usage</name></param>
             <alias name="glBufferData"/>
@@ -12535,6 +8188,15 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param><ptype>GLboolean</ptype> <name>commit</name></param>
         </command>
+        <command>
+            <proto>void <name>glBufferPageCommitmentMemNV</name></proto>
+            <param group="BufferStorageTarget"><ptype>GLenum</ptype> <name>target</name></param>
+            <param><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param><ptype>GLuint</ptype> <name>memory</name></param>
+            <param><ptype>GLuint64</ptype> <name>memOffset</name></param>
+            <param><ptype>GLboolean</ptype> <name>commit</name></param>
+        </command>
         <command>
             <proto>void <name>glBufferParameteriAPPLE</name></proto>
             <param><ptype>GLenum</ptype> <name>target</name></param>
@@ -12567,22 +8229,22 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glBufferStorageMemEXT</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param><ptype>GLuint</ptype> <name>memory</name></param>
             <param><ptype>GLuint64</ptype> <name>offset</name></param>
         </command>
         <command>
             <proto>void <name>glBufferSubData</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param len="size">const void *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glBufferSubDataARB</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="BufferOffsetARB"><ptype>GLintptrARB</ptype> <name>offset</name></param>
-            <param group="BufferSizeARB"><ptype>GLsizeiptrARB</ptype> <name>size</name></param>
+            <param kind="BufferOffset"><ptype>GLintptrARB</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptrARB</ptype> <name>size</name></param>
             <param len="size">const void *<name>data</name></param>
             <alias name="glBufferSubData"/>
         </command>
@@ -12592,7 +8254,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glCallList</name></proto>
-            <param group="List"><ptype>GLuint</ptype> <name>list</name></param>
+            <param class="display list"><ptype>GLuint</ptype> <name>list</name></param>
             <glx type="render" opcode="1"/>
         </command>
         <command>
@@ -12619,12 +8281,12 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto group="FramebufferStatus"><ptype>GLenum</ptype> <name>glCheckNamedFramebufferStatus</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
         </command>
         <command>
             <proto group="FramebufferStatus"><ptype>GLenum</ptype> <name>glCheckNamedFramebufferStatusEXT</name></proto>
-            <param group="Framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
         </command>
         <command>
@@ -12647,23 +8309,23 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glClearAccum</name></proto>
-            <param><ptype>GLfloat</ptype> <name>red</name></param>
-            <param><ptype>GLfloat</ptype> <name>green</name></param>
-            <param><ptype>GLfloat</ptype> <name>blue</name></param>
-            <param><ptype>GLfloat</ptype> <name>alpha</name></param>
+            <param kind="Clamped[-1; 1],Color"><ptype>GLfloat</ptype> <name>red</name></param>
+            <param kind="Clamped[-1; 1],Color"><ptype>GLfloat</ptype> <name>green</name></param>
+            <param kind="Clamped[-1; 1],Color"><ptype>GLfloat</ptype> <name>blue</name></param>
+            <param kind="Clamped[-1; 1],Color"><ptype>GLfloat</ptype> <name>alpha</name></param>
             <glx type="render" opcode="128"/>
         </command>
         <command>
             <proto>void <name>glClearAccumxOES</name></proto>
-            <param group="ClampedFixed"><ptype>GLfixed</ptype> <name>red</name></param>
-            <param group="ClampedFixed"><ptype>GLfixed</ptype> <name>green</name></param>
-            <param group="ClampedFixed"><ptype>GLfixed</ptype> <name>blue</name></param>
-            <param group="ClampedFixed"><ptype>GLfixed</ptype> <name>alpha</name></param>
+            <param kind="Clamped[-1; 1],Color"><ptype>GLfixed</ptype> <name>red</name></param>
+            <param kind="Clamped[-1; 1],Color"><ptype>GLfixed</ptype> <name>green</name></param>
+            <param kind="Clamped[-1; 1],Color"><ptype>GLfixed</ptype> <name>blue</name></param>
+            <param kind="Clamped[-1; 1],Color"><ptype>GLfixed</ptype> <name>alpha</name></param>
         </command>
         <command>
             <proto>void <name>glClearBufferData</name></proto>
             <param group="BufferStorageTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(format,type)">const void *<name>data</name></param>
@@ -12671,9 +8333,9 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glClearBufferSubData</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(format,type)">const void *<name>data</name></param>
@@ -12681,7 +8343,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glClearBufferfi</name></proto>
             <param group="Buffer"><ptype>GLenum</ptype> <name>buffer</name></param>
-            <param group="DrawBufferName"><ptype>GLint</ptype> <name>drawbuffer</name></param>
+            <param kind="DrawBufferIndex"><ptype>GLint</ptype> <name>drawbuffer</name></param>
             <param><ptype>GLfloat</ptype> <name>depth</name></param>
             <param><ptype>GLint</ptype> <name>stencil</name></param>
             <glx type="render" opcode="360"/>
@@ -12689,65 +8351,65 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glClearBufferfv</name></proto>
             <param group="Buffer"><ptype>GLenum</ptype> <name>buffer</name></param>
-            <param group="DrawBufferName"><ptype>GLint</ptype> <name>drawbuffer</name></param>
+            <param kind="DrawBufferIndex"><ptype>GLint</ptype> <name>drawbuffer</name></param>
             <param len="COMPSIZE(buffer)">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <glx type="render" opcode="361"/>
         </command>
         <command>
             <proto>void <name>glClearBufferiv</name></proto>
             <param group="Buffer"><ptype>GLenum</ptype> <name>buffer</name></param>
-            <param group="DrawBufferName"><ptype>GLint</ptype> <name>drawbuffer</name></param>
+            <param kind="DrawBufferIndex"><ptype>GLint</ptype> <name>drawbuffer</name></param>
             <param len="COMPSIZE(buffer)">const <ptype>GLint</ptype> *<name>value</name></param>
             <glx type="render" opcode="362"/>
         </command>
         <command>
             <proto>void <name>glClearBufferuiv</name></proto>
             <param group="Buffer"><ptype>GLenum</ptype> <name>buffer</name></param>
-            <param group="DrawBufferName"><ptype>GLint</ptype> <name>drawbuffer</name></param>
+            <param kind="DrawBufferIndex"><ptype>GLint</ptype> <name>drawbuffer</name></param>
             <param len="COMPSIZE(buffer)">const <ptype>GLuint</ptype> *<name>value</name></param>
             <glx type="render" opcode="363"/>
         </command>
         <command>
             <proto>void <name>glClearColor</name></proto>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>red</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>green</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>blue</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>alpha</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>alpha</name></param>
             <glx type="render" opcode="130"/>
         </command>
         <command>
             <proto>void <name>glClearColorIiEXT</name></proto>
-            <param><ptype>GLint</ptype> <name>red</name></param>
-            <param><ptype>GLint</ptype> <name>green</name></param>
-            <param><ptype>GLint</ptype> <name>blue</name></param>
-            <param><ptype>GLint</ptype> <name>alpha</name></param>
+            <param kind="Color"><ptype>GLint</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLint</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLint</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLint</ptype> <name>alpha</name></param>
             <glx type="render" opcode="4292"/>
         </command>
         <command>
             <proto>void <name>glClearColorIuiEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>red</name></param>
-            <param><ptype>GLuint</ptype> <name>green</name></param>
-            <param><ptype>GLuint</ptype> <name>blue</name></param>
-            <param><ptype>GLuint</ptype> <name>alpha</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>alpha</name></param>
             <glx type="render" opcode="4293"/>
         </command>
         <command>
             <proto>void <name>glClearColorx</name></proto>
-            <param><ptype>GLfixed</ptype> <name>red</name></param>
-            <param><ptype>GLfixed</ptype> <name>green</name></param>
-            <param><ptype>GLfixed</ptype> <name>blue</name></param>
-            <param><ptype>GLfixed</ptype> <name>alpha</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfixed</ptype> <name>red</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfixed</ptype> <name>green</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfixed</ptype> <name>blue</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfixed</ptype> <name>alpha</name></param>
         </command>
         <command>
             <proto>void <name>glClearColorxOES</name></proto>
-            <param group="ClampedFixed"><ptype>GLfixed</ptype> <name>red</name></param>
-            <param group="ClampedFixed"><ptype>GLfixed</ptype> <name>green</name></param>
-            <param group="ClampedFixed"><ptype>GLfixed</ptype> <name>blue</name></param>
-            <param group="ClampedFixed"><ptype>GLfixed</ptype> <name>alpha</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfixed</ptype> <name>red</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfixed</ptype> <name>green</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfixed</ptype> <name>blue</name></param>
+            <param kind="Clamped[0; 1],Color"><ptype>GLfixed</ptype> <name>alpha</name></param>
         </command>
         <command>
             <proto>void <name>glClearDepth</name></proto>
-            <param><ptype>GLdouble</ptype> <name>depth</name></param>
+            <param kind="Clamped[0; 1]"><ptype>GLdouble</ptype> <name>depth</name></param>
             <glx type="render" opcode="132"/>
         </command>
         <command>
@@ -12757,91 +8419,91 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glClearDepthf</name></proto>
-            <param><ptype>GLfloat</ptype> <name>d</name></param>
+            <param kind="Clamped[0; 1]"><ptype>GLfloat</ptype> <name>d</name></param>
         </command>
         <command>
             <proto>void <name>glClearDepthfOES</name></proto>
-            <param group="ClampedFloat32"><ptype>GLclampf</ptype> <name>depth</name></param>
+            <param kind="Clamped[0; 1]"><ptype>GLclampf</ptype> <name>depth</name></param>
             <glx type="render" opcode="4308"/>
             <alias name="glClearDepthf"/>
         </command>
         <command>
             <proto>void <name>glClearDepthx</name></proto>
-            <param><ptype>GLfixed</ptype> <name>depth</name></param>
+            <param kind="Clamped[0; 1]"><ptype>GLfixed</ptype> <name>depth</name></param>
         </command>
         <command>
             <proto>void <name>glClearDepthxOES</name></proto>
-            <param group="ClampedFixed"><ptype>GLfixed</ptype> <name>depth</name></param>
+            <param kind="Clamped[0; 1]"><ptype>GLfixed</ptype> <name>depth</name></param>
         </command>
         <command>
             <proto>void <name>glClearIndex</name></proto>
-            <param group="MaskedColorIndexValueF"><ptype>GLfloat</ptype> <name>c</name></param>
+            <param kind="ColorIndexValue"><ptype>GLfloat</ptype> <name>c</name></param>
             <glx type="render" opcode="129"/>
         </command>
         <command>
             <proto>void <name>glClearNamedBufferData</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param>const void *<name>data</name></param>
+            <param len="COMPSIZE(format,type)">const void *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glClearNamedBufferDataEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(format,type)">const void *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glClearNamedBufferSubData</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param>const void *<name>data</name></param>
+            <param len="COMPSIZE(format,type)">const void *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glClearNamedBufferSubDataEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param kind="BufferOffset"><ptype>GLsizeiptr</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(format,type)">const void *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glClearNamedFramebufferfi</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="Buffer"><ptype>GLenum</ptype> <name>buffer</name></param>
-            <param><ptype>GLint</ptype> <name>drawbuffer</name></param>
+            <param kind="DrawBufferIndex"><ptype>GLint</ptype> <name>drawbuffer</name></param>
             <param><ptype>GLfloat</ptype> <name>depth</name></param>
-            <param><ptype>GLint</ptype> <name>stencil</name></param>
+            <param kind="StencilValue"><ptype>GLint</ptype> <name>stencil</name></param>
         </command>
         <command>
             <proto>void <name>glClearNamedFramebufferfv</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="Buffer"><ptype>GLenum</ptype> <name>buffer</name></param>
-            <param><ptype>GLint</ptype> <name>drawbuffer</name></param>
-            <param>const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param kind="DrawBufferIndex"><ptype>GLint</ptype> <name>drawbuffer</name></param>
+            <param len="COMPSIZE(buffer)">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glClearNamedFramebufferiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="Buffer"><ptype>GLenum</ptype> <name>buffer</name></param>
-            <param><ptype>GLint</ptype> <name>drawbuffer</name></param>
-            <param>const <ptype>GLint</ptype> *<name>value</name></param>
+            <param kind="DrawBufferIndex"><ptype>GLint</ptype> <name>drawbuffer</name></param>
+            <param len="COMPSIZE(buffer)">const <ptype>GLint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glClearNamedFramebufferuiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="Buffer"><ptype>GLenum</ptype> <name>buffer</name></param>
-            <param><ptype>GLint</ptype> <name>drawbuffer</name></param>
-            <param>const <ptype>GLuint</ptype> *<name>value</name></param>
+            <param kind="DrawBufferIndex"><ptype>GLint</ptype> <name>drawbuffer</name></param>
+            <param len="COMPSIZE(buffer)">const <ptype>GLuint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glClearPixelLocalStorageuiEXT</name></proto>
@@ -12851,12 +8513,12 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glClearStencil</name></proto>
-            <param group="StencilValue"><ptype>GLint</ptype> <name>s</name></param>
+            <param kind="StencilValue"><ptype>GLint</ptype> <name>s</name></param>
             <glx type="render" opcode="131"/>
         </command>
         <command>
             <proto>void <name>glClearTexImage</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
@@ -12864,7 +8526,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glClearTexImageEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
@@ -12873,7 +8535,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glClearTexSubImage</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLint</ptype> <name>yoffset</name></param>
@@ -12887,7 +8549,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glClearTexSubImageEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLint</ptype> <name>yoffset</name></param>
@@ -12925,13 +8587,13 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto group="SyncStatus"><ptype>GLenum</ptype> <name>glClientWaitSync</name></proto>
-            <param group="sync"><ptype>GLsync</ptype> <name>sync</name></param>
+            <param class="sync"><ptype>GLsync</ptype> <name>sync</name></param>
             <param group="SyncObjectMask"><ptype>GLbitfield</ptype> <name>flags</name></param>
             <param><ptype>GLuint64</ptype> <name>timeout</name></param>
         </command>
         <command>
             <proto group="SyncStatus"><ptype>GLenum</ptype> <name>glClientWaitSyncAPPLE</name></proto>
-            <param><ptype>GLsync</ptype> <name>sync</name></param>
+            <param class="sync"><ptype>GLsync</ptype> <name>sync</name></param>
             <param group="SyncObjectMask"><ptype>GLbitfield</ptype> <name>flags</name></param>
             <param><ptype>GLuint64</ptype> <name>timeout</name></param>
             <alias name="glClientWaitSync"/>
@@ -12986,176 +8648,176 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glColor3b</name></proto>
-            <param group="ColorB"><ptype>GLbyte</ptype> <name>red</name></param>
-            <param group="ColorB"><ptype>GLbyte</ptype> <name>green</name></param>
-            <param group="ColorB"><ptype>GLbyte</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLbyte</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLbyte</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLbyte</ptype> <name>blue</name></param>
             <vecequiv name="glColor3bv"/>
         </command>
         <command>
             <proto>void <name>glColor3bv</name></proto>
-            <param group="ColorB" len="3">const <ptype>GLbyte</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLbyte</ptype> *<name>v</name></param>
             <glx type="render" opcode="6"/>
         </command>
         <command>
             <proto>void <name>glColor3d</name></proto>
-            <param group="ColorD"><ptype>GLdouble</ptype> <name>red</name></param>
-            <param group="ColorD"><ptype>GLdouble</ptype> <name>green</name></param>
-            <param group="ColorD"><ptype>GLdouble</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLdouble</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLdouble</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLdouble</ptype> <name>blue</name></param>
             <vecequiv name="glColor3dv"/>
         </command>
         <command>
             <proto>void <name>glColor3dv</name></proto>
-            <param group="ColorD" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="7"/>
         </command>
         <command>
             <proto>void <name>glColor3f</name></proto>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>red</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>green</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>blue</name></param>
             <vecequiv name="glColor3fv"/>
         </command>
         <command>
             <proto>void <name>glColor3fVertex3fSUN</name></proto>
-            <param><ptype>GLfloat</ptype> <name>r</name></param>
-            <param><ptype>GLfloat</ptype> <name>g</name></param>
-            <param><ptype>GLfloat</ptype> <name>b</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>r</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>g</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>b</name></param>
             <param><ptype>GLfloat</ptype> <name>x</name></param>
             <param><ptype>GLfloat</ptype> <name>y</name></param>
             <param><ptype>GLfloat</ptype> <name>z</name></param>
         </command>
         <command>
             <proto>void <name>glColor3fVertex3fvSUN</name></proto>
-            <param len="3">const <ptype>GLfloat</ptype> *<name>c</name></param>
+            <param kind="Color" len="3">const <ptype>GLfloat</ptype> *<name>c</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glColor3fv</name></proto>
-            <param group="ColorF" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="8"/>
         </command>
         <command>
             <proto>void <name>glColor3hNV</name></proto>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>red</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>green</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLhalfNV</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLhalfNV</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLhalfNV</ptype> <name>blue</name></param>
             <vecequiv name="glColor3hvNV"/>
         </command>
         <command>
             <proto>void <name>glColor3hvNV</name></proto>
-            <param group="Half16NV" len="3">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4244"/>
         </command>
         <command>
             <proto>void <name>glColor3i</name></proto>
-            <param group="ColorI"><ptype>GLint</ptype> <name>red</name></param>
-            <param group="ColorI"><ptype>GLint</ptype> <name>green</name></param>
-            <param group="ColorI"><ptype>GLint</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLint</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLint</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLint</ptype> <name>blue</name></param>
             <vecequiv name="glColor3iv"/>
         </command>
         <command>
             <proto>void <name>glColor3iv</name></proto>
-            <param group="ColorI" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="9"/>
         </command>
         <command>
             <proto>void <name>glColor3s</name></proto>
-            <param group="ColorS"><ptype>GLshort</ptype> <name>red</name></param>
-            <param group="ColorS"><ptype>GLshort</ptype> <name>green</name></param>
-            <param group="ColorS"><ptype>GLshort</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLshort</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLshort</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLshort</ptype> <name>blue</name></param>
             <vecequiv name="glColor3sv"/>
         </command>
         <command>
             <proto>void <name>glColor3sv</name></proto>
-            <param group="ColorS" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="10"/>
         </command>
         <command>
             <proto>void <name>glColor3ub</name></proto>
-            <param group="ColorUB"><ptype>GLubyte</ptype> <name>red</name></param>
-            <param group="ColorUB"><ptype>GLubyte</ptype> <name>green</name></param>
-            <param group="ColorUB"><ptype>GLubyte</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>blue</name></param>
             <vecequiv name="glColor3ubv"/>
         </command>
         <command>
             <proto>void <name>glColor3ubv</name></proto>
-            <param group="ColorUB" len="3">const <ptype>GLubyte</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLubyte</ptype> *<name>v</name></param>
             <glx type="render" opcode="11"/>
         </command>
         <command>
             <proto>void <name>glColor3ui</name></proto>
-            <param group="ColorUI"><ptype>GLuint</ptype> <name>red</name></param>
-            <param group="ColorUI"><ptype>GLuint</ptype> <name>green</name></param>
-            <param group="ColorUI"><ptype>GLuint</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>blue</name></param>
             <vecequiv name="glColor3uiv"/>
         </command>
         <command>
             <proto>void <name>glColor3uiv</name></proto>
-            <param group="ColorUI" len="3">const <ptype>GLuint</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLuint</ptype> *<name>v</name></param>
             <glx type="render" opcode="12"/>
         </command>
         <command>
             <proto>void <name>glColor3us</name></proto>
-            <param group="ColorUS"><ptype>GLushort</ptype> <name>red</name></param>
-            <param group="ColorUS"><ptype>GLushort</ptype> <name>green</name></param>
-            <param group="ColorUS"><ptype>GLushort</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLushort</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLushort</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLushort</ptype> <name>blue</name></param>
             <vecequiv name="glColor3usv"/>
         </command>
         <command>
             <proto>void <name>glColor3usv</name></proto>
-            <param group="ColorUS" len="3">const <ptype>GLushort</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLushort</ptype> *<name>v</name></param>
             <glx type="render" opcode="13"/>
         </command>
         <command>
             <proto>void <name>glColor3xOES</name></proto>
-            <param><ptype>GLfixed</ptype> <name>red</name></param>
-            <param><ptype>GLfixed</ptype> <name>green</name></param>
-            <param><ptype>GLfixed</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLfixed</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLfixed</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLfixed</ptype> <name>blue</name></param>
         </command>
         <command>
             <proto>void <name>glColor3xvOES</name></proto>
-            <param len="3">const <ptype>GLfixed</ptype> *<name>components</name></param>
+            <param kind="Color" len="3">const <ptype>GLfixed</ptype> *<name>components</name></param>
         </command>
         <command>
             <proto>void <name>glColor4b</name></proto>
-            <param group="ColorB"><ptype>GLbyte</ptype> <name>red</name></param>
-            <param group="ColorB"><ptype>GLbyte</ptype> <name>green</name></param>
-            <param group="ColorB"><ptype>GLbyte</ptype> <name>blue</name></param>
-            <param group="ColorB"><ptype>GLbyte</ptype> <name>alpha</name></param>
+            <param kind="Color"><ptype>GLbyte</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLbyte</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLbyte</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLbyte</ptype> <name>alpha</name></param>
             <vecequiv name="glColor4bv"/>
         </command>
         <command>
             <proto>void <name>glColor4bv</name></proto>
-            <param group="ColorB" len="4">const <ptype>GLbyte</ptype> *<name>v</name></param>
+            <param kind="Color" len="4">const <ptype>GLbyte</ptype> *<name>v</name></param>
             <glx type="render" opcode="14"/>
         </command>
         <command>
             <proto>void <name>glColor4d</name></proto>
-            <param group="ColorD"><ptype>GLdouble</ptype> <name>red</name></param>
-            <param group="ColorD"><ptype>GLdouble</ptype> <name>green</name></param>
-            <param group="ColorD"><ptype>GLdouble</ptype> <name>blue</name></param>
-            <param group="ColorD"><ptype>GLdouble</ptype> <name>alpha</name></param>
+            <param kind="Color"><ptype>GLdouble</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLdouble</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLdouble</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLdouble</ptype> <name>alpha</name></param>
             <vecequiv name="glColor4dv"/>
         </command>
         <command>
             <proto>void <name>glColor4dv</name></proto>
-            <param group="ColorD" len="4">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Color" len="4">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="15"/>
         </command>
         <command>
             <proto>void <name>glColor4f</name></proto>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>red</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>green</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>blue</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>alpha</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>alpha</name></param>
             <vecequiv name="glColor4fv"/>
         </command>
         <command>
             <proto>void <name>glColor4fNormal3fVertex3fSUN</name></proto>
-            <param><ptype>GLfloat</ptype> <name>r</name></param>
-            <param><ptype>GLfloat</ptype> <name>g</name></param>
-            <param><ptype>GLfloat</ptype> <name>b</name></param>
-            <param><ptype>GLfloat</ptype> <name>a</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>r</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>g</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>b</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>a</name></param>
             <param><ptype>GLfloat</ptype> <name>nx</name></param>
             <param><ptype>GLfloat</ptype> <name>ny</name></param>
             <param><ptype>GLfloat</ptype> <name>nz</name></param>
@@ -13165,254 +8827,254 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glColor4fNormal3fVertex3fvSUN</name></proto>
-            <param len="4">const <ptype>GLfloat</ptype> *<name>c</name></param>
+            <param kind="Color" len="4">const <ptype>GLfloat</ptype> *<name>c</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>n</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glColor4fv</name></proto>
-            <param group="ColorF" len="4">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Color" len="4">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="16"/>
         </command>
         <command>
             <proto>void <name>glColor4hNV</name></proto>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>red</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>green</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>blue</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>alpha</name></param>
+            <param kind="Color"><ptype>GLhalfNV</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLhalfNV</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLhalfNV</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLhalfNV</ptype> <name>alpha</name></param>
             <vecequiv name="glColor4hvNV"/>
         </command>
         <command>
             <proto>void <name>glColor4hvNV</name></proto>
-            <param group="Half16NV" len="4">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param kind="Color" len="4">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4245"/>
         </command>
         <command>
             <proto>void <name>glColor4i</name></proto>
-            <param group="ColorI"><ptype>GLint</ptype> <name>red</name></param>
-            <param group="ColorI"><ptype>GLint</ptype> <name>green</name></param>
-            <param group="ColorI"><ptype>GLint</ptype> <name>blue</name></param>
-            <param group="ColorI"><ptype>GLint</ptype> <name>alpha</name></param>
+            <param kind="Color"><ptype>GLint</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLint</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLint</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLint</ptype> <name>alpha</name></param>
             <vecequiv name="glColor4iv"/>
         </command>
         <command>
             <proto>void <name>glColor4iv</name></proto>
-            <param group="ColorI" len="4">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Color" len="4">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="17"/>
         </command>
         <command>
             <proto>void <name>glColor4s</name></proto>
-            <param group="ColorS"><ptype>GLshort</ptype> <name>red</name></param>
-            <param group="ColorS"><ptype>GLshort</ptype> <name>green</name></param>
-            <param group="ColorS"><ptype>GLshort</ptype> <name>blue</name></param>
-            <param group="ColorS"><ptype>GLshort</ptype> <name>alpha</name></param>
+            <param kind="Color"><ptype>GLshort</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLshort</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLshort</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLshort</ptype> <name>alpha</name></param>
             <vecequiv name="glColor4sv"/>
         </command>
         <command>
             <proto>void <name>glColor4sv</name></proto>
-            <param group="ColorS" len="4">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Color" len="4">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="18"/>
         </command>
         <command>
             <proto>void <name>glColor4ub</name></proto>
-            <param group="ColorUB"><ptype>GLubyte</ptype> <name>red</name></param>
-            <param group="ColorUB"><ptype>GLubyte</ptype> <name>green</name></param>
-            <param group="ColorUB"><ptype>GLubyte</ptype> <name>blue</name></param>
-            <param group="ColorUB"><ptype>GLubyte</ptype> <name>alpha</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>alpha</name></param>
             <vecequiv name="glColor4ubv"/>
         </command>
         <command>
             <proto>void <name>glColor4ubVertex2fSUN</name></proto>
-            <param><ptype>GLubyte</ptype> <name>r</name></param>
-            <param><ptype>GLubyte</ptype> <name>g</name></param>
-            <param><ptype>GLubyte</ptype> <name>b</name></param>
-            <param><ptype>GLubyte</ptype> <name>a</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>r</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>g</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>b</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>a</name></param>
             <param><ptype>GLfloat</ptype> <name>x</name></param>
             <param><ptype>GLfloat</ptype> <name>y</name></param>
         </command>
         <command>
             <proto>void <name>glColor4ubVertex2fvSUN</name></proto>
-            <param len="4">const <ptype>GLubyte</ptype> *<name>c</name></param>
+            <param kind="Color" len="4">const <ptype>GLubyte</ptype> *<name>c</name></param>
             <param len="2">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glColor4ubVertex3fSUN</name></proto>
-            <param><ptype>GLubyte</ptype> <name>r</name></param>
-            <param><ptype>GLubyte</ptype> <name>g</name></param>
-            <param><ptype>GLubyte</ptype> <name>b</name></param>
-            <param><ptype>GLubyte</ptype> <name>a</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>r</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>g</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>b</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>a</name></param>
             <param><ptype>GLfloat</ptype> <name>x</name></param>
             <param><ptype>GLfloat</ptype> <name>y</name></param>
             <param><ptype>GLfloat</ptype> <name>z</name></param>
         </command>
         <command>
             <proto>void <name>glColor4ubVertex3fvSUN</name></proto>
-            <param len="4">const <ptype>GLubyte</ptype> *<name>c</name></param>
+            <param kind="Color" len="4">const <ptype>GLubyte</ptype> *<name>c</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glColor4ubv</name></proto>
-            <param group="ColorUB" len="4">const <ptype>GLubyte</ptype> *<name>v</name></param>
+            <param kind="Color" len="4">const <ptype>GLubyte</ptype> *<name>v</name></param>
             <glx type="render" opcode="19"/>
         </command>
         <command>
             <proto>void <name>glColor4ui</name></proto>
-            <param group="ColorUI"><ptype>GLuint</ptype> <name>red</name></param>
-            <param group="ColorUI"><ptype>GLuint</ptype> <name>green</name></param>
-            <param group="ColorUI"><ptype>GLuint</ptype> <name>blue</name></param>
-            <param group="ColorUI"><ptype>GLuint</ptype> <name>alpha</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>alpha</name></param>
             <vecequiv name="glColor4uiv"/>
         </command>
         <command>
             <proto>void <name>glColor4uiv</name></proto>
-            <param group="ColorUI" len="4">const <ptype>GLuint</ptype> *<name>v</name></param>
+            <param kind="Color" len="4">const <ptype>GLuint</ptype> *<name>v</name></param>
             <glx type="render" opcode="20"/>
         </command>
         <command>
             <proto>void <name>glColor4us</name></proto>
-            <param group="ColorUS"><ptype>GLushort</ptype> <name>red</name></param>
-            <param group="ColorUS"><ptype>GLushort</ptype> <name>green</name></param>
-            <param group="ColorUS"><ptype>GLushort</ptype> <name>blue</name></param>
-            <param group="ColorUS"><ptype>GLushort</ptype> <name>alpha</name></param>
+            <param kind="Color"><ptype>GLushort</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLushort</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLushort</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLushort</ptype> <name>alpha</name></param>
             <vecequiv name="glColor4usv"/>
         </command>
         <command>
             <proto>void <name>glColor4usv</name></proto>
-            <param group="ColorUS" len="4">const <ptype>GLushort</ptype> *<name>v</name></param>
+            <param kind="Color" len="4">const <ptype>GLushort</ptype> *<name>v</name></param>
             <glx type="render" opcode="21"/>
         </command>
         <command>
             <proto>void <name>glColor4x</name></proto>
-            <param><ptype>GLfixed</ptype> <name>red</name></param>
-            <param><ptype>GLfixed</ptype> <name>green</name></param>
-            <param><ptype>GLfixed</ptype> <name>blue</name></param>
-            <param><ptype>GLfixed</ptype> <name>alpha</name></param>
+            <param kind="Color"><ptype>GLfixed</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLfixed</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLfixed</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLfixed</ptype> <name>alpha</name></param>
         </command>
         <command>
             <proto>void <name>glColor4xOES</name></proto>
-            <param><ptype>GLfixed</ptype> <name>red</name></param>
-            <param><ptype>GLfixed</ptype> <name>green</name></param>
-            <param><ptype>GLfixed</ptype> <name>blue</name></param>
-            <param><ptype>GLfixed</ptype> <name>alpha</name></param>
+            <param kind="Color"><ptype>GLfixed</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLfixed</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLfixed</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLfixed</ptype> <name>alpha</name></param>
         </command>
         <command>
             <proto>void <name>glColor4xvOES</name></proto>
-            <param len="4">const <ptype>GLfixed</ptype> *<name>components</name></param>
+            <param kind="Color" len="4">const <ptype>GLfixed</ptype> *<name>components</name></param>
         </command>
         <command>
             <proto>void <name>glColorFormatNV</name></proto>
             <param><ptype>GLint</ptype> <name>size</name></param>
-            <param><ptype>GLenum</ptype> <name>type</name></param>
+            <param group="ColorPointerType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
         </command>
         <command>
             <proto>void <name>glColorFragmentOp1ATI</name></proto>
-            <param group="FragmentOpATI"><ptype>GLenum</ptype> <name>op</name></param>
-            <param><ptype>GLuint</ptype> <name>dst</name></param>
-            <param><ptype>GLuint</ptype> <name>dstMask</name></param>
-            <param><ptype>GLuint</ptype> <name>dstMod</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1Rep</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1Mod</name></param>
+            <param group="FragmentOp1ATI"><ptype>GLenum</ptype> <name>op</name></param>
+            <param group="FragmentShaderRegATI"><ptype>GLuint</ptype> <name>dst</name></param>
+            <param group="FragmentShaderDestMaskATI"><ptype>GLuint</ptype> <name>dstMask</name></param>
+            <param group="FragmentShaderDestModMaskATI"><ptype>GLuint</ptype> <name>dstMod</name></param>
+            <param group="FragmentShaderGenericSourceATI"><ptype>GLuint</ptype> <name>arg1</name></param>
+            <param group="FragmentShaderValueRepATI"><ptype>GLuint</ptype> <name>arg1Rep</name></param>
+            <param group="FragmentShaderColorModMaskATI"><ptype>GLuint</ptype> <name>arg1Mod</name></param>
         </command>
         <command>
             <proto>void <name>glColorFragmentOp2ATI</name></proto>
-            <param group="FragmentOpATI"><ptype>GLenum</ptype> <name>op</name></param>
-            <param><ptype>GLuint</ptype> <name>dst</name></param>
-            <param><ptype>GLuint</ptype> <name>dstMask</name></param>
-            <param><ptype>GLuint</ptype> <name>dstMod</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1Rep</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1Mod</name></param>
-            <param><ptype>GLuint</ptype> <name>arg2</name></param>
-            <param><ptype>GLuint</ptype> <name>arg2Rep</name></param>
-            <param><ptype>GLuint</ptype> <name>arg2Mod</name></param>
+            <param group="FragmentOp2ATI"><ptype>GLenum</ptype> <name>op</name></param>
+            <param group="FragmentShaderRegATI"><ptype>GLuint</ptype> <name>dst</name></param>
+            <param group="FragmentShaderDestMaskATI"><ptype>GLuint</ptype> <name>dstMask</name></param>
+            <param group="FragmentShaderDestModMaskATI"><ptype>GLuint</ptype> <name>dstMod</name></param>
+            <param group="FragmentShaderGenericSourceATI"><ptype>GLuint</ptype> <name>arg1</name></param>
+            <param group="FragmentShaderValueRepATI"><ptype>GLuint</ptype> <name>arg1Rep</name></param>
+            <param group="FragmentShaderColorModMaskATI"><ptype>GLuint</ptype> <name>arg1Mod</name></param>
+            <param group="FragmentShaderGenericSourceATI"><ptype>GLuint</ptype> <name>arg2</name></param>
+            <param group="FragmentShaderValueRepATI"><ptype>GLuint</ptype> <name>arg2Rep</name></param>
+            <param group="FragmentShaderColorModMaskATI"><ptype>GLuint</ptype> <name>arg2Mod</name></param>
         </command>
         <command>
             <proto>void <name>glColorFragmentOp3ATI</name></proto>
-            <param group="FragmentOpATI"><ptype>GLenum</ptype> <name>op</name></param>
-            <param><ptype>GLuint</ptype> <name>dst</name></param>
-            <param><ptype>GLuint</ptype> <name>dstMask</name></param>
-            <param><ptype>GLuint</ptype> <name>dstMod</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1Rep</name></param>
-            <param><ptype>GLuint</ptype> <name>arg1Mod</name></param>
-            <param><ptype>GLuint</ptype> <name>arg2</name></param>
-            <param><ptype>GLuint</ptype> <name>arg2Rep</name></param>
-            <param><ptype>GLuint</ptype> <name>arg2Mod</name></param>
-            <param><ptype>GLuint</ptype> <name>arg3</name></param>
-            <param><ptype>GLuint</ptype> <name>arg3Rep</name></param>
-            <param><ptype>GLuint</ptype> <name>arg3Mod</name></param>
+            <param group="FragmentOp3ATI"><ptype>GLenum</ptype> <name>op</name></param>
+            <param group="FragmentShaderRegATI"><ptype>GLuint</ptype> <name>dst</name></param>
+            <param group="FragmentShaderDestMaskATI"><ptype>GLuint</ptype> <name>dstMask</name></param>
+            <param group="FragmentShaderDestModMaskATI"><ptype>GLuint</ptype> <name>dstMod</name></param>
+            <param group="FragmentShaderGenericSourceATI"><ptype>GLuint</ptype> <name>arg1</name></param>
+            <param group="FragmentShaderValueRepATI"><ptype>GLuint</ptype> <name>arg1Rep</name></param>
+            <param group="FragmentShaderColorModMaskATI"><ptype>GLuint</ptype> <name>arg1Mod</name></param>
+            <param group="FragmentShaderGenericSourceATI"><ptype>GLuint</ptype> <name>arg2</name></param>
+            <param group="FragmentShaderValueRepATI"><ptype>GLuint</ptype> <name>arg2Rep</name></param>
+            <param group="FragmentShaderColorModMaskATI"><ptype>GLuint</ptype> <name>arg2Mod</name></param>
+            <param group="FragmentShaderGenericSourceATI"><ptype>GLuint</ptype> <name>arg3</name></param>
+            <param group="FragmentShaderValueRepATI"><ptype>GLuint</ptype> <name>arg3Rep</name></param>
+            <param group="FragmentShaderColorModMaskATI"><ptype>GLuint</ptype> <name>arg3Mod</name></param>
         </command>
         <command>
             <proto>void <name>glColorMask</name></proto>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>red</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>green</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>blue</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>alpha</name></param>
+            <param><ptype>GLboolean</ptype> <name>red</name></param>
+            <param><ptype>GLboolean</ptype> <name>green</name></param>
+            <param><ptype>GLboolean</ptype> <name>blue</name></param>
+            <param><ptype>GLboolean</ptype> <name>alpha</name></param>
             <glx type="render" opcode="134"/>
         </command>
         <command>
             <proto>void <name>glColorMaskIndexedEXT</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>r</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>g</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>b</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>a</name></param>
+            <param><ptype>GLboolean</ptype> <name>r</name></param>
+            <param><ptype>GLboolean</ptype> <name>g</name></param>
+            <param><ptype>GLboolean</ptype> <name>b</name></param>
+            <param><ptype>GLboolean</ptype> <name>a</name></param>
             <alias name="glColorMaski"/>
             <glx type="render" opcode="352"/>
         </command>
         <command>
             <proto>void <name>glColorMaski</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>r</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>g</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>b</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>a</name></param>
+            <param><ptype>GLboolean</ptype> <name>r</name></param>
+            <param><ptype>GLboolean</ptype> <name>g</name></param>
+            <param><ptype>GLboolean</ptype> <name>b</name></param>
+            <param><ptype>GLboolean</ptype> <name>a</name></param>
         </command>
         <command>
             <proto>void <name>glColorMaskiEXT</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>r</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>g</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>b</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>a</name></param>
+            <param><ptype>GLboolean</ptype> <name>r</name></param>
+            <param><ptype>GLboolean</ptype> <name>g</name></param>
+            <param><ptype>GLboolean</ptype> <name>b</name></param>
+            <param><ptype>GLboolean</ptype> <name>a</name></param>
             <alias name="glColorMaski"/>
         </command>
         <command>
             <proto>void <name>glColorMaskiOES</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>r</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>g</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>b</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>a</name></param>
+            <param><ptype>GLboolean</ptype> <name>r</name></param>
+            <param><ptype>GLboolean</ptype> <name>g</name></param>
+            <param><ptype>GLboolean</ptype> <name>b</name></param>
+            <param><ptype>GLboolean</ptype> <name>a</name></param>
             <alias name="glColorMaski"/>
         </command>
         <command>
             <proto>void <name>glColorMaterial</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="ColorMaterialParameter"><ptype>GLenum</ptype> <name>mode</name></param>
             <glx type="render" opcode="78"/>
         </command>
         <command>
             <proto>void <name>glColorP3ui</name></proto>
             <param group="ColorPointerType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param><ptype>GLuint</ptype> <name>color</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>color</name></param>
         </command>
         <command>
             <proto>void <name>glColorP3uiv</name></proto>
             <param group="ColorPointerType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param len="1">const <ptype>GLuint</ptype> *<name>color</name></param>
+            <param kind="Color" len="1">const <ptype>GLuint</ptype> *<name>color</name></param>
         </command>
         <command>
             <proto>void <name>glColorP4ui</name></proto>
             <param group="ColorPointerType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param><ptype>GLuint</ptype> <name>color</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>color</name></param>
         </command>
         <command>
             <proto>void <name>glColorP4uiv</name></proto>
             <param group="ColorPointerType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param len="1">const <ptype>GLuint</ptype> *<name>color</name></param>
+            <param kind="Color" len="1">const <ptype>GLuint</ptype> *<name>color</name></param>
         </command>
         <command>
             <proto>void <name>glColorPointer</name></proto>
@@ -13488,30 +9150,30 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glColorTableParameterfv</name></proto>
             <param group="ColorTableTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ColorTableParameterPNameSGI"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param group="ColorTableParameterPName"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="render" opcode="2054"/>
         </command>
         <command>
             <proto>void <name>glColorTableParameterfvSGI</name></proto>
             <param group="ColorTableTargetSGI"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ColorTableParameterPNameSGI"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param group="ColorTableParameterPName"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
             <alias name="glColorTableParameterfv"/>
             <glx type="render" opcode="2054"/>
         </command>
         <command>
             <proto>void <name>glColorTableParameteriv</name></proto>
             <param group="ColorTableTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ColorTableParameterPNameSGI"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param group="ColorTableParameterPName"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
             <glx type="render" opcode="2055"/>
         </command>
         <command>
             <proto>void <name>glColorTableParameterivSGI</name></proto>
             <param group="ColorTableTargetSGI"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ColorTableParameterPNameSGI"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param group="ColorTableParameterPName"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
             <alias name="glColorTableParameteriv"/>
             <glx type="render" opcode="2055"/>
         </command>
@@ -13545,9 +9207,9 @@ typedef unsigned int GLhandleARB;
             <param group="CombinerRegisterNV"><ptype>GLenum</ptype> <name>sumOutput</name></param>
             <param group="CombinerScaleNV"><ptype>GLenum</ptype> <name>scale</name></param>
             <param group="CombinerBiasNV"><ptype>GLenum</ptype> <name>bias</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>abDotProduct</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>cdDotProduct</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>muxSum</name></param>
+            <param><ptype>GLboolean</ptype> <name>abDotProduct</name></param>
+            <param><ptype>GLboolean</ptype> <name>cdDotProduct</name></param>
+            <param><ptype>GLboolean</ptype> <name>muxSum</name></param>
             <glx type="render" opcode="4141"/>
         </command>
         <command>
@@ -13559,7 +9221,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glCombinerParameterfvNV</name></proto>
             <param group="CombinerParameterNV"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="render" opcode="4137"/>
         </command>
         <command>
@@ -13571,14 +9233,14 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glCombinerParameterivNV</name></proto>
             <param group="CombinerParameterNV"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
             <glx type="render" opcode="4139"/>
         </command>
         <command>
             <proto>void <name>glCombinerStageParameterfvNV</name></proto>
             <param group="CombinerStageNV"><ptype>GLenum</ptype> <name>stage</name></param>
             <param group="CombinerParameterNV"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glCommandListSegmentsNV</name></proto>
@@ -13591,16 +9253,16 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glCompileShader</name></proto>
-            <param><ptype>GLuint</ptype> <name>shader</name></param>
+            <param class="shader"><ptype>GLuint</ptype> <name>shader</name></param>
         </command>
         <command>
             <proto>void <name>glCompileShaderARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>shaderObj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>shaderObj</name></param>
             <alias name="glCompileShader"/>
         </command>
         <command>
             <proto>void <name>glCompileShaderIncludeARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>shader</name></param>
+            <param class="shader"><ptype>GLuint</ptype> <name>shader</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param len="count">const <ptype>GLchar</ptype> *const*<name>path</name></param>
             <param len="count">const <ptype>GLint</ptype> *<name>length</name></param>
@@ -13609,10 +9271,10 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glCompressedMultiTexImage1DEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
             <param len="imageSize">const void *<name>bits</name></param>
         </command>
@@ -13620,11 +9282,11 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glCompressedMultiTexImage2DEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
             <param len="imageSize">const void *<name>bits</name></param>
         </command>
@@ -13632,12 +9294,12 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glCompressedMultiTexImage3DEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
             <param len="imageSize">const void *<name>bits</name></param>
         </command>
@@ -13645,10 +9307,10 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glCompressedMultiTexSubImage1DEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
-            <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
+            <param group="InternalFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
             <param len="imageSize">const void *<name>bits</name></param>
         </command>
@@ -13656,12 +9318,12 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glCompressedMultiTexSubImage2DEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
+            <param group="InternalFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
             <param len="imageSize">const void *<name>bits</name></param>
         </command>
@@ -13669,92 +9331,92 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glCompressedMultiTexSubImage3DEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
+            <param group="InternalFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
             <param len="imageSize">const void *<name>bits</name></param>
         </command>
         <command>
             <proto>void <name>glCompressedTexImage1D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
-            <param group="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
+            <param kind="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
             <glx type="render" opcode="214"/>
             <glx type="render" opcode="314" name="glCompressedTexImage1DPBO" comment="PBO protocol"/>
         </command>
         <command>
             <proto>void <name>glCompressedTexImage1DARB</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
-            <param group="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
+            <param kind="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
             <alias name="glCompressedTexImage1D"/>
             <glx type="render" opcode="214"/>
         </command>
         <command>
             <proto>void <name>glCompressedTexImage2D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
-            <param group="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
+            <param kind="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
             <glx type="render" opcode="215"/>
             <glx type="render" opcode="315" name="glCompressedTexImage2DPBO" comment="PBO protocol"/>
         </command>
         <command>
             <proto>void <name>glCompressedTexImage2DARB</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
-            <param group="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
+            <param kind="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
             <alias name="glCompressedTexImage2D"/>
             <glx type="render" opcode="215"/>
         </command>
         <command>
             <proto>void <name>glCompressedTexImage3D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
-            <param group="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
+            <param kind="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
             <glx type="render" opcode="216"/>
             <glx type="render" opcode="316" name="glCompressedTexImage3DPBO" comment="PBO protocol"/>
         </command>
         <command>
             <proto>void <name>glCompressedTexImage3DARB</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
-            <param group="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
+            <param kind="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
             <alias name="glCompressedTexImage3D"/>
             <glx type="render" opcode="216"/>
         </command>
@@ -13773,84 +9435,84 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glCompressedTexSubImage1D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
-            <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
+            <param group="InternalFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
-            <param group="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
+            <param kind="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
             <glx type="render" opcode="217"/>
             <glx type="render" opcode="317" name="glCompressedTexSubImage1DPBO" comment="PBO protocol"/>
         </command>
         <command>
             <proto>void <name>glCompressedTexSubImage1DARB</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
-            <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
+            <param group="InternalFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
-            <param group="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
+            <param kind="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
             <alias name="glCompressedTexSubImage1D"/>
             <glx type="render" opcode="217"/>
         </command>
         <command>
             <proto>void <name>glCompressedTexSubImage2D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
+            <param group="InternalFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
-            <param group="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
+            <param kind="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
             <glx type="render" opcode="218"/>
             <glx type="render" opcode="318" name="glCompressedTexSubImage2DPBO" comment="PBO protocol"/>
         </command>
         <command>
             <proto>void <name>glCompressedTexSubImage2DARB</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
+            <param group="InternalFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
-            <param group="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
+            <param kind="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
             <alias name="glCompressedTexSubImage2D"/>
             <glx type="render" opcode="218"/>
         </command>
         <command>
             <proto>void <name>glCompressedTexSubImage3D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
+            <param group="InternalFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
-            <param group="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
+            <param kind="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
             <glx type="render" opcode="219"/>
             <glx type="render" opcode="319" name="glCompressedTexSubImage3DPBO" comment="PBO protocol"/>
         </command>
         <command>
             <proto>void <name>glCompressedTexSubImage3DARB</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
+            <param group="InternalFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
-            <param group="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
+            <param kind="CompressedTextureARB" len="imageSize">const void *<name>data</name></param>
             <alias name="glCompressedTexSubImage3D"/>
             <glx type="render" opcode="219"/>
         </command>
@@ -13864,95 +9526,95 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
+            <param group="InternalFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
             <param len="imageSize">const void *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glCompressedTextureImage1DEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
             <param len="imageSize">const void *<name>bits</name></param>
         </command>
         <command>
             <proto>void <name>glCompressedTextureImage2DEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
             <param len="imageSize">const void *<name>bits</name></param>
         </command>
         <command>
             <proto>void <name>glCompressedTextureImage3DEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
             <param len="imageSize">const void *<name>bits</name></param>
         </command>
         <command>
             <proto>void <name>glCompressedTextureSubImage1D</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
-            <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
+            <param group="InternalFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
-            <param>const void *<name>data</name></param>
+            <param len="imageSize">const void *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glCompressedTextureSubImage1DEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
-            <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
+            <param group="InternalFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
             <param len="imageSize">const void *<name>bits</name></param>
         </command>
         <command>
             <proto>void <name>glCompressedTextureSubImage2D</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLint</ptype> <name>yoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
+            <param group="InternalFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
-            <param>const void *<name>data</name></param>
+            <param len="imageSize">const void *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glCompressedTextureSubImage2DEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
+            <param group="InternalFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
             <param len="imageSize">const void *<name>bits</name></param>
         </command>
         <command>
             <proto>void <name>glCompressedTextureSubImage3D</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLint</ptype> <name>yoffset</name></param>
@@ -13960,22 +9622,22 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
+            <param group="InternalFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
-            <param>const void *<name>data</name></param>
+            <param len="imageSize">const void *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glCompressedTextureSubImage3DEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
+            <param group="InternalFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>imageSize</name></param>
             <param len="imageSize">const void *<name>bits</name></param>
         </command>
@@ -14038,99 +9700,99 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glConvolutionParameterf</name></proto>
             <param group="ConvolutionTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ConvolutionParameterEXT"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>params</name></param>
+            <param group="ConvolutionParameter"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>params</name></param>
             <glx type="render" opcode="4103"/>
         </command>
         <command>
             <proto>void <name>glConvolutionParameterfEXT</name></proto>
             <param group="ConvolutionTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ConvolutionParameterEXT"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>params</name></param>
+            <param group="ConvolutionParameter"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>params</name></param>
             <alias name="glConvolutionParameterf"/>
             <glx type="render" opcode="4103"/>
         </command>
         <command>
             <proto>void <name>glConvolutionParameterfv</name></proto>
             <param group="ConvolutionTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ConvolutionParameterEXT"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param group="ConvolutionParameter"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="render" opcode="4104"/>
         </command>
         <command>
             <proto>void <name>glConvolutionParameterfvEXT</name></proto>
             <param group="ConvolutionTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ConvolutionParameterEXT"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param group="ConvolutionParameter"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
             <alias name="glConvolutionParameterfv"/>
             <glx type="render" opcode="4104"/>
         </command>
         <command>
             <proto>void <name>glConvolutionParameteri</name></proto>
             <param group="ConvolutionTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ConvolutionParameterEXT"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>params</name></param>
+            <param group="ConvolutionParameter"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>params</name></param>
             <glx type="render" opcode="4105"/>
         </command>
         <command>
             <proto>void <name>glConvolutionParameteriEXT</name></proto>
             <param group="ConvolutionTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ConvolutionParameterEXT"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>params</name></param>
+            <param group="ConvolutionParameter"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>params</name></param>
             <alias name="glConvolutionParameteri"/>
             <glx type="render" opcode="4105"/>
         </command>
         <command>
             <proto>void <name>glConvolutionParameteriv</name></proto>
             <param group="ConvolutionTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ConvolutionParameterEXT"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param group="ConvolutionParameter"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
             <glx type="render" opcode="4106"/>
         </command>
         <command>
             <proto>void <name>glConvolutionParameterivEXT</name></proto>
             <param group="ConvolutionTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ConvolutionParameterEXT"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param group="ConvolutionParameter"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
             <alias name="glConvolutionParameteriv"/>
             <glx type="render" opcode="4106"/>
         </command>
         <command>
             <proto>void <name>glConvolutionParameterxOES</name></proto>
             <param group="ConvolutionTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ConvolutionParameterEXT"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param group="ConvolutionParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLfixed</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glConvolutionParameterxvOES</name></proto>
             <param group="ConvolutionTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ConvolutionParameterEXT"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param group="ConvolutionParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)">const <ptype>GLfixed</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glCopyBufferSubData</name></proto>
             <param group="CopyBufferSubDataTarget"><ptype>GLenum</ptype> <name>readTarget</name></param>
             <param group="CopyBufferSubDataTarget"><ptype>GLenum</ptype> <name>writeTarget</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>readOffset</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>writeOffset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>readOffset</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>writeOffset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <glx type="single" opcode="221"/>
         </command>
         <command>
             <proto>void <name>glCopyBufferSubDataNV</name></proto>
             <param group="CopyBufferSubDataTarget"><ptype>GLenum</ptype> <name>readTarget</name></param>
             <param group="CopyBufferSubDataTarget"><ptype>GLenum</ptype> <name>writeTarget</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>readOffset</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>writeOffset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>readOffset</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>writeOffset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <alias name="glCopyBufferSubData"/>
         </command>
         <command>
             <proto>void <name>glCopyColorSubTable</name></proto>
             <param group="ColorTableTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>start</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <glx type="render" opcode="196"/>
         </command>
@@ -14138,8 +9800,8 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glCopyColorSubTableEXT</name></proto>
             <param group="ColorTableTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>start</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <alias name="glCopyColorSubTable"/>
         </command>
@@ -14147,8 +9809,8 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glCopyColorTable</name></proto>
             <param group="ColorTableTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <glx type="render" opcode="2056"/>
         </command>
@@ -14156,8 +9818,8 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glCopyColorTableSGI</name></proto>
             <param group="ColorTableTargetSGI"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <alias name="glCopyColorTable"/>
             <glx type="render" opcode="2056"/>
@@ -14166,8 +9828,8 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glCopyConvolutionFilter1D</name></proto>
             <param group="ConvolutionTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <glx type="render" opcode="4107"/>
         </command>
@@ -14175,8 +9837,8 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glCopyConvolutionFilter1DEXT</name></proto>
             <param group="ConvolutionTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <alias name="glCopyConvolutionFilter1D"/>
             <glx type="render" opcode="4107"/>
@@ -14185,8 +9847,8 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glCopyConvolutionFilter2D</name></proto>
             <param group="ConvolutionTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <glx type="render" opcode="4108"/>
@@ -14195,8 +9857,8 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glCopyConvolutionFilter2DEXT</name></proto>
             <param group="ConvolutionTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <alias name="glCopyConvolutionFilter2D"/>
@@ -14281,44 +9943,44 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glCopyMultiTexImage1DEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
         </command>
         <command>
             <proto>void <name>glCopyMultiTexImage2DEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
         </command>
         <command>
             <proto>void <name>glCopyMultiTexSubImage1DEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
         </command>
         <command>
             <proto>void <name>glCopyMultiTexSubImage2DEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
         </command>
@@ -14326,32 +9988,32 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glCopyMultiTexSubImage3DEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
         </command>
         <command>
             <proto>void <name>glCopyNamedBufferSubData</name></proto>
-            <param><ptype>GLuint</ptype> <name>readBuffer</name></param>
-            <param><ptype>GLuint</ptype> <name>writeBuffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>readBuffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>writeBuffer</name></param>
             <param><ptype>GLintptr</ptype> <name>readOffset</name></param>
             <param><ptype>GLintptr</ptype> <name>writeOffset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
         </command>
         <command>
             <proto>void <name>glCopyPathNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>resultPath</name></param>
-            <param group="Path"><ptype>GLuint</ptype> <name>srcPath</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>resultPath</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>srcPath</name></param>
         </command>
         <command>
             <proto>void <name>glCopyPixels</name></proto>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param group="PixelCopyType"><ptype>GLenum</ptype> <name>type</name></param>
@@ -14360,68 +10022,68 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glCopyTexImage1D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <glx type="render" opcode="4119"/>
         </command>
         <command>
             <proto>void <name>glCopyTexImage1DEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <alias name="glCopyTexImage1D"/>
             <glx type="render" opcode="4119"/>
         </command>
         <command>
             <proto>void <name>glCopyTexImage2D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <glx type="render" opcode="4120"/>
         </command>
         <command>
             <proto>void <name>glCopyTexImage2DEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <alias name="glCopyTexImage2D"/>
             <glx type="render" opcode="4120"/>
         </command>
         <command>
             <proto>void <name>glCopyTexSubImage1D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <glx type="render" opcode="4121"/>
         </command>
         <command>
             <proto>void <name>glCopyTexSubImage1DEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <alias name="glCopyTexSubImage1D"/>
             <glx type="render" opcode="4121"/>
@@ -14429,11 +10091,11 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glCopyTexSubImage2D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <glx type="render" opcode="4122"/>
@@ -14441,11 +10103,11 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glCopyTexSubImage2DEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <alias name="glCopyTexSubImage2D"/>
@@ -14454,12 +10116,12 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glCopyTexSubImage3D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <glx type="render" opcode="4123"/>
@@ -14467,12 +10129,12 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glCopyTexSubImage3DEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <alias name="glCopyTexSubImage3D"/>
@@ -14492,26 +10154,26 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glCopyTextureImage1DEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
         </command>
         <command>
             <proto>void <name>glCopyTextureImage2DEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
         </command>
         <command>
             <proto>void <name>glCopyTextureLevelsAPPLE</name></proto>
@@ -14522,7 +10184,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glCopyTextureSubImage1D</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLint</ptype> <name>x</name></param>
@@ -14531,17 +10193,17 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glCopyTextureSubImage1DEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
         </command>
         <command>
             <proto>void <name>glCopyTextureSubImage2D</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLint</ptype> <name>yoffset</name></param>
@@ -14552,19 +10214,19 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glCopyTextureSubImage2DEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
         </command>
         <command>
             <proto>void <name>glCopyTextureSubImage3D</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLint</ptype> <name>yoffset</name></param>
@@ -14576,14 +10238,14 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glCopyTextureSubImage3DEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
         </command>
@@ -14591,30 +10253,30 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glCoverFillPathInstancedNV</name></proto>
             <param><ptype>GLsizei</ptype> <name>numPaths</name></param>
             <param group="PathElementType"><ptype>GLenum</ptype> <name>pathNameType</name></param>
-            <param group="PathElement" len="COMPSIZE(numPaths,pathNameType,paths)">const void *<name>paths</name></param>
-            <param group="Path"><ptype>GLuint</ptype> <name>pathBase</name></param>
-            <param group="PathCoverMode"><ptype>GLenum</ptype> <name>coverMode</name></param>
+            <param len="COMPSIZE(numPaths,pathNameType,paths)">const void *<name>paths</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>pathBase</name></param>
+            <param group="InstancedPathCoverMode"><ptype>GLenum</ptype> <name>coverMode</name></param>
             <param group="PathTransformType"><ptype>GLenum</ptype> <name>transformType</name></param>
             <param len="COMPSIZE(numPaths,transformType)">const <ptype>GLfloat</ptype> *<name>transformValues</name></param>
         </command>
         <command>
             <proto>void <name>glCoverFillPathNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param group="PathCoverMode"><ptype>GLenum</ptype> <name>coverMode</name></param>
         </command>
         <command>
             <proto>void <name>glCoverStrokePathInstancedNV</name></proto>
             <param><ptype>GLsizei</ptype> <name>numPaths</name></param>
             <param group="PathElementType"><ptype>GLenum</ptype> <name>pathNameType</name></param>
-            <param group="PathElement" len="COMPSIZE(numPaths,pathNameType,paths)">const void *<name>paths</name></param>
-            <param group="Path"><ptype>GLuint</ptype> <name>pathBase</name></param>
-            <param group="PathCoverMode"><ptype>GLenum</ptype> <name>coverMode</name></param>
+            <param len="COMPSIZE(numPaths,pathNameType,paths)">const void *<name>paths</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>pathBase</name></param>
+            <param group="InstancedPathCoverMode"><ptype>GLenum</ptype> <name>coverMode</name></param>
             <param group="PathTransformType"><ptype>GLenum</ptype> <name>transformType</name></param>
             <param len="COMPSIZE(numPaths,transformType)">const <ptype>GLfloat</ptype> *<name>transformValues</name></param>
         </command>
         <command>
             <proto>void <name>glCoverStrokePathNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param group="PathCoverMode"><ptype>GLenum</ptype> <name>coverMode</name></param>
         </command>
         <command>
@@ -14637,7 +10299,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glCreateBuffers</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>buffers</name></param>
+            <param class="buffer" len="n"><ptype>GLuint</ptype> *<name>buffers</name></param>
         </command>
         <command>
             <proto>void <name>glCreateCommandListsNV</name></proto>
@@ -14647,7 +10309,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glCreateFramebuffers</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>framebuffers</name></param>
+            <param class="framebuffer" len="n"><ptype>GLuint</ptype> *<name>framebuffers</name></param>
         </command>
         <command>
             <proto>void <name>glCreateMemoryObjectsEXT</name></proto>
@@ -14660,16 +10322,16 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLuint</ptype> *<name>queryHandle</name></param>
         </command>
         <command>
-            <proto><ptype>GLuint</ptype> <name>glCreateProgram</name></proto>
+            <proto class="program"><ptype>GLuint</ptype> <name>glCreateProgram</name></proto>
         </command>
         <command>
-            <proto group="handleARB"><ptype>GLhandleARB</ptype> <name>glCreateProgramObjectARB</name></proto>
+            <proto><ptype>GLhandleARB</ptype> <name>glCreateProgramObjectARB</name></proto>
             <alias name="glCreateProgram"/>
         </command>
         <command>
             <proto>void <name>glCreateProgramPipelines</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>pipelines</name></param>
+            <param class="program pipeline" len="n"><ptype>GLuint</ptype> *<name>pipelines</name></param>
         </command>
         <command>
             <proto><ptype>GLuint</ptype> <name>glCreateProgressFenceNVX</name></proto>
@@ -14678,43 +10340,48 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glCreateQueries</name></proto>
             <param group="QueryTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>ids</name></param>
+            <param class="query" len="n"><ptype>GLuint</ptype> *<name>ids</name></param>
         </command>
         <command>
             <proto>void <name>glCreateRenderbuffers</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>renderbuffers</name></param>
+            <param class="renderbuffer" len="n"><ptype>GLuint</ptype> *<name>renderbuffers</name></param>
         </command>
         <command>
             <proto>void <name>glCreateSamplers</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>samplers</name></param>
+            <param class="sampler" len="n"><ptype>GLuint</ptype> *<name>samplers</name></param>
+        </command>
+        <command>
+            <proto>void <name>glCreateSemaphoresNV</name></proto>
+            <param><ptype>GLsizei</ptype> <name>n</name></param>
+            <param len="n"><ptype>GLuint</ptype> *<name>semaphores</name></param>
         </command>
         <command>
-            <proto><ptype>GLuint</ptype> <name>glCreateShader</name></proto>
+            <proto class="shader"><ptype>GLuint</ptype> <name>glCreateShader</name></proto>
             <param group="ShaderType"><ptype>GLenum</ptype> <name>type</name></param>
         </command>
         <command>
-            <proto group="handleARB"><ptype>GLhandleARB</ptype> <name>glCreateShaderObjectARB</name></proto>
+            <proto><ptype>GLhandleARB</ptype> <name>glCreateShaderObjectARB</name></proto>
             <param group="ShaderType"><ptype>GLenum</ptype> <name>shaderType</name></param>
             <alias name="glCreateShader"/>
         </command>
         <command>
-            <proto><ptype>GLuint</ptype> <name>glCreateShaderProgramEXT</name></proto>
+            <proto class="program"><ptype>GLuint</ptype> <name>glCreateShaderProgramEXT</name></proto>
             <param group="ShaderType"><ptype>GLenum</ptype> <name>type</name></param>
             <param>const <ptype>GLchar</ptype> *<name>string</name></param>
         </command>
         <command>
-            <proto><ptype>GLuint</ptype> <name>glCreateShaderProgramv</name></proto>
+            <proto class="program"><ptype>GLuint</ptype> <name>glCreateShaderProgramv</name></proto>
             <param group="ShaderType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param len="count">const <ptype>GLchar</ptype> *const*<name>strings</name></param>
         </command>
         <command>
-            <proto><ptype>GLuint</ptype> <name>glCreateShaderProgramvEXT</name></proto>
+            <proto class="program"><ptype>GLuint</ptype> <name>glCreateShaderProgramvEXT</name></proto>
             <param group="ShaderType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLchar</ptype> **<name>strings</name></param>
+            <param len="count">const <ptype>GLchar</ptype> *const*<name>strings</name></param>
         </command>
         <command>
             <proto>void <name>glCreateStatesNV</name></proto>
@@ -14722,30 +10389,30 @@ typedef unsigned int GLhandleARB;
             <param len="n"><ptype>GLuint</ptype> *<name>states</name></param>
         </command>
         <command>
-            <proto group="sync"><ptype>GLsync</ptype> <name>glCreateSyncFromCLeventARB</name></proto>
-            <param group="cl_context"><ptype>struct _cl_context</ptype> *<name>context</name></param>
-            <param group="cl_event"><ptype>struct _cl_event</ptype> *<name>event</name></param>
+            <proto class="sync"><ptype>GLsync</ptype> <name>glCreateSyncFromCLeventARB</name></proto>
+            <param><ptype>struct _cl_context</ptype> *<name>context</name></param>
+            <param><ptype>struct _cl_event</ptype> *<name>event</name></param>
             <param><ptype>GLbitfield</ptype> <name>flags</name></param>
         </command>
         <command>
             <proto>void <name>glCreateTextures</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>textures</name></param>
+            <param class="texture" len="n"><ptype>GLuint</ptype> *<name>textures</name></param>
         </command>
         <command>
             <proto>void <name>glCreateTransformFeedbacks</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>ids</name></param>
+            <param class="transform feedback" len="n"><ptype>GLuint</ptype> *<name>ids</name></param>
         </command>
         <command>
             <proto>void <name>glCreateVertexArrays</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>arrays</name></param>
+            <param class="vertex array" len="n"><ptype>GLuint</ptype> *<name>arrays</name></param>
         </command>
         <command>
             <proto>void <name>glCullFace</name></proto>
-            <param group="CullFaceMode"><ptype>GLenum</ptype> <name>mode</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>mode</name></param>
             <glx type="render" opcode="79"/>
         </command>
         <command>
@@ -14796,7 +10463,7 @@ typedef unsigned int GLhandleARB;
             <param group="DebugSeverity"><ptype>GLenum</ptype> <name>severity</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param len="count">const <ptype>GLuint</ptype> *<name>ids</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>enabled</name></param>
+            <param><ptype>GLboolean</ptype> <name>enabled</name></param>
         </command>
         <command>
             <proto>void <name>glDebugMessageControlARB</name></proto>
@@ -14805,7 +10472,7 @@ typedef unsigned int GLhandleARB;
             <param group="DebugSeverity"><ptype>GLenum</ptype> <name>severity</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param len="count">const <ptype>GLuint</ptype> *<name>ids</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>enabled</name></param>
+            <param><ptype>GLboolean</ptype> <name>enabled</name></param>
             <alias name="glDebugMessageControl"/>
         </command>
         <command>
@@ -14824,7 +10491,7 @@ typedef unsigned int GLhandleARB;
             <param group="DebugSeverity"><ptype>GLenum</ptype> <name>severity</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param len="count">const <ptype>GLuint</ptype> *<name>ids</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>enabled</name></param>
+            <param><ptype>GLboolean</ptype> <name>enabled</name></param>
         </command>
         <command>
             <proto>void <name>glDebugMessageInsert</name></proto>
@@ -14871,37 +10538,37 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glDeformationMap3dSGIX</name></proto>
             <param group="FfdTargetSGIX"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>u1</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>u2</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>u1</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>u2</name></param>
             <param><ptype>GLint</ptype> <name>ustride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>uorder</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>v1</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>v2</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>uorder</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>v1</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>v2</name></param>
             <param><ptype>GLint</ptype> <name>vstride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>vorder</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>w1</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>w2</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>vorder</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>w1</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>w2</name></param>
             <param><ptype>GLint</ptype> <name>wstride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>worder</name></param>
-            <param group="CoordD" len="COMPSIZE(target,ustride,uorder,vstride,vorder,wstride,worder)">const <ptype>GLdouble</ptype> *<name>points</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>worder</name></param>
+            <param kind="Coord" len="COMPSIZE(target,ustride,uorder,vstride,vorder,wstride,worder)">const <ptype>GLdouble</ptype> *<name>points</name></param>
             <glx type="render" opcode="2073"/>
         </command>
         <command>
             <proto>void <name>glDeformationMap3fSGIX</name></proto>
             <param group="FfdTargetSGIX"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>u1</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>u2</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>u1</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>u2</name></param>
             <param><ptype>GLint</ptype> <name>ustride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>uorder</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>v1</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>v2</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>uorder</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>v1</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>v2</name></param>
             <param><ptype>GLint</ptype> <name>vstride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>vorder</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>w1</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>w2</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>vorder</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>w1</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>w2</name></param>
             <param><ptype>GLint</ptype> <name>wstride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>worder</name></param>
-            <param group="CoordF" len="COMPSIZE(target,ustride,uorder,vstride,vorder,wstride,worder)">const <ptype>GLfloat</ptype> *<name>points</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>worder</name></param>
+            <param kind="Coord" len="COMPSIZE(target,ustride,uorder,vstride,vorder,wstride,worder)">const <ptype>GLfloat</ptype> *<name>points</name></param>
             <glx type="render" opcode="2074"/>
         </command>
         <command>
@@ -14912,12 +10579,12 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glDeleteBuffers</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>buffers</name></param>
+            <param class="buffer" len="n">const <ptype>GLuint</ptype> *<name>buffers</name></param>
         </command>
         <command>
             <proto>void <name>glDeleteBuffersARB</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>buffers</name></param>
+            <param class="buffer" len="n">const <ptype>GLuint</ptype> *<name>buffers</name></param>
             <alias name="glDeleteBuffers"/>
         </command>
         <command>
@@ -14928,12 +10595,12 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glDeleteFencesAPPLE</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param group="FenceNV" len="n">const <ptype>GLuint</ptype> *<name>fences</name></param>
+            <param kind="FenceNV" len="n">const <ptype>GLuint</ptype> *<name>fences</name></param>
         </command>
         <command>
             <proto>void <name>glDeleteFencesNV</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param group="FenceNV" len="n">const <ptype>GLuint</ptype> *<name>fences</name></param>
+            <param kind="FenceNV" len="n">const <ptype>GLuint</ptype> *<name>fences</name></param>
             <glx type="vendor" opcode="1276"/>
         </command>
         <command>
@@ -14943,24 +10610,24 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glDeleteFramebuffers</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>framebuffers</name></param>
+            <param class="framebuffer" len="n">const <ptype>GLuint</ptype> *<name>framebuffers</name></param>
             <glx type="render" opcode="4320"/>
         </command>
         <command>
             <proto>void <name>glDeleteFramebuffersEXT</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>framebuffers</name></param>
+            <param class="framebuffer" len="n">const <ptype>GLuint</ptype> *<name>framebuffers</name></param>
             <alias name="glDeleteFramebuffers"/>
             <glx type="render" opcode="4320"/>
         </command>
         <command>
             <proto>void <name>glDeleteFramebuffersOES</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>framebuffers</name></param>
+            <param class="framebuffer" len="n">const <ptype>GLuint</ptype> *<name>framebuffers</name></param>
         </command>
         <command>
             <proto>void <name>glDeleteLists</name></proto>
-            <param group="List"><ptype>GLuint</ptype> <name>list</name></param>
+            <param class="display list"><ptype>GLuint</ptype> <name>list</name></param>
             <param><ptype>GLsizei</ptype> <name>range</name></param>
             <glx type="single" opcode="103"/>
         </command>
@@ -14982,7 +10649,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glDeleteObjectARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>obj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>obj</name></param>
         </command>
         <command>
             <proto>void <name>glDeleteOcclusionQueriesNV</name></proto>
@@ -14991,7 +10658,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glDeletePathsNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param><ptype>GLsizei</ptype> <name>range</name></param>
         </command>
         <command>
@@ -15005,48 +10672,48 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glDeleteProgram</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <glx type="single" opcode="202"/>
         </command>
         <command>
             <proto>void <name>glDeleteProgramPipelines</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>pipelines</name></param>
+            <param class="program pipeline" len="n">const <ptype>GLuint</ptype> *<name>pipelines</name></param>
         </command>
         <command>
             <proto>void <name>glDeleteProgramPipelinesEXT</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>pipelines</name></param>
+            <param class="program pipeline" len="n">const <ptype>GLuint</ptype> *<name>pipelines</name></param>
         </command>
         <command>
             <proto>void <name>glDeleteProgramsARB</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>programs</name></param>
+            <param class="program" len="n">const <ptype>GLuint</ptype> *<name>programs</name></param>
             <glx type="vendor" opcode="1294"/>
         </command>
         <command>
             <proto>void <name>glDeleteProgramsNV</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>programs</name></param>
+            <param class="program" len="n">const <ptype>GLuint</ptype> *<name>programs</name></param>
             <alias name="glDeleteProgramsARB"/>
             <glx type="vendor" opcode="1294"/>
         </command>
         <command>
             <proto>void <name>glDeleteQueries</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>ids</name></param>
+            <param class="query" len="n">const <ptype>GLuint</ptype> *<name>ids</name></param>
             <glx type="single" opcode="161"/>
         </command>
         <command>
             <proto>void <name>glDeleteQueriesARB</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>ids</name></param>
+            <param class="query" len="n">const <ptype>GLuint</ptype> *<name>ids</name></param>
             <alias name="glDeleteQueries"/>
         </command>
         <command>
             <proto>void <name>glDeleteQueriesEXT</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>ids</name></param>
+            <param class="query" len="n">const <ptype>GLuint</ptype> *<name>ids</name></param>
         </command>
         <command>
             <proto>void <name>glDeleteQueryResourceTagNV</name></proto>
@@ -15056,25 +10723,25 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glDeleteRenderbuffers</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>renderbuffers</name></param>
+            <param class="renderbuffer" len="n">const <ptype>GLuint</ptype> *<name>renderbuffers</name></param>
             <glx type="render" opcode="4317"/>
         </command>
         <command>
             <proto>void <name>glDeleteRenderbuffersEXT</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>renderbuffers</name></param>
+            <param class="renderbuffer" len="n">const <ptype>GLuint</ptype> *<name>renderbuffers</name></param>
             <alias name="glDeleteRenderbuffers"/>
             <glx type="render" opcode="4317"/>
         </command>
         <command>
             <proto>void <name>glDeleteRenderbuffersOES</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>renderbuffers</name></param>
+            <param class="renderbuffer" len="n">const <ptype>GLuint</ptype> *<name>renderbuffers</name></param>
         </command>
         <command>
             <proto>void <name>glDeleteSamplers</name></proto>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLuint</ptype> *<name>samplers</name></param>
+            <param class="sampler" len="count">const <ptype>GLuint</ptype> *<name>samplers</name></param>
         </command>
         <command>
             <proto>void <name>glDeleteSemaphoresEXT</name></proto>
@@ -15083,7 +10750,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glDeleteShader</name></proto>
-            <param><ptype>GLuint</ptype> <name>shader</name></param>
+            <param class="shader"><ptype>GLuint</ptype> <name>shader</name></param>
             <glx type="single" opcode="195"/>
         </command>
         <command>
@@ -15093,52 +10760,52 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glDeleteSync</name></proto>
-            <param group="sync"><ptype>GLsync</ptype> <name>sync</name></param>
+            <param class="sync"><ptype>GLsync</ptype> <name>sync</name></param>
         </command>
         <command>
             <proto>void <name>glDeleteSyncAPPLE</name></proto>
-            <param><ptype>GLsync</ptype> <name>sync</name></param>
+            <param class="sync"><ptype>GLsync</ptype> <name>sync</name></param>
             <alias name="glDeleteSync"/>
         </command>
         <command>
             <proto>void <name>glDeleteTextures</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param group="Texture" len="n">const <ptype>GLuint</ptype> *<name>textures</name></param>
+            <param class="texture" len="n">const <ptype>GLuint</ptype> *<name>textures</name></param>
             <glx type="single" opcode="144"/>
         </command>
         <command>
             <proto>void <name>glDeleteTexturesEXT</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param group="Texture" len="n">const <ptype>GLuint</ptype> *<name>textures</name></param>
+            <param class="texture" len="n">const <ptype>GLuint</ptype> *<name>textures</name></param>
             <glx type="vendor" opcode="12"/>
         </command>
         <command>
             <proto>void <name>glDeleteTransformFeedbacks</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>ids</name></param>
+            <param class="transform feedback" len="n">const <ptype>GLuint</ptype> *<name>ids</name></param>
         </command>
         <command>
             <proto>void <name>glDeleteTransformFeedbacksNV</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>ids</name></param>
+            <param class="transform feedback" len="n">const <ptype>GLuint</ptype> *<name>ids</name></param>
             <alias name="glDeleteTransformFeedbacks"/>
         </command>
         <command>
             <proto>void <name>glDeleteVertexArrays</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>arrays</name></param>
+            <param class="vertex array" len="n">const <ptype>GLuint</ptype> *<name>arrays</name></param>
             <glx type="render" opcode="351"/>
         </command>
         <command>
             <proto>void <name>glDeleteVertexArraysAPPLE</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>arrays</name></param>
+            <param class="vertex array" len="n">const <ptype>GLuint</ptype> *<name>arrays</name></param>
             <alias name="glDeleteVertexArrays"/>
         </command>
         <command>
             <proto>void <name>glDeleteVertexArraysOES</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>arrays</name></param>
+            <param class="vertex array" len="n">const <ptype>GLuint</ptype> *<name>arrays</name></param>
             <alias name="glDeleteVertexArrays"/>
         </command>
         <command>
@@ -15147,8 +10814,8 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glDepthBoundsEXT</name></proto>
-            <param group="ClampedFloat64"><ptype>GLclampd</ptype> <name>zmin</name></param>
-            <param group="ClampedFloat64"><ptype>GLclampd</ptype> <name>zmax</name></param>
+            <param kind="Clamped[0; 1]"><ptype>GLclampd</ptype> <name>zmin</name></param>
+            <param kind="Clamped[0; 1]"><ptype>GLclampd</ptype> <name>zmax</name></param>
             <glx type="render" opcode="4229"/>
         </command>
         <command>
@@ -15164,7 +10831,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glDepthMask</name></proto>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>flag</name></param>
+            <param><ptype>GLboolean</ptype> <name>flag</name></param>
             <glx type="render" opcode="135"/>
         </command>
         <command>
@@ -15173,6 +10840,12 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLdouble</ptype> <name>f</name></param>
             <glx type="render" opcode="174"/>
         </command>
+        <command>
+            <proto>void <name>glDepthRangeArraydvNV</name></proto>
+            <param><ptype>GLuint</ptype> <name>first</name></param>
+            <param><ptype>GLsizei</ptype> <name>count</name></param>
+            <param>const <ptype>GLdouble</ptype> *<name>v</name></param>
+        </command>
         <command>
             <proto>void <name>glDepthRangeArrayfvNV</name></proto>
             <param><ptype>GLuint</ptype> <name>first</name></param>
@@ -15197,6 +10870,12 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLdouble</ptype> <name>n</name></param>
             <param><ptype>GLdouble</ptype> <name>f</name></param>
         </command>
+        <command>
+            <proto>void <name>glDepthRangeIndexeddNV</name></proto>
+            <param><ptype>GLuint</ptype> <name>index</name></param>
+            <param><ptype>GLdouble</ptype> <name>n</name></param>
+            <param><ptype>GLdouble</ptype> <name>f</name></param>
+        </command>
         <command>
             <proto>void <name>glDepthRangeIndexedfNV</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
@@ -15222,8 +10901,8 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glDepthRangefOES</name></proto>
-            <param group="ClampedFloat32"><ptype>GLclampf</ptype> <name>n</name></param>
-            <param group="ClampedFloat32"><ptype>GLclampf</ptype> <name>f</name></param>
+            <param kind="Clamped[0; 1]"><ptype>GLclampf</ptype> <name>n</name></param>
+            <param kind="Clamped[0; 1]"><ptype>GLclampf</ptype> <name>f</name></param>
             <glx type="render" opcode="4309"/>
             <alias name="glDepthRangef"/>
         </command>
@@ -15234,19 +10913,19 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glDepthRangexOES</name></proto>
-            <param group="ClampedFixed"><ptype>GLfixed</ptype> <name>n</name></param>
-            <param group="ClampedFixed"><ptype>GLfixed</ptype> <name>f</name></param>
+            <param kind="Clamped[0; 1]"><ptype>GLfixed</ptype> <name>n</name></param>
+            <param kind="Clamped[0; 1]"><ptype>GLfixed</ptype> <name>f</name></param>
         </command>
         <command>
             <proto>void <name>glDetachObjectARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>containerObj</name></param>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>attachedObj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>containerObj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>attachedObj</name></param>
             <alias name="glDetachShader"/>
         </command>
         <command>
             <proto>void <name>glDetachShader</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
-            <param><ptype>GLuint</ptype> <name>shader</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="shader"><ptype>GLuint</ptype> <name>shader</name></param>
         </command>
         <command>
             <proto>void <name>glDetailTexFuncSGIS</name></proto>
@@ -15291,17 +10970,17 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glDisableVertexArrayAttrib</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
         </command>
         <command>
             <proto>void <name>glDisableVertexArrayAttribEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
         </command>
         <command>
             <proto>void <name>glDisableVertexArrayEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param group="EnableCap"><ptype>GLenum</ptype> <name>array</name></param>
         </command>
         <command>
@@ -15343,9 +11022,9 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glDiscardFramebufferEXT</name></proto>
-            <param><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>numAttachments</name></param>
-            <param len="numAttachments">const <ptype>GLenum</ptype> *<name>attachments</name></param>
+            <param group="InvalidateFramebufferAttachment" len="numAttachments">const <ptype>GLenum</ptype> *<name>attachments</name></param>
         </command>
         <command>
             <proto>void <name>glDispatchCompute</name></proto>
@@ -15364,7 +11043,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glDispatchComputeIndirect</name></proto>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>indirect</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>indirect</name></param>
         </command>
         <command>
             <proto>void <name>glDrawArrays</name></proto>
@@ -15508,7 +11187,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glDrawCommandsStatesNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param>const <ptype>GLintptr</ptype> *<name>indirects</name></param>
             <param>const <ptype>GLsizei</ptype> *<name>sizes</name></param>
             <param>const <ptype>GLuint</ptype> *<name>states</name></param>
@@ -15577,7 +11256,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glDrawElementsInstancedANGLE</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="PrimitiveType"><ptype>GLenum</ptype> <name>type</name></param>
+            <param group="DrawElementsType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(count,type)">const void *<name>indices</name></param>
             <param><ptype>GLsizei</ptype> <name>primcount</name></param>
             <alias name="glDrawElementsInstanced"/>
@@ -15595,7 +11274,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glDrawElementsInstancedBaseInstance</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="PrimitiveType"><ptype>GLenum</ptype> <name>type</name></param>
+            <param group="DrawElementsType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="count">const void *<name>indices</name></param>
             <param><ptype>GLsizei</ptype> <name>instancecount</name></param>
             <param><ptype>GLuint</ptype> <name>baseinstance</name></param>
@@ -15604,7 +11283,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glDrawElementsInstancedBaseInstanceEXT</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="PrimitiveType"><ptype>GLenum</ptype> <name>type</name></param>
+            <param group="DrawElementsType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="count">const void *<name>indices</name></param>
             <param><ptype>GLsizei</ptype> <name>instancecount</name></param>
             <param><ptype>GLuint</ptype> <name>baseinstance</name></param>
@@ -15673,7 +11352,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glDrawElementsInstancedNV</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="PrimitiveType"><ptype>GLenum</ptype> <name>type</name></param>
+            <param group="DrawElementsType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(count,type)">const void *<name>indices</name></param>
             <param><ptype>GLsizei</ptype> <name>primcount</name></param>
             <alias name="glDrawElementsInstanced"/>
@@ -15811,8 +11490,8 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glDrawTextureNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param><ptype>GLfloat</ptype> <name>x0</name></param>
             <param><ptype>GLfloat</ptype> <name>y0</name></param>
             <param><ptype>GLfloat</ptype> <name>x1</name></param>
@@ -15839,43 +11518,43 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glDrawTransformFeedback</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="transform feedback"><ptype>GLuint</ptype> <name>id</name></param>
         </command>
         <command>
             <proto>void <name>glDrawTransformFeedbackEXT</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="transform feedback"><ptype>GLuint</ptype> <name>id</name></param>
             <alias name="glDrawTransformFeedback"/>
         </command>
         <command>
             <proto>void <name>glDrawTransformFeedbackInstanced</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="transform feedback"><ptype>GLuint</ptype> <name>id</name></param>
             <param><ptype>GLsizei</ptype> <name>instancecount</name></param>
         </command>
         <command>
             <proto>void <name>glDrawTransformFeedbackInstancedEXT</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="transform feedback"><ptype>GLuint</ptype> <name>id</name></param>
             <param><ptype>GLsizei</ptype> <name>instancecount</name></param>
             <alias name="glDrawTransformFeedbackInstanced"/>
         </command>
         <command>
             <proto>void <name>glDrawTransformFeedbackNV</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="transform feedback"><ptype>GLuint</ptype> <name>id</name></param>
             <alias name="glDrawTransformFeedback"/>
         </command>
         <command>
             <proto>void <name>glDrawTransformFeedbackStream</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="transform feedback"><ptype>GLuint</ptype> <name>id</name></param>
             <param><ptype>GLuint</ptype> <name>stream</name></param>
         </command>
         <command>
             <proto>void <name>glDrawTransformFeedbackStreamInstanced</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="transform feedback"><ptype>GLuint</ptype> <name>id</name></param>
             <param><ptype>GLuint</ptype> <name>stream</name></param>
             <param><ptype>GLsizei</ptype> <name>instancecount</name></param>
         </command>
@@ -15897,13 +11576,13 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glEGLImageTargetTextureStorageEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLeglImageOES</ptype> <name>image</name></param>
             <param>const <ptype>GLint</ptype>* <name>attrib_list</name></param>
         </command>
         <command>
             <proto>void <name>glEdgeFlag</name></proto>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>flag</name></param>
+            <param><ptype>GLboolean</ptype> <name>flag</name></param>
             <vecequiv name="glEdgeFlagv"/>
         </command>
         <command>
@@ -15919,17 +11598,17 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glEdgeFlagPointerEXT</name></proto>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean" len="COMPSIZE(stride,count)">const <ptype>GLboolean</ptype> *<name>pointer</name></param>
+            <param len="COMPSIZE(stride,count)">const <ptype>GLboolean</ptype> *<name>pointer</name></param>
         </command>
         <command>
             <proto>void <name>glEdgeFlagPointerListIBM</name></proto>
             <param><ptype>GLint</ptype> <name>stride</name></param>
-            <param group="BooleanPointer" len="COMPSIZE(stride)">const <ptype>GLboolean</ptype> **<name>pointer</name></param>
+            <param len="COMPSIZE(stride)">const <ptype>GLboolean</ptype> **<name>pointer</name></param>
             <param><ptype>GLint</ptype> <name>ptrstride</name></param>
         </command>
         <command>
             <proto>void <name>glEdgeFlagv</name></proto>
-            <param group="Boolean" len="1">const <ptype>GLboolean</ptype> *<name>flag</name></param>
+            <param len="1">const <ptype>GLboolean</ptype> *<name>flag</name></param>
             <glx type="render" opcode="22"/>
         </command>
         <command>
@@ -15978,17 +11657,17 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glEnableVertexArrayAttrib</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
         </command>
         <command>
             <proto>void <name>glEnableVertexArrayAttribEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
         </command>
         <command>
             <proto>void <name>glEnableVertexArrayEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param group="EnableCap"><ptype>GLenum</ptype> <name>array</name></param>
         </command>
         <command>
@@ -16106,22 +11785,22 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glEvalCoord1d</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>u</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>u</name></param>
             <vecequiv name="glEvalCoord1dv"/>
         </command>
         <command>
             <proto>void <name>glEvalCoord1dv</name></proto>
-            <param group="CoordD" len="1">const <ptype>GLdouble</ptype> *<name>u</name></param>
+            <param kind="Coord" len="1">const <ptype>GLdouble</ptype> *<name>u</name></param>
             <glx type="render" opcode="151"/>
         </command>
         <command>
             <proto>void <name>glEvalCoord1f</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>u</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>u</name></param>
             <vecequiv name="glEvalCoord1fv"/>
         </command>
         <command>
             <proto>void <name>glEvalCoord1fv</name></proto>
-            <param group="CoordF" len="1">const <ptype>GLfloat</ptype> *<name>u</name></param>
+            <param kind="Coord" len="1">const <ptype>GLfloat</ptype> *<name>u</name></param>
             <glx type="render" opcode="152"/>
         </command>
         <command>
@@ -16134,24 +11813,24 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glEvalCoord2d</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>u</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>v</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>u</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>v</name></param>
             <vecequiv name="glEvalCoord2dv"/>
         </command>
         <command>
             <proto>void <name>glEvalCoord2dv</name></proto>
-            <param group="CoordD" len="2">const <ptype>GLdouble</ptype> *<name>u</name></param>
+            <param kind="Coord" len="2">const <ptype>GLdouble</ptype> *<name>u</name></param>
             <glx type="render" opcode="153"/>
         </command>
         <command>
             <proto>void <name>glEvalCoord2f</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>u</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>v</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>u</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>v</name></param>
             <vecequiv name="glEvalCoord2fv"/>
         </command>
         <command>
             <proto>void <name>glEvalCoord2fv</name></proto>
-            <param group="CoordF" len="2">const <ptype>GLfloat</ptype> *<name>u</name></param>
+            <param kind="Coord" len="2">const <ptype>GLfloat</ptype> *<name>u</name></param>
             <glx type="render" opcode="154"/>
         </command>
         <command>
@@ -16171,17 +11850,17 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glEvalMesh1</name></proto>
             <param group="MeshMode1"><ptype>GLenum</ptype> <name>mode</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>i1</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>i2</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>i1</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>i2</name></param>
             <glx type="render" opcode="155"/>
         </command>
         <command>
             <proto>void <name>glEvalMesh2</name></proto>
             <param group="MeshMode2"><ptype>GLenum</ptype> <name>mode</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>i1</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>i2</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>j1</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>j2</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>i1</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>i2</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>j1</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>j2</name></param>
             <glx type="render" opcode="157"/>
         </command>
         <command>
@@ -16191,8 +11870,8 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glEvalPoint2</name></proto>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>i</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>j</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>i</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>j</name></param>
             <glx type="render" opcode="158"/>
         </command>
         <command>
@@ -16208,48 +11887,48 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glExtGetBufferPointervQCOM</name></proto>
             <param><ptype>GLenum</ptype> <name>target</name></param>
-            <param>void **<name>params</name></param>
+            <param len="1">void **<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glExtGetBuffersQCOM</name></proto>
-            <param len="maxBuffers"><ptype>GLuint</ptype> *<name>buffers</name></param>
+            <param class="buffer" len="maxBuffers"><ptype>GLuint</ptype> *<name>buffers</name></param>
             <param><ptype>GLint</ptype> <name>maxBuffers</name></param>
             <param len="1"><ptype>GLint</ptype> *<name>numBuffers</name></param>
         </command>
         <command>
             <proto>void <name>glExtGetFramebuffersQCOM</name></proto>
-            <param len="maxFramebuffers"><ptype>GLuint</ptype> *<name>framebuffers</name></param>
+            <param class="framebuffer" len="maxFramebuffers"><ptype>GLuint</ptype> *<name>framebuffers</name></param>
             <param><ptype>GLint</ptype> <name>maxFramebuffers</name></param>
             <param len="1"><ptype>GLint</ptype> *<name>numFramebuffers</name></param>
         </command>
         <command>
             <proto>void <name>glExtGetProgramBinarySourceQCOM</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ShaderType"><ptype>GLenum</ptype> <name>shadertype</name></param>
-            <param><ptype>GLchar</ptype> *<name>source</name></param>
+            <param len="length"><ptype>GLchar</ptype> *<name>source</name></param>
             <param><ptype>GLint</ptype> *<name>length</name></param>
         </command>
         <command>
             <proto>void <name>glExtGetProgramsQCOM</name></proto>
-            <param len="maxPrograms"><ptype>GLuint</ptype> *<name>programs</name></param>
+            <param class="program" len="maxPrograms"><ptype>GLuint</ptype> *<name>programs</name></param>
             <param><ptype>GLint</ptype> <name>maxPrograms</name></param>
             <param len="1"><ptype>GLint</ptype> *<name>numPrograms</name></param>
         </command>
         <command>
             <proto>void <name>glExtGetRenderbuffersQCOM</name></proto>
-            <param len="maxRenderbuffers"><ptype>GLuint</ptype> *<name>renderbuffers</name></param>
+            <param class="renderbuffer" len="maxRenderbuffers"><ptype>GLuint</ptype> *<name>renderbuffers</name></param>
             <param><ptype>GLint</ptype> <name>maxRenderbuffers</name></param>
             <param len="1"><ptype>GLint</ptype> *<name>numRenderbuffers</name></param>
         </command>
         <command>
             <proto>void <name>glExtGetShadersQCOM</name></proto>
-            <param len="maxShaders"><ptype>GLuint</ptype> *<name>shaders</name></param>
+            <param class="shader" len="maxShaders"><ptype>GLuint</ptype> *<name>shaders</name></param>
             <param><ptype>GLint</ptype> <name>maxShaders</name></param>
             <param len="1"><ptype>GLint</ptype> *<name>numShaders</name></param>
         </command>
         <command>
             <proto>void <name>glExtGetTexLevelParameterivQCOM</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLenum</ptype> <name>face</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLenum</ptype> <name>pname</name></param>
@@ -16271,13 +11950,13 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glExtGetTexturesQCOM</name></proto>
-            <param><ptype>GLuint</ptype> *<name>textures</name></param>
+            <param class="texture"><ptype>GLuint</ptype> *<name>textures</name></param>
             <param><ptype>GLint</ptype> <name>maxTextures</name></param>
             <param><ptype>GLint</ptype> *<name>numTextures</name></param>
         </command>
         <command>
             <proto><ptype>GLboolean</ptype> <name>glExtIsProgramBinaryQCOM</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
         </command>
         <command>
             <proto>void <name>glExtTexObjectStateOverrideiQCOM</name></proto>
@@ -16295,7 +11974,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glFeedbackBuffer</name></proto>
             <param><ptype>GLsizei</ptype> <name>size</name></param>
             <param group="FeedbackType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param group="FeedbackElement" len="size"><ptype>GLfloat</ptype> *<name>buffer</name></param>
+            <param kind="FeedbackElement" len="size"><ptype>GLfloat</ptype> *<name>buffer</name></param>
             <glx type="single" opcode="105"/>
         </command>
         <command>
@@ -16305,14 +11984,14 @@ typedef unsigned int GLhandleARB;
             <param len="n">const <ptype>GLfixed</ptype> *<name>buffer</name></param>
         </command>
         <command>
-            <proto group="sync"><ptype>GLsync</ptype> <name>glFenceSync</name></proto>
+            <proto class="sync"><ptype>GLsync</ptype> <name>glFenceSync</name></proto>
             <param group="SyncCondition"><ptype>GLenum</ptype> <name>condition</name></param>
-            <param><ptype>GLbitfield</ptype> <name>flags</name></param>
+            <param group="SyncBehaviorFlags"><ptype>GLbitfield</ptype> <name>flags</name></param>
         </command>
         <command>
-            <proto><ptype>GLsync</ptype> <name>glFenceSyncAPPLE</name></proto>
+            <proto class="sync"><ptype>GLsync</ptype> <name>glFenceSyncAPPLE</name></proto>
             <param group="SyncCondition"><ptype>GLenum</ptype> <name>condition</name></param>
-            <param><ptype>GLbitfield</ptype> <name>flags</name></param>
+            <param group="SyncBehaviorFlags"><ptype>GLbitfield</ptype> <name>flags</name></param>
             <alias name="glFenceSync"/>
         </command>
         <command>
@@ -16333,11 +12012,11 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glFinishFenceAPPLE</name></proto>
-            <param group="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
+            <param kind="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
         </command>
         <command>
             <proto>void <name>glFinishFenceNV</name></proto>
-            <param group="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
+            <param kind="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
             <glx type="vendor" opcode="1312"/>
         </command>
         <command>
@@ -16355,14 +12034,14 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glFlushMappedBufferRange</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>length</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>length</name></param>
         </command>
         <command>
             <proto>void <name>glFlushMappedBufferRangeAPPLE</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <alias name="glFlushMappedBufferRange"/>
         </command>
         <command>
@@ -16374,13 +12053,13 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glFlushMappedNamedBufferRange</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>length</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>length</name></param>
         </command>
         <command>
             <proto>void <name>glFlushMappedNamedBufferRangeEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
             <param><ptype>GLsizeiptr</ptype> <name>length</name></param>
         </command>
@@ -16431,56 +12110,56 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glFogCoordd</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>coord</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>coord</name></param>
             <vecequiv name="glFogCoorddv"/>
         </command>
         <command>
             <proto>void <name>glFogCoorddEXT</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>coord</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>coord</name></param>
             <alias name="glFogCoordd"/>
             <vecequiv name="glFogCoorddvEXT"/>
         </command>
         <command>
             <proto>void <name>glFogCoorddv</name></proto>
-            <param group="CoordD" len="1">const <ptype>GLdouble</ptype> *<name>coord</name></param>
+            <param kind="Coord" len="1">const <ptype>GLdouble</ptype> *<name>coord</name></param>
             <glx type="render" opcode="4125"/>
         </command>
         <command>
             <proto>void <name>glFogCoorddvEXT</name></proto>
-            <param group="CoordD" len="1">const <ptype>GLdouble</ptype> *<name>coord</name></param>
+            <param kind="Coord" len="1">const <ptype>GLdouble</ptype> *<name>coord</name></param>
             <alias name="glFogCoorddv"/>
             <glx type="render" opcode="4125"/>
         </command>
         <command>
             <proto>void <name>glFogCoordf</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>coord</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>coord</name></param>
             <vecequiv name="glFogCoordfv"/>
         </command>
         <command>
             <proto>void <name>glFogCoordfEXT</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>coord</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>coord</name></param>
             <alias name="glFogCoordf"/>
             <vecequiv name="glFogCoordfvEXT"/>
         </command>
         <command>
             <proto>void <name>glFogCoordfv</name></proto>
-            <param group="CoordF" len="1">const <ptype>GLfloat</ptype> *<name>coord</name></param>
+            <param kind="Coord" len="1">const <ptype>GLfloat</ptype> *<name>coord</name></param>
             <glx type="render" opcode="4124"/>
         </command>
         <command>
             <proto>void <name>glFogCoordfvEXT</name></proto>
-            <param group="CoordF" len="1">const <ptype>GLfloat</ptype> *<name>coord</name></param>
+            <param kind="Coord" len="1">const <ptype>GLfloat</ptype> *<name>coord</name></param>
             <alias name="glFogCoordfv"/>
             <glx type="render" opcode="4124"/>
         </command>
         <command>
             <proto>void <name>glFogCoordhNV</name></proto>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>fog</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>fog</name></param>
             <vecequiv name="glFogCoordhvNV"/>
         </command>
         <command>
             <proto>void <name>glFogCoordhvNV</name></proto>
-            <param group="Half16NV" len="1">const <ptype>GLhalfNV</ptype> *<name>fog</name></param>
+            <param len="1">const <ptype>GLhalfNV</ptype> *<name>fog</name></param>
             <glx type="render" opcode="4254"/>
         </command>
         <command>
@@ -16492,25 +12171,25 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glFogf</name></proto>
             <param group="FogParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
             <glx type="render" opcode="80"/>
         </command>
         <command>
             <proto>void <name>glFogfv</name></proto>
             <param group="FogParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="render" opcode="81"/>
         </command>
         <command>
             <proto>void <name>glFogi</name></proto>
             <param group="FogParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
             <glx type="render" opcode="82"/>
         </command>
         <command>
             <proto>void <name>glFogiv</name></proto>
             <param group="FogParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
             <glx type="render" opcode="83"/>
         </command>
         <command>
@@ -16535,7 +12214,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glFragmentColorMaterialSGIX</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>mode</name></param>
         </command>
         <command>
@@ -16545,87 +12224,87 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glFragmentLightModelfSGIX</name></proto>
             <param group="FragmentLightModelParameterSGIX"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glFragmentLightModelfvSGIX</name></proto>
             <param group="FragmentLightModelParameterSGIX"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glFragmentLightModeliSGIX</name></proto>
             <param group="FragmentLightModelParameterSGIX"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glFragmentLightModelivSGIX</name></proto>
             <param group="FragmentLightModelParameterSGIX"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glFragmentLightfSGIX</name></proto>
             <param group="FragmentLightNameSGIX"><ptype>GLenum</ptype> <name>light</name></param>
             <param group="FragmentLightParameterSGIX"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glFragmentLightfvSGIX</name></proto>
             <param group="FragmentLightNameSGIX"><ptype>GLenum</ptype> <name>light</name></param>
             <param group="FragmentLightParameterSGIX"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glFragmentLightiSGIX</name></proto>
             <param group="FragmentLightNameSGIX"><ptype>GLenum</ptype> <name>light</name></param>
             <param group="FragmentLightParameterSGIX"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glFragmentLightivSGIX</name></proto>
             <param group="FragmentLightNameSGIX"><ptype>GLenum</ptype> <name>light</name></param>
             <param group="FragmentLightParameterSGIX"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glFragmentMaterialfSGIX</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glFragmentMaterialfvSGIX</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glFragmentMaterialiSGIX</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glFragmentMaterialivSGIX</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glFrameTerminatorGREMEDY</name></proto>
         </command>
         <command>
             <proto>void <name>glFrameZoomSGIX</name></proto>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>factor</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>factor</name></param>
             <glx type="render" opcode="2072"/>
         </command>
         <command>
             <proto>void <name>glFramebufferDrawBufferEXT</name></proto>
-            <param group="Framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="DrawBufferMode"><ptype>GLenum</ptype> <name>mode</name></param>
         </command>
         <command>
             <proto>void <name>glFramebufferDrawBuffersEXT</name></proto>
-            <param group="Framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
             <param group="DrawBufferMode" len="n">const <ptype>GLenum</ptype> *<name>bufs</name></param>
         </command>
@@ -16637,7 +12316,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glFramebufferFoveationConfigQCOM</name></proto>
-            <param group="Framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param><ptype>GLuint</ptype> <name>numLayers</name></param>
             <param><ptype>GLuint</ptype> <name>focalPointsPerLayer</name></param>
             <param><ptype>GLuint</ptype> <name>requestedFeatures</name></param>
@@ -16645,14 +12324,14 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glFramebufferFoveationParametersQCOM</name></proto>
-            <param group="Framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param><ptype>GLuint</ptype> <name>layer</name></param>
             <param><ptype>GLuint</ptype> <name>focalPoint</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>focalX</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>focalY</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>gainX</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>gainY</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>foveaArea</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>focalX</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>focalY</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>gainX</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>gainY</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>foveaArea</name></param>
         </command>
         <command>
             <proto>void <name>glFramebufferParameteri</name></proto>
@@ -16667,7 +12346,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glFramebufferReadBufferEXT</name></proto>
-            <param group="Framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="ReadBufferMode"><ptype>GLenum</ptype> <name>mode</name></param>
         </command>
         <command>
@@ -16675,7 +12354,7 @@ typedef unsigned int GLhandleARB;
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="RenderbufferTarget"><ptype>GLenum</ptype> <name>renderbuffertarget</name></param>
-            <param><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
             <glx type="render" opcode="4324"/>
         </command>
         <command>
@@ -16683,7 +12362,7 @@ typedef unsigned int GLhandleARB;
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="RenderbufferTarget"><ptype>GLenum</ptype> <name>renderbuffertarget</name></param>
-            <param><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
             <alias name="glFramebufferRenderbuffer"/>
             <glx type="render" opcode="4324"/>
         </command>
@@ -16692,7 +12371,7 @@ typedef unsigned int GLhandleARB;
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="RenderbufferTarget"><ptype>GLenum</ptype> <name>renderbuffertarget</name></param>
-            <param><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
         </command>
         <command>
             <proto>void <name>glFramebufferSampleLocationsfvARB</name></proto>
@@ -16715,11 +12394,21 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLuint</ptype> <name>pixelindex</name></param>
             <param>const <ptype>GLfloat</ptype> *<name>values</name></param>
         </command>
+        <command>
+            <proto>void <name>glFramebufferShadingRateEXT</name></proto>
+            <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param><ptype>GLint</ptype> <name>baseLayer</name></param>
+            <param><ptype>GLsizei</ptype> <name>numLayers</name></param>
+            <param><ptype>GLsizei</ptype> <name>texelWidth</name></param>
+            <param><ptype>GLsizei</ptype> <name>texelHeight</name></param>
+        </command>
         <command>
             <proto>void <name>glFramebufferTexture</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
         </command>
         <command>
@@ -16727,7 +12416,7 @@ typedef unsigned int GLhandleARB;
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>textarget</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <glx type="render" opcode="4321"/>
         </command>
@@ -16736,7 +12425,7 @@ typedef unsigned int GLhandleARB;
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>textarget</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <alias name="glFramebufferTexture1D"/>
             <glx type="render" opcode="4321"/>
@@ -16746,7 +12435,7 @@ typedef unsigned int GLhandleARB;
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>textarget</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <glx type="render" opcode="4322"/>
         </command>
@@ -16755,7 +12444,7 @@ typedef unsigned int GLhandleARB;
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>textarget</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <alias name="glFramebufferTexture2D"/>
             <glx type="render" opcode="4322"/>
@@ -16765,7 +12454,7 @@ typedef unsigned int GLhandleARB;
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>textarget</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>xscale</name></param>
             <param><ptype>GLint</ptype> <name>yscale</name></param>
@@ -16775,7 +12464,7 @@ typedef unsigned int GLhandleARB;
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>textarget</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
         </command>
@@ -16784,7 +12473,7 @@ typedef unsigned int GLhandleARB;
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>textarget</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
         </command>
@@ -16793,7 +12482,7 @@ typedef unsigned int GLhandleARB;
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>textarget</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
         </command>
         <command>
@@ -16801,7 +12490,7 @@ typedef unsigned int GLhandleARB;
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>textarget</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>zoffset</name></param>
             <glx type="render" opcode="4323"/>
@@ -16811,7 +12500,7 @@ typedef unsigned int GLhandleARB;
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>textarget</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>zoffset</name></param>
             <alias name="glFramebufferTexture3D"/>
@@ -16822,7 +12511,7 @@ typedef unsigned int GLhandleARB;
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>textarget</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>zoffset</name></param>
         </command>
@@ -16830,32 +12519,32 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glFramebufferTextureARB</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <alias name="glFramebufferTexture"/>
         </command>
         <command>
             <proto>void <name>glFramebufferTextureEXT</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <alias name="glFramebufferTexture"/>
         </command>
         <command>
             <proto>void <name>glFramebufferTextureFaceARB</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>face</name></param>
         </command>
         <command>
             <proto>void <name>glFramebufferTextureFaceEXT</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>face</name></param>
             <alias name="glFramebufferTextureFaceARB"/>
         </command>
@@ -16863,36 +12552,36 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glFramebufferTextureLayer</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>layer</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>layer</name></param>
             <glx type="render" opcode="237"/>
         </command>
         <command>
             <proto>void <name>glFramebufferTextureLayerARB</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>layer</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>layer</name></param>
             <alias name="glFramebufferTextureLayer"/>
         </command>
         <command>
             <proto>void <name>glFramebufferTextureLayerEXT</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>layer</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>layer</name></param>
             <alias name="glFramebufferTextureLayer"/>
         </command>
         <command>
             <proto>void <name>glFramebufferTextureLayerDownsampleIMG</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>layer</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>layer</name></param>
             <param><ptype>GLint</ptype> <name>xscale</name></param>
             <param><ptype>GLint</ptype> <name>yscale</name></param>
         </command>
@@ -16900,8 +12589,8 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glFramebufferTextureMultisampleMultiviewOVR</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
             <param><ptype>GLint</ptype> <name>baseViewIndex</name></param>
             <param><ptype>GLsizei</ptype> <name>numViews</name></param>
@@ -16910,8 +12599,8 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glFramebufferTextureMultiviewOVR</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>baseViewIndex</name></param>
             <param><ptype>GLsizei</ptype> <name>numViews</name></param>
         </command>
@@ -16919,13 +12608,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glFramebufferTextureOES</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <alias name="glFramebufferTexture"/>
         </command>
         <command>
             <proto>void <name>glFreeObjectBufferATI</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
             <proto>void <name>glFrontFace</name></proto>
@@ -16986,23 +12675,23 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glGenBuffers</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>buffers</name></param>
+            <param class="buffer" len="n"><ptype>GLuint</ptype> *<name>buffers</name></param>
         </command>
         <command>
             <proto>void <name>glGenBuffersARB</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>buffers</name></param>
+            <param class="buffer" len="n"><ptype>GLuint</ptype> *<name>buffers</name></param>
             <alias name="glGenBuffers"/>
         </command>
         <command>
             <proto>void <name>glGenFencesAPPLE</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param group="FenceNV" len="n"><ptype>GLuint</ptype> *<name>fences</name></param>
+            <param kind="FenceNV" len="n"><ptype>GLuint</ptype> *<name>fences</name></param>
         </command>
         <command>
             <proto>void <name>glGenFencesNV</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param group="FenceNV" len="n"><ptype>GLuint</ptype> *<name>fences</name></param>
+            <param kind="FenceNV" len="n"><ptype>GLuint</ptype> *<name>fences</name></param>
             <glx type="vendor" opcode="1277"/>
         </command>
         <command>
@@ -17012,23 +12701,23 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glGenFramebuffers</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>framebuffers</name></param>
+            <param class="framebuffer" len="n"><ptype>GLuint</ptype> *<name>framebuffers</name></param>
             <glx type="vendor" opcode="1426"/>
         </command>
         <command>
             <proto>void <name>glGenFramebuffersEXT</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>framebuffers</name></param>
+            <param class="framebuffer" len="n"><ptype>GLuint</ptype> *<name>framebuffers</name></param>
             <alias name="glGenFramebuffers"/>
             <glx type="vendor" opcode="1426"/>
         </command>
         <command>
             <proto>void <name>glGenFramebuffersOES</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>framebuffers</name></param>
+            <param class="framebuffer" len="n"><ptype>GLuint</ptype> *<name>framebuffers</name></param>
         </command>
         <command>
-            <proto group="List"><ptype>GLuint</ptype> <name>glGenLists</name></proto>
+            <proto class="display list"><ptype>GLuint</ptype> <name>glGenLists</name></proto>
             <param><ptype>GLsizei</ptype> <name>range</name></param>
             <glx type="single" opcode="104"/>
         </command>
@@ -17044,7 +12733,7 @@ typedef unsigned int GLhandleARB;
             <param len="n"><ptype>GLuint</ptype> *<name>ids</name></param>
         </command>
         <command>
-            <proto group="Path"><ptype>GLuint</ptype> <name>glGenPathsNV</name></proto>
+            <proto kind="Path"><ptype>GLuint</ptype> <name>glGenPathsNV</name></proto>
             <param><ptype>GLsizei</ptype> <name>range</name></param>
         </command>
         <command>
@@ -17055,42 +12744,42 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glGenProgramPipelines</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>pipelines</name></param>
+            <param class="program pipeline" len="n"><ptype>GLuint</ptype> *<name>pipelines</name></param>
         </command>
         <command>
             <proto>void <name>glGenProgramPipelinesEXT</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>pipelines</name></param>
+            <param class="program pipeline" len="n"><ptype>GLuint</ptype> *<name>pipelines</name></param>
         </command>
         <command>
             <proto>void <name>glGenProgramsARB</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>programs</name></param>
+            <param class="program" len="n"><ptype>GLuint</ptype> *<name>programs</name></param>
             <glx type="vendor" opcode="1295"/>
         </command>
         <command>
             <proto>void <name>glGenProgramsNV</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>programs</name></param>
+            <param class="program" len="n"><ptype>GLuint</ptype> *<name>programs</name></param>
             <alias name="glGenProgramsARB"/>
             <glx type="vendor" opcode="1295"/>
         </command>
         <command>
             <proto>void <name>glGenQueries</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>ids</name></param>
+            <param class="query" len="n"><ptype>GLuint</ptype> *<name>ids</name></param>
             <glx type="single" opcode="162"/>
         </command>
         <command>
             <proto>void <name>glGenQueriesARB</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>ids</name></param>
+            <param class="query" len="n"><ptype>GLuint</ptype> *<name>ids</name></param>
             <alias name="glGenQueries"/>
         </command>
         <command>
             <proto>void <name>glGenQueriesEXT</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>ids</name></param>
+            <param class="query" len="n"><ptype>GLuint</ptype> *<name>ids</name></param>
         </command>
         <command>
             <proto>void <name>glGenQueryResourceTagNV</name></proto>
@@ -17100,25 +12789,25 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glGenRenderbuffers</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>renderbuffers</name></param>
+            <param class="renderbuffer" len="n"><ptype>GLuint</ptype> *<name>renderbuffers</name></param>
             <glx type="vendor" opcode="1423"/>
         </command>
         <command>
             <proto>void <name>glGenRenderbuffersEXT</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>renderbuffers</name></param>
+            <param class="renderbuffer" len="n"><ptype>GLuint</ptype> *<name>renderbuffers</name></param>
             <alias name="glGenRenderbuffers"/>
             <glx type="vendor" opcode="1423"/>
         </command>
         <command>
             <proto>void <name>glGenRenderbuffersOES</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>renderbuffers</name></param>
+            <param class="renderbuffer" len="n"><ptype>GLuint</ptype> *<name>renderbuffers</name></param>
         </command>
         <command>
             <proto>void <name>glGenSamplers</name></proto>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count"><ptype>GLuint</ptype> *<name>samplers</name></param>
+            <param class="sampler" len="count"><ptype>GLuint</ptype> *<name>samplers</name></param>
         </command>
         <command>
             <proto>void <name>glGenSemaphoresEXT</name></proto>
@@ -17135,42 +12824,42 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glGenTextures</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param group="Texture" len="n"><ptype>GLuint</ptype> *<name>textures</name></param>
+            <param class="texture" len="n"><ptype>GLuint</ptype> *<name>textures</name></param>
             <glx type="single" opcode="145"/>
         </command>
         <command>
             <proto>void <name>glGenTexturesEXT</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param group="Texture" len="n"><ptype>GLuint</ptype> *<name>textures</name></param>
+            <param class="texture" len="n"><ptype>GLuint</ptype> *<name>textures</name></param>
             <glx type="vendor" opcode="13"/>
         </command>
         <command>
             <proto>void <name>glGenTransformFeedbacks</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>ids</name></param>
+            <param class="transform feedback" len="n"><ptype>GLuint</ptype> *<name>ids</name></param>
         </command>
         <command>
             <proto>void <name>glGenTransformFeedbacksNV</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>ids</name></param>
+            <param class="transform feedback" len="n"><ptype>GLuint</ptype> *<name>ids</name></param>
             <alias name="glGenTransformFeedbacks"/>
         </command>
         <command>
             <proto>void <name>glGenVertexArrays</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>arrays</name></param>
+            <param class="vertex array" len="n"><ptype>GLuint</ptype> *<name>arrays</name></param>
             <glx type="single" opcode="206"/>
         </command>
         <command>
             <proto>void <name>glGenVertexArraysAPPLE</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>arrays</name></param>
+            <param class="vertex array" len="n"><ptype>GLuint</ptype> *<name>arrays</name></param>
             <alias name="glGenVertexArrays"/>
         </command>
         <command>
             <proto>void <name>glGenVertexArraysOES</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n"><ptype>GLuint</ptype> *<name>arrays</name></param>
+            <param class="vertex array" len="n"><ptype>GLuint</ptype> *<name>arrays</name></param>
             <alias name="glGenVertexArrays"/>
         </command>
         <command>
@@ -17199,23 +12888,23 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGenerateTextureMipmap</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
         </command>
         <command>
             <proto>void <name>glGenerateTextureMipmapEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
         </command>
         <command>
             <proto>void <name>glGetActiveAtomicCounterBufferiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLuint</ptype> <name>bufferIndex</name></param>
             <param group="AtomicCounterBufferPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetActiveAttrib</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
@@ -17225,7 +12914,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetActiveAttribARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>programObj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>programObj</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>maxLength</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
@@ -17236,25 +12925,25 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetActiveSubroutineName</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ShaderType"><ptype>GLenum</ptype> <name>shadertype</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param><ptype>GLsizei</ptype> <name>bufsize</name></param>
+            <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
-            <param len="bufsize"><ptype>GLchar</ptype> *<name>name</name></param>
+            <param len="bufSize"><ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto>void <name>glGetActiveSubroutineUniformName</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ShaderType"><ptype>GLenum</ptype> <name>shadertype</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param><ptype>GLsizei</ptype> <name>bufsize</name></param>
+            <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
-            <param len="bufsize"><ptype>GLchar</ptype> *<name>name</name></param>
+            <param len="bufSize"><ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto>void <name>glGetActiveSubroutineUniformiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ShaderType"><ptype>GLenum</ptype> <name>shadertype</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param group="SubroutineParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
@@ -17262,7 +12951,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetActiveUniform</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
@@ -17272,7 +12961,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetActiveUniformARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>programObj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>programObj</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>maxLength</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
@@ -17283,7 +12972,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetActiveUniformBlockName</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLuint</ptype> <name>uniformBlockIndex</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
@@ -17292,7 +12981,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetActiveUniformBlockiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLuint</ptype> <name>uniformBlockIndex</name></param>
             <param group="UniformBlockPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(program,uniformBlockIndex,pname)"><ptype>GLint</ptype> *<name>params</name></param>
@@ -17300,7 +12989,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetActiveUniformName</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLuint</ptype> <name>uniformIndex</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
@@ -17309,7 +12998,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetActiveUniformsiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLsizei</ptype> <name>uniformCount</name></param>
             <param len="uniformCount">const <ptype>GLuint</ptype> *<name>uniformIndices</name></param>
             <param group="UniformPName"><ptype>GLenum</ptype> <name>pname</name></param>
@@ -17318,13 +13007,13 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetActiveVaryingNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>size</name></param>
             <param len="1"><ptype>GLenum</ptype> *<name>type</name></param>
-            <param len="COMPSIZE(program,index,bufSize)"><ptype>GLchar</ptype> *<name>name</name></param>
+            <param len="bufSize"><ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto>void <name>glGetArrayObjectfvATI</name></proto>
@@ -17340,26 +13029,26 @@ typedef unsigned int GLhandleARB;
         </command>
         <command comment="Could be an alias of glGetAttachedShaders except that GLhandleARB is different on MacOS X">
             <proto>void <name>glGetAttachedObjectsARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>containerObj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>containerObj</name></param>
             <param><ptype>GLsizei</ptype> <name>maxCount</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>count</name></param>
-            <param group="handleARB" len="maxCount"><ptype>GLhandleARB</ptype> *<name>obj</name></param>
+            <param len="maxCount"><ptype>GLhandleARB</ptype> *<name>obj</name></param>
         </command>
         <command>
             <proto>void <name>glGetAttachedShaders</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLsizei</ptype> <name>maxCount</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>count</name></param>
-            <param len="maxCount"><ptype>GLuint</ptype> *<name>shaders</name></param>
+            <param class="shader" len="maxCount"><ptype>GLuint</ptype> *<name>shaders</name></param>
         </command>
         <command>
             <proto><ptype>GLint</ptype> <name>glGetAttribLocation</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param>const <ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto><ptype>GLint</ptype> <name>glGetAttribLocationARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>programObj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>programObj</name></param>
             <param>const <ptype>GLcharARB</ptype> *<name>name</name></param>
             <alias name="glGetAttribLocation"/>
         </command>
@@ -17367,7 +13056,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glGetBooleanIndexedvEXT</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param group="Boolean" len="COMPSIZE(target)"><ptype>GLboolean</ptype> *<name>data</name></param>
+            <param len="COMPSIZE(target)"><ptype>GLboolean</ptype> *<name>data</name></param>
             <alias name="glGetBooleani_v"/>
             <glx type="single" opcode="210"/>
         </command>
@@ -17375,12 +13064,12 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glGetBooleani_v</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param group="Boolean" len="COMPSIZE(target)"><ptype>GLboolean</ptype> *<name>data</name></param>
+            <param len="COMPSIZE(target)"><ptype>GLboolean</ptype> *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glGetBooleanv</name></proto>
             <param group="GetPName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="Boolean" len="COMPSIZE(pname)"><ptype>GLboolean</ptype> *<name>data</name></param>
+            <param len="COMPSIZE(pname)"><ptype>GLboolean</ptype> *<name>data</name></param>
             <glx type="single" opcode="112"/>
         </command>
         <command>
@@ -17425,21 +13114,21 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glGetBufferPointervOES</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="BufferPointerNameARB"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param>void **<name>params</name></param>
+            <param len="1">void **<name>params</name></param>
             <alias name="glGetBufferPointerv"/>
         </command>
         <command>
             <proto>void <name>glGetBufferSubData</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param len="size">void *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glGetBufferSubDataARB</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="BufferOffsetARB"><ptype>GLintptrARB</ptype> <name>offset</name></param>
-            <param group="BufferSizeARB"><ptype>GLsizeiptrARB</ptype> <name>size</name></param>
+            <param kind="BufferOffset"><ptype>GLintptrARB</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptrARB</ptype> <name>size</name></param>
             <param len="size">void *<name>data</name></param>
             <alias name="glGetBufferSubData"/>
         </command>
@@ -17490,42 +13179,42 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glGetColorTableParameterfv</name></proto>
             <param group="ColorTableTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="GetColorTableParameterPNameSGI"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param group="ColorTableParameterPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="single" opcode="148"/>
         </command>
         <command>
             <proto>void <name>glGetColorTableParameterfvEXT</name></proto>
             <param group="ColorTableTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="GetColorTableParameterPNameSGI"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param group="ColorTableParameterPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
             <alias name="glGetColorTableParameterfv"/>
         </command>
         <command>
             <proto>void <name>glGetColorTableParameterfvSGI</name></proto>
             <param group="ColorTableTargetSGI"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="GetColorTableParameterPNameSGI"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param group="ColorTableParameterPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="vendor" opcode="4099"/>
         </command>
         <command>
             <proto>void <name>glGetColorTableParameteriv</name></proto>
             <param group="ColorTableTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="GetColorTableParameterPNameSGI"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param group="ColorTableParameterPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
             <glx type="single" opcode="149"/>
         </command>
         <command>
             <proto>void <name>glGetColorTableParameterivEXT</name></proto>
             <param group="ColorTableTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="GetColorTableParameterPNameSGI"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param group="ColorTableParameterPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
             <alias name="glGetColorTableParameteriv"/>
         </command>
         <command>
             <proto>void <name>glGetColorTableParameterivSGI</name></proto>
             <param group="ColorTableTargetSGI"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="GetColorTableParameterPNameSGI"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param group="ColorTableParameterPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
             <glx type="vendor" opcode="4100"/>
         </command>
@@ -17579,49 +13268,49 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto><ptype>GLuint</ptype> <name>glGetCommandHeaderNV</name></proto>
-            <param><ptype>GLenum</ptype> <name>tokenID</name></param>
+            <param group="CommandOpcodesNV"><ptype>GLenum</ptype> <name>tokenID</name></param>
             <param><ptype>GLuint</ptype> <name>size</name></param>
         </command>
         <command>
             <proto>void <name>glGetCompressedMultiTexImageEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>lod</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>lod</name></param>
             <param len="COMPSIZE(target,lod)">void *<name>img</name></param>
         </command>
         <command>
             <proto>void <name>glGetCompressedTexImage</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CompressedTextureARB" len="COMPSIZE(target,level)">void *<name>img</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CompressedTextureARB" len="COMPSIZE(target,level)">void *<name>img</name></param>
             <glx type="single" opcode="160"/>
             <glx type="render" opcode="335" name="glGetCompressedTexImagePBO" comment="PBO protocol"/>
         </command>
         <command>
             <proto>void <name>glGetCompressedTexImageARB</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CompressedTextureARB" len="COMPSIZE(target,level)">void *<name>img</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CompressedTextureARB" len="COMPSIZE(target,level)">void *<name>img</name></param>
             <alias name="glGetCompressedTexImage"/>
             <glx type="single" opcode="160"/>
         </command>
         <command>
             <proto>void <name>glGetCompressedTextureImage</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param>void *<name>pixels</name></param>
+            <param len="bufSize">void *<name>pixels</name></param>
         </command>
         <command>
             <proto>void <name>glGetCompressedTextureImageEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>lod</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>lod</name></param>
             <param len="COMPSIZE(target,lod)">void *<name>img</name></param>
         </command>
         <command>
             <proto>void <name>glGetCompressedTextureSubImage</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLint</ptype> <name>yoffset</name></param>
@@ -17630,7 +13319,7 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param>void *<name>pixels</name></param>
+            <param len="bufSize">void *<name>pixels</name></param>
         </command>
         <command>
             <proto>void <name>glGetConvolutionFilter</name></proto>
@@ -17652,28 +13341,28 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glGetConvolutionParameterfv</name></proto>
             <param group="ConvolutionTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ConvolutionParameterEXT"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param group="ConvolutionParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="single" opcode="151"/>
         </command>
         <command>
             <proto>void <name>glGetConvolutionParameterfvEXT</name></proto>
             <param group="ConvolutionTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ConvolutionParameterEXT"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param group="ConvolutionParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="vendor" opcode="2"/>
         </command>
         <command>
             <proto>void <name>glGetConvolutionParameteriv</name></proto>
             <param group="ConvolutionTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ConvolutionParameterEXT"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param group="ConvolutionParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
             <glx type="single" opcode="152"/>
         </command>
         <command>
             <proto>void <name>glGetConvolutionParameterivEXT</name></proto>
             <param group="ConvolutionTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ConvolutionParameterEXT"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param group="ConvolutionParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
             <glx type="vendor" opcode="3"/>
         </command>
@@ -17685,7 +13374,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetCoverageModulationTableNV</name></proto>
-            <param><ptype>GLsizei</ptype> <name>bufsize</name></param>
+            <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param><ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
@@ -17702,12 +13391,12 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto><ptype>GLuint</ptype> <name>glGetDebugMessageLogAMD</name></proto>
             <param><ptype>GLuint</ptype> <name>count</name></param>
-            <param><ptype>GLsizei</ptype> <name>bufsize</name></param>
+            <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="count"><ptype>GLenum</ptype> *<name>categories</name></param>
-            <param len="count" group="DebugSeverity"><ptype>GLuint</ptype> *<name>severities</name></param>
+            <param len="count" group="DebugSeverity"><ptype>GLenum</ptype> *<name>severities</name></param>
             <param len="count"><ptype>GLuint</ptype> *<name>ids</name></param>
             <param len="count"><ptype>GLsizei</ptype> *<name>lengths</name></param>
-            <param len="bufsize"><ptype>GLchar</ptype> *<name>message</name></param>
+            <param len="bufSize"><ptype>GLchar</ptype> *<name>message</name></param>
         </command>
         <command>
             <proto><ptype>GLuint</ptype> <name>glGetDebugMessageLogARB</name></proto>
@@ -17741,20 +13430,20 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetDoubleIndexedvEXT</name></proto>
-            <param><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="GetPName"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="COMPSIZE(target)"><ptype>GLdouble</ptype> *<name>data</name></param>
             <alias name="glGetDoublei_v"/>
         </command>
         <command>
             <proto>void <name>glGetDoublei_v</name></proto>
-            <param><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="GetPName"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="COMPSIZE(target)"><ptype>GLdouble</ptype> *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glGetDoublei_vEXT</name></proto>
-            <param><ptype>GLenum</ptype> <name>pname</name></param>
+            <param group="GetPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLdouble</ptype> *<name>params</name></param>
             <alias name="glGetDoublei_v"/>
@@ -17784,7 +13473,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetFenceivNV</name></proto>
-            <param group="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
+            <param kind="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
             <param group="FenceParameterNameNV"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
             <glx type="vendor" opcode="1280"/>
@@ -17819,34 +13508,34 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetFloatIndexedvEXT</name></proto>
-            <param><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="GetPName"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="COMPSIZE(target)"><ptype>GLfloat</ptype> *<name>data</name></param>
             <alias name="glGetFloati_v"/>
         </command>
         <command>
             <proto>void <name>glGetFloati_v</name></proto>
-            <param><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="GetPName"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="COMPSIZE(target)"><ptype>GLfloat</ptype> *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glGetFloati_vEXT</name></proto>
-            <param><ptype>GLenum</ptype> <name>pname</name></param>
+            <param group="GetPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
             <alias name="glGetFloati_v"/>
         </command>
         <command>
             <proto>void <name>glGetFloati_vNV</name></proto>
-            <param><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="GetPName"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="COMPSIZE(target)"><ptype>GLfloat</ptype> *<name>data</name></param>
             <alias name="glGetFloati_v"/>
         </command>
         <command>
             <proto>void <name>glGetFloati_vOES</name></proto>
-            <param><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="GetPName"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="COMPSIZE(target)"><ptype>GLfloat</ptype> *<name>data</name></param>
             <alias name="glGetFloati_v"/>
@@ -17863,23 +13552,23 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto><ptype>GLint</ptype> <name>glGetFragDataIndex</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param>const <ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto><ptype>GLint</ptype> <name>glGetFragDataIndexEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param>const <ptype>GLchar</ptype> *<name>name</name></param>
             <alias name="glGetFragDataIndex"/>
         </command>
         <command>
             <proto><ptype>GLint</ptype> <name>glGetFragDataLocation</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param len="COMPSIZE(name)">const <ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto><ptype>GLint</ptype> <name>glGetFragDataLocationEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param len="COMPSIZE(name)">const <ptype>GLchar</ptype> *<name>name</name></param>
             <alias name="glGetFragDataLocation"/>
         </command>
@@ -17897,16 +13586,23 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetFragmentMaterialfvSGIX</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetFragmentMaterialivSGIX</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
+        <command>
+            <proto>void <name>glGetFragmentShadingRatesEXT</name></proto>
+            <param><ptype>GLsizei</ptype> <name>samples</name></param>
+            <param><ptype>GLsizei</ptype> <name>maxCount</name></param>
+            <param len="1"><ptype>GLsizei</ptype> *<name>count</name></param>
+            <param len="maxCount" group="ShadingRate"><ptype>GLenum</ptype> *<name>shadingRates</name></param>
+        </command>
         <command>
             <proto>void <name>glGetFramebufferAttachmentParameteriv</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
@@ -17948,7 +13644,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetFramebufferParameterivEXT</name></proto>
-            <param group="Framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="GetFramebufferParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
@@ -17971,13 +13667,13 @@ typedef unsigned int GLhandleARB;
             <alias name="glGetGraphicsResetStatus"/>
         </command>
         <command>
-            <proto group="handleARB"><ptype>GLhandleARB</ptype> <name>glGetHandleARB</name></proto>
-            <param><ptype>GLenum</ptype> <name>pname</name></param>
+            <proto><ptype>GLhandleARB</ptype> <name>glGetHandleARB</name></proto>
+            <param group="ContainerType"><ptype>GLenum</ptype> <name>pname</name></param>
         </command>
         <command>
             <proto>void <name>glGetHistogram</name></proto>
             <param group="HistogramTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>reset</name></param>
+            <param><ptype>GLboolean</ptype> <name>reset</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(target,format,type)">void *<name>values</name></param>
@@ -17987,7 +13683,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glGetHistogramEXT</name></proto>
             <param group="HistogramTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>reset</name></param>
+            <param><ptype>GLboolean</ptype> <name>reset</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(target,format,type)">void *<name>values</name></param>
@@ -18029,7 +13725,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto><ptype>GLuint64</ptype> <name>glGetImageHandleARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLboolean</ptype> <name>layered</name></param>
             <param><ptype>GLint</ptype> <name>layer</name></param>
@@ -18037,9 +13733,9 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto><ptype>GLuint64</ptype> <name>glGetImageHandleNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>layered</name></param>
+            <param><ptype>GLboolean</ptype> <name>layered</name></param>
             <param><ptype>GLint</ptype> <name>layer</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
         </command>
@@ -18057,7 +13753,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetInfoLogARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>obj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>obj</name></param>
             <param><ptype>GLsizei</ptype> <name>maxLength</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
             <param len="maxLength"><ptype>GLcharARB</ptype> *<name>infoLog</name></param>
@@ -18068,7 +13764,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetInteger64i_v</name></proto>
-            <param><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="GetPName"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="COMPSIZE(target)"><ptype>GLint64</ptype> *<name>data</name></param>
         </command>
@@ -18091,7 +13787,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetIntegerIndexedvEXT</name></proto>
-            <param><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="GetPName"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="COMPSIZE(target)"><ptype>GLint</ptype> *<name>data</name></param>
             <alias name="glGetIntegeri_v"/>
@@ -18099,13 +13795,13 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetIntegeri_v</name></proto>
-            <param><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="GetPName"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="COMPSIZE(target)"><ptype>GLint</ptype> *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glGetIntegeri_vEXT</name></proto>
-            <param><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="GetPName"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLint</ptype> *<name>data</name></param>
         </command>
@@ -18132,30 +13828,30 @@ typedef unsigned int GLhandleARB;
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
             <param group="InternalFormatPName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLint</ptype> *<name>params</name></param>
+            <param><ptype>GLsizei</ptype> <name>count</name></param>
+            <param len="count"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetInternalformati64v</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param group="InternalFormatPName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLint64</ptype> *<name>params</name></param>
+            <param><ptype>GLsizei</ptype> <name>count</name></param>
+            <param len="count"><ptype>GLint64</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetInternalformativ</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param group="InternalFormatPName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLint</ptype> *<name>params</name></param>
+            <param><ptype>GLsizei</ptype> <name>count</name></param>
+            <param len="count"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetInvariantBooleanvEXT</name></proto>
             <param><ptype>GLuint</ptype> <name>id</name></param>
             <param group="GetVariantValueEXT"><ptype>GLenum</ptype> <name>value</name></param>
-            <param group="Boolean" len="COMPSIZE(id)"><ptype>GLboolean</ptype> *<name>data</name></param>
+            <param len="COMPSIZE(id)"><ptype>GLboolean</ptype> *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glGetInvariantFloatvEXT</name></proto>
@@ -18203,21 +13899,21 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetListParameterfvSGIX</name></proto>
-            <param group="List"><ptype>GLuint</ptype> <name>list</name></param>
+            <param class="display list"><ptype>GLuint</ptype> <name>list</name></param>
             <param group="ListParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetListParameterivSGIX</name></proto>
-            <param group="List"><ptype>GLuint</ptype> <name>list</name></param>
+            <param class="display list"><ptype>GLuint</ptype> <name>list</name></param>
             <param group="ListParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetLocalConstantBooleanvEXT</name></proto>
             <param><ptype>GLuint</ptype> <name>id</name></param>
             <param group="GetVariantValueEXT"><ptype>GLenum</ptype> <name>value</name></param>
-            <param group="Boolean" len="COMPSIZE(id)"><ptype>GLboolean</ptype> *<name>data</name></param>
+            <param len="COMPSIZE(id)"><ptype>GLboolean</ptype> *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glGetLocalConstantFloatvEXT</name></proto>
@@ -18252,7 +13948,7 @@ typedef unsigned int GLhandleARB;
             <param group="MapTypeNV"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>ustride</name></param>
             <param><ptype>GLsizei</ptype> <name>vstride</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>packed</name></param>
+            <param><ptype>GLboolean</ptype> <name>packed</name></param>
             <param len="COMPSIZE(target)">void *<name>points</name></param>
         </command>
         <command>
@@ -18296,33 +13992,33 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetMaterialfv</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="single" opcode="123"/>
         </command>
         <command>
             <proto>void <name>glGetMaterialiv</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
             <glx type="single" opcode="124"/>
         </command>
         <command>
             <proto>void <name>glGetMaterialxOES</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLfixed</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glGetMaterialxv</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLfixed</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetMaterialxvOES</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLfixed</ptype> *<name>params</name></param>
         </command>
@@ -18343,7 +14039,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glGetMinmax</name></proto>
             <param group="MinmaxTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>reset</name></param>
+            <param><ptype>GLboolean</ptype> <name>reset</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(target,format,type)">void *<name>values</name></param>
@@ -18353,7 +14049,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glGetMinmaxEXT</name></proto>
             <param group="MinmaxTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>reset</name></param>
+            <param><ptype>GLboolean</ptype> <name>reset</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(target,format,type)">void *<name>values</name></param>
@@ -18426,7 +14122,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glGetMultiTexImageEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(target,level,format,type)">void *<name>pixels</name></param>
@@ -18435,7 +14131,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glGetMultiTexLevelParameterfvEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="GetTextureParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
@@ -18443,7 +14139,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glGetMultiTexLevelParameterivEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="GetTextureParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
@@ -18490,57 +14186,57 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetNamedBufferParameteri64v</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="VertexBufferObjectParameter"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param group="BufferPNameARB"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint64</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedBufferParameteriv</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="VertexBufferObjectParameter"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param group="BufferPNameARB"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedBufferParameterivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="VertexBufferObjectParameter"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param group="BufferPNameARB"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedBufferParameterui64vNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="VertexBufferObjectParameter"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param group="BufferPNameARB"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLuint64EXT</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedBufferPointerv</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="VertexBufferObjectParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param>void **<name>params</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param group="BufferPointerNameARB"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param len="1">void **<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedBufferPointervEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="VertexBufferObjectParameter"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param group="BufferPointerNameARB"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="1">void **<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedBufferSubData</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
-            <param>void *<name>data</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param len="size">void *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedBufferSubDataEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
             <param><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param len="COMPSIZE(size)">void *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedFramebufferParameterfvAMD</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLuint</ptype> <name>numsamples</name></param>
             <param><ptype>GLuint</ptype> <name>pixelindex</name></param>
@@ -18549,81 +14245,81 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetNamedFramebufferAttachmentParameteriv</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="FramebufferAttachmentParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedFramebufferAttachmentParameterivEXT</name></proto>
-            <param group="Framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="FramebufferAttachmentParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedFramebufferParameteriv</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="GetFramebufferParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> *<name>param</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedFramebufferParameterivEXT</name></proto>
-            <param group="Framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="GetFramebufferParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedProgramLocalParameterIivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="4"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedProgramLocalParameterIuivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="4"><ptype>GLuint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedProgramLocalParameterdvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="4"><ptype>GLdouble</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedProgramLocalParameterfvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="4"><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedProgramStringEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="ProgramStringProperty"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(program,pname)">void *<name>string</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedProgramivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="ProgramPropertyARB"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="1"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedRenderbufferParameteriv</name></proto>
-            <param><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
             <param group="RenderbufferParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetNamedRenderbufferParameterivEXT</name></proto>
-            <param group="Renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
             <param group="RenderbufferParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
@@ -18649,13 +14345,13 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetObjectBufferfvATI</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param group="ArrayObjectPNameATI"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="1"><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetObjectBufferivATI</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param group="ArrayObjectPNameATI"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="1"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
@@ -18686,7 +14382,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetObjectParameterfvARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>obj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>obj</name></param>
             <param><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
@@ -18699,7 +14395,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetObjectParameterivARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>obj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>obj</name></param>
             <param><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
@@ -18744,29 +14440,29 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetPathCommandsNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
-            <param group="PathCommand" len="COMPSIZE(path)"><ptype>GLubyte</ptype> *<name>commands</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param group="PathCoordType" len="COMPSIZE(path)"><ptype>GLubyte</ptype> *<name>commands</name></param>
         </command>
         <command>
             <proto>void <name>glGetPathCoordsNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param len="COMPSIZE(path)"><ptype>GLfloat</ptype> *<name>coords</name></param>
         </command>
         <command>
             <proto>void <name>glGetPathDashArrayNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param len="COMPSIZE(path)"><ptype>GLfloat</ptype> *<name>dashArray</name></param>
         </command>
         <command>
             <proto><ptype>GLfloat</ptype> <name>glGetPathLengthNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param><ptype>GLsizei</ptype> <name>startSegment</name></param>
             <param><ptype>GLsizei</ptype> <name>numSegments</name></param>
         </command>
         <command>
             <proto>void <name>glGetPathMetricRangeNV</name></proto>
             <param group="PathMetricMask"><ptype>GLbitfield</ptype> <name>metricQueryMask</name></param>
-            <param group="Path"><ptype>GLuint</ptype> <name>firstPathName</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>firstPathName</name></param>
             <param><ptype>GLsizei</ptype> <name>numPaths</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
             <param len="COMPSIZE(metricQueryMask,numPaths,stride)"><ptype>GLfloat</ptype> *<name>metrics</name></param>
@@ -18776,20 +14472,20 @@ typedef unsigned int GLhandleARB;
             <param group="PathMetricMask"><ptype>GLbitfield</ptype> <name>metricQueryMask</name></param>
             <param><ptype>GLsizei</ptype> <name>numPaths</name></param>
             <param group="PathElementType"><ptype>GLenum</ptype> <name>pathNameType</name></param>
-            <param group="PathElement" len="COMPSIZE(numPaths,pathNameType,paths)">const void *<name>paths</name></param>
-            <param group="Path"><ptype>GLuint</ptype> <name>pathBase</name></param>
+            <param len="COMPSIZE(numPaths,pathNameType,paths)">const void *<name>paths</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>pathBase</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
             <param len="COMPSIZE(metricQueryMask,numPaths,stride)"><ptype>GLfloat</ptype> *<name>metrics</name></param>
         </command>
         <command>
             <proto>void <name>glGetPathParameterfvNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param group="PathParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="4"><ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glGetPathParameterivNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param group="PathParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="4"><ptype>GLint</ptype> *<name>value</name></param>
         </command>
@@ -18798,8 +14494,8 @@ typedef unsigned int GLhandleARB;
             <param group="PathListMode"><ptype>GLenum</ptype> <name>pathListMode</name></param>
             <param><ptype>GLsizei</ptype> <name>numPaths</name></param>
             <param group="PathElementType"><ptype>GLenum</ptype> <name>pathNameType</name></param>
-            <param group="PathElement" len="COMPSIZE(numPaths,pathNameType,paths)">const void *<name>paths</name></param>
-            <param group="Path"><ptype>GLuint</ptype> <name>pathBase</name></param>
+            <param len="COMPSIZE(numPaths,pathNameType,paths)">const void *<name>paths</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>pathBase</name></param>
             <param><ptype>GLfloat</ptype> <name>advanceScale</name></param>
             <param><ptype>GLfloat</ptype> <name>kerningScale</name></param>
             <param group="PathTransformType"><ptype>GLenum</ptype> <name>transformType</name></param>
@@ -18822,9 +14518,9 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLuint</ptype> <name>queryId</name></param>
             <param><ptype>GLuint</ptype> <name>counterId</name></param>
             <param><ptype>GLuint</ptype> <name>counterNameLength</name></param>
-            <param><ptype>GLchar</ptype> *<name>counterName</name></param>
+            <param len="counterNameLength"><ptype>GLchar</ptype> *<name>counterName</name></param>
             <param><ptype>GLuint</ptype> <name>counterDescLength</name></param>
-            <param><ptype>GLchar</ptype> *<name>counterDesc</name></param>
+            <param len="counterDescLength"><ptype>GLchar</ptype> *<name>counterDesc</name></param>
             <param><ptype>GLuint</ptype> *<name>counterOffset</name></param>
             <param><ptype>GLuint</ptype> *<name>counterDataSize</name></param>
             <param><ptype>GLuint</ptype> *<name>counterTypeEnum</name></param>
@@ -18836,7 +14532,7 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLuint</ptype> <name>monitor</name></param>
             <param><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLsizei</ptype> <name>dataSize</name></param>
-            <param len="dataSize"><ptype>GLuint</ptype> *<name>data</name></param>
+            <param len="dataSize / 4"><ptype>GLuint</ptype> *<name>data</name></param>
             <param len="1"><ptype>GLint</ptype> *<name>bytesWritten</name></param>
         </command>
         <command>
@@ -18892,11 +14588,11 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glGetPerfQueryInfoINTEL</name></proto>
             <param><ptype>GLuint</ptype> <name>queryId</name></param>
             <param><ptype>GLuint</ptype> <name>queryNameLength</name></param>
-            <param><ptype>GLchar</ptype> *<name>queryName</name></param>
+            <param len="queryNameLength"><ptype>GLchar</ptype> *<name>queryName</name></param>
             <param><ptype>GLuint</ptype> *<name>dataSize</name></param>
             <param><ptype>GLuint</ptype> *<name>noCounters</name></param>
             <param><ptype>GLuint</ptype> *<name>noInstances</name></param>
-            <param><ptype>GLuint</ptype> *<name>capsMask</name></param>
+            <param group="PerformanceQueryCapsMaskINTEL"><ptype>GLuint</ptype> *<name>capsMask</name></param>
         </command>
         <command>
             <proto>void <name>glGetPixelMapfv</name></proto>
@@ -18928,12 +14624,12 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glGetPixelTexGenParameterfvSGIS</name></proto>
             <param group="PixelTexGenParameterNameSGIS"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetPixelTexGenParameterivSGIS</name></proto>
             <param group="PixelTexGenParameterNameSGIS"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetPixelTransformParameterfvEXT</name></proto>
@@ -18976,7 +14672,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glGetPointervKHR</name></proto>
             <param><ptype>GLenum</ptype> <name>pname</name></param>
-            <param>void **<name>params</name></param>
+            <param len="1">void **<name>params</name></param>
             <alias name="glGetPointerv"/>
         </command>
         <command>
@@ -18987,7 +14683,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetProgramBinary</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
             <param len="1"><ptype>GLenum</ptype> *<name>binaryFormat</name></param>
@@ -18995,7 +14691,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetProgramBinaryOES</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
             <param len="1"><ptype>GLenum</ptype> *<name>binaryFormat</name></param>
@@ -19016,19 +14712,19 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetProgramEnvParameterdvARB</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="4"><ptype>GLdouble</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetProgramEnvParameterfvARB</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="4"><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetProgramInfoLog</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
             <param len="bufSize"><ptype>GLchar</ptype> *<name>infoLog</name></param>
@@ -19036,7 +14732,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetProgramInterfaceiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramInterface"><ptype>GLenum</ptype> <name>programInterface</name></param>
             <param group="ProgramInterfacePName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
@@ -19055,19 +14751,19 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetProgramLocalParameterdvARB</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="4"><ptype>GLdouble</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetProgramLocalParameterfvARB</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="4"><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetProgramNamedParameterdvNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>id</name></param>
             <param><ptype>GLsizei</ptype> <name>len</name></param>
             <param len="1">const <ptype>GLubyte</ptype> *<name>name</name></param>
             <param len="4"><ptype>GLdouble</ptype> *<name>params</name></param>
@@ -19075,7 +14771,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetProgramNamedParameterfvNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>id</name></param>
             <param><ptype>GLsizei</ptype> <name>len</name></param>
             <param len="1">const <ptype>GLubyte</ptype> *<name>name</name></param>
             <param len="4"><ptype>GLfloat</ptype> *<name>params</name></param>
@@ -19099,57 +14795,57 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetProgramPipelineInfoLog</name></proto>
-            <param><ptype>GLuint</ptype> <name>pipeline</name></param>
+            <param class="program pipeline"><ptype>GLuint</ptype> <name>pipeline</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
             <param len="bufSize"><ptype>GLchar</ptype> *<name>infoLog</name></param>
         </command>
         <command>
             <proto>void <name>glGetProgramPipelineInfoLogEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>pipeline</name></param>
+            <param class="program pipeline"><ptype>GLuint</ptype> <name>pipeline</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
             <param len="bufSize"><ptype>GLchar</ptype> *<name>infoLog</name></param>
         </command>
         <command>
             <proto>void <name>glGetProgramPipelineiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>pipeline</name></param>
+            <param class="program pipeline"><ptype>GLuint</ptype> <name>pipeline</name></param>
             <param group="PipelineParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetProgramPipelineivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>pipeline</name></param>
+            <param class="program pipeline"><ptype>GLuint</ptype> <name>pipeline</name></param>
             <param group="PipelineParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto><ptype>GLuint</ptype> <name>glGetProgramResourceIndex</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramInterface"><ptype>GLenum</ptype> <name>programInterface</name></param>
             <param len="COMPSIZE(name)">const <ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto><ptype>GLint</ptype> <name>glGetProgramResourceLocation</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramInterface"><ptype>GLenum</ptype> <name>programInterface</name></param>
             <param len="COMPSIZE(name)">const <ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto><ptype>GLint</ptype> <name>glGetProgramResourceLocationIndex</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramInterface"><ptype>GLenum</ptype> <name>programInterface</name></param>
             <param len="COMPSIZE(name)">const <ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto><ptype>GLint</ptype> <name>glGetProgramResourceLocationIndexEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramInterface"><ptype>GLenum</ptype> <name>programInterface</name></param>
             <param len="COMPSIZE(name)">const <ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto>void <name>glGetProgramResourceName</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramInterface"><ptype>GLenum</ptype> <name>programInterface</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
@@ -19158,44 +14854,44 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetProgramResourcefvNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramInterface"><ptype>GLenum</ptype> <name>programInterface</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>propCount</name></param>
             <param>const <ptype>GLenum</ptype> *<name>props</name></param>
-            <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param><ptype>GLsizei</ptype> *<name>length</name></param>
-            <param><ptype>GLfloat</ptype> *<name>params</name></param>
+            <param><ptype>GLsizei</ptype> <name>count</name></param>
+            <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
+            <param len="count"><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetProgramResourceiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramInterface"><ptype>GLenum</ptype> <name>programInterface</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>propCount</name></param>
             <param group="ProgramResourceProperty" len="propCount">const <ptype>GLenum</ptype> *<name>props</name></param>
-            <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
+            <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
-            <param len="bufSize"><ptype>GLint</ptype> *<name>params</name></param>
+            <param len="count"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetProgramStageiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ShaderType"><ptype>GLenum</ptype> <name>shadertype</name></param>
             <param group="ProgramStagePName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="1"><ptype>GLint</ptype> *<name>values</name></param>
         </command>
         <command>
             <proto>void <name>glGetProgramStringARB</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ProgramStringPropertyARB"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="ProgramStringProperty"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(target,pname)">void *<name>string</name></param>
         </command>
         <command>
             <proto>void <name>glGetProgramStringNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>id</name></param>
             <param group="VertexAttribEnumNV"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="ProgramCharacterNV" len="COMPSIZE(id,pname)"><ptype>GLubyte</ptype> *<name>program</name></param>
+            <param kind="String" len="COMPSIZE(id,pname)"><ptype>GLubyte</ptype> *<name>program</name></param>
             <glx type="vendor" opcode="1299"/>
         </command>
         <command>
@@ -19206,49 +14902,49 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetProgramiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramPropertyARB"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
             <glx type="single" opcode="199"/>
         </command>
         <command>
             <proto>void <name>glGetProgramivARB</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="ProgramPropertyARB"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="1"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetProgramivNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>id</name></param>
             <param group="VertexAttribEnumNV"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="4"><ptype>GLint</ptype> *<name>params</name></param>
             <glx type="vendor" opcode="1298"/>
         </command>
         <command>
             <proto>void <name>glGetQueryBufferObjecti64v</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param group="QueryObjectParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
         </command>
         <command>
             <proto>void <name>glGetQueryBufferObjectiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param group="QueryObjectParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
         </command>
         <command>
             <proto>void <name>glGetQueryBufferObjectui64v</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param group="QueryObjectParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
         </command>
         <command>
             <proto>void <name>glGetQueryBufferObjectuiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param group="QueryObjectParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
         </command>
@@ -19261,13 +14957,13 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetQueryObjecti64v</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
             <param group="QueryObjectParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint64</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetQueryObjecti64vEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
             <param group="QueryObjectParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint64</ptype> *<name>params</name></param>
             <glx type="vendor" opcode="1328"/>
@@ -19275,34 +14971,34 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetQueryObjectiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
             <param group="QueryObjectParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
             <glx type="single" opcode="165"/>
         </command>
         <command>
             <proto>void <name>glGetQueryObjectivARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
             <param group="QueryObjectParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
             <alias name="glGetQueryObjectiv"/>
         </command>
         <command>
             <proto>void <name>glGetQueryObjectivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
             <param group="QueryObjectParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
             <alias name="glGetQueryObjectiv"/>
         </command>
         <command>
             <proto>void <name>glGetQueryObjectui64v</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
             <param group="QueryObjectParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLuint64</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetQueryObjectui64vEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
             <param group="QueryObjectParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLuint64</ptype> *<name>params</name></param>
             <glx type="vendor" opcode="1329"/>
@@ -19310,21 +15006,21 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetQueryObjectuiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
             <param group="QueryObjectParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLuint</ptype> *<name>params</name></param>
             <glx type="single" opcode="166"/>
         </command>
         <command>
             <proto>void <name>glGetQueryObjectuivARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
             <param group="QueryObjectParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLuint</ptype> *<name>params</name></param>
             <alias name="glGetQueryObjectuiv"/>
         </command>
         <command>
             <proto>void <name>glGetQueryObjectuivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
             <param group="QueryObjectParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLuint</ptype> *<name>params</name></param>
         </command>
@@ -19371,56 +15067,62 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetSamplerParameterIiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterI"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetSamplerParameterIivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterI"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
             <alias name="glGetSamplerParameterIiv"/>
         </command>
         <command>
             <proto>void <name>glGetSamplerParameterIivOES</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterI"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
             <alias name="glGetSamplerParameterIiv"/>
         </command>
         <command>
             <proto>void <name>glGetSamplerParameterIuiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterI"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLuint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetSamplerParameterIuivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterI"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLuint</ptype> *<name>params</name></param>
             <alias name="glGetSamplerParameterIuiv"/>
         </command>
         <command>
             <proto>void <name>glGetSamplerParameterIuivOES</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterI"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLuint</ptype> *<name>params</name></param>
             <alias name="glGetSamplerParameterIuiv"/>
         </command>
         <command>
             <proto>void <name>glGetSamplerParameterfv</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterF"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetSamplerParameteriv</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterI"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
+        <command>
+            <proto>void <name>glGetSemaphoreParameterivNV</name></proto>
+            <param><ptype>GLuint</ptype> <name>semaphore</name></param>
+            <param group="SemaphoreParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param><ptype>GLint</ptype> *<name>params</name></param>
+        </command>
         <command>
             <proto>void <name>glGetSemaphoreParameterui64vEXT</name></proto>
             <param><ptype>GLuint</ptype> <name>semaphore</name></param>
@@ -19450,7 +15152,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetShaderInfoLog</name></proto>
-            <param><ptype>GLuint</ptype> <name>shader</name></param>
+            <param class="shader"><ptype>GLuint</ptype> <name>shader</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
             <param len="bufSize"><ptype>GLchar</ptype> *<name>infoLog</name></param>
@@ -19465,14 +15167,14 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetShaderSource</name></proto>
-            <param><ptype>GLuint</ptype> <name>shader</name></param>
+            <param class="shader"><ptype>GLuint</ptype> <name>shader</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
             <param len="bufSize"><ptype>GLchar</ptype> *<name>source</name></param>
         </command>
         <command>
             <proto>void <name>glGetShaderSourceARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>obj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>obj</name></param>
             <param><ptype>GLsizei</ptype> <name>maxLength</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
             <param len="maxLength"><ptype>GLcharARB</ptype> *<name>source</name></param>
@@ -19480,7 +15182,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetShaderiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>shader</name></param>
+            <param class="shader"><ptype>GLuint</ptype> <name>shader</name></param>
             <param group="ShaderParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
             <glx type="single" opcode="198"/>
@@ -19508,44 +15210,49 @@ typedef unsigned int GLhandleARB;
             <proto><ptype>GLushort</ptype> <name>glGetStageIndexNV</name></proto>
             <param group="ShaderType"><ptype>GLenum</ptype> <name>shadertype</name></param>
         </command>
+        <!-- These commands represent strings as GLubyte* instead of GLchar* as represented elsewhere.
+             While functionally the same, these commands continue to use GLubyte* as there's no way to
+             change the signature of these commands without potentially breaking lots of applications
+             using these APIs. For more information, see public issue 363:
+             https://github.com/KhronosGroup/OpenGL-Registry/issues/363 -->
         <command>
-            <proto group="String">const <ptype>GLubyte</ptype> *<name>glGetString</name></proto>
+            <proto kind="String">const <ptype>GLubyte</ptype> *<name>glGetString</name></proto>
             <param group="StringName"><ptype>GLenum</ptype> <name>name</name></param>
             <glx type="single" opcode="129"/>
         </command>
         <command>
-            <proto group="String">const <ptype>GLubyte</ptype> *<name>glGetStringi</name></proto>
+            <proto kind="String">const <ptype>GLubyte</ptype> *<name>glGetStringi</name></proto>
             <param group="StringName"><ptype>GLenum</ptype> <name>name</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <glx type="single" opcode="214"/>
         </command>
         <command>
             <proto><ptype>GLuint</ptype> <name>glGetSubroutineIndex</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ShaderType"><ptype>GLenum</ptype> <name>shadertype</name></param>
             <param>const <ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto><ptype>GLint</ptype> <name>glGetSubroutineUniformLocation</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ShaderType"><ptype>GLenum</ptype> <name>shadertype</name></param>
             <param>const <ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto>void <name>glGetSynciv</name></proto>
-            <param group="sync"><ptype>GLsync</ptype> <name>sync</name></param>
+            <param class="sync"><ptype>GLsync</ptype> <name>sync</name></param>
             <param group="SyncParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
+            <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
-            <param len="bufSize"><ptype>GLint</ptype> *<name>values</name></param>
+            <param len="count"><ptype>GLint</ptype> *<name>values</name></param>
         </command>
         <command>
             <proto>void <name>glGetSyncivAPPLE</name></proto>
-            <param><ptype>GLsync</ptype> <name>sync</name></param>
+            <param class="sync"><ptype>GLsync</ptype> <name>sync</name></param>
             <param group="SyncParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
+            <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param><ptype>GLsizei</ptype> *<name>length</name></param>
-            <param len="bufSize"><ptype>GLint</ptype> *<name>values</name></param>
+            <param len="count"><ptype>GLint</ptype> *<name>values</name></param>
             <alias name="glGetSynciv"/>
         </command>
         <command>
@@ -19633,7 +15340,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glGetTexImage</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(target,level,format,type)">void *<name>pixels</name></param>
@@ -19643,7 +15350,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glGetTexLevelParameterfv</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="GetTextureParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="single" opcode="138"/>
@@ -19651,7 +15358,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glGetTexLevelParameteriv</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="GetTextureParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
             <glx type="single" opcode="139"/>
@@ -19739,136 +15446,136 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto><ptype>GLuint64</ptype> <name>glGetTextureHandleARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
         </command>
         <command>
             <proto><ptype>GLuint64</ptype> <name>glGetTextureHandleIMG</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <alias name="glGetTextureHandleARB"/>
         </command>
         <command>
             <proto><ptype>GLuint64</ptype> <name>glGetTextureHandleNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
         </command>
         <command>
             <proto>void <name>glGetTextureImage</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param>void *<name>pixels</name></param>
+            <param len="bufSize">void *<name>pixels</name></param>
         </command>
         <command>
             <proto>void <name>glGetTextureImageEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(target,level,format,type)">void *<name>pixels</name></param>
         </command>
         <command>
             <proto>void <name>glGetTextureLevelParameterfv</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param group="GetTextureParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetTextureLevelParameterfvEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="GetTextureParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetTextureLevelParameteriv</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param group="GetTextureParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetTextureLevelParameterivEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="GetTextureParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetTextureParameterIiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="GetTextureParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetTextureParameterIivEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="GetTextureParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetTextureParameterIuiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="GetTextureParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLuint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetTextureParameterIuivEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="GetTextureParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLuint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetTextureParameterfv</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="GetTextureParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetTextureParameterfvEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="GetTextureParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetTextureParameteriv</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="GetTextureParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetTextureParameterivEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="GetTextureParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto><ptype>GLuint64</ptype> <name>glGetTextureSamplerHandleARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
         </command>
         <command>
             <proto><ptype>GLuint64</ptype> <name>glGetTextureSamplerHandleIMG</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <alias name="glGetTextureSamplerHandleARB"/>
         </command>
         <command>
             <proto><ptype>GLuint64</ptype> <name>glGetTextureSamplerHandleNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
         </command>
         <command>
             <proto>void <name>glGetTextureSubImage</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLint</ptype> <name>yoffset</name></param>
@@ -19879,7 +15586,7 @@ typedef unsigned int GLhandleARB;
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param>void *<name>pixels</name></param>
+            <param len="bufSize">void *<name>pixels</name></param>
         </command>
         <command>
             <proto>void <name>glGetTrackMatrixivNV</name></proto>
@@ -19891,73 +15598,73 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetTransformFeedbackVarying</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>size</name></param>
-            <param group="GlslTypeToken" len="1"><ptype>GLenum</ptype> *<name>type</name></param>
+            <param group="AttributeType" len="1"><ptype>GLenum</ptype> *<name>type</name></param>
             <param len="bufSize"><ptype>GLchar</ptype> *<name>name</name></param>
             <glx type="single" opcode="213"/>
         </command>
         <command>
             <proto>void <name>glGetTransformFeedbackVaryingEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>size</name></param>
-            <param group="GlslTypeToken" len="1"><ptype>GLenum</ptype> *<name>type</name></param>
+            <param group="AttributeType" len="1"><ptype>GLenum</ptype> *<name>type</name></param>
             <param len="bufSize"><ptype>GLchar</ptype> *<name>name</name></param>
             <alias name="glGetTransformFeedbackVarying"/>
         </command>
         <command>
             <proto>void <name>glGetTransformFeedbackVaryingNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="1"><ptype>GLint</ptype> *<name>location</name></param>
         </command>
         <command>
             <proto>void <name>glGetTransformFeedbacki64_v</name></proto>
-            <param><ptype>GLuint</ptype> <name>xfb</name></param>
+            <param class="transform feedback"><ptype>GLuint</ptype> <name>xfb</name></param>
             <param group="TransformFeedbackPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLint64</ptype> *<name>param</name></param>
         </command>
         <command>
             <proto>void <name>glGetTransformFeedbacki_v</name></proto>
-            <param><ptype>GLuint</ptype> <name>xfb</name></param>
+            <param class="transform feedback"><ptype>GLuint</ptype> <name>xfb</name></param>
             <param group="TransformFeedbackPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLint</ptype> *<name>param</name></param>
         </command>
         <command>
             <proto>void <name>glGetTransformFeedbackiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>xfb</name></param>
+            <param class="transform feedback"><ptype>GLuint</ptype> <name>xfb</name></param>
             <param group="TransformFeedbackPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> *<name>param</name></param>
         </command>
         <command>
             <proto>void <name>glGetTranslatedShaderSourceANGLE</name></proto>
-            <param><ptype>GLuint</ptype> <name>shader</name></param>
-            <param><ptype>GLsizei</ptype> <name>bufsize</name></param>
+            <param class="shader"><ptype>GLuint</ptype> <name>shader</name></param>
+            <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
             <param len="1"><ptype>GLsizei</ptype> *<name>length</name></param>
-            <param><ptype>GLchar</ptype> *<name>source</name></param>
+            <param len="bufSize"><ptype>GLchar</ptype> *<name>source</name></param>
         </command>
         <command>
             <proto><ptype>GLuint</ptype> <name>glGetUniformBlockIndex</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param len="COMPSIZE()">const <ptype>GLchar</ptype> *<name>uniformBlockName</name></param>
             <glx type="single" opcode="218"/>
         </command>
         <command>
             <proto><ptype>GLint</ptype> <name>glGetUniformBufferSizeEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
         </command>
         <command>
             <proto>void <name>glGetUniformIndices</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLsizei</ptype> <name>uniformCount</name></param>
             <param len="COMPSIZE(uniformCount)">const <ptype>GLchar</ptype> *const*<name>uniformNames</name></param>
             <param len="COMPSIZE(uniformCount)"><ptype>GLuint</ptype> *<name>uniformIndices</name></param>
@@ -19965,18 +15672,18 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto><ptype>GLint</ptype> <name>glGetUniformLocation</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param>const <ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto><ptype>GLint</ptype> <name>glGetUniformLocationARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>programObj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>programObj</name></param>
             <param>const <ptype>GLcharARB</ptype> *<name>name</name></param>
             <alias name="glGetUniformLocation"/>
         </command>
         <command>
-            <proto group="BufferOffset"><ptype>GLintptr</ptype> <name>glGetUniformOffsetEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <proto kind="BufferOffset"><ptype>GLintptr</ptype> <name>glGetUniformOffsetEXT</name></proto>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
         </command>
         <command>
@@ -19987,69 +15694,69 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetUniformdv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param len="COMPSIZE(program,location)"><ptype>GLdouble</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetUniformfv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param len="COMPSIZE(program,location)"><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetUniformfvARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>programObj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>programObj</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param len="COMPSIZE(programObj,location)"><ptype>GLfloat</ptype> *<name>params</name></param>
             <alias name="glGetUniformfv"/>
         </command>
         <command>
             <proto>void <name>glGetUniformi64vARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param len="COMPSIZE(program,location)"><ptype>GLint64</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetUniformi64vNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param len="COMPSIZE(program,location)"><ptype>GLint64EXT</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetUniformiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param len="COMPSIZE(program,location)"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetUniformivARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>programObj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>programObj</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param len="COMPSIZE(programObj,location)"><ptype>GLint</ptype> *<name>params</name></param>
             <alias name="glGetUniformiv"/>
         </command>
         <command>
             <proto>void <name>glGetUniformui64vARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param len="COMPSIZE(program,location)"><ptype>GLuint64</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetUniformui64vNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param len="COMPSIZE(program,location)"><ptype>GLuint64EXT</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetUniformuiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param len="COMPSIZE(program,location)"><ptype>GLuint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetUniformuivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param len="COMPSIZE(program,location)"><ptype>GLuint</ptype> *<name>params</name></param>
             <alias name="glGetUniformuiv"/>
@@ -20081,7 +15788,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glGetVariantBooleanvEXT</name></proto>
             <param><ptype>GLuint</ptype> <name>id</name></param>
             <param group="GetVariantValueEXT"><ptype>GLenum</ptype> <name>value</name></param>
-            <param group="Boolean" len="COMPSIZE(id)"><ptype>GLboolean</ptype> *<name>data</name></param>
+            <param len="COMPSIZE(id)"><ptype>GLboolean</ptype> *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glGetVariantFloatvEXT</name></proto>
@@ -20103,52 +15810,52 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto><ptype>GLint</ptype> <name>glGetVaryingLocationNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param len="COMPSIZE(name)">const <ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
             <proto>void <name>glGetVertexArrayIndexed64iv</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param group="VertexArrayPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint64</ptype> *<name>param</name></param>
         </command>
         <command>
             <proto>void <name>glGetVertexArrayIndexediv</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param group="VertexArrayPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> *<name>param</name></param>
         </command>
         <command>
             <proto>void <name>glGetVertexArrayIntegeri_vEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param group="VertexArrayPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> *<name>param</name></param>
         </command>
         <command>
             <proto>void <name>glGetVertexArrayIntegervEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param group="VertexArrayPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> *<name>param</name></param>
         </command>
         <command>
             <proto>void <name>glGetVertexArrayPointeri_vEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param group="VertexArrayPName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param>void **<name>param</name></param>
+            <param len="1">void **<name>param</name></param>
         </command>
         <command>
             <proto>void <name>glGetVertexArrayPointervEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param group="VertexArrayPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="1">void **<name>param</name></param>
         </command>
         <command>
             <proto>void <name>glGetVertexArrayiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param group="VertexArrayPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> *<name>param</name></param>
         </command>
@@ -20368,7 +16075,7 @@ typedef unsigned int GLhandleARB;
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param>void *<name>table</name></param>
+            <param len="bufSize">void *<name>table</name></param>
         </command>
         <command>
             <proto>void <name>glGetnColorTableARB</name></proto>
@@ -20383,7 +16090,7 @@ typedef unsigned int GLhandleARB;
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLint</ptype> <name>lod</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param>void *<name>pixels</name></param>
+            <param len="bufSize">void *<name>pixels</name></param>
         </command>
         <command>
             <proto>void <name>glGetnCompressedTexImageARB</name></proto>
@@ -20398,7 +16105,7 @@ typedef unsigned int GLhandleARB;
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param>void *<name>image</name></param>
+            <param len="bufSize">void *<name>image</name></param>
         </command>
         <command>
             <proto>void <name>glGetnConvolutionFilterARB</name></proto>
@@ -20410,17 +16117,17 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetnHistogram</name></proto>
-            <param group="HistogramTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="HistogramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLboolean</ptype> <name>reset</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param>void *<name>values</name></param>
+            <param len="bufSize">void *<name>values</name></param>
         </command>
         <command>
             <proto>void <name>glGetnHistogramARB</name></proto>
             <param group="HistogramTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>reset</name></param>
+            <param><ptype>GLboolean</ptype> <name>reset</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
@@ -20431,14 +16138,14 @@ typedef unsigned int GLhandleARB;
             <param group="MapTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="MapQuery"><ptype>GLenum</ptype> <name>query</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param><ptype>GLdouble</ptype> *<name>v</name></param>
+            <param len="COMPSIZE(bufSize)"><ptype>GLdouble</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glGetnMapdvARB</name></proto>
             <param group="MapTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="MapQuery"><ptype>GLenum</ptype> <name>query</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLdouble</ptype> *<name>v</name></param>
+            <param len="bufSize / 8"><ptype>GLdouble</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glGetnMapfv</name></proto>
@@ -20470,17 +16177,17 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetnMinmax</name></proto>
-            <param group="MinmaxTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="MinmaxTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLboolean</ptype> <name>reset</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param>void *<name>values</name></param>
+            <param len="bufSize">void *<name>values</name></param>
         </command>
         <command>
             <proto>void <name>glGetnMinmaxARB</name></proto>
             <param group="MinmaxTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>reset</name></param>
+            <param><ptype>GLboolean</ptype> <name>reset</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
@@ -20490,13 +16197,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glGetnPixelMapfv</name></proto>
             <param group="PixelMap"><ptype>GLenum</ptype> <name>map</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param><ptype>GLfloat</ptype> *<name>values</name></param>
+            <param len="COMPSIZE(bufSize)"><ptype>GLfloat</ptype> *<name>values</name></param>
         </command>
         <command>
             <proto>void <name>glGetnPixelMapfvARB</name></proto>
             <param group="PixelMap"><ptype>GLenum</ptype> <name>map</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLfloat</ptype> *<name>values</name></param>
+            <param len="bufSize / 4"><ptype>GLfloat</ptype> *<name>values</name></param>
         </command>
         <command>
             <proto>void <name>glGetnPixelMapuiv</name></proto>
@@ -20525,7 +16232,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glGetnPolygonStipple</name></proto>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param><ptype>GLubyte</ptype> *<name>pattern</name></param>
+            <param len="bufSize"><ptype>GLubyte</ptype> *<name>pattern</name></param>
         </command>
         <command>
             <proto>void <name>glGetnPolygonStippleARB</name></proto>
@@ -20534,14 +16241,14 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetnSeparableFilter</name></proto>
-            <param group="SeparableTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="SeparableTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>rowBufSize</name></param>
-            <param>void *<name>row</name></param>
+            <param len="rowBufSize">void *<name>row</name></param>
             <param><ptype>GLsizei</ptype> <name>columnBufSize</name></param>
-            <param>void *<name>column</name></param>
-            <param>void *<name>span</name></param>
+            <param len="columnBufSize">void *<name>column</name></param>
+            <param len="0">void *<name>span</name></param>
         </command>
         <command>
             <proto>void <name>glGetnSeparableFilterARB</name></proto>
@@ -20574,112 +16281,112 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glGetnUniformdv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLdouble</ptype> *<name>params</name></param>
+            <param len="bufSize / 8"><ptype>GLdouble</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetnUniformdvARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLdouble</ptype> *<name>params</name></param>
+            <param len="bufSize / 8"><ptype>GLdouble</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetnUniformfv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLfloat</ptype> *<name>params</name></param>
+            <param len="bufSize / 4"><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetnUniformfvARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLfloat</ptype> *<name>params</name></param>
+            <param len="bufSize / 4"><ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetnUniformfvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLfloat</ptype> *<name>params</name></param>
+            <param len="bufSize / 4"><ptype>GLfloat</ptype> *<name>params</name></param>
             <alias name="glGetnUniformfv"/>
         </command>
         <command>
             <proto>void <name>glGetnUniformfvKHR</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLfloat</ptype> *<name>params</name></param>
+            <param len="bufSize / 4"><ptype>GLfloat</ptype> *<name>params</name></param>
             <alias name="glGetnUniformfv"/>
         </command>
         <command>
             <proto>void <name>glGetnUniformi64vARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLint64</ptype> *<name>params</name></param>
+            <param len="bufSize / 8"><ptype>GLint64</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetnUniformiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLint</ptype> *<name>params</name></param>
+            <param len="bufSize / 4"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetnUniformivARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLint</ptype> *<name>params</name></param>
+            <param len="bufSize / 4"><ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetnUniformivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLint</ptype> *<name>params</name></param>
+            <param len="bufSize / 4"><ptype>GLint</ptype> *<name>params</name></param>
             <alias name="glGetnUniformiv"/>
         </command>
         <command>
             <proto>void <name>glGetnUniformivKHR</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLint</ptype> *<name>params</name></param>
+            <param len="bufSize / 4"><ptype>GLint</ptype> *<name>params</name></param>
             <alias name="glGetnUniformiv"/>
         </command>
         <command>
             <proto>void <name>glGetnUniformui64vARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLuint64</ptype> *<name>params</name></param>
+            <param len="bufSize / 8"><ptype>GLuint64</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetnUniformuiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLuint</ptype> *<name>params</name></param>
+            <param len="bufSize / 4"><ptype>GLuint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetnUniformuivARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLuint</ptype> *<name>params</name></param>
+            <param len="bufSize / 4"><ptype>GLuint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glGetnUniformuivKHR</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
-            <param len="bufSize"><ptype>GLuint</ptype> *<name>params</name></param>
+            <param len="bufSize / 4"><ptype>GLuint</ptype> *<name>params</name></param>
             <alias name="glGetnUniformuiv"/>
         </command>
         <command>
@@ -20723,14 +16430,14 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glHintPGI</name></proto>
             <param group="HintTargetPGI"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLint</ptype> <name>mode</name></param>
+            <param group="VertexHintsMaskPGI"><ptype>GLint</ptype> <name>mode</name></param>
         </command>
         <command>
             <proto>void <name>glHistogram</name></proto>
             <param group="HistogramTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>sink</name></param>
+            <param><ptype>GLboolean</ptype> <name>sink</name></param>
             <glx type="render" opcode="4110"/>
         </command>
         <command>
@@ -20738,14 +16445,14 @@ typedef unsigned int GLhandleARB;
             <param group="HistogramTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>sink</name></param>
+            <param><ptype>GLboolean</ptype> <name>sink</name></param>
             <alias name="glHistogram"/>
             <glx type="render" opcode="4110"/>
         </command>
         <command>
             <proto>void <name>glIglooInterfaceSGIX</name></proto>
-            <param group="IglooFunctionSelectSGIX"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="IglooParameterSGIX" len="COMPSIZE(pname)">const void *<name>params</name></param>
+            <param><ptype>GLenum</ptype> <name>pname</name></param>
+            <param len="COMPSIZE(pname)">const void *<name>params</name></param>
             <glx type="render" opcode="200"/>
         </command>
         <command>
@@ -20812,7 +16519,7 @@ typedef unsigned int GLhandleARB;
             <param>const void *<name>name</name></param>
         </command>
         <command>
-            <proto group="sync"><ptype>GLsync</ptype> <name>glImportSyncEXT</name></proto>
+            <proto class="sync"><ptype>GLsync</ptype> <name>glImportSyncEXT</name></proto>
             <param><ptype>GLenum</ptype> <name>external_sync_type</name></param>
             <param><ptype>GLintptr</ptype> <name>external_sync</name></param>
             <param><ptype>GLbitfield</ptype> <name>flags</name></param>
@@ -20825,16 +16532,16 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glIndexFuncEXT</name></proto>
             <param group="IndexFunctionEXT"><ptype>GLenum</ptype> <name>func</name></param>
-            <param group="ClampedFloat32"><ptype>GLclampf</ptype> <name>ref</name></param>
+            <param kind="ColorIndexValue"><ptype>GLclampf</ptype> <name>ref</name></param>
         </command>
         <command>
             <proto>void <name>glIndexMask</name></proto>
-            <param group="MaskedColorIndexValueI"><ptype>GLuint</ptype> <name>mask</name></param>
+            <param kind="ColorIndexMask"><ptype>GLuint</ptype> <name>mask</name></param>
             <glx type="render" opcode="136"/>
         </command>
         <command>
             <proto>void <name>glIndexMaterialEXT</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="IndexMaterialParameterEXT"><ptype>GLenum</ptype> <name>mode</name></param>
         </command>
         <command>
@@ -20859,52 +16566,52 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glIndexd</name></proto>
-            <param group="ColorIndexValueD"><ptype>GLdouble</ptype> <name>c</name></param>
+            <param kind="ColorIndexValue"><ptype>GLdouble</ptype> <name>c</name></param>
             <vecequiv name="glIndexdv"/>
         </command>
         <command>
             <proto>void <name>glIndexdv</name></proto>
-            <param group="ColorIndexValueD" len="1">const <ptype>GLdouble</ptype> *<name>c</name></param>
+            <param kind="ColorIndexValue" len="1">const <ptype>GLdouble</ptype> *<name>c</name></param>
             <glx type="render" opcode="24"/>
         </command>
         <command>
             <proto>void <name>glIndexf</name></proto>
-            <param group="ColorIndexValueF"><ptype>GLfloat</ptype> <name>c</name></param>
+            <param kind="ColorIndexValue"><ptype>GLfloat</ptype> <name>c</name></param>
             <vecequiv name="glIndexfv"/>
         </command>
         <command>
             <proto>void <name>glIndexfv</name></proto>
-            <param group="ColorIndexValueF" len="1">const <ptype>GLfloat</ptype> *<name>c</name></param>
+            <param kind="ColorIndexValue" len="1">const <ptype>GLfloat</ptype> *<name>c</name></param>
             <glx type="render" opcode="25"/>
         </command>
         <command>
             <proto>void <name>glIndexi</name></proto>
-            <param group="ColorIndexValueI"><ptype>GLint</ptype> <name>c</name></param>
+            <param kind="ColorIndexValue"><ptype>GLint</ptype> <name>c</name></param>
             <vecequiv name="glIndexiv"/>
         </command>
         <command>
             <proto>void <name>glIndexiv</name></proto>
-            <param group="ColorIndexValueI" len="1">const <ptype>GLint</ptype> *<name>c</name></param>
+            <param kind="ColorIndexValue" len="1">const <ptype>GLint</ptype> *<name>c</name></param>
             <glx type="render" opcode="26"/>
         </command>
         <command>
             <proto>void <name>glIndexs</name></proto>
-            <param group="ColorIndexValueS"><ptype>GLshort</ptype> <name>c</name></param>
+            <param kind="ColorIndexValue"><ptype>GLshort</ptype> <name>c</name></param>
             <vecequiv name="glIndexsv"/>
         </command>
         <command>
             <proto>void <name>glIndexsv</name></proto>
-            <param group="ColorIndexValueS" len="1">const <ptype>GLshort</ptype> *<name>c</name></param>
+            <param kind="ColorIndexValue" len="1">const <ptype>GLshort</ptype> *<name>c</name></param>
             <glx type="render" opcode="27"/>
         </command>
         <command>
             <proto>void <name>glIndexub</name></proto>
-            <param group="ColorIndexValueUB"><ptype>GLubyte</ptype> <name>c</name></param>
+            <param kind="ColorIndexValue"><ptype>GLubyte</ptype> <name>c</name></param>
             <vecequiv name="glIndexubv"/>
         </command>
         <command>
             <proto>void <name>glIndexubv</name></proto>
-            <param group="ColorIndexValueUB" len="1">const <ptype>GLubyte</ptype> *<name>c</name></param>
+            <param kind="ColorIndexValue" len="1">const <ptype>GLubyte</ptype> *<name>c</name></param>
             <glx type="render" opcode="194"/>
         </command>
         <command>
@@ -20944,38 +16651,38 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glInterpolatePathsNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>resultPath</name></param>
-            <param group="Path"><ptype>GLuint</ptype> <name>pathA</name></param>
-            <param group="Path"><ptype>GLuint</ptype> <name>pathB</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>resultPath</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>pathA</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>pathB</name></param>
             <param><ptype>GLfloat</ptype> <name>weight</name></param>
         </command>
         <command>
             <proto>void <name>glInvalidateBufferData</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
             <proto>void <name>glInvalidateBufferSubData</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>length</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>length</name></param>
         </command>
         <command>
             <proto>void <name>glInvalidateFramebuffer</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>numAttachments</name></param>
-            <param group="FramebufferAttachment" len="numAttachments">const <ptype>GLenum</ptype> *<name>attachments</name></param>
+            <param group="InvalidateFramebufferAttachment" len="numAttachments">const <ptype>GLenum</ptype> *<name>attachments</name></param>
         </command>
         <command>
             <proto>void <name>glInvalidateNamedFramebufferData</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param><ptype>GLsizei</ptype> <name>numAttachments</name></param>
-            <param group="FramebufferAttachment">const <ptype>GLenum</ptype> *<name>attachments</name></param>
+            <param group="FramebufferAttachment" len="numAttachments">const <ptype>GLenum</ptype> *<name>attachments</name></param>
         </command>
         <command>
             <proto>void <name>glInvalidateNamedFramebufferSubData</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param><ptype>GLsizei</ptype> <name>numAttachments</name></param>
-            <param group="FramebufferAttachment">const <ptype>GLenum</ptype> *<name>attachments</name></param>
+            <param group="FramebufferAttachment" len="numAttachments">const <ptype>GLenum</ptype> *<name>attachments</name></param>
             <param><ptype>GLint</ptype> <name>x</name></param>
             <param><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
@@ -20985,7 +16692,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glInvalidateSubFramebuffer</name></proto>
             <param group="FramebufferTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>numAttachments</name></param>
-            <param len="numAttachments" group="FramebufferAttachment">const <ptype>GLenum</ptype> *<name>attachments</name></param>
+            <param len="numAttachments" group="InvalidateFramebufferAttachment">const <ptype>GLenum</ptype> *<name>attachments</name></param>
             <param><ptype>GLint</ptype> <name>x</name></param>
             <param><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
@@ -20993,12 +16700,12 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glInvalidateTexImage</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
         </command>
         <command>
             <proto>void <name>glInvalidateTexSubImage</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLint</ptype> <name>yoffset</name></param>
@@ -21008,20 +16715,20 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsAsyncMarkerSGIX</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glIsAsyncMarkerSGIX</name></proto>
             <param><ptype>GLuint</ptype> <name>marker</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsBuffer</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsBuffer</name></proto>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsBufferARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsBufferARB</name></proto>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <alias name="glIsBuffer"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsBufferResidentNV</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glIsBufferResidentNV</name></proto>
             <param><ptype>GLenum</ptype> <name>target</name></param>
         </command>
         <command>
@@ -21029,184 +16736,184 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLuint</ptype> <name>list</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsEnabled</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glIsEnabled</name></proto>
             <param group="EnableCap"><ptype>GLenum</ptype> <name>cap</name></param>
             <glx type="single" opcode="140"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsEnabledIndexedEXT</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glIsEnabledIndexedEXT</name></proto>
             <param group="EnableCap"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <alias name="glIsEnabledi"/>
             <glx type="single" opcode="212"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsEnabledi</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glIsEnabledi</name></proto>
             <param group="EnableCap"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsEnablediEXT</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glIsEnablediEXT</name></proto>
             <param group="EnableCap"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <alias name="glIsEnabledi"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsEnablediNV</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glIsEnablediNV</name></proto>
             <param group="EnableCap"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <alias name="glIsEnabledi"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsEnablediOES</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glIsEnablediOES</name></proto>
             <param group="EnableCap"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <alias name="glIsEnabledi"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsFenceAPPLE</name></proto>
-            <param group="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsFenceAPPLE</name></proto>
+            <param kind="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsFenceNV</name></proto>
-            <param group="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsFenceNV</name></proto>
+            <param kind="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
             <glx type="vendor" opcode="1278"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsFramebuffer</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsFramebuffer</name></proto>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <glx type="vendor" opcode="1425"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsFramebufferEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsFramebufferEXT</name></proto>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <alias name="glIsFramebuffer"/>
             <glx type="vendor" opcode="1425"/>
         </command>
         <command>
             <proto><ptype>GLboolean</ptype> <name>glIsFramebufferOES</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
         </command>
         <command>
             <proto><ptype>GLboolean</ptype> <name>glIsImageHandleResidentARB</name></proto>
             <param><ptype>GLuint64</ptype> <name>handle</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsImageHandleResidentNV</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glIsImageHandleResidentNV</name></proto>
             <param><ptype>GLuint64</ptype> <name>handle</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsList</name></proto>
-            <param group="List"><ptype>GLuint</ptype> <name>list</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsList</name></proto>
+            <param class="display list"><ptype>GLuint</ptype> <name>list</name></param>
             <glx type="single" opcode="141"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsMemoryObjectEXT</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glIsMemoryObjectEXT</name></proto>
             <param><ptype>GLuint</ptype> <name>memoryObject</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsNameAMD</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glIsNameAMD</name></proto>
             <param><ptype>GLenum</ptype> <name>identifier</name></param>
             <param><ptype>GLuint</ptype> <name>name</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsNamedBufferResidentNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsNamedBufferResidentNV</name></proto>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsNamedStringARB</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glIsNamedStringARB</name></proto>
             <param><ptype>GLint</ptype> <name>namelen</name></param>
             <param len="namelen">const <ptype>GLchar</ptype> *<name>name</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsObjectBufferATI</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsObjectBufferATI</name></proto>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsOcclusionQueryNV</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glIsOcclusionQueryNV</name></proto>
             <param><ptype>GLuint</ptype> <name>id</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsPathNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsPathNV</name></proto>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsPointInFillPathNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
-            <param group="MaskedStencilValue"><ptype>GLuint</ptype> <name>mask</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsPointInFillPathNV</name></proto>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="StencilMask"><ptype>GLuint</ptype> <name>mask</name></param>
             <param><ptype>GLfloat</ptype> <name>x</name></param>
             <param><ptype>GLfloat</ptype> <name>y</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsPointInStrokePathNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsPointInStrokePathNV</name></proto>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param><ptype>GLfloat</ptype> <name>x</name></param>
             <param><ptype>GLfloat</ptype> <name>y</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsProgram</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsProgram</name></proto>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <glx type="single" opcode="197"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsProgramARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsProgramARB</name></proto>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <glx type="vendor" opcode="1304"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsProgramNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsProgramNV</name></proto>
+            <param class="program"><ptype>GLuint</ptype> <name>id</name></param>
             <alias name="glIsProgramARB"/>
             <glx type="vendor" opcode="1304"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsProgramPipeline</name></proto>
-            <param><ptype>GLuint</ptype> <name>pipeline</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsProgramPipeline</name></proto>
+            <param class="program pipeline"><ptype>GLuint</ptype> <name>pipeline</name></param>
         </command>
         <command>
             <proto><ptype>GLboolean</ptype> <name>glIsProgramPipelineEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>pipeline</name></param>
+            <param class="program pipeline"><ptype>GLuint</ptype> <name>pipeline</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsQuery</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsQuery</name></proto>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
             <glx type="single" opcode="163"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsQueryARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsQueryARB</name></proto>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
             <alias name="glIsQuery"/>
         </command>
         <command>
             <proto><ptype>GLboolean</ptype> <name>glIsQueryEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsRenderbuffer</name></proto>
-            <param><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsRenderbuffer</name></proto>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
             <glx type="vendor" opcode="1422"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsRenderbufferEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsRenderbufferEXT</name></proto>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
             <alias name="glIsRenderbuffer"/>
             <glx type="vendor" opcode="1422"/>
         </command>
         <command>
             <proto><ptype>GLboolean</ptype> <name>glIsRenderbufferOES</name></proto>
-            <param><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsSemaphoreEXT</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glIsSemaphoreEXT</name></proto>
             <param><ptype>GLuint</ptype> <name>semaphore</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsSampler</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsSampler</name></proto>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsShader</name></proto>
-            <param><ptype>GLuint</ptype> <name>shader</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsShader</name></proto>
+            <param class="shader"><ptype>GLuint</ptype> <name>shader</name></param>
             <glx type="single" opcode="196"/>
         </command>
         <command>
@@ -21214,22 +16921,22 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLuint</ptype> <name>state</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsSync</name></proto>
-            <param group="sync"><ptype>GLsync</ptype> <name>sync</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsSync</name></proto>
+            <param class="sync"><ptype>GLsync</ptype> <name>sync</name></param>
         </command>
         <command>
             <proto><ptype>GLboolean</ptype> <name>glIsSyncAPPLE</name></proto>
-            <param><ptype>GLsync</ptype> <name>sync</name></param>
+            <param class="sync"><ptype>GLsync</ptype> <name>sync</name></param>
             <alias name="glIsSync"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsTexture</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsTexture</name></proto>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <glx type="single" opcode="146"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsTextureEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsTextureEXT</name></proto>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <glx type="vendor" opcode="14"/>
         </command>
         <command>
@@ -21237,40 +16944,40 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLuint64</ptype> <name>handle</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsTextureHandleResidentNV</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glIsTextureHandleResidentNV</name></proto>
             <param><ptype>GLuint64</ptype> <name>handle</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsTransformFeedback</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsTransformFeedback</name></proto>
+            <param class="transform feedback"><ptype>GLuint</ptype> <name>id</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsTransformFeedbackNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsTransformFeedbackNV</name></proto>
+            <param class="transform feedback"><ptype>GLuint</ptype> <name>id</name></param>
             <alias name="glIsTransformFeedback"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsVariantEnabledEXT</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glIsVariantEnabledEXT</name></proto>
             <param><ptype>GLuint</ptype> <name>id</name></param>
             <param group="VariantCapEXT"><ptype>GLenum</ptype> <name>cap</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsVertexArray</name></proto>
-            <param><ptype>GLuint</ptype> <name>array</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsVertexArray</name></proto>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>array</name></param>
             <glx type="single" opcode="207"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsVertexArrayAPPLE</name></proto>
-            <param><ptype>GLuint</ptype> <name>array</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glIsVertexArrayAPPLE</name></proto>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>array</name></param>
             <alias name="glIsVertexArray"/>
         </command>
         <command>
             <proto><ptype>GLboolean</ptype> <name>glIsVertexArrayOES</name></proto>
-            <param><ptype>GLuint</ptype> <name>array</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>array</name></param>
             <alias name="glIsVertexArray"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glIsVertexAttribEnabledAPPLE</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glIsVertexAttribEnabledAPPLE</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLenum</ptype> <name>pname</name></param>
         </command>
@@ -21300,7 +17007,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glLGPUNamedBufferSubDataNVX</name></proto>
             <param><ptype>GLbitfield</ptype> <name>gpuMask</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
             <param><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param>const void *<name>data</name></param>
@@ -21315,7 +17022,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glLightEnviSGIX</name></proto>
             <param group="LightEnvParameterSGIX"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param group="LightEnvModeSGIX"><ptype>GLint</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glLightModelf</name></proto>
@@ -21365,28 +17072,28 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glLightf</name></proto>
             <param group="LightName"><ptype>GLenum</ptype> <name>light</name></param>
             <param group="LightParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
             <glx type="render" opcode="86"/>
         </command>
         <command>
             <proto>void <name>glLightfv</name></proto>
             <param group="LightName"><ptype>GLenum</ptype> <name>light</name></param>
             <param group="LightParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="render" opcode="87"/>
         </command>
         <command>
             <proto>void <name>glLighti</name></proto>
             <param group="LightName"><ptype>GLenum</ptype> <name>light</name></param>
             <param group="LightParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
             <glx type="render" opcode="88"/>
         </command>
         <command>
             <proto>void <name>glLightiv</name></proto>
             <param group="LightName"><ptype>GLenum</ptype> <name>light</name></param>
             <param group="LightParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
             <glx type="render" opcode="89"/>
         </command>
         <command>
@@ -21415,13 +17122,13 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glLineStipple</name></proto>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>factor</name></param>
-            <param group="LineStipple"><ptype>GLushort</ptype> <name>pattern</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>factor</name></param>
+            <param><ptype>GLushort</ptype> <name>pattern</name></param>
             <glx type="render" opcode="94"/>
         </command>
         <command>
             <proto>void <name>glLineWidth</name></proto>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>width</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>width</name></param>
             <glx type="render" opcode="95"/>
         </command>
         <command>
@@ -21434,54 +17141,54 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glLinkProgram</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
         </command>
         <command>
             <proto>void <name>glLinkProgramARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>programObj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>programObj</name></param>
             <alias name="glLinkProgram"/>
         </command>
         <command>
             <proto>void <name>glListBase</name></proto>
-            <param group="List"><ptype>GLuint</ptype> <name>base</name></param>
+            <param class="display list"><ptype>GLuint</ptype> <name>base</name></param>
             <glx type="render" opcode="3"/>
         </command>
         <command>
             <proto>void <name>glListDrawCommandsStatesClientNV</name></proto>
             <param><ptype>GLuint</ptype> <name>list</name></param>
             <param><ptype>GLuint</ptype> <name>segment</name></param>
-            <param>const void **<name>indirects</name></param>
-            <param>const <ptype>GLsizei</ptype> *<name>sizes</name></param>
-            <param>const <ptype>GLuint</ptype> *<name>states</name></param>
-            <param>const <ptype>GLuint</ptype> *<name>fbos</name></param>
+            <param len="count">const void **<name>indirects</name></param>
+            <param len="count">const <ptype>GLsizei</ptype> *<name>sizes</name></param>
+            <param len="count">const <ptype>GLuint</ptype> *<name>states</name></param>
+            <param len="count">const <ptype>GLuint</ptype> *<name>fbos</name></param>
             <param><ptype>GLuint</ptype> <name>count</name></param>
         </command>
         <command>
             <proto>void <name>glListParameterfSGIX</name></proto>
-            <param group="List"><ptype>GLuint</ptype> <name>list</name></param>
+            <param class="display list"><ptype>GLuint</ptype> <name>list</name></param>
             <param group="ListParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
             <glx type="render" opcode="2078"/>
         </command>
         <command>
             <proto>void <name>glListParameterfvSGIX</name></proto>
-            <param group="List"><ptype>GLuint</ptype> <name>list</name></param>
+            <param class="display list"><ptype>GLuint</ptype> <name>list</name></param>
             <param group="ListParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="render" opcode="2079"/>
         </command>
         <command>
             <proto>void <name>glListParameteriSGIX</name></proto>
-            <param group="List"><ptype>GLuint</ptype> <name>list</name></param>
+            <param class="display list"><ptype>GLuint</ptype> <name>list</name></param>
             <param group="ListParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
             <glx type="render" opcode="2080"/>
         </command>
         <command>
             <proto>void <name>glListParameterivSGIX</name></proto>
-            <param group="List"><ptype>GLuint</ptype> <name>list</name></param>
+            <param class="display list"><ptype>GLuint</ptype> <name>list</name></param>
             <param group="ListParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
             <glx type="render" opcode="2081"/>
         </command>
         <command>
@@ -21513,7 +17220,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glLoadName</name></proto>
-            <param group="SelectName"><ptype>GLuint</ptype> <name>name</name></param>
+            <param kind="SelectName"><ptype>GLuint</ptype> <name>name</name></param>
             <glx type="render" opcode="122"/>
         </command>
         <command>
@@ -21588,11 +17295,11 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glMakeNamedBufferNonResidentNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
             <proto>void <name>glMakeNamedBufferResidentNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLenum</ptype> <name>access</name></param>
         </command>
         <command>
@@ -21614,21 +17321,21 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glMap1d</name></proto>
             <param group="MapTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>u1</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>u2</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>u1</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>u2</name></param>
             <param><ptype>GLint</ptype> <name>stride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>order</name></param>
-            <param group="CoordD" len="COMPSIZE(target,stride,order)">const <ptype>GLdouble</ptype> *<name>points</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>order</name></param>
+            <param kind="Coord" len="COMPSIZE(target,stride,order)">const <ptype>GLdouble</ptype> *<name>points</name></param>
             <glx type="render" opcode="143"/>
         </command>
         <command>
             <proto>void <name>glMap1f</name></proto>
             <param group="MapTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>u1</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>u2</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>u1</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>u2</name></param>
             <param><ptype>GLint</ptype> <name>stride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>order</name></param>
-            <param group="CoordF" len="COMPSIZE(target,stride,order)">const <ptype>GLfloat</ptype> *<name>points</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>order</name></param>
+            <param kind="Coord" len="COMPSIZE(target,stride,order)">const <ptype>GLfloat</ptype> *<name>points</name></param>
             <glx type="render" opcode="144"/>
         </command>
         <command>
@@ -21643,29 +17350,29 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glMap2d</name></proto>
             <param group="MapTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>u1</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>u2</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>u1</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>u2</name></param>
             <param><ptype>GLint</ptype> <name>ustride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>uorder</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>v1</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>v2</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>uorder</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>v1</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>v2</name></param>
             <param><ptype>GLint</ptype> <name>vstride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>vorder</name></param>
-            <param group="CoordD" len="COMPSIZE(target,ustride,uorder,vstride,vorder)">const <ptype>GLdouble</ptype> *<name>points</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>vorder</name></param>
+            <param kind="Coord" len="COMPSIZE(target,ustride,uorder,vstride,vorder)">const <ptype>GLdouble</ptype> *<name>points</name></param>
             <glx type="render" opcode="145"/>
         </command>
         <command>
             <proto>void <name>glMap2f</name></proto>
             <param group="MapTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>u1</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>u2</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>u1</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>u2</name></param>
             <param><ptype>GLint</ptype> <name>ustride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>uorder</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>v1</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>v2</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>uorder</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>v1</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>v2</name></param>
             <param><ptype>GLint</ptype> <name>vstride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>vorder</name></param>
-            <param group="CoordF" len="COMPSIZE(target,ustride,uorder,vstride,vorder)">const <ptype>GLfloat</ptype> *<name>points</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>vorder</name></param>
+            <param kind="Coord" len="COMPSIZE(target,ustride,uorder,vstride,vorder)">const <ptype>GLfloat</ptype> *<name>points</name></param>
             <glx type="render" opcode="146"/>
         </command>
         <command>
@@ -21701,8 +17408,8 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void *<name>glMapBufferRange</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>length</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>length</name></param>
             <param group="MapBufferAccessMask"><ptype>GLbitfield</ptype> <name>access</name></param>
             <glx type="single" opcode="205"/>
         </command>
@@ -21721,23 +17428,23 @@ typedef unsigned int GLhandleARB;
             <param group="MapTypeNV"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>ustride</name></param>
             <param><ptype>GLsizei</ptype> <name>vstride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>uorder</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>vorder</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>packed</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>uorder</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>vorder</name></param>
+            <param><ptype>GLboolean</ptype> <name>packed</name></param>
             <param len="COMPSIZE(target,uorder,vorder)">const void *<name>points</name></param>
         </command>
         <command>
             <proto>void <name>glMapGrid1d</name></proto>
             <param><ptype>GLint</ptype> <name>un</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>u1</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>u2</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>u1</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>u2</name></param>
             <glx type="render" opcode="147"/>
         </command>
         <command>
             <proto>void <name>glMapGrid1f</name></proto>
             <param><ptype>GLint</ptype> <name>un</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>u1</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>u2</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>u1</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>u2</name></param>
             <glx type="render" opcode="148"/>
         </command>
         <command>
@@ -21749,21 +17456,21 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glMapGrid2d</name></proto>
             <param><ptype>GLint</ptype> <name>un</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>u1</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>u2</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>u1</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>u2</name></param>
             <param><ptype>GLint</ptype> <name>vn</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>v1</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>v2</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>v1</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>v2</name></param>
             <glx type="render" opcode="149"/>
         </command>
         <command>
             <proto>void <name>glMapGrid2f</name></proto>
             <param><ptype>GLint</ptype> <name>un</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>u1</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>u2</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>u1</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>u2</name></param>
             <param><ptype>GLint</ptype> <name>vn</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>v1</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>v2</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>v1</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>v2</name></param>
             <glx type="render" opcode="150"/>
         </command>
         <command>
@@ -21776,47 +17483,47 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void *<name>glMapNamedBuffer</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param group="BufferAccessARB"><ptype>GLenum</ptype> <name>access</name></param>
         </command>
         <command>
             <proto>void *<name>glMapNamedBufferEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param group="BufferAccessARB"><ptype>GLenum</ptype> <name>access</name></param>
         </command>
         <command>
             <proto>void *<name>glMapNamedBufferRange</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>length</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>length</name></param>
             <param group="MapBufferAccessMask"><ptype>GLbitfield</ptype> <name>access</name></param>
         </command>
         <command>
             <proto>void *<name>glMapNamedBufferRangeEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
             <param><ptype>GLsizeiptr</ptype> <name>length</name></param>
             <param group="MapBufferAccessMask"><ptype>GLbitfield</ptype> <name>access</name></param>
         </command>
         <command>
             <proto>void *<name>glMapObjectBufferATI</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
             <proto>void <name>glMapParameterfvNV</name></proto>
             <param group="EvalTargetNV"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="MapParameterNV"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(target,pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(target,pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glMapParameterivNV</name></proto>
             <param group="EvalTargetNV"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="MapParameterNV"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(target,pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(target,pname)">const <ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void *<name>glMapTexture2DINTEL</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLbitfield</ptype> <name>access</name></param>
             <param len="1"><ptype>GLint</ptype> *<name>stride</name></param>
@@ -21826,99 +17533,99 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glMapVertexAttrib1dAPPLE</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLuint</ptype> <name>size</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>u1</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>u2</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>u1</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>u2</name></param>
             <param><ptype>GLint</ptype> <name>stride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>order</name></param>
-            <param group="CoordD" len="COMPSIZE(size,stride,order)">const <ptype>GLdouble</ptype> *<name>points</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>order</name></param>
+            <param kind="Coord" len="COMPSIZE(size,stride,order)">const <ptype>GLdouble</ptype> *<name>points</name></param>
         </command>
         <command>
             <proto>void <name>glMapVertexAttrib1fAPPLE</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLuint</ptype> <name>size</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>u1</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>u2</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>u1</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>u2</name></param>
             <param><ptype>GLint</ptype> <name>stride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>order</name></param>
-            <param group="CoordF" len="COMPSIZE(size,stride,order)">const <ptype>GLfloat</ptype> *<name>points</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>order</name></param>
+            <param kind="Coord" len="COMPSIZE(size,stride,order)">const <ptype>GLfloat</ptype> *<name>points</name></param>
         </command>
         <command>
             <proto>void <name>glMapVertexAttrib2dAPPLE</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLuint</ptype> <name>size</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>u1</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>u2</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>u1</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>u2</name></param>
             <param><ptype>GLint</ptype> <name>ustride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>uorder</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>v1</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>v2</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>uorder</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>v1</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>v2</name></param>
             <param><ptype>GLint</ptype> <name>vstride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>vorder</name></param>
-            <param group="CoordD" len="COMPSIZE(size,ustride,uorder,vstride,vorder)">const <ptype>GLdouble</ptype> *<name>points</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>vorder</name></param>
+            <param kind="Coord" len="COMPSIZE(size,ustride,uorder,vstride,vorder)">const <ptype>GLdouble</ptype> *<name>points</name></param>
         </command>
         <command>
             <proto>void <name>glMapVertexAttrib2fAPPLE</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLuint</ptype> <name>size</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>u1</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>u2</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>u1</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>u2</name></param>
             <param><ptype>GLint</ptype> <name>ustride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>uorder</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>v1</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>v2</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>uorder</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>v1</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>v2</name></param>
             <param><ptype>GLint</ptype> <name>vstride</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>vorder</name></param>
-            <param group="CoordF" len="COMPSIZE(size,ustride,uorder,vstride,vorder)">const <ptype>GLfloat</ptype> *<name>points</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>vorder</name></param>
+            <param kind="Coord" len="COMPSIZE(size,ustride,uorder,vstride,vorder)">const <ptype>GLfloat</ptype> *<name>points</name></param>
         </command>
         <command>
             <proto>void <name>glMaterialf</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
             <glx type="render" opcode="96"/>
         </command>
         <command>
             <proto>void <name>glMaterialfv</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="render" opcode="97"/>
         </command>
         <command>
             <proto>void <name>glMateriali</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
             <glx type="render" opcode="98"/>
         </command>
         <command>
             <proto>void <name>glMaterialiv</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
             <glx type="render" opcode="99"/>
         </command>
         <command>
             <proto>void <name>glMaterialx</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLfixed</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glMaterialxOES</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLfixed</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glMaterialxv</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)">const <ptype>GLfixed</ptype> *<name>param</name></param>
         </command>
         <command>
             <proto>void <name>glMaterialxvOES</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)">const <ptype>GLfixed</ptype> *<name>param</name></param>
         </command>
@@ -22135,30 +17842,30 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glMinSampleShading</name></proto>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>value</name></param>
+            <param kind="Clamped[0; 1]"><ptype>GLfloat</ptype> <name>value</name></param>
         </command>
         <command>
             <proto>void <name>glMinSampleShadingARB</name></proto>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>value</name></param>
+            <param kind="Clamped[0; 1]"><ptype>GLfloat</ptype> <name>value</name></param>
             <alias name="glMinSampleShading"/>
         </command>
         <command>
             <proto>void <name>glMinSampleShadingOES</name></proto>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>value</name></param>
+            <param kind="Clamped[0; 1]"><ptype>GLfloat</ptype> <name>value</name></param>
             <alias name="glMinSampleShading"/>
         </command>
         <command>
             <proto>void <name>glMinmax</name></proto>
             <param group="MinmaxTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>sink</name></param>
+            <param><ptype>GLboolean</ptype> <name>sink</name></param>
             <glx type="render" opcode="4111"/>
         </command>
         <command>
             <proto>void <name>glMinmaxEXT</name></proto>
             <param group="MinmaxTargetEXT"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>sink</name></param>
+            <param><ptype>GLboolean</ptype> <name>sink</name></param>
             <alias name="glMinmax"/>
             <glx type="render" opcode="4111"/>
         </command>
@@ -22205,15 +17912,15 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glMultiDrawArrays</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
-            <param len="COMPSIZE(count)">const <ptype>GLint</ptype> *<name>first</name></param>
-            <param len="COMPSIZE(drawcount)">const <ptype>GLsizei</ptype> *<name>count</name></param>
+            <param len="drawcount">const <ptype>GLint</ptype> *<name>first</name></param>
+            <param len="drawcount">const <ptype>GLsizei</ptype> *<name>count</name></param>
             <param><ptype>GLsizei</ptype> <name>drawcount</name></param>
         </command>
         <command>
             <proto>void <name>glMultiDrawArraysEXT</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
-            <param len="COMPSIZE(primcount)">const <ptype>GLint</ptype> *<name>first</name></param>
-            <param len="COMPSIZE(primcount)">const <ptype>GLsizei</ptype> *<name>count</name></param>
+            <param len="primcount">const <ptype>GLint</ptype> *<name>first</name></param>
+            <param len="primcount">const <ptype>GLsizei</ptype> *<name>count</name></param>
             <param><ptype>GLsizei</ptype> <name>primcount</name></param>
             <alias name="glMultiDrawArrays"/>
         </command>
@@ -22227,7 +17934,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glMultiDrawArraysIndirectAMD</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
-            <param>const void *<name>indirect</name></param>
+            <param len="COMPSIZE(primcount,stride)">const void *<name>indirect</name></param>
             <param><ptype>GLsizei</ptype> <name>primcount</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
             <alias name="glMultiDrawArraysIndirect"/>
@@ -22284,36 +17991,36 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glMultiDrawElements</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
-            <param len="COMPSIZE(drawcount)">const <ptype>GLsizei</ptype> *<name>count</name></param>
+            <param len="drawcount">const <ptype>GLsizei</ptype> *<name>count</name></param>
             <param group="DrawElementsType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param len="COMPSIZE(drawcount)">const void *const*<name>indices</name></param>
+            <param len="drawcount">const void *const*<name>indices</name></param>
             <param><ptype>GLsizei</ptype> <name>drawcount</name></param>
         </command>
         <command>
             <proto>void <name>glMultiDrawElementsBaseVertex</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
-            <param len="COMPSIZE(drawcount)">const <ptype>GLsizei</ptype> *<name>count</name></param>
+            <param len="drawcount">const <ptype>GLsizei</ptype> *<name>count</name></param>
             <param group="DrawElementsType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param len="COMPSIZE(drawcount)">const void *const*<name>indices</name></param>
+            <param len="drawcount">const void *const*<name>indices</name></param>
             <param><ptype>GLsizei</ptype> <name>drawcount</name></param>
-            <param len="COMPSIZE(drawcount)">const <ptype>GLint</ptype> *<name>basevertex</name></param>
+            <param len="drawcount">const <ptype>GLint</ptype> *<name>basevertex</name></param>
         </command>
         <command>
             <proto>void <name>glMultiDrawElementsBaseVertexEXT</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
-            <param len="COMPSIZE(drawcount)">const <ptype>GLsizei</ptype> *<name>count</name></param>
+            <param len="drawcount">const <ptype>GLsizei</ptype> *<name>count</name></param>
             <param group="DrawElementsType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param len="COMPSIZE(drawcount)">const void *const*<name>indices</name></param>
-            <param><ptype>GLsizei</ptype> <name>primcount</name></param>
-            <param len="COMPSIZE(drawcount)">const <ptype>GLint</ptype> *<name>basevertex</name></param>
+            <param len="drawcount">const void *const*<name>indices</name></param>
+            <param><ptype>GLsizei</ptype> <name>drawcount</name></param>
+            <param len="drawcount">const <ptype>GLint</ptype> *<name>basevertex</name></param>
             <alias name="glMultiDrawElementsBaseVertex"/>
         </command>
         <command>
             <proto>void <name>glMultiDrawElementsEXT</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
-            <param len="COMPSIZE(primcount)">const <ptype>GLsizei</ptype> *<name>count</name></param>
+            <param len="primcount">const <ptype>GLsizei</ptype> *<name>count</name></param>
             <param group="DrawElementsType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param len="COMPSIZE(primcount)">const void *const*<name>indices</name></param>
+            <param len="primcount">const void *const*<name>indices</name></param>
             <param><ptype>GLsizei</ptype> <name>primcount</name></param>
             <alias name="glMultiDrawElements"/>
         </command>
@@ -22329,7 +18036,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glMultiDrawElementsIndirectAMD</name></proto>
             <param group="PrimitiveType"><ptype>GLenum</ptype> <name>mode</name></param>
             <param group="DrawElementsType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param>const void *<name>indirect</name></param>
+            <param len="COMPSIZE(primcount,stride)">const void *<name>indirect</name></param>
             <param><ptype>GLsizei</ptype> <name>primcount</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
             <alias name="glMultiDrawElementsIndirect"/>
@@ -22405,18 +18112,18 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glMultiModeDrawArraysIBM</name></proto>
-            <param group="PrimitiveType" len="COMPSIZE(primcount)">const <ptype>GLenum</ptype> *<name>mode</name></param>
-            <param len="COMPSIZE(primcount)">const <ptype>GLint</ptype> *<name>first</name></param>
-            <param len="COMPSIZE(primcount)">const <ptype>GLsizei</ptype> *<name>count</name></param>
+            <param group="PrimitiveType" len="COMPSIZE(primcount,modestride)">const <ptype>GLenum</ptype> *<name>mode</name></param>
+            <param len="primcount">const <ptype>GLint</ptype> *<name>first</name></param>
+            <param len="primcount">const <ptype>GLsizei</ptype> *<name>count</name></param>
             <param><ptype>GLsizei</ptype> <name>primcount</name></param>
             <param><ptype>GLint</ptype> <name>modestride</name></param>
         </command>
         <command>
             <proto>void <name>glMultiModeDrawElementsIBM</name></proto>
-            <param group="PrimitiveType" len="COMPSIZE(primcount)">const <ptype>GLenum</ptype> *<name>mode</name></param>
-            <param len="COMPSIZE(primcount)">const <ptype>GLsizei</ptype> *<name>count</name></param>
+            <param group="PrimitiveType" len="COMPSIZE(primcount,modestride)">const <ptype>GLenum</ptype> *<name>mode</name></param>
+            <param len="primcount">const <ptype>GLsizei</ptype> *<name>count</name></param>
             <param group="DrawElementsType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param len="COMPSIZE(primcount)">const void *const*<name>indices</name></param>
+            <param len="primcount">const void *const*<name>indices</name></param>
             <param><ptype>GLsizei</ptype> <name>primcount</name></param>
             <param><ptype>GLint</ptype> <name>modestride</name></param>
         </command>
@@ -22424,8 +18131,8 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glMultiTexBufferEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1bOES</name></proto>
@@ -22440,116 +18147,116 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glMultiTexCoord1d</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>s</name></param>
             <vecequiv name="glMultiTexCoord1dv"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1dARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>s</name></param>
             <vecequiv name="glMultiTexCoord1dv"/>
             <alias name="glMultiTexCoord1d"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1dv</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD" len="1">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="1">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="198"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1dvARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD" len="1">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="1">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <alias name="glMultiTexCoord1dv"/>
             <glx type="render" opcode="198"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1f</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>s</name></param>
             <vecequiv name="glMultiTexCoord1fv"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1fARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>s</name></param>
             <vecequiv name="glMultiTexCoord1fv"/>
             <alias name="glMultiTexCoord1f"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1fv</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF" len="1">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="1">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="199"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1fvARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF" len="1">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="1">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <alias name="glMultiTexCoord1fv"/>
             <glx type="render" opcode="199"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1hNV</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>s</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>s</name></param>
             <vecequiv name="glMultiTexCoord1hvNV"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1hvNV</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="Half16NV" len="1">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="1">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4250"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1i</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>s</name></param>
             <vecequiv name="glMultiTexCoord1iv"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1iARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>s</name></param>
             <vecequiv name="glMultiTexCoord1iv"/>
             <alias name="glMultiTexCoord1i"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1iv</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordI" len="1">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="1">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="200"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1ivARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordI" len="1">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="1">const <ptype>GLint</ptype> *<name>v</name></param>
             <alias name="glMultiTexCoord1iv"/>
             <glx type="render" opcode="200"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1s</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>s</name></param>
             <vecequiv name="glMultiTexCoord1sv"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1sARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>s</name></param>
             <vecequiv name="glMultiTexCoord1sv"/>
             <alias name="glMultiTexCoord1s"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1sv</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordS" len="1">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="1">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="201"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord1svARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordS" len="1">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="1">const <ptype>GLshort</ptype> *<name>v</name></param>
             <alias name="glMultiTexCoord1sv"/>
             <glx type="render" opcode="201"/>
         </command>
@@ -22577,125 +18284,125 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glMultiTexCoord2d</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>s</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>t</name></param>
             <vecequiv name="glMultiTexCoord2dv"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord2dARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>s</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>t</name></param>
             <vecequiv name="glMultiTexCoord2dv"/>
             <alias name="glMultiTexCoord2d"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord2dv</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD" len="2">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="202"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord2dvARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD" len="2">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <alias name="glMultiTexCoord2dv"/>
             <glx type="render" opcode="202"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord2f</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>s</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>t</name></param>
             <vecequiv name="glMultiTexCoord2fv"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord2fARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>s</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>t</name></param>
             <vecequiv name="glMultiTexCoord2fv"/>
             <alias name="glMultiTexCoord2f"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord2fv</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF" len="2">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="203"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord2fvARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF" len="2">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <alias name="glMultiTexCoord2fv"/>
             <glx type="render" opcode="203"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord2hNV</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>s</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>t</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>s</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>t</name></param>
             <vecequiv name="glMultiTexCoord2hvNV"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord2hvNV</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="Half16NV" len="2">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="2">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4251"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord2i</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>s</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>t</name></param>
             <vecequiv name="glMultiTexCoord2iv"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord2iARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>s</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>t</name></param>
             <vecequiv name="glMultiTexCoord2iv"/>
             <alias name="glMultiTexCoord2i"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord2iv</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordI" len="2">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="204"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord2ivARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordI" len="2">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLint</ptype> *<name>v</name></param>
             <alias name="glMultiTexCoord2iv"/>
             <glx type="render" opcode="204"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord2s</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>s</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>t</name></param>
             <vecequiv name="glMultiTexCoord2sv"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord2sARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>s</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>t</name></param>
             <vecequiv name="glMultiTexCoord2sv"/>
             <alias name="glMultiTexCoord2s"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord2sv</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordS" len="2">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="205"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord2svARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordS" len="2">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLshort</ptype> *<name>v</name></param>
             <alias name="glMultiTexCoord2sv"/>
             <glx type="render" opcode="205"/>
         </command>
@@ -22725,134 +18432,134 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glMultiTexCoord3d</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>s</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>t</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>r</name></param>
             <vecequiv name="glMultiTexCoord3dv"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord3dARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>s</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>t</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>r</name></param>
             <vecequiv name="glMultiTexCoord3dv"/>
             <alias name="glMultiTexCoord3d"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord3dv</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="206"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord3dvARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <alias name="glMultiTexCoord3dv"/>
             <glx type="render" opcode="206"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord3f</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>s</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>t</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>r</name></param>
             <vecequiv name="glMultiTexCoord3fv"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord3fARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>s</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>t</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>r</name></param>
             <vecequiv name="glMultiTexCoord3fv"/>
             <alias name="glMultiTexCoord3f"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord3fv</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="207"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord3fvARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <alias name="glMultiTexCoord3fv"/>
             <glx type="render" opcode="207"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord3hNV</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>s</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>t</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>r</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>s</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>t</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>r</name></param>
             <vecequiv name="glMultiTexCoord3hvNV"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord3hvNV</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="Half16NV" len="3">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="3">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4252"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord3i</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>s</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>t</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>r</name></param>
             <vecequiv name="glMultiTexCoord3iv"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord3iARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>s</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>t</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>r</name></param>
             <vecequiv name="glMultiTexCoord3iv"/>
             <alias name="glMultiTexCoord3i"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord3iv</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordI" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="208"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord3ivARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordI" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
             <alias name="glMultiTexCoord3iv"/>
             <glx type="render" opcode="208"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord3s</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>s</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>t</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>r</name></param>
             <vecequiv name="glMultiTexCoord3sv"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord3sARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>s</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>t</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>r</name></param>
             <vecequiv name="glMultiTexCoord3sv"/>
             <alias name="glMultiTexCoord3s"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord3sv</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordS" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="209"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord3svARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordS" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
             <alias name="glMultiTexCoord3sv"/>
             <glx type="render" opcode="209"/>
         </command>
@@ -22884,143 +18591,143 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glMultiTexCoord4d</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>s</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>t</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>r</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>q</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>q</name></param>
             <vecequiv name="glMultiTexCoord4dv"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord4dARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>s</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>t</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>r</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>q</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>q</name></param>
             <vecequiv name="glMultiTexCoord4dv"/>
             <alias name="glMultiTexCoord4d"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord4dv</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD" len="4">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="210"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord4dvARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordD" len="4">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <alias name="glMultiTexCoord4dv"/>
             <glx type="render" opcode="210"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord4f</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>s</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>t</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>r</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>q</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>q</name></param>
             <vecequiv name="glMultiTexCoord4fv"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord4fARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>s</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>t</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>r</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>q</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>q</name></param>
             <vecequiv name="glMultiTexCoord4fv"/>
             <alias name="glMultiTexCoord4f"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord4fv</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF" len="4">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="211"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord4fvARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordF" len="4">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <alias name="glMultiTexCoord4fv"/>
             <glx type="render" opcode="211"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord4hNV</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>s</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>t</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>r</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>q</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>s</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>t</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>r</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>q</name></param>
             <vecequiv name="glMultiTexCoord4hvNV"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord4hvNV</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="Half16NV" len="4">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="4">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4253"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord4i</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>s</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>t</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>r</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>q</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>q</name></param>
             <vecequiv name="glMultiTexCoord4iv"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord4iARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>s</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>t</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>r</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>q</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>q</name></param>
             <vecequiv name="glMultiTexCoord4iv"/>
             <alias name="glMultiTexCoord4i"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord4iv</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordI" len="4">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="212"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord4ivARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordI" len="4">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLint</ptype> *<name>v</name></param>
             <alias name="glMultiTexCoord4iv"/>
             <glx type="render" opcode="212"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord4s</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>s</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>t</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>r</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>q</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>q</name></param>
             <vecequiv name="glMultiTexCoord4sv"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord4sARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>s</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>t</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>r</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>q</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>q</name></param>
             <vecequiv name="glMultiTexCoord4sv"/>
             <alias name="glMultiTexCoord4s"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord4sv</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordS" len="4">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="213"/>
         </command>
         <command>
             <proto>void <name>glMultiTexCoord4svARB</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CoordS" len="4">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLshort</ptype> *<name>v</name></param>
             <alias name="glMultiTexCoord4sv"/>
             <glx type="render" opcode="213"/>
         </command>
@@ -23106,7 +18813,7 @@ typedef unsigned int GLhandleARB;
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureEnvTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureEnvParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
             <vecequiv name="glMultiTexEnvfvEXT"/>
         </command>
         <command>
@@ -23114,14 +18821,14 @@ typedef unsigned int GLhandleARB;
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureEnvTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureEnvParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glMultiTexEnviEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureEnvTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureEnvParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
             <vecequiv name="glMultiTexEnvivEXT"/>
         </command>
         <command>
@@ -23129,7 +18836,7 @@ typedef unsigned int GLhandleARB;
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureEnvTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureEnvParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glMultiTexGendEXT</name></proto>
@@ -23151,7 +18858,7 @@ typedef unsigned int GLhandleARB;
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureCoordName"><ptype>GLenum</ptype> <name>coord</name></param>
             <param group="TextureGenParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
             <vecequiv name="glMultiTexGenfvEXT"/>
         </command>
         <command>
@@ -23159,14 +18866,14 @@ typedef unsigned int GLhandleARB;
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureCoordName"><ptype>GLenum</ptype> <name>coord</name></param>
             <param group="TextureGenParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glMultiTexGeniEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureCoordName"><ptype>GLenum</ptype> <name>coord</name></param>
             <param group="TextureGenParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
             <vecequiv name="glMultiTexGenivEXT"/>
         </command>
         <command>
@@ -23174,16 +18881,16 @@ typedef unsigned int GLhandleARB;
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureCoordName"><ptype>GLenum</ptype> <name>coord</name></param>
             <param group="TextureGenParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glMultiTexImage1DEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLint</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(format,type,width)">const void *<name>pixels</name></param>
@@ -23192,11 +18899,11 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glMultiTexImage2DEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLint</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(format,type,width,height)">const void *<name>pixels</name></param>
@@ -23205,12 +18912,12 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glMultiTexImage3DEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLint</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(format,type,width,height,depth)">const void *<name>pixels</name></param>
@@ -23220,7 +18927,7 @@ typedef unsigned int GLhandleARB;
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glMultiTexParameterIuivEXT</name></proto>
@@ -23234,7 +18941,7 @@ typedef unsigned int GLhandleARB;
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
             <vecequiv name="glMultiTexParameterfvEXT"/>
         </command>
         <command>
@@ -23242,14 +18949,14 @@ typedef unsigned int GLhandleARB;
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glMultiTexParameteriEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
             <vecequiv name="glMultiTexParameterivEXT"/>
         </command>
         <command>
@@ -23257,20 +18964,20 @@ typedef unsigned int GLhandleARB;
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glMultiTexRenderbufferEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
         </command>
         <command>
             <proto>void <name>glMultiTexSubImage1DEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
@@ -23280,9 +18987,9 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glMultiTexSubImage2DEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
@@ -23293,10 +19000,10 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glMultiTexSubImage3DEXT</name></proto>
             <param group="TextureUnit"><ptype>GLenum</ptype> <name>texunit</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
@@ -23325,7 +19032,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glMulticastBufferSubDataNV</name></proto>
             <param><ptype>GLbitfield</ptype> <name>gpuMask</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
             <param><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param>const void *<name>data</name></param>
@@ -23334,8 +19041,8 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glMulticastCopyBufferSubDataNV</name></proto>
             <param><ptype>GLuint</ptype> <name>readGpu</name></param>
             <param><ptype>GLbitfield</ptype> <name>writeGpuMask</name></param>
-            <param><ptype>GLuint</ptype> <name>readBuffer</name></param>
-            <param><ptype>GLuint</ptype> <name>writeBuffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>readBuffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>writeBuffer</name></param>
             <param><ptype>GLintptr</ptype> <name>readOffset</name></param>
             <param><ptype>GLintptr</ptype> <name>writeOffset</name></param>
             <param><ptype>GLsizeiptr</ptype> <name>size</name></param>
@@ -23363,7 +19070,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glMulticastFramebufferSampleLocationsfvNV</name></proto>
             <param><ptype>GLuint</ptype> <name>gpu</name></param>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param><ptype>GLuint</ptype> <name>start</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param>const <ptype>GLfloat</ptype> *<name>v</name></param>
@@ -23424,48 +19131,57 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glNamedBufferAttachMemoryNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLuint</ptype> <name>memory</name></param>
             <param><ptype>GLuint64</ptype> <name>offset</name></param>
         </command>
         <command>
             <proto>void <name>glNamedBufferData</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
-            <param>const void *<name>data</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param len="size">const void *<name>data</name></param>
             <param group="VertexBufferObjectUsage"><ptype>GLenum</ptype> <name>usage</name></param>
         </command>
         <command>
             <proto>void <name>glNamedBufferDataEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param len="COMPSIZE(size)">const void *<name>data</name></param>
             <param group="VertexBufferObjectUsage"><ptype>GLenum</ptype> <name>usage</name></param>
         </command>
         <command>
             <proto>void <name>glNamedBufferPageCommitmentARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
             <param><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param><ptype>GLboolean</ptype> <name>commit</name></param>
         </command>
         <command>
             <proto>void <name>glNamedBufferPageCommitmentEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param><ptype>GLboolean</ptype> <name>commit</name></param>
+        </command>
+        <command>
+            <proto>void <name>glNamedBufferPageCommitmentMemNV</name></proto>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
             <param><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param><ptype>GLuint</ptype> <name>memory</name></param>
+            <param><ptype>GLuint64</ptype> <name>memOffset</name></param>
             <param><ptype>GLboolean</ptype> <name>commit</name></param>
         </command>
         <command>
             <proto>void <name>glNamedBufferStorage</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param len="size">const void *<name>data</name></param>
             <param group="BufferStorageMask"><ptype>GLbitfield</ptype> <name>flags</name></param>
         </command>
         <command>
             <proto>void <name>glNamedBufferStorageExternalEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
             <param><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param><ptype>GLeglClientBufferEXT</ptype> <name>clientBuffer</name></param>
@@ -23473,171 +19189,171 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glNamedBufferStorageEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param len="size">const void *<name>data</name></param>
             <param group="BufferStorageMask"><ptype>GLbitfield</ptype> <name>flags</name></param>
             <alias name="glNamedBufferStorage"/>
         </command>
         <command>
             <proto>void <name>glNamedBufferStorageMemEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param><ptype>GLuint</ptype> <name>memory</name></param>
             <param><ptype>GLuint64</ptype> <name>offset</name></param>
         </command>
         <command>
             <proto>void <name>glNamedBufferSubData</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
-            <param len="COMPSIZE(size)">const void *<name>data</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param len="size">const void *<name>data</name></param>
         </command>
         <command>
             <proto>void <name>glNamedBufferSubDataEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <param len="COMPSIZE(size)">const void *<name>data</name></param>
             <alias name="glNamedBufferSubData"/>
         </command>
         <command>
             <proto>void <name>glNamedCopyBufferSubDataEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>readBuffer</name></param>
-            <param><ptype>GLuint</ptype> <name>writeBuffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>readBuffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>writeBuffer</name></param>
             <param><ptype>GLintptr</ptype> <name>readOffset</name></param>
             <param><ptype>GLintptr</ptype> <name>writeOffset</name></param>
             <param><ptype>GLsizeiptr</ptype> <name>size</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferDrawBuffer</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="ColorBuffer"><ptype>GLenum</ptype> <name>buf</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferDrawBuffers</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param group="ColorBuffer">const <ptype>GLenum</ptype> *<name>bufs</name></param>
+            <param group="ColorBuffer" len="n">const <ptype>GLenum</ptype> *<name>bufs</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferParameteri</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="FramebufferParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferParameteriEXT</name></proto>
-            <param group="Framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="FramebufferParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferReadBuffer</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="ColorBuffer"><ptype>GLenum</ptype> <name>src</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferRenderbuffer</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="RenderbufferTarget"><ptype>GLenum</ptype> <name>renderbuffertarget</name></param>
-            <param><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferRenderbufferEXT</name></proto>
-            <param group="Framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="RenderbufferTarget"><ptype>GLenum</ptype> <name>renderbuffertarget</name></param>
-            <param group="Renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferSampleLocationsfvARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param><ptype>GLuint</ptype> <name>start</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param>const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferSampleLocationsfvNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param><ptype>GLuint</ptype> <name>start</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param>const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferTexture</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferSamplePositionsfvAMD</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param><ptype>GLuint</ptype> <name>numsamples</name></param>
             <param><ptype>GLuint</ptype> <name>pixelindex</name></param>
             <param>const <ptype>GLfloat</ptype> *<name>values</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferTexture1DEXT</name></proto>
-            <param group="Framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>textarget</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferTexture2DEXT</name></proto>
-            <param group="Framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>textarget</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferTexture3DEXT</name></proto>
-            <param group="Framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>textarget</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferTextureEXT</name></proto>
-            <param group="Framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferTextureFaceEXT</name></proto>
-            <param group="Framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>face</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferTextureLayer</name></proto>
-            <param><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>layer</name></param>
         </command>
         <command>
             <proto>void <name>glNamedFramebufferTextureLayerEXT</name></proto>
-            <param group="Framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
+            <param class="framebuffer"><ptype>GLuint</ptype> <name>framebuffer</name></param>
             <param group="FramebufferAttachment"><ptype>GLenum</ptype> <name>attachment</name></param>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>layer</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>layer</name></param>
         </command>
         <command>
             <proto>void <name>glNamedProgramLocalParameter4dEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLdouble</ptype> <name>x</name></param>
@@ -23648,14 +19364,14 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glNamedProgramLocalParameter4dvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="4">const <ptype>GLdouble</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glNamedProgramLocalParameter4fEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLfloat</ptype> <name>x</name></param>
@@ -23666,14 +19382,14 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glNamedProgramLocalParameter4fvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="4">const <ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glNamedProgramLocalParameterI4iEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLint</ptype> <name>x</name></param>
@@ -23684,14 +19400,14 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glNamedProgramLocalParameterI4ivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="4">const <ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glNamedProgramLocalParameterI4uiEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLuint</ptype> <name>x</name></param>
@@ -23702,14 +19418,14 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glNamedProgramLocalParameterI4uivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="4">const <ptype>GLuint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glNamedProgramLocalParameters4fvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
@@ -23717,7 +19433,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glNamedProgramLocalParametersI4ivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
@@ -23725,7 +19441,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glNamedProgramLocalParametersI4uivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
@@ -23733,7 +19449,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glNamedProgramStringEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="ProgramFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>len</name></param>
@@ -23741,21 +19457,21 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glNamedRenderbufferStorage</name></proto>
-            <param><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
         </command>
         <command>
             <proto>void <name>glNamedRenderbufferStorageEXT</name></proto>
-            <param group="Renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
         </command>
         <command>
             <proto>void <name>glNamedRenderbufferStorageMultisample</name></proto>
-            <param><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
@@ -23763,7 +19479,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glNamedRenderbufferStorageMultisampleAdvancedAMD</name></proto>
-            <param group="Renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
             <param><ptype>GLsizei</ptype> <name>storageSamples</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
@@ -23772,7 +19488,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glNamedRenderbufferStorageMultisampleCoverageEXT</name></proto>
-            <param group="Renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
             <param><ptype>GLsizei</ptype> <name>coverageSamples</name></param>
             <param><ptype>GLsizei</ptype> <name>colorSamples</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
@@ -23781,7 +19497,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glNamedRenderbufferStorageMultisampleEXT</name></proto>
-            <param group="Renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
@@ -23797,7 +19513,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glNewList</name></proto>
-            <param group="List"><ptype>GLuint</ptype> <name>list</name></param>
+            <param class="display list"><ptype>GLuint</ptype> <name>list</name></param>
             <param group="ListMode"><ptype>GLenum</ptype> <name>mode</name></param>
             <glx type="single" opcode="101"/>
         </command>
@@ -23821,21 +19537,21 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glNormal3d</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>nx</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>ny</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>nz</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>nx</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>ny</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>nz</name></param>
             <vecequiv name="glNormal3dv"/>
         </command>
         <command>
             <proto>void <name>glNormal3dv</name></proto>
-            <param group="CoordD" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="29"/>
         </command>
         <command>
             <proto>void <name>glNormal3f</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>nx</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>ny</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>nz</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>nx</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>ny</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>nz</name></param>
             <vecequiv name="glNormal3fv"/>
         </command>
         <command>
@@ -23854,19 +19570,19 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glNormal3fv</name></proto>
-            <param group="CoordF" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="30"/>
         </command>
         <command>
             <proto>void <name>glNormal3hNV</name></proto>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>nx</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>ny</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>nz</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>nx</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>ny</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>nz</name></param>
             <vecequiv name="glNormal3hvNV"/>
         </command>
         <command>
             <proto>void <name>glNormal3hvNV</name></proto>
-            <param group="Half16NV" len="3">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="3">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4243"/>
         </command>
         <command>
@@ -24108,13 +19824,13 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glPassTexCoordATI</name></proto>
-            <param><ptype>GLuint</ptype> <name>dst</name></param>
-            <param><ptype>GLuint</ptype> <name>coord</name></param>
+            <param group="FragmentShaderRegATI"><ptype>GLuint</ptype> <name>dst</name></param>
+            <param group="FragmentShaderTextureSourceATI"><ptype>GLuint</ptype> <name>coord</name></param>
             <param group="SwizzleOpATI"><ptype>GLenum</ptype> <name>swizzle</name></param>
         </command>
         <command>
             <proto>void <name>glPassThrough</name></proto>
-            <param group="FeedbackElement"><ptype>GLfloat</ptype> <name>token</name></param>
+            <param kind="FeedbackElement"><ptype>GLfloat</ptype> <name>token</name></param>
             <glx type="render" opcode="123"/>
         </command>
         <command>
@@ -24152,16 +19868,16 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glPathCommandsNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param><ptype>GLsizei</ptype> <name>numCommands</name></param>
-            <param group="PathCommand" len="numCommands">const <ptype>GLubyte</ptype> *<name>commands</name></param>
+            <param group="PathCoordType" len="numCommands">const <ptype>GLubyte</ptype> *<name>commands</name></param>
             <param><ptype>GLsizei</ptype> <name>numCoords</name></param>
             <param group="PathCoordType"><ptype>GLenum</ptype> <name>coordType</name></param>
             <param len="COMPSIZE(numCoords,coordType)">const void *<name>coords</name></param>
         </command>
         <command>
             <proto>void <name>glPathCoordsNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param><ptype>GLsizei</ptype> <name>numCoords</name></param>
             <param group="PathCoordType"><ptype>GLenum</ptype> <name>coordType</name></param>
             <param len="COMPSIZE(numCoords,coordType)">const void *<name>coords</name></param>
@@ -24172,7 +19888,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glPathDashArrayNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param><ptype>GLsizei</ptype> <name>dashCount</name></param>
             <param len="dashCount">const <ptype>GLfloat</ptype> *<name>dashArray</name></param>
         </command>
@@ -24198,23 +19914,23 @@ typedef unsigned int GLhandleARB;
             <param group="PathFontStyle"><ptype>GLbitfield</ptype> <name>fontStyle</name></param>
             <param><ptype>GLuint</ptype> <name>pathParameterTemplate</name></param>
             <param><ptype>GLfloat</ptype> <name>emScale</name></param>
-            <param><ptype>GLuint</ptype> <name>baseAndCount</name>[2]</param>
+            <param len="2"><ptype>GLuint</ptype> *<name>baseAndCount</name></param>
         </command>
         <command>
             <proto>void <name>glPathGlyphRangeNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>firstPathName</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>firstPathName</name></param>
             <param group="PathFontTarget"><ptype>GLenum</ptype> <name>fontTarget</name></param>
             <param len="COMPSIZE(fontTarget,fontName)">const void *<name>fontName</name></param>
             <param group="PathFontStyle"><ptype>GLbitfield</ptype> <name>fontStyle</name></param>
             <param><ptype>GLuint</ptype> <name>firstGlyph</name></param>
             <param><ptype>GLsizei</ptype> <name>numGlyphs</name></param>
             <param group="PathHandleMissingGlyphs"><ptype>GLenum</ptype> <name>handleMissingGlyphs</name></param>
-            <param group="Path"><ptype>GLuint</ptype> <name>pathParameterTemplate</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>pathParameterTemplate</name></param>
             <param><ptype>GLfloat</ptype> <name>emScale</name></param>
         </command>
         <command>
             <proto>void <name>glPathGlyphsNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>firstPathName</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>firstPathName</name></param>
             <param group="PathFontTarget"><ptype>GLenum</ptype> <name>fontTarget</name></param>
             <param len="COMPSIZE(fontTarget,fontName)">const void *<name>fontName</name></param>
             <param group="PathFontStyle"><ptype>GLbitfield</ptype> <name>fontStyle</name></param>
@@ -24222,7 +19938,7 @@ typedef unsigned int GLhandleARB;
             <param group="PathElementType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(numGlyphs,type,charcodes)">const void *<name>charcodes</name></param>
             <param group="PathHandleMissingGlyphs"><ptype>GLenum</ptype> <name>handleMissingGlyphs</name></param>
-            <param group="Path"><ptype>GLuint</ptype> <name>pathParameterTemplate</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>pathParameterTemplate</name></param>
             <param><ptype>GLfloat</ptype> <name>emScale</name></param>
         </command>
         <command>
@@ -24239,25 +19955,25 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glPathParameterfNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param group="PathParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLfloat</ptype> <name>value</name></param>
         </command>
         <command>
             <proto>void <name>glPathParameterfvNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param group="PathParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glPathParameteriNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param group="PathParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> <name>value</name></param>
         </command>
         <command>
             <proto>void <name>glPathParameterivNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param group="PathParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>value</name></param>
         </command>
@@ -24269,30 +19985,30 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glPathStencilFuncNV</name></proto>
             <param group="StencilFunction"><ptype>GLenum</ptype> <name>func</name></param>
-            <param group="ClampedStencilValue"><ptype>GLint</ptype> <name>ref</name></param>
-            <param group="MaskedStencilValue"><ptype>GLuint</ptype> <name>mask</name></param>
+            <param kind="StencilValue"><ptype>GLint</ptype> <name>ref</name></param>
+            <param kind="StencilMask"><ptype>GLuint</ptype> <name>mask</name></param>
         </command>
         <command>
             <proto>void <name>glPathStringNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param group="PathStringFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>length</name></param>
             <param len="length">const void *<name>pathString</name></param>
         </command>
         <command>
             <proto>void <name>glPathSubCommandsNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param><ptype>GLsizei</ptype> <name>commandStart</name></param>
             <param><ptype>GLsizei</ptype> <name>commandsToDelete</name></param>
             <param><ptype>GLsizei</ptype> <name>numCommands</name></param>
-            <param group="PathCommand" len="numCommands">const <ptype>GLubyte</ptype> *<name>commands</name></param>
+            <param group="PathCoordType" len="numCommands">const <ptype>GLubyte</ptype> *<name>commands</name></param>
             <param><ptype>GLsizei</ptype> <name>numCoords</name></param>
             <param group="PathCoordType"><ptype>GLenum</ptype> <name>coordType</name></param>
             <param len="COMPSIZE(numCoords,coordType)">const void *<name>coords</name></param>
         </command>
         <command>
             <proto>void <name>glPathSubCoordsNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param><ptype>GLsizei</ptype> <name>coordStart</name></param>
             <param><ptype>GLsizei</ptype> <name>numCoords</name></param>
             <param group="PathCoordType"><ptype>GLenum</ptype> <name>coordType</name></param>
@@ -24321,7 +20037,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glPixelMapfv</name></proto>
             <param group="PixelMap"><ptype>GLenum</ptype> <name>map</name></param>
-            <param group="CheckedInt32"><ptype>GLsizei</ptype> <name>mapsize</name></param>
+            <param kind="CheckedInt32"><ptype>GLsizei</ptype> <name>mapsize</name></param>
             <param len="mapsize">const <ptype>GLfloat</ptype> *<name>values</name></param>
             <glx type="render" opcode="168"/>
             <glx type="render" opcode="323" name="glPixelMapfvPBO" comment="PBO protocol"/>
@@ -24329,7 +20045,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glPixelMapuiv</name></proto>
             <param group="PixelMap"><ptype>GLenum</ptype> <name>map</name></param>
-            <param group="CheckedInt32"><ptype>GLsizei</ptype> <name>mapsize</name></param>
+            <param kind="CheckedInt32"><ptype>GLsizei</ptype> <name>mapsize</name></param>
             <param len="mapsize">const <ptype>GLuint</ptype> *<name>values</name></param>
             <glx type="render" opcode="169"/>
             <glx type="render" opcode="324" name="glPixelMapuivPBO" comment="PBO protocol"/>
@@ -24337,7 +20053,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glPixelMapusv</name></proto>
             <param group="PixelMap"><ptype>GLenum</ptype> <name>map</name></param>
-            <param group="CheckedInt32"><ptype>GLsizei</ptype> <name>mapsize</name></param>
+            <param kind="CheckedInt32"><ptype>GLsizei</ptype> <name>mapsize</name></param>
             <param len="mapsize">const <ptype>GLushort</ptype> *<name>values</name></param>
             <glx type="render" opcode="170"/>
             <glx type="render" opcode="325" name="glPixelMapusvPBO" comment="PBO protocol"/>
@@ -24351,13 +20067,13 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glPixelStoref</name></proto>
             <param group="PixelStoreParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
             <glx type="single" opcode="109"/>
         </command>
         <command>
             <proto>void <name>glPixelStorei</name></proto>
             <param group="PixelStoreParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
             <glx type="single" opcode="110"/>
         </command>
         <command>
@@ -24368,22 +20084,22 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glPixelTexGenParameterfSGIS</name></proto>
             <param group="PixelTexGenParameterNameSGIS"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glPixelTexGenParameterfvSGIS</name></proto>
             <param group="PixelTexGenParameterNameSGIS"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glPixelTexGenParameteriSGIS</name></proto>
             <param group="PixelTexGenParameterNameSGIS"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glPixelTexGenParameterivSGIS</name></proto>
             <param group="PixelTexGenParameterNameSGIS"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glPixelTexGenSGIX</name></proto>
@@ -24393,13 +20109,13 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glPixelTransferf</name></proto>
             <param group="PixelTransferParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
             <glx type="render" opcode="166"/>
         </command>
         <command>
             <proto>void <name>glPixelTransferi</name></proto>
             <param group="PixelTransferParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
             <glx type="render" opcode="167"/>
         </command>
         <command>
@@ -24445,8 +20161,8 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLfixed</ptype> <name>yfactor</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glPointAlongPathNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glPointAlongPathNV</name></proto>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param><ptype>GLsizei</ptype> <name>startSegment</name></param>
             <param><ptype>GLsizei</ptype> <name>numSegments</name></param>
             <param><ptype>GLfloat</ptype> <name>distance</name></param>
@@ -24458,51 +20174,51 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glPointParameterf</name></proto>
             <param group="PointParameterNameARB"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
             <glx type="render" opcode="2065"/>
         </command>
         <command>
             <proto>void <name>glPointParameterfARB</name></proto>
             <param group="PointParameterNameARB"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
             <alias name="glPointParameterf"/>
             <glx type="render" opcode="2065"/>
         </command>
         <command>
             <proto>void <name>glPointParameterfEXT</name></proto>
             <param group="PointParameterNameARB"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
             <alias name="glPointParameterf"/>
         </command>
         <command>
             <proto>void <name>glPointParameterfSGIS</name></proto>
             <param group="PointParameterNameARB"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
             <alias name="glPointParameterf"/>
         </command>
         <command>
             <proto>void <name>glPointParameterfv</name></proto>
             <param group="PointParameterNameARB"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="render" opcode="2066"/>
         </command>
         <command>
             <proto>void <name>glPointParameterfvARB</name></proto>
             <param group="PointParameterNameARB"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
             <alias name="glPointParameterfv"/>
             <glx type="render" opcode="2066"/>
         </command>
         <command>
             <proto>void <name>glPointParameterfvEXT</name></proto>
             <param group="PointParameterNameARB"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
             <alias name="glPointParameterfv"/>
         </command>
         <command>
             <proto>void <name>glPointParameterfvSGIS</name></proto>
             <param group="PointParameterNameARB"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
             <alias name="glPointParameterfv"/>
         </command>
         <command>
@@ -24553,7 +20269,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glPointSize</name></proto>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>size</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>size</name></param>
             <glx type="render" opcode="100"/>
         </command>
         <command>
@@ -24581,13 +20297,13 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glPolygonMode</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="PolygonMode"><ptype>GLenum</ptype> <name>mode</name></param>
             <glx type="render" opcode="101"/>
         </command>
         <command>
             <proto>void <name>glPolygonModeNV</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="PolygonMode"><ptype>GLenum</ptype> <name>mode</name></param>
             <alias name="glPolygonMode"/>
         </command>
@@ -24751,34 +20467,34 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glPrioritizeTextures</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param group="Texture" len="n">const <ptype>GLuint</ptype> *<name>textures</name></param>
+            <param class="texture" len="n">const <ptype>GLuint</ptype> *<name>textures</name></param>
             <param len="n">const <ptype>GLfloat</ptype> *<name>priorities</name></param>
             <glx type="render" opcode="4118"/>
         </command>
         <command>
             <proto>void <name>glPrioritizeTexturesEXT</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param group="Texture" len="n">const <ptype>GLuint</ptype> *<name>textures</name></param>
-            <param group="ClampedFloat32" len="n">const <ptype>GLclampf</ptype> *<name>priorities</name></param>
+            <param class="texture" len="n">const <ptype>GLuint</ptype> *<name>textures</name></param>
+            <param kind="Clamped[0; 1]" len="n">const <ptype>GLclampf</ptype> *<name>priorities</name></param>
             <alias name="glPrioritizeTextures"/>
             <glx type="render" opcode="4118"/>
         </command>
         <command>
             <proto>void <name>glPrioritizeTexturesxOES</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>textures</name></param>
-            <param group="ClampedFixed" len="n">const <ptype>GLfixed</ptype> *<name>priorities</name></param>
+            <param class="texture" len="n">const <ptype>GLuint</ptype> *<name>textures</name></param>
+            <param kind="Clamped[0; 1]" len="n">const <ptype>GLfixed</ptype> *<name>priorities</name></param>
         </command>
         <command>
             <proto>void <name>glProgramBinary</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLenum</ptype> <name>binaryFormat</name></param>
             <param len="length">const void *<name>binary</name></param>
             <param><ptype>GLsizei</ptype> <name>length</name></param>
         </command>
         <command>
             <proto>void <name>glProgramBinaryOES</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLenum</ptype> <name>binaryFormat</name></param>
             <param len="length">const void *<name>binary</name></param>
             <param><ptype>GLint</ptype> <name>length</name></param>
@@ -24810,7 +20526,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramEnvParameter4dARB</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLdouble</ptype> <name>x</name></param>
             <param><ptype>GLdouble</ptype> <name>y</name></param>
@@ -24820,13 +20536,13 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramEnvParameter4dvARB</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="4">const <ptype>GLdouble</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glProgramEnvParameter4fARB</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLfloat</ptype> <name>x</name></param>
             <param><ptype>GLfloat</ptype> <name>y</name></param>
@@ -24836,7 +20552,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramEnvParameter4fvARB</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="4">const <ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
@@ -24874,7 +20590,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramEnvParameters4fvEXT</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param len="count*4">const <ptype>GLfloat</ptype> *<name>params</name></param>
@@ -24896,7 +20612,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramLocalParameter4dARB</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLdouble</ptype> <name>x</name></param>
             <param><ptype>GLdouble</ptype> <name>y</name></param>
@@ -24906,13 +20622,13 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramLocalParameter4dvARB</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="4">const <ptype>GLdouble</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glProgramLocalParameter4fARB</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLfloat</ptype> <name>x</name></param>
             <param><ptype>GLfloat</ptype> <name>y</name></param>
@@ -24922,7 +20638,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramLocalParameter4fvARB</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="4">const <ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
@@ -24960,7 +20676,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramLocalParameters4fvEXT</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param len="count*4">const <ptype>GLfloat</ptype> *<name>params</name></param>
@@ -24982,7 +20698,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramNamedParameter4dNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>id</name></param>
             <param><ptype>GLsizei</ptype> <name>len</name></param>
             <param len="1">const <ptype>GLubyte</ptype> *<name>name</name></param>
             <param><ptype>GLdouble</ptype> <name>x</name></param>
@@ -24993,7 +20709,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramNamedParameter4dvNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>id</name></param>
             <param><ptype>GLsizei</ptype> <name>len</name></param>
             <param len="1">const <ptype>GLubyte</ptype> *<name>name</name></param>
             <param len="4">const <ptype>GLdouble</ptype> *<name>v</name></param>
@@ -25001,7 +20717,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramNamedParameter4fNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>id</name></param>
             <param><ptype>GLsizei</ptype> <name>len</name></param>
             <param len="1">const <ptype>GLubyte</ptype> *<name>name</name></param>
             <param><ptype>GLfloat</ptype> <name>x</name></param>
@@ -25012,7 +20728,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramNamedParameter4fvNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>id</name></param>
             <param><ptype>GLsizei</ptype> <name>len</name></param>
             <param len="1">const <ptype>GLubyte</ptype> *<name>name</name></param>
             <param len="4">const <ptype>GLfloat</ptype> *<name>v</name></param>
@@ -25054,20 +20770,20 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramParameteri</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramParameterPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> <name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramParameteriARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramParameterPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> <name>value</name></param>
             <alias name="glProgramParameteri"/>
         </command>
         <command>
             <proto>void <name>glProgramParameteriEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param group="ProgramParameterPName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> <name>value</name></param>
             <alias name="glProgramParameteri"/>
@@ -25090,7 +20806,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramPathFragmentInputGenNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLenum</ptype> <name>genMode</name></param>
             <param><ptype>GLint</ptype> <name>components</name></param>
@@ -25098,8 +20814,8 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramStringARB</name></proto>
-            <param group="ProgramTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="ProgramFormatARB"><ptype>GLenum</ptype> <name>format</name></param>
+            <param group="ProgramTarget"><ptype>GLenum</ptype> <name>target</name></param>
+            <param group="ProgramFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param><ptype>GLsizei</ptype> <name>len</name></param>
             <param len="len">const void *<name>string</name></param>
         </command>
@@ -25111,204 +20827,204 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform1d</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLdouble</ptype> <name>v0</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1dEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLdouble</ptype> <name>x</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1dv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1dvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1f</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLfloat</ptype> <name>v0</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1fEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLfloat</ptype> <name>v0</name></param>
             <alias name="glProgramUniform1f"/>
         </command>
         <command>
             <proto>void <name>glProgramUniform1fv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1fvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glProgramUniform1fv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniform1i</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLint</ptype> <name>v0</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1i64ARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLint64</ptype> <name>x</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1i64NV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLint64EXT</ptype> <name>x</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1i64vARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLint64</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count">const <ptype>GLint64</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1i64vNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLint64EXT</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count">const <ptype>GLint64EXT</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1iEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLint</ptype> <name>v0</name></param>
             <alias name="glProgramUniform1i"/>
         </command>
         <command>
             <proto>void <name>glProgramUniform1iv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLint</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count">const <ptype>GLint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1ivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLint</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count">const <ptype>GLint</ptype> *<name>value</name></param>
             <alias name="glProgramUniform1iv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniform1ui</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint</ptype> <name>v0</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1ui64ARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint64</ptype> <name>x</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1ui64NV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint64EXT</ptype> <name>x</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1ui64vARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLuint64</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count">const <ptype>GLuint64</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1ui64vNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLuint64EXT</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count">const <ptype>GLuint64EXT</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1uiEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint</ptype> <name>v0</name></param>
             <alias name="glProgramUniform1ui"/>
         </command>
         <command>
             <proto>void <name>glProgramUniform1uiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLuint</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count">const <ptype>GLuint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform1uivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLuint</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count">const <ptype>GLuint</ptype> *<name>value</name></param>
             <alias name="glProgramUniform1uiv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniform2d</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLdouble</ptype> <name>v0</name></param>
             <param><ptype>GLdouble</ptype> <name>v1</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2dEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLdouble</ptype> <name>x</name></param>
             <param><ptype>GLdouble</ptype> <name>y</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2dv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2dvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2f</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLfloat</ptype> <name>v0</name></param>
             <param><ptype>GLfloat</ptype> <name>v1</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2fEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLfloat</ptype> <name>v0</name></param>
             <param><ptype>GLfloat</ptype> <name>v1</name></param>
@@ -25316,57 +21032,57 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform2fv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2fvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glProgramUniform2fv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniform2i</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLint</ptype> <name>v0</name></param>
             <param><ptype>GLint</ptype> <name>v1</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2i64ARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLint64</ptype> <name>x</name></param>
             <param><ptype>GLint64</ptype> <name>y</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2i64NV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLint64EXT</ptype> <name>x</name></param>
             <param><ptype>GLint64EXT</ptype> <name>y</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2i64vARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLint64</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLint64</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2i64vNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLint64EXT</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLint64EXT</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2iEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLint</ptype> <name>v0</name></param>
             <param><ptype>GLint</ptype> <name>v1</name></param>
@@ -25374,57 +21090,57 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform2iv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLint</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2ivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLint</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLint</ptype> *<name>value</name></param>
             <alias name="glProgramUniform2iv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniform2ui</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint</ptype> <name>v0</name></param>
             <param><ptype>GLuint</ptype> <name>v1</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2ui64ARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint64</ptype> <name>x</name></param>
             <param><ptype>GLuint64</ptype> <name>y</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2ui64NV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint64EXT</ptype> <name>x</name></param>
             <param><ptype>GLuint64EXT</ptype> <name>y</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2ui64vARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLuint64</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLuint64</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2ui64vNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLuint64EXT</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLuint64EXT</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2uiEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint</ptype> <name>v0</name></param>
             <param><ptype>GLuint</ptype> <name>v1</name></param>
@@ -25432,22 +21148,22 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform2uiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLuint</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLuint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform2uivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLuint</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLuint</ptype> *<name>value</name></param>
             <alias name="glProgramUniform2uiv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniform3d</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLdouble</ptype> <name>v0</name></param>
             <param><ptype>GLdouble</ptype> <name>v1</name></param>
@@ -25455,7 +21171,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform3dEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLdouble</ptype> <name>x</name></param>
             <param><ptype>GLdouble</ptype> <name>y</name></param>
@@ -25463,21 +21179,21 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform3dv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform3dvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform3f</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLfloat</ptype> <name>v0</name></param>
             <param><ptype>GLfloat</ptype> <name>v1</name></param>
@@ -25485,7 +21201,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform3fEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLfloat</ptype> <name>v0</name></param>
             <param><ptype>GLfloat</ptype> <name>v1</name></param>
@@ -25494,22 +21210,22 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform3fv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform3fvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glProgramUniform3fv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniform3i</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLint</ptype> <name>v0</name></param>
             <param><ptype>GLint</ptype> <name>v1</name></param>
@@ -25517,7 +21233,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform3i64ARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLint64</ptype> <name>x</name></param>
             <param><ptype>GLint64</ptype> <name>y</name></param>
@@ -25525,7 +21241,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform3i64NV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLint64EXT</ptype> <name>x</name></param>
             <param><ptype>GLint64EXT</ptype> <name>y</name></param>
@@ -25533,21 +21249,21 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform3i64vARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLint64</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLint64</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform3i64vNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLint64EXT</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLint64EXT</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform3iEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLint</ptype> <name>v0</name></param>
             <param><ptype>GLint</ptype> <name>v1</name></param>
@@ -25556,22 +21272,22 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform3iv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLint</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform3ivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLint</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLint</ptype> *<name>value</name></param>
             <alias name="glProgramUniform3iv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniform3ui</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint</ptype> <name>v0</name></param>
             <param><ptype>GLuint</ptype> <name>v1</name></param>
@@ -25579,7 +21295,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform3ui64ARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint64</ptype> <name>x</name></param>
             <param><ptype>GLuint64</ptype> <name>y</name></param>
@@ -25587,7 +21303,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform3ui64NV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint64EXT</ptype> <name>x</name></param>
             <param><ptype>GLuint64EXT</ptype> <name>y</name></param>
@@ -25595,21 +21311,21 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform3ui64vARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLuint64</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLuint64</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform3ui64vNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLuint64EXT</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLuint64EXT</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform3uiEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint</ptype> <name>v0</name></param>
             <param><ptype>GLuint</ptype> <name>v1</name></param>
@@ -25618,22 +21334,22 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform3uiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLuint</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLuint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform3uivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLuint</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLuint</ptype> *<name>value</name></param>
             <alias name="glProgramUniform3uiv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniform4d</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLdouble</ptype> <name>v0</name></param>
             <param><ptype>GLdouble</ptype> <name>v1</name></param>
@@ -25642,7 +21358,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform4dEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLdouble</ptype> <name>x</name></param>
             <param><ptype>GLdouble</ptype> <name>y</name></param>
@@ -25651,21 +21367,21 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform4dv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform4dvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform4f</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLfloat</ptype> <name>v0</name></param>
             <param><ptype>GLfloat</ptype> <name>v1</name></param>
@@ -25674,7 +21390,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform4fEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLfloat</ptype> <name>v0</name></param>
             <param><ptype>GLfloat</ptype> <name>v1</name></param>
@@ -25684,22 +21400,22 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform4fv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform4fvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glProgramUniform4fv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniform4i</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLint</ptype> <name>v0</name></param>
             <param><ptype>GLint</ptype> <name>v1</name></param>
@@ -25708,7 +21424,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform4i64ARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLint64</ptype> <name>x</name></param>
             <param><ptype>GLint64</ptype> <name>y</name></param>
@@ -25717,7 +21433,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform4i64NV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLint64EXT</ptype> <name>x</name></param>
             <param><ptype>GLint64EXT</ptype> <name>y</name></param>
@@ -25726,21 +21442,21 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform4i64vARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLint64</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLint64</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform4i64vNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLint64EXT</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLint64EXT</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform4iEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLint</ptype> <name>v0</name></param>
             <param><ptype>GLint</ptype> <name>v1</name></param>
@@ -25750,22 +21466,22 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform4iv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLint</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform4ivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLint</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLint</ptype> *<name>value</name></param>
             <alias name="glProgramUniform4iv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniform4ui</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint</ptype> <name>v0</name></param>
             <param><ptype>GLuint</ptype> <name>v1</name></param>
@@ -25774,7 +21490,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform4ui64ARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint64</ptype> <name>x</name></param>
             <param><ptype>GLuint64</ptype> <name>y</name></param>
@@ -25783,7 +21499,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform4ui64NV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint64EXT</ptype> <name>x</name></param>
             <param><ptype>GLuint64EXT</ptype> <name>y</name></param>
@@ -25792,21 +21508,21 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform4ui64vARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLuint64</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLuint64</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform4ui64vNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLuint64EXT</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLuint64EXT</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform4uiEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint</ptype> <name>v0</name></param>
             <param><ptype>GLuint</ptype> <name>v1</name></param>
@@ -25816,48 +21532,48 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniform4uiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLuint</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLuint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniform4uivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLuint</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLuint</ptype> *<name>value</name></param>
             <alias name="glProgramUniform4uiv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniformHandleui64ARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint64</ptype> <name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformHandleui64IMG</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint64</ptype> <name>value</name></param>
             <alias name="glProgramUniformHandleui64ARB"/>
         </command>
         <command>
             <proto>void <name>glProgramUniformHandleui64NV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint64</ptype> <name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformHandleui64vARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param len="count">const <ptype>GLuint64</ptype> *<name>values</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformHandleui64vIMG</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param len="count">const <ptype>GLuint64</ptype> *<name>values</name></param>
@@ -25865,317 +21581,317 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glProgramUniformHandleui64vNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param len="count">const <ptype>GLuint64</ptype> *<name>values</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix2dv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*4">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x2" len="count*4">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix2dvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*4">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x2" len="count*4">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix2fv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*4">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x2" len="count*4">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix2fvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*4">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x2" len="count*4">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glProgramUniformMatrix2fv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix2x3dv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*6">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x3" len="count*6">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix2x3dvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*6">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x3" len="count*6">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix2x3fv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*6">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x3" len="count*6">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix2x3fvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*6">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x3" len="count*6">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glProgramUniformMatrix2x3fv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix2x4dv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*8">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x4" len="count*8">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix2x4dvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*8">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x4" len="count*8">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix2x4fv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*8">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x4" len="count*8">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix2x4fvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*8">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x4" len="count*8">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glProgramUniformMatrix2x4fv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix3dv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*9">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x3" len="count*9">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix3dvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*9">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x3" len="count*9">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix3fv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*9">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x3" len="count*9">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix3fvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*9">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x3" len="count*9">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glProgramUniformMatrix3fv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix3x2dv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*6">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x2" len="count*6">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix3x2dvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*6">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x2" len="count*6">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix3x2fv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*6">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x2" len="count*6">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix3x2fvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*6">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x2" len="count*6">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glProgramUniformMatrix3x2fv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix3x4dv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*12">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x4" len="count*12">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix3x4dvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*12">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x4" len="count*12">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix3x4fv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*12">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x4" len="count*12">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix3x4fvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*12">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x4" len="count*12">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glProgramUniformMatrix3x4fv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix4dv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*16">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x4" len="count*16">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix4dvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*16">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x4" len="count*16">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix4fv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*16">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x4" len="count*16">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix4fvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*16">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x4" len="count*16">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glProgramUniformMatrix4fv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix4x2dv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*8">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x2" len="count*8">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix4x2dvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*8">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x2" len="count*8">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix4x2fv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*8">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x2" len="count*8">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix4x2fvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*8">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x2" len="count*8">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glProgramUniformMatrix4x2fv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix4x3dv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*12">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x3" len="count*12">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix4x3dvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*12">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x3" len="count*12">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix4x3fv</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*12">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x3" len="count*12">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformMatrix4x3fvEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*12">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x3" len="count*12">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glProgramUniformMatrix4x3fv"/>
         </command>
         <command>
             <proto>void <name>glProgramUniformui64NV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLuint64EXT</ptype> <name>value</name></param>
         </command>
         <command>
             <proto>void <name>glProgramUniformui64vNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param len="count">const <ptype>GLuint64EXT</ptype> *<name>value</name></param>
@@ -26233,17 +21949,17 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glPushName</name></proto>
-            <param group="SelectName"><ptype>GLuint</ptype> <name>name</name></param>
+            <param kind="SelectName"><ptype>GLuint</ptype> <name>name</name></param>
             <glx type="render" opcode="125"/>
         </command>
         <command>
             <proto>void <name>glQueryCounter</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
             <param group="QueryCounterTarget"><ptype>GLenum</ptype> <name>target</name></param>
         </command>
         <command>
             <proto>void <name>glQueryCounterEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
             <param group="QueryCounterTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <alias name="glQueryCounter"/>
         </command>
@@ -26255,7 +21971,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glQueryObjectParameteruiAMD</name></proto>
             <param group="QueryTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>id</name></param>
+            <param class="query"><ptype>GLuint</ptype> <name>id</name></param>
             <param><ptype>GLenum</ptype> <name>pname</name></param>
             <param group="OcclusionQueryEventMaskAMD"><ptype>GLuint</ptype> <name>param</name></param>
         </command>
@@ -26263,8 +21979,8 @@ typedef unsigned int GLhandleARB;
             <proto><ptype>GLint</ptype> <name>glQueryResourceNV</name></proto>
             <param><ptype>GLenum</ptype> <name>queryType</name></param>
             <param><ptype>GLint</ptype> <name>tagId</name></param>
-            <param><ptype>GLuint</ptype> <name>bufSize</name></param>
-            <param><ptype>GLint</ptype> *<name>buffer</name></param>
+            <param><ptype>GLuint</ptype> <name>count</name></param>
+            <param len="count"><ptype>GLint</ptype> *<name>buffer</name></param>
         </command>
         <command>
             <proto>void <name>glQueryResourceTagNV</name></proto>
@@ -26273,46 +21989,46 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glRasterPos2d</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>x</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>y</name></param>
             <vecequiv name="glRasterPos2dv"/>
         </command>
         <command>
             <proto>void <name>glRasterPos2dv</name></proto>
-            <param group="CoordD" len="2">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="33"/>
         </command>
         <command>
             <proto>void <name>glRasterPos2f</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>x</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>y</name></param>
             <vecequiv name="glRasterPos2fv"/>
         </command>
         <command>
             <proto>void <name>glRasterPos2fv</name></proto>
-            <param group="CoordF" len="2">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="34"/>
         </command>
         <command>
             <proto>void <name>glRasterPos2i</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>y</name></param>
             <vecequiv name="glRasterPos2iv"/>
         </command>
         <command>
             <proto>void <name>glRasterPos2iv</name></proto>
-            <param group="CoordI" len="2">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="35"/>
         </command>
         <command>
             <proto>void <name>glRasterPos2s</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>x</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>y</name></param>
             <vecequiv name="glRasterPos2sv"/>
         </command>
         <command>
             <proto>void <name>glRasterPos2sv</name></proto>
-            <param group="CoordS" len="2">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="36"/>
         </command>
         <command>
@@ -26326,50 +22042,50 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glRasterPos3d</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>x</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>y</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>z</name></param>
             <vecequiv name="glRasterPos3dv"/>
         </command>
         <command>
             <proto>void <name>glRasterPos3dv</name></proto>
-            <param group="CoordD" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="37"/>
         </command>
         <command>
             <proto>void <name>glRasterPos3f</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>x</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>y</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>z</name></param>
             <vecequiv name="glRasterPos3fv"/>
         </command>
         <command>
             <proto>void <name>glRasterPos3fv</name></proto>
-            <param group="CoordF" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="38"/>
         </command>
         <command>
             <proto>void <name>glRasterPos3i</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>y</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>z</name></param>
             <vecequiv name="glRasterPos3iv"/>
         </command>
         <command>
             <proto>void <name>glRasterPos3iv</name></proto>
-            <param group="CoordI" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="39"/>
         </command>
         <command>
             <proto>void <name>glRasterPos3s</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>x</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>y</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>z</name></param>
             <vecequiv name="glRasterPos3sv"/>
         </command>
         <command>
             <proto>void <name>glRasterPos3sv</name></proto>
-            <param group="CoordS" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="40"/>
         </command>
         <command>
@@ -26384,54 +22100,54 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glRasterPos4d</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>x</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>y</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>z</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>w</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>w</name></param>
             <vecequiv name="glRasterPos4dv"/>
         </command>
         <command>
             <proto>void <name>glRasterPos4dv</name></proto>
-            <param group="CoordD" len="4">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="41"/>
         </command>
         <command>
             <proto>void <name>glRasterPos4f</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>x</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>y</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>z</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>w</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>w</name></param>
             <vecequiv name="glRasterPos4fv"/>
         </command>
         <command>
             <proto>void <name>glRasterPos4fv</name></proto>
-            <param group="CoordF" len="4">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="42"/>
         </command>
         <command>
             <proto>void <name>glRasterPos4i</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>y</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>z</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>w</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>w</name></param>
             <vecequiv name="glRasterPos4iv"/>
         </command>
         <command>
             <proto>void <name>glRasterPos4iv</name></proto>
-            <param group="CoordI" len="4">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="43"/>
         </command>
         <command>
             <proto>void <name>glRasterPos4s</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>x</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>y</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>z</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>w</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>w</name></param>
             <vecequiv name="glRasterPos4sv"/>
         </command>
         <command>
             <proto>void <name>glRasterPos4sv</name></proto>
-            <param group="CoordS" len="4">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="44"/>
         </command>
         <command>
@@ -26471,8 +22187,8 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glReadPixels</name></proto>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
@@ -26518,8 +22234,8 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glReadnPixelsKHR</name></proto>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
@@ -26535,58 +22251,58 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glRectd</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>x1</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>y1</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>x2</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>y2</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>x1</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>y1</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>x2</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>y2</name></param>
             <vecequiv name="glRectdv"/>
         </command>
         <command>
             <proto>void <name>glRectdv</name></proto>
-            <param group="CoordD" len="2">const <ptype>GLdouble</ptype> *<name>v1</name></param>
-            <param group="CoordD" len="2">const <ptype>GLdouble</ptype> *<name>v2</name></param>
+            <param kind="Coord" len="2">const <ptype>GLdouble</ptype> *<name>v1</name></param>
+            <param kind="Coord" len="2">const <ptype>GLdouble</ptype> *<name>v2</name></param>
             <glx type="render" opcode="45"/>
         </command>
         <command>
             <proto>void <name>glRectf</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>x1</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>y1</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>x2</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>y2</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>x1</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>y1</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>x2</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>y2</name></param>
             <vecequiv name="glRectfv"/>
         </command>
         <command>
             <proto>void <name>glRectfv</name></proto>
-            <param group="CoordF" len="2">const <ptype>GLfloat</ptype> *<name>v1</name></param>
-            <param group="CoordF" len="2">const <ptype>GLfloat</ptype> *<name>v2</name></param>
+            <param kind="Coord" len="2">const <ptype>GLfloat</ptype> *<name>v1</name></param>
+            <param kind="Coord" len="2">const <ptype>GLfloat</ptype> *<name>v2</name></param>
             <glx type="render" opcode="46"/>
         </command>
         <command>
             <proto>void <name>glRecti</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>x1</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>y1</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>x2</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>y2</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>x1</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>y1</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>x2</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>y2</name></param>
             <vecequiv name="glRectiv"/>
         </command>
         <command>
             <proto>void <name>glRectiv</name></proto>
-            <param group="CoordI" len="2">const <ptype>GLint</ptype> *<name>v1</name></param>
-            <param group="CoordI" len="2">const <ptype>GLint</ptype> *<name>v2</name></param>
+            <param kind="Coord" len="2">const <ptype>GLint</ptype> *<name>v1</name></param>
+            <param kind="Coord" len="2">const <ptype>GLint</ptype> *<name>v2</name></param>
             <glx type="render" opcode="47"/>
         </command>
         <command>
             <proto>void <name>glRects</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>x1</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>y1</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>x2</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>y2</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>x1</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>y1</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>x2</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>y2</name></param>
             <vecequiv name="glRectsv"/>
         </command>
         <command>
             <proto>void <name>glRectsv</name></proto>
-            <param group="CoordS" len="2">const <ptype>GLshort</ptype> *<name>v1</name></param>
-            <param group="CoordS" len="2">const <ptype>GLshort</ptype> *<name>v2</name></param>
+            <param kind="Coord" len="2">const <ptype>GLshort</ptype> *<name>v1</name></param>
+            <param kind="Coord" len="2">const <ptype>GLshort</ptype> *<name>v2</name></param>
             <glx type="render" opcode="48"/>
         </command>
         <command>
@@ -26728,27 +22444,27 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glReplacementCodeuiColor3fVertex3fSUN</name></proto>
-            <param group="ReplacementCodeSUN"><ptype>GLuint</ptype> <name>rc</name></param>
-            <param><ptype>GLfloat</ptype> <name>r</name></param>
-            <param><ptype>GLfloat</ptype> <name>g</name></param>
-            <param><ptype>GLfloat</ptype> <name>b</name></param>
+            <param group="TriangleListSUN"><ptype>GLuint</ptype> <name>rc</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>r</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>g</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>b</name></param>
             <param><ptype>GLfloat</ptype> <name>x</name></param>
             <param><ptype>GLfloat</ptype> <name>y</name></param>
             <param><ptype>GLfloat</ptype> <name>z</name></param>
         </command>
         <command>
             <proto>void <name>glReplacementCodeuiColor3fVertex3fvSUN</name></proto>
-            <param group="ReplacementCodeSUN" len="1">const <ptype>GLuint</ptype> *<name>rc</name></param>
-            <param len="3">const <ptype>GLfloat</ptype> *<name>c</name></param>
+            <param group="TriangleListSUN" len="1">const <ptype>GLuint</ptype> *<name>rc</name></param>
+            <param kind="Color" len="3">const <ptype>GLfloat</ptype> *<name>c</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glReplacementCodeuiColor4fNormal3fVertex3fSUN</name></proto>
-            <param group="ReplacementCodeSUN"><ptype>GLuint</ptype> <name>rc</name></param>
-            <param><ptype>GLfloat</ptype> <name>r</name></param>
-            <param><ptype>GLfloat</ptype> <name>g</name></param>
-            <param><ptype>GLfloat</ptype> <name>b</name></param>
-            <param><ptype>GLfloat</ptype> <name>a</name></param>
+            <param group="TriangleListSUN"><ptype>GLuint</ptype> <name>rc</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>r</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>g</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>b</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>a</name></param>
             <param><ptype>GLfloat</ptype> <name>nx</name></param>
             <param><ptype>GLfloat</ptype> <name>ny</name></param>
             <param><ptype>GLfloat</ptype> <name>nz</name></param>
@@ -26758,31 +22474,31 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glReplacementCodeuiColor4fNormal3fVertex3fvSUN</name></proto>
-            <param group="ReplacementCodeSUN" len="1">const <ptype>GLuint</ptype> *<name>rc</name></param>
-            <param len="4">const <ptype>GLfloat</ptype> *<name>c</name></param>
+            <param group="TriangleListSUN" len="1">const <ptype>GLuint</ptype> *<name>rc</name></param>
+            <param kind="Color" len="4">const <ptype>GLfloat</ptype> *<name>c</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>n</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glReplacementCodeuiColor4ubVertex3fSUN</name></proto>
-            <param group="ReplacementCodeSUN"><ptype>GLuint</ptype> <name>rc</name></param>
-            <param><ptype>GLubyte</ptype> <name>r</name></param>
-            <param><ptype>GLubyte</ptype> <name>g</name></param>
-            <param><ptype>GLubyte</ptype> <name>b</name></param>
-            <param><ptype>GLubyte</ptype> <name>a</name></param>
+            <param group="TriangleListSUN"><ptype>GLuint</ptype> <name>rc</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>r</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>g</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>b</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>a</name></param>
             <param><ptype>GLfloat</ptype> <name>x</name></param>
             <param><ptype>GLfloat</ptype> <name>y</name></param>
             <param><ptype>GLfloat</ptype> <name>z</name></param>
         </command>
         <command>
             <proto>void <name>glReplacementCodeuiColor4ubVertex3fvSUN</name></proto>
-            <param group="ReplacementCodeSUN" len="1">const <ptype>GLuint</ptype> *<name>rc</name></param>
-            <param len="4">const <ptype>GLubyte</ptype> *<name>c</name></param>
+            <param group="TriangleListSUN" len="1">const <ptype>GLuint</ptype> *<name>rc</name></param>
+            <param kind="Color" len="4">const <ptype>GLubyte</ptype> *<name>c</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glReplacementCodeuiNormal3fVertex3fSUN</name></proto>
-            <param group="ReplacementCodeSUN"><ptype>GLuint</ptype> <name>rc</name></param>
+            <param group="TriangleListSUN"><ptype>GLuint</ptype> <name>rc</name></param>
             <param><ptype>GLfloat</ptype> <name>nx</name></param>
             <param><ptype>GLfloat</ptype> <name>ny</name></param>
             <param><ptype>GLfloat</ptype> <name>nz</name></param>
@@ -26792,23 +22508,23 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glReplacementCodeuiNormal3fVertex3fvSUN</name></proto>
-            <param group="ReplacementCodeSUN" len="1">const <ptype>GLuint</ptype> *<name>rc</name></param>
+            <param group="TriangleListSUN" len="1">const <ptype>GLuint</ptype> *<name>rc</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>n</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glReplacementCodeuiSUN</name></proto>
-            <param><ptype>GLuint</ptype> <name>code</name></param>
+            <param group="TriangleListSUN"><ptype>GLuint</ptype> <name>code</name></param>
         </command>
         <command>
             <proto>void <name>glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN</name></proto>
-            <param group="ReplacementCodeSUN"><ptype>GLuint</ptype> <name>rc</name></param>
+            <param group="TriangleListSUN"><ptype>GLuint</ptype> <name>rc</name></param>
             <param><ptype>GLfloat</ptype> <name>s</name></param>
             <param><ptype>GLfloat</ptype> <name>t</name></param>
-            <param><ptype>GLfloat</ptype> <name>r</name></param>
-            <param><ptype>GLfloat</ptype> <name>g</name></param>
-            <param><ptype>GLfloat</ptype> <name>b</name></param>
-            <param><ptype>GLfloat</ptype> <name>a</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>r</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>g</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>b</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>a</name></param>
             <param><ptype>GLfloat</ptype> <name>nx</name></param>
             <param><ptype>GLfloat</ptype> <name>ny</name></param>
             <param><ptype>GLfloat</ptype> <name>nz</name></param>
@@ -26818,15 +22534,15 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN</name></proto>
-            <param group="ReplacementCodeSUN" len="1">const <ptype>GLuint</ptype> *<name>rc</name></param>
+            <param group="TriangleListSUN" len="1">const <ptype>GLuint</ptype> *<name>rc</name></param>
             <param len="2">const <ptype>GLfloat</ptype> *<name>tc</name></param>
-            <param len="4">const <ptype>GLfloat</ptype> *<name>c</name></param>
+            <param kind="Color" len="4">const <ptype>GLfloat</ptype> *<name>c</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>n</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN</name></proto>
-            <param group="ReplacementCodeSUN"><ptype>GLuint</ptype> <name>rc</name></param>
+            <param group="TriangleListSUN"><ptype>GLuint</ptype> <name>rc</name></param>
             <param><ptype>GLfloat</ptype> <name>s</name></param>
             <param><ptype>GLfloat</ptype> <name>t</name></param>
             <param><ptype>GLfloat</ptype> <name>nx</name></param>
@@ -26838,14 +22554,14 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN</name></proto>
-            <param group="ReplacementCodeSUN" len="1">const <ptype>GLuint</ptype> *<name>rc</name></param>
+            <param group="TriangleListSUN" len="1">const <ptype>GLuint</ptype> *<name>rc</name></param>
             <param len="2">const <ptype>GLfloat</ptype> *<name>tc</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>n</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glReplacementCodeuiTexCoord2fVertex3fSUN</name></proto>
-            <param group="ReplacementCodeSUN"><ptype>GLuint</ptype> <name>rc</name></param>
+            <param group="TriangleListSUN"><ptype>GLuint</ptype> <name>rc</name></param>
             <param><ptype>GLfloat</ptype> <name>s</name></param>
             <param><ptype>GLfloat</ptype> <name>t</name></param>
             <param><ptype>GLfloat</ptype> <name>x</name></param>
@@ -26854,25 +22570,25 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glReplacementCodeuiTexCoord2fVertex3fvSUN</name></proto>
-            <param group="ReplacementCodeSUN" len="1">const <ptype>GLuint</ptype> *<name>rc</name></param>
+            <param group="TriangleListSUN" len="1">const <ptype>GLuint</ptype> *<name>rc</name></param>
             <param len="2">const <ptype>GLfloat</ptype> *<name>tc</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glReplacementCodeuiVertex3fSUN</name></proto>
-            <param group="ReplacementCodeSUN"><ptype>GLuint</ptype> <name>rc</name></param>
+            <param group="TriangleListSUN"><ptype>GLuint</ptype> <name>rc</name></param>
             <param><ptype>GLfloat</ptype> <name>x</name></param>
             <param><ptype>GLfloat</ptype> <name>y</name></param>
             <param><ptype>GLfloat</ptype> <name>z</name></param>
         </command>
         <command>
             <proto>void <name>glReplacementCodeuiVertex3fvSUN</name></proto>
-            <param group="ReplacementCodeSUN" len="1">const <ptype>GLuint</ptype> *<name>rc</name></param>
+            <param group="TriangleListSUN" len="1">const <ptype>GLuint</ptype> *<name>rc</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glReplacementCodeuivSUN</name></proto>
-            <param len="COMPSIZE()">const <ptype>GLuint</ptype> *<name>code</name></param>
+            <param group="TriangleListSUN" len="COMPSIZE()">const <ptype>GLuint</ptype> *<name>code</name></param>
         </command>
         <command>
             <proto>void <name>glReplacementCodeusSUN</name></proto>
@@ -26885,7 +22601,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glRequestResidentProgramsNV</name></proto>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param len="n">const <ptype>GLuint</ptype> *<name>programs</name></param>
+            <param class="program" len="n">const <ptype>GLuint</ptype> *<name>programs</name></param>
             <glx type="render" opcode="4182"/>
         </command>
         <command>
@@ -26964,13 +22680,13 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glSampleCoverage</name></proto>
             <param><ptype>GLfloat</ptype> <name>value</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>invert</name></param>
+            <param><ptype>GLboolean</ptype> <name>invert</name></param>
             <glx type="render" opcode="229"/>
         </command>
         <command>
             <proto>void <name>glSampleCoverageARB</name></proto>
             <param><ptype>GLfloat</ptype> <name>value</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>invert</name></param>
+            <param><ptype>GLboolean</ptype> <name>invert</name></param>
             <alias name="glSampleCoverage"/>
         </command>
         <command>
@@ -26985,24 +22701,24 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glSampleMapATI</name></proto>
-            <param><ptype>GLuint</ptype> <name>dst</name></param>
-            <param><ptype>GLuint</ptype> <name>interp</name></param>
+            <param group="FragmentShaderRegATI"><ptype>GLuint</ptype> <name>dst</name></param>
+            <param group="FragmentShaderTextureSourceATI"><ptype>GLuint</ptype> <name>interp</name></param>
             <param group="SwizzleOpATI"><ptype>GLenum</ptype> <name>swizzle</name></param>
         </command>
         <command>
             <proto>void <name>glSampleMaskEXT</name></proto>
-            <param group="ClampedFloat32"><ptype>GLclampf</ptype> <name>value</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>invert</name></param>
+            <param kind="Clamped[0; 1]"><ptype>GLclampf</ptype> <name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>invert</name></param>
         </command>
         <command>
             <proto>void <name>glSampleMaskIndexedNV</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param group="SampleMaskNV"><ptype>GLbitfield</ptype> <name>mask</name></param>
+            <param><ptype>GLbitfield</ptype> <name>mask</name></param>
         </command>
         <command>
             <proto>void <name>glSampleMaskSGIS</name></proto>
-            <param group="ClampedFloat32"><ptype>GLclampf</ptype> <name>value</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>invert</name></param>
+            <param kind="Clamped[0; 1]"><ptype>GLclampf</ptype> <name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>invert</name></param>
             <alias name="glSampleMaskEXT"/>
             <glx type="render" opcode="2048"/>
         </command>
@@ -27023,65 +22739,65 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glSamplerParameterIiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterI"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>param</name></param>
         </command>
         <command>
             <proto>void <name>glSamplerParameterIivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterI"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>param</name></param>
             <alias name="glSamplerParameterIiv"/>
         </command>
         <command>
             <proto>void <name>glSamplerParameterIivOES</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterI"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>param</name></param>
             <alias name="glSamplerParameterIiv"/>
         </command>
         <command>
             <proto>void <name>glSamplerParameterIuiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterI"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)">const <ptype>GLuint</ptype> *<name>param</name></param>
         </command>
         <command>
             <proto>void <name>glSamplerParameterIuivEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterI"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)">const <ptype>GLuint</ptype> *<name>param</name></param>
             <alias name="glSamplerParameterIuiv"/>
         </command>
         <command>
             <proto>void <name>glSamplerParameterIuivOES</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterI"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)">const <ptype>GLuint</ptype> *<name>param</name></param>
             <alias name="glSamplerParameterIuiv"/>
         </command>
         <command>
             <proto>void <name>glSamplerParameterf</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterF"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLfloat</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glSamplerParameterfv</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterF"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>param</name></param>
         </command>
         <command>
             <proto>void <name>glSamplerParameteri</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterI"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glSamplerParameteriv</name></proto>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param group="SamplerParameterI"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>param</name></param>
         </command>
@@ -27113,8 +22829,8 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glScissor</name></proto>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <glx type="render" opcode="103"/>
@@ -27147,8 +22863,8 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glScissorExclusiveNV</name></proto>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
         </command>
@@ -27197,221 +22913,221 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glSecondaryColor3b</name></proto>
-            <param group="ColorB"><ptype>GLbyte</ptype> <name>red</name></param>
-            <param group="ColorB"><ptype>GLbyte</ptype> <name>green</name></param>
-            <param group="ColorB"><ptype>GLbyte</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLbyte</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLbyte</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLbyte</ptype> <name>blue</name></param>
             <vecequiv name="glSecondaryColor3bv"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3bEXT</name></proto>
-            <param group="ColorB"><ptype>GLbyte</ptype> <name>red</name></param>
-            <param group="ColorB"><ptype>GLbyte</ptype> <name>green</name></param>
-            <param group="ColorB"><ptype>GLbyte</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLbyte</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLbyte</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLbyte</ptype> <name>blue</name></param>
             <alias name="glSecondaryColor3b"/>
             <vecequiv name="glSecondaryColor3bvEXT"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3bv</name></proto>
-            <param group="ColorB" len="3">const <ptype>GLbyte</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLbyte</ptype> *<name>v</name></param>
             <glx type="render" opcode="4126"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3bvEXT</name></proto>
-            <param group="ColorB" len="3">const <ptype>GLbyte</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLbyte</ptype> *<name>v</name></param>
             <alias name="glSecondaryColor3bv"/>
             <glx type="render" opcode="4126"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3d</name></proto>
-            <param group="ColorD"><ptype>GLdouble</ptype> <name>red</name></param>
-            <param group="ColorD"><ptype>GLdouble</ptype> <name>green</name></param>
-            <param group="ColorD"><ptype>GLdouble</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLdouble</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLdouble</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLdouble</ptype> <name>blue</name></param>
             <vecequiv name="glSecondaryColor3dv"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3dEXT</name></proto>
-            <param group="ColorD"><ptype>GLdouble</ptype> <name>red</name></param>
-            <param group="ColorD"><ptype>GLdouble</ptype> <name>green</name></param>
-            <param group="ColorD"><ptype>GLdouble</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLdouble</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLdouble</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLdouble</ptype> <name>blue</name></param>
             <alias name="glSecondaryColor3d"/>
             <vecequiv name="glSecondaryColor3dvEXT"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3dv</name></proto>
-            <param group="ColorD" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="4130"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3dvEXT</name></proto>
-            <param group="ColorD" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <alias name="glSecondaryColor3dv"/>
             <glx type="render" opcode="4130"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3f</name></proto>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>red</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>green</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>blue</name></param>
             <vecequiv name="glSecondaryColor3fv"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3fEXT</name></proto>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>red</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>green</name></param>
-            <param group="ColorF"><ptype>GLfloat</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>blue</name></param>
             <alias name="glSecondaryColor3f"/>
             <vecequiv name="glSecondaryColor3fvEXT"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3fv</name></proto>
-            <param group="ColorF" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="4129"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3fvEXT</name></proto>
-            <param group="ColorF" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <alias name="glSecondaryColor3fv"/>
             <glx type="render" opcode="4129"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3hNV</name></proto>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>red</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>green</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLhalfNV</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLhalfNV</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLhalfNV</ptype> <name>blue</name></param>
             <vecequiv name="glSecondaryColor3hvNV"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3hvNV</name></proto>
-            <param group="Half16NV" len="3">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4255"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3i</name></proto>
-            <param group="ColorI"><ptype>GLint</ptype> <name>red</name></param>
-            <param group="ColorI"><ptype>GLint</ptype> <name>green</name></param>
-            <param group="ColorI"><ptype>GLint</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLint</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLint</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLint</ptype> <name>blue</name></param>
             <vecequiv name="glSecondaryColor3iv"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3iEXT</name></proto>
-            <param group="ColorI"><ptype>GLint</ptype> <name>red</name></param>
-            <param group="ColorI"><ptype>GLint</ptype> <name>green</name></param>
-            <param group="ColorI"><ptype>GLint</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLint</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLint</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLint</ptype> <name>blue</name></param>
             <alias name="glSecondaryColor3i"/>
             <vecequiv name="glSecondaryColor3ivEXT"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3iv</name></proto>
-            <param group="ColorI" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="4128"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3ivEXT</name></proto>
-            <param group="ColorI" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
             <alias name="glSecondaryColor3iv"/>
             <glx type="render" opcode="4128"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3s</name></proto>
-            <param group="ColorS"><ptype>GLshort</ptype> <name>red</name></param>
-            <param group="ColorS"><ptype>GLshort</ptype> <name>green</name></param>
-            <param group="ColorS"><ptype>GLshort</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLshort</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLshort</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLshort</ptype> <name>blue</name></param>
             <vecequiv name="glSecondaryColor3sv"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3sEXT</name></proto>
-            <param group="ColorS"><ptype>GLshort</ptype> <name>red</name></param>
-            <param group="ColorS"><ptype>GLshort</ptype> <name>green</name></param>
-            <param group="ColorS"><ptype>GLshort</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLshort</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLshort</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLshort</ptype> <name>blue</name></param>
             <alias name="glSecondaryColor3s"/>
             <vecequiv name="glSecondaryColor3svEXT"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3sv</name></proto>
-            <param group="ColorS" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="4127"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3svEXT</name></proto>
-            <param group="ColorS" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
             <alias name="glSecondaryColor3sv"/>
             <glx type="render" opcode="4127"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3ub</name></proto>
-            <param group="ColorUB"><ptype>GLubyte</ptype> <name>red</name></param>
-            <param group="ColorUB"><ptype>GLubyte</ptype> <name>green</name></param>
-            <param group="ColorUB"><ptype>GLubyte</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>blue</name></param>
             <vecequiv name="glSecondaryColor3ubv"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3ubEXT</name></proto>
-            <param group="ColorUB"><ptype>GLubyte</ptype> <name>red</name></param>
-            <param group="ColorUB"><ptype>GLubyte</ptype> <name>green</name></param>
-            <param group="ColorUB"><ptype>GLubyte</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>blue</name></param>
             <alias name="glSecondaryColor3ub"/>
             <vecequiv name="glSecondaryColor3ubvEXT"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3ubv</name></proto>
-            <param group="ColorUB" len="3">const <ptype>GLubyte</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLubyte</ptype> *<name>v</name></param>
             <glx type="render" opcode="4131"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3ubvEXT</name></proto>
-            <param group="ColorUB" len="3">const <ptype>GLubyte</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLubyte</ptype> *<name>v</name></param>
             <alias name="glSecondaryColor3ubv"/>
             <glx type="render" opcode="4131"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3ui</name></proto>
-            <param group="ColorUI"><ptype>GLuint</ptype> <name>red</name></param>
-            <param group="ColorUI"><ptype>GLuint</ptype> <name>green</name></param>
-            <param group="ColorUI"><ptype>GLuint</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>blue</name></param>
             <vecequiv name="glSecondaryColor3uiv"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3uiEXT</name></proto>
-            <param group="ColorUI"><ptype>GLuint</ptype> <name>red</name></param>
-            <param group="ColorUI"><ptype>GLuint</ptype> <name>green</name></param>
-            <param group="ColorUI"><ptype>GLuint</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>blue</name></param>
             <alias name="glSecondaryColor3ui"/>
             <vecequiv name="glSecondaryColor3uivEXT"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3uiv</name></proto>
-            <param group="ColorUI" len="3">const <ptype>GLuint</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLuint</ptype> *<name>v</name></param>
             <glx type="render" opcode="4133"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3uivEXT</name></proto>
-            <param group="ColorUI" len="3">const <ptype>GLuint</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLuint</ptype> *<name>v</name></param>
             <alias name="glSecondaryColor3uiv"/>
             <glx type="render" opcode="4133"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3us</name></proto>
-            <param group="ColorUS"><ptype>GLushort</ptype> <name>red</name></param>
-            <param group="ColorUS"><ptype>GLushort</ptype> <name>green</name></param>
-            <param group="ColorUS"><ptype>GLushort</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLushort</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLushort</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLushort</ptype> <name>blue</name></param>
             <vecequiv name="glSecondaryColor3usv"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3usEXT</name></proto>
-            <param group="ColorUS"><ptype>GLushort</ptype> <name>red</name></param>
-            <param group="ColorUS"><ptype>GLushort</ptype> <name>green</name></param>
-            <param group="ColorUS"><ptype>GLushort</ptype> <name>blue</name></param>
+            <param kind="Color"><ptype>GLushort</ptype> <name>red</name></param>
+            <param kind="Color"><ptype>GLushort</ptype> <name>green</name></param>
+            <param kind="Color"><ptype>GLushort</ptype> <name>blue</name></param>
             <alias name="glSecondaryColor3us"/>
             <vecequiv name="glSecondaryColor3usvEXT"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3usv</name></proto>
-            <param group="ColorUS" len="3">const <ptype>GLushort</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLushort</ptype> *<name>v</name></param>
             <glx type="render" opcode="4132"/>
         </command>
         <command>
             <proto>void <name>glSecondaryColor3usvEXT</name></proto>
-            <param group="ColorUS" len="3">const <ptype>GLushort</ptype> *<name>v</name></param>
+            <param kind="Color" len="3">const <ptype>GLushort</ptype> *<name>v</name></param>
             <alias name="glSecondaryColor3usv"/>
             <glx type="render" opcode="4132"/>
         </command>
@@ -27424,12 +23140,12 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glSecondaryColorP3ui</name></proto>
             <param group="ColorPointerType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param><ptype>GLuint</ptype> <name>color</name></param>
+            <param kind="Color"><ptype>GLuint</ptype> <name>color</name></param>
         </command>
         <command>
             <proto>void <name>glSecondaryColorP3uiv</name></proto>
             <param group="ColorPointerType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param len="1">const <ptype>GLuint</ptype> *<name>color</name></param>
+            <param kind="Color" len="1">const <ptype>GLuint</ptype> *<name>color</name></param>
         </command>
         <command>
             <proto>void <name>glSecondaryColorPointer</name></proto>
@@ -27457,17 +23173,23 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glSelectBuffer</name></proto>
             <param><ptype>GLsizei</ptype> <name>size</name></param>
-            <param group="SelectName" len="size"><ptype>GLuint</ptype> *<name>buffer</name></param>
+            <param kind="SelectName" len="size"><ptype>GLuint</ptype> *<name>buffer</name></param>
             <glx type="single" opcode="106"/>
         </command>
         <command>
             <proto>void <name>glSelectPerfMonitorCountersAMD</name></proto>
             <param><ptype>GLuint</ptype> <name>monitor</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>enable</name></param>
+            <param><ptype>GLboolean</ptype> <name>enable</name></param>
             <param><ptype>GLuint</ptype> <name>group</name></param>
             <param><ptype>GLint</ptype> <name>numCounters</name></param>
             <param len="numCounters"><ptype>GLuint</ptype> *<name>counterList</name></param>
         </command>
+        <command>
+            <proto>void <name>glSemaphoreParameterivNV</name></proto>
+            <param><ptype>GLuint</ptype> <name>semaphore</name></param>
+            <param group="SemaphoreParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
+            <param>const <ptype>GLint</ptype> *<name>params</name></param>
+        </command>
         <command>
             <proto>void <name>glSemaphoreParameterui64vEXT</name></proto>
             <param><ptype>GLuint</ptype> <name>semaphore</name></param>
@@ -27502,16 +23224,16 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glSetFenceAPPLE</name></proto>
-            <param group="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
+            <param kind="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
         </command>
         <command>
             <proto>void <name>glSetFenceNV</name></proto>
-            <param group="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
+            <param kind="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
             <param group="FenceConditionNV"><ptype>GLenum</ptype> <name>condition</name></param>
         </command>
         <command>
             <proto>void <name>glSetFragmentShaderConstantATI</name></proto>
-            <param><ptype>GLuint</ptype> <name>dst</name></param>
+            <param group="FragmentShaderConATI"><ptype>GLuint</ptype> <name>dst</name></param>
             <param len="4">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
@@ -27540,8 +23262,8 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glShaderBinary</name></proto>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLuint</ptype> *<name>shaders</name></param>
-            <param><ptype>GLenum</ptype> <name>binaryformat</name></param>
+            <param class="shader" len="count">const <ptype>GLuint</ptype> *<name>shaders</name></param>
+            <param group="ShaderBinaryFormat"><ptype>GLenum</ptype> <name>binaryFormat</name></param>
             <param len="length">const void *<name>binary</name></param>
             <param><ptype>GLsizei</ptype> <name>length</name></param>
         </command>
@@ -27568,14 +23290,14 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glShaderSource</name></proto>
-            <param><ptype>GLuint</ptype> <name>shader</name></param>
+            <param class="shader"><ptype>GLuint</ptype> <name>shader</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param len="count">const <ptype>GLchar</ptype> *const*<name>string</name></param>
             <param len="count">const <ptype>GLint</ptype> *<name>length</name></param>
         </command>
         <command>
             <proto>void <name>glShaderSourceARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>shaderObj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>shaderObj</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param len="count">const <ptype>GLcharARB</ptype> **<name>string</name></param>
             <param len="count">const <ptype>GLint</ptype> *<name>length</name></param>
@@ -27583,14 +23305,27 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glShaderStorageBlockBinding</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLuint</ptype> <name>storageBlockIndex</name></param>
             <param><ptype>GLuint</ptype> <name>storageBlockBinding</name></param>
         </command>
+        <command>
+            <proto>void <name>glShadingRateEXT</name></proto>
+            <param group="ShadingRate"><ptype>GLenum</ptype> <name>rate</name></param>
+        </command>
+        <command>
+            <proto>void <name>glShadingRateCombinerOpsEXT</name></proto>
+            <param group="ShadingRateCombinerOp"><ptype>GLenum</ptype> <name>combinerOp0</name></param>
+            <param group="ShadingRateCombinerOp"><ptype>GLenum</ptype> <name>combinerOp1</name></param>
+        </command>
         <command>
             <proto>void <name>glShadingRateImageBarrierNV</name></proto>
             <param><ptype>GLboolean</ptype> <name>synchronize</name></param>
         </command>
+        <command>
+            <proto>void <name>glShadingRateQCOM</name></proto>
+            <param group="ShadingRateQCOM"><ptype>GLenum</ptype> <name>rate</name></param>
+        </command>
         <command>
             <proto>void <name>glShadingRateImagePaletteNV</name></proto>
             <param><ptype>GLuint</ptype> <name>viewport</name></param>
@@ -27619,9 +23354,9 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glSignalSemaphoreEXT</name></proto>
             <param><ptype>GLuint</ptype> <name>semaphore</name></param>
             <param><ptype>GLuint</ptype> <name>numBufferBarriers</name></param>
-            <param len="COMPSIZE(numBufferBarriers)">const <ptype>GLuint</ptype> *<name>buffers</name></param>
+            <param class="buffer" len="COMPSIZE(numBufferBarriers)">const <ptype>GLuint</ptype> *<name>buffers</name></param>
             <param><ptype>GLuint</ptype> <name>numTextureBarriers</name></param>
-            <param len="COMPSIZE(numTextureBarriers)">const <ptype>GLuint</ptype> *<name>textures</name></param>
+            <param class="texture" len="COMPSIZE(numTextureBarriers)">const <ptype>GLuint</ptype> *<name>textures</name></param>
             <param group="TextureLayout" len="COMPSIZE(numTextureBarriers)">const <ptype>GLenum</ptype> *<name>dstLayouts</name></param>
         </command>
         <command>
@@ -27633,15 +23368,15 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glSpecializeShader</name></proto>
-            <param><ptype>GLuint</ptype> <name>shader</name></param>
+            <param class="shader"><ptype>GLuint</ptype> <name>shader</name></param>
             <param>const <ptype>GLchar</ptype> *<name>pEntryPoint</name></param>
             <param><ptype>GLuint</ptype> <name>numSpecializationConstants</name></param>
-            <param>const <ptype>GLuint</ptype> *<name>pConstantIndex</name></param>
-            <param>const <ptype>GLuint</ptype> *<name>pConstantValue</name></param>
+            <param len="numSpecializationConstants">const <ptype>GLuint</ptype> *<name>pConstantIndex</name></param>
+            <param len="numSpecializationConstants">const <ptype>GLuint</ptype> *<name>pConstantValue</name></param>
         </command>
         <command>
             <proto>void <name>glSpecializeShaderARB</name></proto>
-            <param><ptype>GLuint</ptype> <name>shader</name></param>
+            <param class="shader"><ptype>GLuint</ptype> <name>shader</name></param>
             <param>const <ptype>GLchar</ptype> *<name>pEntryPoint</name></param>
             <param><ptype>GLuint</ptype> <name>numSpecializationConstants</name></param>
             <param>const <ptype>GLuint</ptype> *<name>pConstantIndex</name></param>
@@ -27651,25 +23386,25 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glSpriteParameterfSGIX</name></proto>
             <param group="SpriteParameterNameSGIX"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param><ptype>GLfloat</ptype> <name>param</name></param>
             <glx type="render" opcode="2060"/>
         </command>
         <command>
             <proto>void <name>glSpriteParameterfvSGIX</name></proto>
             <param group="SpriteParameterNameSGIX"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="render" opcode="2061"/>
         </command>
         <command>
             <proto>void <name>glSpriteParameteriSGIX</name></proto>
             <param group="SpriteParameterNameSGIX"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param group="SpriteModeSGIX"><ptype>GLint</ptype> <name>param</name></param>
             <glx type="render" opcode="2062"/>
         </command>
         <command>
             <proto>void <name>glSpriteParameterivSGIX</name></proto>
             <param group="SpriteParameterNameSGIX"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param group="SpriteModeSGIX" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
             <glx type="render" opcode="2063"/>
         </command>
         <command>
@@ -27699,49 +23434,49 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glStencilFillPathInstancedNV</name></proto>
             <param><ptype>GLsizei</ptype> <name>numPaths</name></param>
             <param group="PathElementType"><ptype>GLenum</ptype> <name>pathNameType</name></param>
-            <param group="PathElement" len="COMPSIZE(numPaths,pathNameType,paths)">const void *<name>paths</name></param>
-            <param group="Path"><ptype>GLuint</ptype> <name>pathBase</name></param>
+            <param len="COMPSIZE(numPaths,pathNameType,paths)">const void *<name>paths</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>pathBase</name></param>
             <param group="PathFillMode"><ptype>GLenum</ptype> <name>fillMode</name></param>
-            <param group="MaskedStencilValue"><ptype>GLuint</ptype> <name>mask</name></param>
+            <param kind="StencilMask"><ptype>GLuint</ptype> <name>mask</name></param>
             <param group="PathTransformType"><ptype>GLenum</ptype> <name>transformType</name></param>
             <param len="COMPSIZE(numPaths,transformType)">const <ptype>GLfloat</ptype> *<name>transformValues</name></param>
         </command>
         <command>
             <proto>void <name>glStencilFillPathNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
             <param group="PathFillMode"><ptype>GLenum</ptype> <name>fillMode</name></param>
-            <param group="MaskedStencilValue"><ptype>GLuint</ptype> <name>mask</name></param>
+            <param kind="StencilMask"><ptype>GLuint</ptype> <name>mask</name></param>
         </command>
         <command>
             <proto>void <name>glStencilFunc</name></proto>
             <param group="StencilFunction"><ptype>GLenum</ptype> <name>func</name></param>
-            <param group="StencilValue"><ptype>GLint</ptype> <name>ref</name></param>
-            <param group="MaskedStencilValue"><ptype>GLuint</ptype> <name>mask</name></param>
+            <param kind="StencilValue"><ptype>GLint</ptype> <name>ref</name></param>
+            <param kind="StencilMask"><ptype>GLuint</ptype> <name>mask</name></param>
             <glx type="render" opcode="162"/>
         </command>
         <command>
             <proto>void <name>glStencilFuncSeparate</name></proto>
-            <param group="StencilFaceDirection"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="StencilFunction"><ptype>GLenum</ptype> <name>func</name></param>
-            <param group="StencilValue"><ptype>GLint</ptype> <name>ref</name></param>
-            <param group="MaskedStencilValue"><ptype>GLuint</ptype> <name>mask</name></param>
+            <param kind="StencilValue"><ptype>GLint</ptype> <name>ref</name></param>
+            <param kind="StencilMask"><ptype>GLuint</ptype> <name>mask</name></param>
         </command>
         <command>
             <proto>void <name>glStencilFuncSeparateATI</name></proto>
             <param group="StencilFunction"><ptype>GLenum</ptype> <name>frontfunc</name></param>
             <param group="StencilFunction"><ptype>GLenum</ptype> <name>backfunc</name></param>
-            <param group="ClampedStencilValue"><ptype>GLint</ptype> <name>ref</name></param>
-            <param group="MaskedStencilValue"><ptype>GLuint</ptype> <name>mask</name></param>
+            <param kind="StencilValue"><ptype>GLint</ptype> <name>ref</name></param>
+            <param kind="StencilMask"><ptype>GLuint</ptype> <name>mask</name></param>
         </command>
         <command>
             <proto>void <name>glStencilMask</name></proto>
-            <param group="MaskedStencilValue"><ptype>GLuint</ptype> <name>mask</name></param>
+            <param kind="StencilMask"><ptype>GLuint</ptype> <name>mask</name></param>
             <glx type="render" opcode="133"/>
         </command>
         <command>
             <proto>void <name>glStencilMaskSeparate</name></proto>
-            <param group="StencilFaceDirection"><ptype>GLenum</ptype> <name>face</name></param>
-            <param group="MaskedStencilValue"><ptype>GLuint</ptype> <name>mask</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param kind="StencilMask"><ptype>GLuint</ptype> <name>mask</name></param>
         </command>
         <command>
             <proto>void <name>glStencilOp</name></proto>
@@ -27752,14 +23487,14 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glStencilOpSeparate</name></proto>
-            <param group="StencilFaceDirection"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="StencilOp"><ptype>GLenum</ptype> <name>sfail</name></param>
             <param group="StencilOp"><ptype>GLenum</ptype> <name>dpfail</name></param>
             <param group="StencilOp"><ptype>GLenum</ptype> <name>dppass</name></param>
         </command>
         <command>
             <proto>void <name>glStencilOpSeparateATI</name></proto>
-            <param group="StencilFaceDirection"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="StencilOp"><ptype>GLenum</ptype> <name>sfail</name></param>
             <param group="StencilOp"><ptype>GLenum</ptype> <name>dpfail</name></param>
             <param group="StencilOp"><ptype>GLenum</ptype> <name>dppass</name></param>
@@ -27767,63 +23502,63 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glStencilOpValueAMD</name></proto>
-            <param group="StencilFaceDirection"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param><ptype>GLuint</ptype> <name>value</name></param>
         </command>
         <command>
             <proto>void <name>glStencilStrokePathInstancedNV</name></proto>
             <param><ptype>GLsizei</ptype> <name>numPaths</name></param>
             <param group="PathElementType"><ptype>GLenum</ptype> <name>pathNameType</name></param>
-            <param group="PathElement" len="COMPSIZE(numPaths,pathNameType,paths)">const void *<name>paths</name></param>
-            <param group="Path"><ptype>GLuint</ptype> <name>pathBase</name></param>
-            <param group="StencilValue"><ptype>GLint</ptype> <name>reference</name></param>
-            <param group="MaskedStencilValue"><ptype>GLuint</ptype> <name>mask</name></param>
+            <param len="COMPSIZE(numPaths,pathNameType,paths)">const void *<name>paths</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>pathBase</name></param>
+            <param kind="StencilValue"><ptype>GLint</ptype> <name>reference</name></param>
+            <param kind="StencilMask"><ptype>GLuint</ptype> <name>mask</name></param>
             <param group="PathTransformType"><ptype>GLenum</ptype> <name>transformType</name></param>
             <param len="COMPSIZE(numPaths,transformType)">const <ptype>GLfloat</ptype> *<name>transformValues</name></param>
         </command>
         <command>
             <proto>void <name>glStencilStrokePathNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>path</name></param>
-            <param group="StencilValue"><ptype>GLint</ptype> <name>reference</name></param>
-            <param group="MaskedStencilValue"><ptype>GLuint</ptype> <name>mask</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="StencilValue"><ptype>GLint</ptype> <name>reference</name></param>
+            <param kind="StencilMask"><ptype>GLuint</ptype> <name>mask</name></param>
         </command>
         <command>
             <proto>void <name>glStencilThenCoverFillPathInstancedNV</name></proto>
             <param><ptype>GLsizei</ptype> <name>numPaths</name></param>
-            <param><ptype>GLenum</ptype> <name>pathNameType</name></param>
-            <param>const void *<name>paths</name></param>
-            <param><ptype>GLuint</ptype> <name>pathBase</name></param>
-            <param><ptype>GLenum</ptype> <name>fillMode</name></param>
-            <param><ptype>GLuint</ptype> <name>mask</name></param>
-            <param><ptype>GLenum</ptype> <name>coverMode</name></param>
-            <param><ptype>GLenum</ptype> <name>transformType</name></param>
-            <param>const <ptype>GLfloat</ptype> *<name>transformValues</name></param>
+            <param group="PathElementType"><ptype>GLenum</ptype> <name>pathNameType</name></param>
+            <param len="COMPSIZE(numPaths,pathNameType,paths)">const void *<name>paths</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>pathBase</name></param>
+            <param group="PathFillMode"><ptype>GLenum</ptype> <name>fillMode</name></param>
+            <param kind="StencilMask"><ptype>GLuint</ptype> <name>mask</name></param>
+            <param group="InstancedPathCoverMode"><ptype>GLenum</ptype> <name>coverMode</name></param>
+            <param group="PathTransformType"><ptype>GLenum</ptype> <name>transformType</name></param>
+            <param len="COMPSIZE(numPaths,transformType)">const <ptype>GLfloat</ptype> *<name>transformValues</name></param>
         </command>
         <command>
             <proto>void <name>glStencilThenCoverFillPathNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>path</name></param>
-            <param><ptype>GLenum</ptype> <name>fillMode</name></param>
-            <param><ptype>GLuint</ptype> <name>mask</name></param>
-            <param><ptype>GLenum</ptype> <name>coverMode</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param group="PathFillMode"><ptype>GLenum</ptype> <name>fillMode</name></param>
+            <param kind="StencilValue"><ptype>GLuint</ptype> <name>mask</name></param>
+            <param group="PathCoverMode"><ptype>GLenum</ptype> <name>coverMode</name></param>
         </command>
         <command>
             <proto>void <name>glStencilThenCoverStrokePathInstancedNV</name></proto>
             <param><ptype>GLsizei</ptype> <name>numPaths</name></param>
-            <param><ptype>GLenum</ptype> <name>pathNameType</name></param>
-            <param>const void *<name>paths</name></param>
-            <param><ptype>GLuint</ptype> <name>pathBase</name></param>
-            <param><ptype>GLint</ptype> <name>reference</name></param>
-            <param><ptype>GLuint</ptype> <name>mask</name></param>
-            <param><ptype>GLenum</ptype> <name>coverMode</name></param>
-            <param><ptype>GLenum</ptype> <name>transformType</name></param>
-            <param>const <ptype>GLfloat</ptype> *<name>transformValues</name></param>
+            <param group="PathElementType"><ptype>GLenum</ptype> <name>pathNameType</name></param>
+            <param len="COMPSIZE(numPaths,pathNameType,paths)">const void *<name>paths</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>pathBase</name></param>
+            <param kind="StencilValue"><ptype>GLint</ptype> <name>reference</name></param>
+            <param kind="StencilMask"><ptype>GLuint</ptype> <name>mask</name></param>
+            <param group="InstancedPathCoverMode"><ptype>GLenum</ptype> <name>coverMode</name></param>
+            <param group="PathTransformType"><ptype>GLenum</ptype> <name>transformType</name></param>
+            <param len="COMPSIZE(numPaths,transformType)">const <ptype>GLfloat</ptype> *<name>transformValues</name></param>
         </command>
         <command>
             <proto>void <name>glStencilThenCoverStrokePathNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>path</name></param>
-            <param><ptype>GLint</ptype> <name>reference</name></param>
-            <param><ptype>GLuint</ptype> <name>mask</name></param>
-            <param><ptype>GLenum</ptype> <name>coverMode</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>path</name></param>
+            <param kind="StencilValue"><ptype>GLint</ptype> <name>reference</name></param>
+            <param kind="StencilMask"><ptype>GLuint</ptype> <name>mask</name></param>
+            <param group="PathCoverMode"><ptype>GLenum</ptype> <name>coverMode</name></param>
         </command>
         <command>
             <proto>void <name>glStopInstrumentsSGIX</name></proto>
@@ -27851,7 +23586,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glSyncTextureINTEL</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
         </command>
         <command>
             <proto>void <name>glTagSampleBufferSGIX</name></proto>
@@ -27870,25 +23605,25 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTangent3dEXT</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>tx</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>ty</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>tz</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>tx</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>ty</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>tz</name></param>
             <vecequiv name="glTangent3dvEXT"/>
         </command>
         <command>
             <proto>void <name>glTangent3dvEXT</name></proto>
-            <param group="CoordD" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glTangent3fEXT</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>tx</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>ty</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>tz</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>tx</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>ty</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>tz</name></param>
             <vecequiv name="glTangent3fvEXT"/>
         </command>
         <command>
             <proto>void <name>glTangent3fvEXT</name></proto>
-            <param group="CoordF" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glTangent3iEXT</name></proto>
@@ -27931,16 +23666,16 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLenum</ptype> <name>mode</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glTestFenceAPPLE</name></proto>
-            <param group="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glTestFenceAPPLE</name></proto>
+            <param kind="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glTestFenceNV</name></proto>
-            <param group="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glTestFenceNV</name></proto>
+            <param kind="FenceNV"><ptype>GLuint</ptype> <name>fence</name></param>
             <glx type="vendor" opcode="1279"/>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glTestObjectAPPLE</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glTestObjectAPPLE</name></proto>
             <param group="ObjectTypeAPPLE"><ptype>GLenum</ptype> <name>object</name></param>
             <param><ptype>GLuint</ptype> <name>name</name></param>
         </command>
@@ -27953,55 +23688,55 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexBuffer</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
             <proto>void <name>glTexBufferARB</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <alias name="glTexBuffer"/>
             <glx type="render" opcode="367"/>
         </command>
         <command>
             <proto>void <name>glTexBufferEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <alias name="glTexBuffer"/>
         </command>
         <command>
             <proto>void <name>glTexBufferOES</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <alias name="glTexBuffer"/>
         </command>
         <command>
             <proto>void <name>glTexBufferRange</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
         </command>
         <command>
             <proto>void <name>glTexBufferRangeEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <alias name="glTexBufferRange"/>
         </command>
         <command>
             <proto>void <name>glTexBufferRangeOES</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
             <alias name="glTexBufferRange"/>
         </command>
         <command>
@@ -28024,52 +23759,52 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTexCoord1d</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>s</name></param>
             <vecequiv name="glTexCoord1dv"/>
         </command>
         <command>
             <proto>void <name>glTexCoord1dv</name></proto>
-            <param group="CoordD" len="1">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="1">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="49"/>
         </command>
         <command>
             <proto>void <name>glTexCoord1f</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>s</name></param>
             <vecequiv name="glTexCoord1fv"/>
         </command>
         <command>
             <proto>void <name>glTexCoord1fv</name></proto>
-            <param group="CoordF" len="1">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="1">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="50"/>
         </command>
         <command>
             <proto>void <name>glTexCoord1hNV</name></proto>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>s</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>s</name></param>
             <vecequiv name="glTexCoord1hvNV"/>
         </command>
         <command>
             <proto>void <name>glTexCoord1hvNV</name></proto>
-            <param group="Half16NV" len="1">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="1">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4246"/>
         </command>
         <command>
             <proto>void <name>glTexCoord1i</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>s</name></param>
             <vecequiv name="glTexCoord1iv"/>
         </command>
         <command>
             <proto>void <name>glTexCoord1iv</name></proto>
-            <param group="CoordI" len="1">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="1">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="51"/>
         </command>
         <command>
             <proto>void <name>glTexCoord1s</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>s</name></param>
             <vecequiv name="glTexCoord1sv"/>
         </command>
         <command>
             <proto>void <name>glTexCoord1sv</name></proto>
-            <param group="CoordS" len="1">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="1">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="52"/>
         </command>
         <command>
@@ -28091,28 +23826,28 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTexCoord2d</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>s</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>t</name></param>
             <vecequiv name="glTexCoord2dv"/>
         </command>
         <command>
             <proto>void <name>glTexCoord2dv</name></proto>
-            <param group="CoordD" len="2">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="53"/>
         </command>
         <command>
             <proto>void <name>glTexCoord2f</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>s</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>t</name></param>
             <vecequiv name="glTexCoord2fv"/>
         </command>
         <command>
             <proto>void <name>glTexCoord2fColor3fVertex3fSUN</name></proto>
             <param><ptype>GLfloat</ptype> <name>s</name></param>
             <param><ptype>GLfloat</ptype> <name>t</name></param>
-            <param><ptype>GLfloat</ptype> <name>r</name></param>
-            <param><ptype>GLfloat</ptype> <name>g</name></param>
-            <param><ptype>GLfloat</ptype> <name>b</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>r</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>g</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>b</name></param>
             <param><ptype>GLfloat</ptype> <name>x</name></param>
             <param><ptype>GLfloat</ptype> <name>y</name></param>
             <param><ptype>GLfloat</ptype> <name>z</name></param>
@@ -28120,17 +23855,17 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexCoord2fColor3fVertex3fvSUN</name></proto>
             <param len="2">const <ptype>GLfloat</ptype> *<name>tc</name></param>
-            <param len="3">const <ptype>GLfloat</ptype> *<name>c</name></param>
+            <param kind="Color" len="3">const <ptype>GLfloat</ptype> *<name>c</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glTexCoord2fColor4fNormal3fVertex3fSUN</name></proto>
             <param><ptype>GLfloat</ptype> <name>s</name></param>
             <param><ptype>GLfloat</ptype> <name>t</name></param>
-            <param><ptype>GLfloat</ptype> <name>r</name></param>
-            <param><ptype>GLfloat</ptype> <name>g</name></param>
-            <param><ptype>GLfloat</ptype> <name>b</name></param>
-            <param><ptype>GLfloat</ptype> <name>a</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>r</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>g</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>b</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>a</name></param>
             <param><ptype>GLfloat</ptype> <name>nx</name></param>
             <param><ptype>GLfloat</ptype> <name>ny</name></param>
             <param><ptype>GLfloat</ptype> <name>nz</name></param>
@@ -28141,7 +23876,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexCoord2fColor4fNormal3fVertex3fvSUN</name></proto>
             <param len="2">const <ptype>GLfloat</ptype> *<name>tc</name></param>
-            <param len="4">const <ptype>GLfloat</ptype> *<name>c</name></param>
+            <param kind="Color" len="4">const <ptype>GLfloat</ptype> *<name>c</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>n</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
@@ -28149,10 +23884,10 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glTexCoord2fColor4ubVertex3fSUN</name></proto>
             <param><ptype>GLfloat</ptype> <name>s</name></param>
             <param><ptype>GLfloat</ptype> <name>t</name></param>
-            <param><ptype>GLubyte</ptype> <name>r</name></param>
-            <param><ptype>GLubyte</ptype> <name>g</name></param>
-            <param><ptype>GLubyte</ptype> <name>b</name></param>
-            <param><ptype>GLubyte</ptype> <name>a</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>r</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>g</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>b</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>a</name></param>
             <param><ptype>GLfloat</ptype> <name>x</name></param>
             <param><ptype>GLfloat</ptype> <name>y</name></param>
             <param><ptype>GLfloat</ptype> <name>z</name></param>
@@ -28160,7 +23895,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexCoord2fColor4ubVertex3fvSUN</name></proto>
             <param len="2">const <ptype>GLfloat</ptype> *<name>tc</name></param>
-            <param len="4">const <ptype>GLubyte</ptype> *<name>c</name></param>
+            <param kind="Color" len="4">const <ptype>GLubyte</ptype> *<name>c</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
@@ -28195,40 +23930,40 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTexCoord2fv</name></proto>
-            <param group="CoordF" len="2">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="54"/>
         </command>
         <command>
             <proto>void <name>glTexCoord2hNV</name></proto>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>s</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>t</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>s</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>t</name></param>
             <vecequiv name="glTexCoord2hvNV"/>
         </command>
         <command>
             <proto>void <name>glTexCoord2hvNV</name></proto>
-            <param group="Half16NV" len="2">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="2">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4247"/>
         </command>
         <command>
             <proto>void <name>glTexCoord2i</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>s</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>t</name></param>
             <vecequiv name="glTexCoord2iv"/>
         </command>
         <command>
             <proto>void <name>glTexCoord2iv</name></proto>
-            <param group="CoordI" len="2">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="55"/>
         </command>
         <command>
             <proto>void <name>glTexCoord2s</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>s</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>t</name></param>
             <vecequiv name="glTexCoord2sv"/>
         </command>
         <command>
             <proto>void <name>glTexCoord2sv</name></proto>
-            <param group="CoordS" len="2">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="56"/>
         </command>
         <command>
@@ -28252,62 +23987,62 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTexCoord3d</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>s</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>t</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>r</name></param>
             <vecequiv name="glTexCoord3dv"/>
         </command>
         <command>
             <proto>void <name>glTexCoord3dv</name></proto>
-            <param group="CoordD" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="57"/>
         </command>
         <command>
             <proto>void <name>glTexCoord3f</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>s</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>t</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>r</name></param>
             <vecequiv name="glTexCoord3fv"/>
         </command>
         <command>
             <proto>void <name>glTexCoord3fv</name></proto>
-            <param group="CoordF" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="58"/>
         </command>
         <command>
             <proto>void <name>glTexCoord3hNV</name></proto>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>s</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>t</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>r</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>s</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>t</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>r</name></param>
             <vecequiv name="glTexCoord3hvNV"/>
         </command>
         <command>
             <proto>void <name>glTexCoord3hvNV</name></proto>
-            <param group="Half16NV" len="3">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="3">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4248"/>
         </command>
         <command>
             <proto>void <name>glTexCoord3i</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>s</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>t</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>r</name></param>
             <vecequiv name="glTexCoord3iv"/>
         </command>
         <command>
             <proto>void <name>glTexCoord3iv</name></proto>
-            <param group="CoordI" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="59"/>
         </command>
         <command>
             <proto>void <name>glTexCoord3s</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>s</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>t</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>r</name></param>
             <vecequiv name="glTexCoord3sv"/>
         </command>
         <command>
             <proto>void <name>glTexCoord3sv</name></proto>
-            <param group="CoordS" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="60"/>
         </command>
         <command>
@@ -28333,23 +24068,23 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTexCoord4d</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>s</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>t</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>r</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>q</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>q</name></param>
             <vecequiv name="glTexCoord4dv"/>
         </command>
         <command>
             <proto>void <name>glTexCoord4dv</name></proto>
-            <param group="CoordD" len="4">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="61"/>
         </command>
         <command>
             <proto>void <name>glTexCoord4f</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>s</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>t</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>r</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>q</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>q</name></param>
             <vecequiv name="glTexCoord4fv"/>
         </command>
         <command>
@@ -28358,10 +24093,10 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLfloat</ptype> <name>t</name></param>
             <param><ptype>GLfloat</ptype> <name>p</name></param>
             <param><ptype>GLfloat</ptype> <name>q</name></param>
-            <param><ptype>GLfloat</ptype> <name>r</name></param>
-            <param><ptype>GLfloat</ptype> <name>g</name></param>
-            <param><ptype>GLfloat</ptype> <name>b</name></param>
-            <param><ptype>GLfloat</ptype> <name>a</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>r</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>g</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>b</name></param>
+            <param kind="Color"><ptype>GLfloat</ptype> <name>a</name></param>
             <param><ptype>GLfloat</ptype> <name>nx</name></param>
             <param><ptype>GLfloat</ptype> <name>ny</name></param>
             <param><ptype>GLfloat</ptype> <name>nz</name></param>
@@ -28373,7 +24108,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexCoord4fColor4fNormal3fVertex4fvSUN</name></proto>
             <param len="4">const <ptype>GLfloat</ptype> *<name>tc</name></param>
-            <param len="4">const <ptype>GLfloat</ptype> *<name>c</name></param>
+            <param kind="Color" len="4">const <ptype>GLfloat</ptype> *<name>c</name></param>
             <param len="3">const <ptype>GLfloat</ptype> *<name>n</name></param>
             <param len="4">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
@@ -28395,46 +24130,46 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTexCoord4fv</name></proto>
-            <param group="CoordF" len="4">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="62"/>
         </command>
         <command>
             <proto>void <name>glTexCoord4hNV</name></proto>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>s</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>t</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>r</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>q</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>s</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>t</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>r</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>q</name></param>
             <vecequiv name="glTexCoord4hvNV"/>
         </command>
         <command>
             <proto>void <name>glTexCoord4hvNV</name></proto>
-            <param group="Half16NV" len="4">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="4">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4249"/>
         </command>
         <command>
             <proto>void <name>glTexCoord4i</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>s</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>t</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>r</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>q</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>q</name></param>
             <vecequiv name="glTexCoord4iv"/>
         </command>
         <command>
             <proto>void <name>glTexCoord4iv</name></proto>
-            <param group="CoordI" len="4">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="63"/>
         </command>
         <command>
             <proto>void <name>glTexCoord4s</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>s</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>t</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>r</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>q</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>s</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>t</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>r</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>q</name></param>
             <vecequiv name="glTexCoord4sv"/>
         </command>
         <command>
             <proto>void <name>glTexCoord4sv</name></proto>
-            <param group="CoordS" len="4">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="64"/>
         </command>
         <command>
@@ -28527,28 +24262,28 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glTexEnvf</name></proto>
             <param group="TextureEnvTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureEnvParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
             <glx type="render" opcode="111"/>
         </command>
         <command>
             <proto>void <name>glTexEnvfv</name></proto>
             <param group="TextureEnvTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureEnvParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="render" opcode="112"/>
         </command>
         <command>
             <proto>void <name>glTexEnvi</name></proto>
             <param group="TextureEnvTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureEnvParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
             <glx type="render" opcode="113"/>
         </command>
         <command>
             <proto>void <name>glTexEnviv</name></proto>
             <param group="TextureEnvTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureEnvParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
             <glx type="render" opcode="114"/>
         </command>
         <command>
@@ -28575,6 +24310,26 @@ typedef unsigned int GLhandleARB;
             <param group="TextureEnvParameter"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)">const <ptype>GLfixed</ptype> *<name>params</name></param>
         </command>
+        <command>
+            <proto>void <name>glTexEstimateMotionQCOM</name></proto>
+            <param class="texture"><ptype>GLuint</ptype> <name>ref</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>target</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>output</name></param>
+        </command>
+        <command>
+            <proto>void <name>glTexEstimateMotionRegionsQCOM</name></proto>
+            <param class="texture"><ptype>GLuint</ptype> <name>ref</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>target</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>output</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>mask</name></param>
+        </command>
+        <command>
+            <proto>void <name>glExtrapolateTex2DQCOM</name></proto>
+            <param class="texture"><ptype>GLuint</ptype> <name>src1</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>src2</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>output</name></param>
+            <param><ptype>GLfloat</ptype> <name>scaleFactor</name></param>
+        </command>
         <command>
             <proto>void <name>glTexFilterFuncSGIS</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
@@ -28601,7 +24356,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glTexGenf</name></proto>
             <param group="TextureCoordName"><ptype>GLenum</ptype> <name>coord</name></param>
             <param group="TextureGenParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
             <glx type="render" opcode="117"/>
         </command>
         <command>
@@ -28614,7 +24369,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glTexGenfv</name></proto>
             <param group="TextureCoordName"><ptype>GLenum</ptype> <name>coord</name></param>
             <param group="TextureGenParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="render" opcode="118"/>
         </command>
         <command>
@@ -28627,7 +24382,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glTexGeni</name></proto>
             <param group="TextureCoordName"><ptype>GLenum</ptype> <name>coord</name></param>
             <param group="TextureGenParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
             <glx type="render" opcode="119"/>
         </command>
         <command>
@@ -28640,7 +24395,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glTexGeniv</name></proto>
             <param group="TextureCoordName"><ptype>GLenum</ptype> <name>coord</name></param>
             <param group="TextureGenParameter"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
             <glx type="render" opcode="120"/>
         </command>
         <command>
@@ -28664,10 +24419,10 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexImage1D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLint</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(format,type,width)">const void *<name>pixels</name></param>
@@ -28677,11 +24432,11 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexImage2D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLint</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(format,type,width,height)">const void *<name>pixels</name></param>
@@ -28695,27 +24450,27 @@ typedef unsigned int GLhandleARB;
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>fixedsamplelocations</name></param>
+            <param><ptype>GLboolean</ptype> <name>fixedsamplelocations</name></param>
         </command>
         <command>
             <proto>void <name>glTexImage2DMultisampleCoverageNV</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>coverageSamples</name></param>
             <param><ptype>GLsizei</ptype> <name>colorSamples</name></param>
-            <param><ptype>GLint</ptype> <name>internalFormat</name></param>
+            <param group="InternalFormat"><ptype>GLint</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>fixedSampleLocations</name></param>
+            <param><ptype>GLboolean</ptype> <name>fixedSampleLocations</name></param>
         </command>
         <command>
             <proto>void <name>glTexImage3D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLint</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(format,type,width,height,depth)">const void *<name>pixels</name></param>
@@ -28725,12 +24480,12 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexImage3DEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(format,type,width,height,depth)">const void *<name>pixels</name></param>
@@ -28745,18 +24500,18 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>fixedsamplelocations</name></param>
+            <param><ptype>GLboolean</ptype> <name>fixedsamplelocations</name></param>
         </command>
         <command>
             <proto>void <name>glTexImage3DMultisampleCoverageNV</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>coverageSamples</name></param>
             <param><ptype>GLsizei</ptype> <name>colorSamples</name></param>
-            <param><ptype>GLint</ptype> <name>internalFormat</name></param>
+            <param group="InternalFormat"><ptype>GLint</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>fixedSampleLocations</name></param>
+            <param><ptype>GLboolean</ptype> <name>fixedSampleLocations</name></param>
         </command>
         <command>
             <proto>void <name>glTexImage3DOES</name></proto>
@@ -28774,13 +24529,13 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexImage4DSGIS</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
             <param><ptype>GLsizei</ptype> <name>size4d</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(format,type,width,height,depth,size4d)">const void *<name>pixels</name></param>
@@ -28811,6 +24566,21 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLboolean</ptype> <name>commit</name></param>
             <alias name="glTexPageCommitmentARB"/>
         </command>
+        <command>
+            <proto>void <name>glTexPageCommitmentMemNV</name></proto>
+            <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
+            <param><ptype>GLint</ptype> <name>layer</name></param>
+            <param><ptype>GLint</ptype> <name>level</name></param>
+            <param><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param><ptype>GLint</ptype> <name>zoffset</name></param>
+            <param><ptype>GLsizei</ptype> <name>width</name></param>
+            <param><ptype>GLsizei</ptype> <name>height</name></param>
+            <param><ptype>GLsizei</ptype> <name>depth</name></param>
+            <param><ptype>GLuint</ptype> <name>memory</name></param>
+            <param><ptype>GLuint64</ptype> <name>offset</name></param>
+            <param><ptype>GLboolean</ptype> <name>commit</name></param>
+        </command>
         <command>
             <proto>void <name>glTexParameterIiv</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
@@ -28857,28 +24627,28 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glTexParameterf</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
             <glx type="render" opcode="105"/>
         </command>
         <command>
             <proto>void <name>glTexParameterfv</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
             <glx type="render" opcode="106"/>
         </command>
         <command>
             <proto>void <name>glTexParameteri</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
             <glx type="render" opcode="107"/>
         </command>
         <command>
             <proto>void <name>glTexParameteriv</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
             <glx type="render" opcode="108"/>
         </command>
         <command>
@@ -28908,20 +24678,20 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexRenderbufferNV</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
         </command>
         <command>
             <proto>void <name>glTexStorage1D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
         </command>
         <command>
             <proto>void <name>glTexStorage1DEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <alias name="glTexStorage1D"/>
         </command>
@@ -28929,7 +24699,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glTexStorage2D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
         </command>
@@ -28937,7 +24707,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glTexStorage2DEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <alias name="glTexStorage2D"/>
@@ -28946,16 +24716,16 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glTexStorage2DMultisample</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>fixedsamplelocations</name></param>
+            <param><ptype>GLboolean</ptype> <name>fixedsamplelocations</name></param>
         </command>
         <command>
             <proto>void <name>glTexStorage3D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
@@ -28964,7 +24734,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glTexStorage3DEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
@@ -28974,28 +24744,47 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glTexStorage3DMultisample</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>fixedsamplelocations</name></param>
+            <param><ptype>GLboolean</ptype> <name>fixedsamplelocations</name></param>
         </command>
         <command>
             <proto>void <name>glTexStorage3DMultisampleOES</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>fixedsamplelocations</name></param>
+            <param><ptype>GLboolean</ptype> <name>fixedsamplelocations</name></param>
             <alias name="glTexStorage3DMultisample"/>
         </command>
+        <command>
+            <proto>void <name>glTexStorageAttribs2DEXT</name></proto>
+            <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
+            <param><ptype>GLsizei</ptype> <name>levels</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param><ptype>GLsizei</ptype> <name>width</name></param>
+            <param><ptype>GLsizei</ptype> <name>height</name></param>
+            <param group="TexStorageAttribs">const <ptype>GLint</ptype>* <name>attrib_list</name></param>
+        </command>
+        <command>
+            <proto>void <name>glTexStorageAttribs3DEXT</name></proto>
+            <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
+            <param><ptype>GLsizei</ptype> <name>levels</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param><ptype>GLsizei</ptype> <name>width</name></param>
+            <param><ptype>GLsizei</ptype> <name>height</name></param>
+            <param><ptype>GLsizei</ptype> <name>depth</name></param>
+            <param group="TexStorageAttribs">const <ptype>GLint</ptype>* <name>attrib_list</name></param>
+        </command>
         <command>
             <proto>void <name>glTexStorageMem1DEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param><ptype>GLenum</ptype> <name>internalFormat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLuint</ptype> <name>memory</name></param>
             <param><ptype>GLuint64</ptype> <name>offset</name></param>
@@ -29004,7 +24793,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glTexStorageMem2DEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param><ptype>GLenum</ptype> <name>internalFormat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLuint</ptype> <name>memory</name></param>
@@ -29014,7 +24803,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glTexStorageMem2DMultisampleEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
-            <param><ptype>GLenum</ptype> <name>internalFormat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLboolean</ptype> <name>fixedSampleLocations</name></param>
@@ -29025,7 +24814,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glTexStorageMem3DEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param><ptype>GLenum</ptype> <name>internalFormat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
@@ -29036,7 +24825,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glTexStorageMem3DMultisampleEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
-            <param><ptype>GLenum</ptype> <name>internalFormat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
@@ -29047,7 +24836,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexStorageSparseAMD</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalFormat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
@@ -29057,8 +24846,8 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexSubImage1D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
@@ -29069,8 +24858,8 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexSubImage1DEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
@@ -29081,9 +24870,9 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexSubImage2D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
@@ -29095,9 +24884,9 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexSubImage2DEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
@@ -29109,10 +24898,10 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexSubImage3D</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
@@ -29125,10 +24914,10 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexSubImage3DEXT</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
@@ -29155,11 +24944,11 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glTexSubImage4DSGIS</name></proto>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>woffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>woffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
@@ -29171,7 +24960,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureAttachMemoryNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLuint</ptype> <name>memory</name></param>
             <param><ptype>GLuint64</ptype> <name>offset</name></param>
         </command>
@@ -29184,135 +24973,135 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureBuffer</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
             <proto>void <name>glTextureBufferEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
             <proto>void <name>glTextureBufferRange</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
         </command>
         <command>
             <proto>void <name>glTextureBufferRangeEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
         </command>
         <command>
             <proto>void <name>glTextureColorMaskSGIS</name></proto>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>red</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>green</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>blue</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>alpha</name></param>
+            <param><ptype>GLboolean</ptype> <name>red</name></param>
+            <param><ptype>GLboolean</ptype> <name>green</name></param>
+            <param><ptype>GLboolean</ptype> <name>blue</name></param>
+            <param><ptype>GLboolean</ptype> <name>alpha</name></param>
             <glx type="render" opcode="2082"/>
         </command>
         <command>
             <proto>void <name>glTextureFoveationParametersQCOM</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLuint</ptype> <name>layer</name></param>
             <param><ptype>GLuint</ptype> <name>focalPoint</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>focalX</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>focalY</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>gainX</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>gainY</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>foveaArea</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>focalX</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>focalY</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>gainX</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>gainY</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>foveaArea</name></param>
         </command>
         <command>
             <proto>void <name>glTextureImage1DEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLint</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(format,type,width)">const void *<name>pixels</name></param>
         </command>
         <command>
             <proto>void <name>glTextureImage2DEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLint</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(format,type,width,height)">const void *<name>pixels</name></param>
         </command>
         <command>
             <proto>void <name>glTextureImage2DMultisampleCoverageNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>coverageSamples</name></param>
             <param><ptype>GLsizei</ptype> <name>colorSamples</name></param>
-            <param><ptype>GLint</ptype> <name>internalFormat</name></param>
+            <param group="InternalFormat"><ptype>GLint</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>fixedSampleLocations</name></param>
+            <param><ptype>GLboolean</ptype> <name>fixedSampleLocations</name></param>
         </command>
         <command>
             <proto>void <name>glTextureImage2DMultisampleNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
-            <param><ptype>GLint</ptype> <name>internalFormat</name></param>
+            <param group="InternalFormat"><ptype>GLint</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>fixedSampleLocations</name></param>
+            <param><ptype>GLboolean</ptype> <name>fixedSampleLocations</name></param>
         </command>
         <command>
             <proto>void <name>glTextureImage3DEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
             <param group="InternalFormat"><ptype>GLint</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>border</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
             <param len="COMPSIZE(format,type,width,height,depth)">const void *<name>pixels</name></param>
         </command>
         <command>
             <proto>void <name>glTextureImage3DMultisampleCoverageNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>coverageSamples</name></param>
             <param><ptype>GLsizei</ptype> <name>colorSamples</name></param>
-            <param><ptype>GLint</ptype> <name>internalFormat</name></param>
+            <param group="InternalFormat"><ptype>GLint</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>fixedSampleLocations</name></param>
+            <param><ptype>GLboolean</ptype> <name>fixedSampleLocations</name></param>
         </command>
         <command>
             <proto>void <name>glTextureImage3DMultisampleNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
-            <param><ptype>GLint</ptype> <name>internalFormat</name></param>
+            <param group="InternalFormat"><ptype>GLint</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>fixedSampleLocations</name></param>
+            <param><ptype>GLboolean</ptype> <name>fixedSampleLocations</name></param>
         </command>
         <command>
             <proto>void <name>glTextureLightEXT</name></proto>
@@ -29320,7 +25109,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureMaterialEXT</name></proto>
-            <param group="MaterialFace"><ptype>GLenum</ptype> <name>face</name></param>
+            <param group="TriangleFace"><ptype>GLenum</ptype> <name>face</name></param>
             <param group="MaterialParameter"><ptype>GLenum</ptype> <name>mode</name></param>
         </command>
         <command>
@@ -29329,7 +25118,20 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTexturePageCommitmentEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param><ptype>GLint</ptype> <name>level</name></param>
+            <param><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param><ptype>GLint</ptype> <name>zoffset</name></param>
+            <param><ptype>GLsizei</ptype> <name>width</name></param>
+            <param><ptype>GLsizei</ptype> <name>height</name></param>
+            <param><ptype>GLsizei</ptype> <name>depth</name></param>
+            <param><ptype>GLboolean</ptype> <name>commit</name></param>
+        </command>
+        <command>
+            <proto>void <name>glTexturePageCommitmentMemNV</name></proto>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param><ptype>GLint</ptype> <name>layer</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLint</ptype> <name>yoffset</name></param>
@@ -29337,87 +25139,89 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
+            <param><ptype>GLuint</ptype> <name>memory</name></param>
+            <param><ptype>GLuint64</ptype> <name>offset</name></param>
             <param><ptype>GLboolean</ptype> <name>commit</name></param>
         </command>
         <command>
             <proto>void <name>glTextureParameterIiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param>const <ptype>GLint</ptype> *<name>params</name></param>
+            <param len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glTextureParameterIivEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glTextureParameterIuiv</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param>const <ptype>GLuint</ptype> *<name>params</name></param>
+            <param len="COMPSIZE(pname)">const <ptype>GLuint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glTextureParameterIuivEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param len="COMPSIZE(pname)">const <ptype>GLuint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glTextureParameterf</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLfloat</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glTextureParameterfEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
+            <param kind="CheckedFloat32"><ptype>GLfloat</ptype> <name>param</name></param>
             <vecequiv name="glTextureParameterfvEXT"/>
         </command>
         <command>
             <proto>void <name>glTextureParameterfv</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param>const <ptype>GLfloat</ptype> *<name>param</name></param>
+            <param len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>param</name></param>
         </command>
         <command>
             <proto>void <name>glTextureParameterfvEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
+            <param kind="CheckedFloat32" len="COMPSIZE(pname)">const <ptype>GLfloat</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glTextureParameteri</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
             <param><ptype>GLint</ptype> <name>param</name></param>
         </command>
         <command>
             <proto>void <name>glTextureParameteriEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>param</name></param>
             <vecequiv name="glTextureParameterivEXT"/>
         </command>
         <command>
             <proto>void <name>glTextureParameteriv</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param>const <ptype>GLint</ptype> *<name>param</name></param>
+            <param len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>param</name></param>
         </command>
         <command>
             <proto>void <name>glTextureParameterivEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param group="TextureParameterName"><ptype>GLenum</ptype> <name>pname</name></param>
-            <param group="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
+            <param kind="CheckedInt32" len="COMPSIZE(pname)">const <ptype>GLint</ptype> *<name>params</name></param>
         </command>
         <command>
             <proto>void <name>glTextureRangeAPPLE</name></proto>
@@ -29427,85 +25231,85 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureRenderbufferEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>renderbuffer</name></param>
+            <param class="renderbuffer"><ptype>GLuint</ptype> <name>renderbuffer</name></param>
         </command>
         <command>
             <proto>void <name>glTextureStorage1D</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
         </command>
         <command>
             <proto>void <name>glTextureStorage1DEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
         </command>
         <command>
             <proto>void <name>glTextureStorage2D</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
         </command>
         <command>
             <proto>void <name>glTextureStorage2DEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
         </command>
         <command>
             <proto>void <name>glTextureStorage2DMultisample</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLboolean</ptype> <name>fixedsamplelocations</name></param>
         </command>
         <command>
             <proto>void <name>glTextureStorage2DMultisampleEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>fixedsamplelocations</name></param>
+            <param><ptype>GLboolean</ptype> <name>fixedsamplelocations</name></param>
         </command>
         <command>
             <proto>void <name>glTextureStorage3D</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
         </command>
         <command>
             <proto>void <name>glTextureStorage3DEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
         </command>
         <command>
             <proto>void <name>glTextureStorage3DMultisample</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
@@ -29513,29 +25317,29 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureStorage3DMultisampleEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>fixedsamplelocations</name></param>
+            <param><ptype>GLboolean</ptype> <name>fixedsamplelocations</name></param>
         </command>
         <command>
             <proto>void <name>glTextureStorageMem1DEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param><ptype>GLenum</ptype> <name>internalFormat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLuint</ptype> <name>memory</name></param>
             <param><ptype>GLuint64</ptype> <name>offset</name></param>
         </command>
         <command>
             <proto>void <name>glTextureStorageMem2DEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param><ptype>GLenum</ptype> <name>internalFormat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLuint</ptype> <name>memory</name></param>
@@ -29543,9 +25347,9 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureStorageMem2DMultisampleEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
-            <param><ptype>GLenum</ptype> <name>internalFormat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLboolean</ptype> <name>fixedSampleLocations</name></param>
@@ -29554,9 +25358,9 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureStorageMem3DEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLsizei</ptype> <name>levels</name></param>
-            <param><ptype>GLenum</ptype> <name>internalFormat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
@@ -29565,9 +25369,9 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureStorageMem3DMultisampleEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLsizei</ptype> <name>samples</name></param>
-            <param><ptype>GLenum</ptype> <name>internalFormat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
@@ -29577,9 +25381,9 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureStorageSparseAMD</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalFormat</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalFormat</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
@@ -29588,7 +25392,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureSubImage1D</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
@@ -29598,10 +25402,10 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureSubImage1DEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
             <param group="PixelType"><ptype>GLenum</ptype> <name>type</name></param>
@@ -29609,7 +25413,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureSubImage2D</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLint</ptype> <name>yoffset</name></param>
@@ -29621,11 +25425,11 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureSubImage2DEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param group="PixelFormat"><ptype>GLenum</ptype> <name>format</name></param>
@@ -29634,7 +25438,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureSubImage3D</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
             <param><ptype>GLint</ptype> <name>xoffset</name></param>
             <param><ptype>GLint</ptype> <name>yoffset</name></param>
@@ -29648,12 +25452,12 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureSubImage3DEXT</name></proto>
-            <param group="Texture"><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
-            <param group="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>level</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>xoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>yoffset</name></param>
+            <param kind="CheckedInt32"><ptype>GLint</ptype> <name>zoffset</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <param><ptype>GLsizei</ptype> <name>depth</name></param>
@@ -29663,10 +25467,10 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureView</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>origtexture</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>origtexture</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLuint</ptype> <name>minlevel</name></param>
             <param><ptype>GLuint</ptype> <name>numlevels</name></param>
             <param><ptype>GLuint</ptype> <name>minlayer</name></param>
@@ -29674,10 +25478,10 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureViewEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>origtexture</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>origtexture</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLuint</ptype> <name>minlevel</name></param>
             <param><ptype>GLuint</ptype> <name>numlevels</name></param>
             <param><ptype>GLuint</ptype> <name>minlayer</name></param>
@@ -29686,10 +25490,10 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTextureViewOES</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param group="TextureTarget"><ptype>GLenum</ptype> <name>target</name></param>
-            <param><ptype>GLuint</ptype> <name>origtexture</name></param>
-            <param group="InternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>origtexture</name></param>
+            <param group="SizedInternalFormat"><ptype>GLenum</ptype> <name>internalformat</name></param>
             <param><ptype>GLuint</ptype> <name>minlevel</name></param>
             <param><ptype>GLuint</ptype> <name>numlevels</name></param>
             <param><ptype>GLuint</ptype> <name>minlayer</name></param>
@@ -29712,17 +25516,17 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTransformFeedbackBufferBase</name></proto>
-            <param><ptype>GLuint</ptype> <name>xfb</name></param>
+            <param class="transform feedback"><ptype>GLuint</ptype> <name>xfb</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
             <proto>void <name>glTransformFeedbackBufferRange</name></proto>
-            <param><ptype>GLuint</ptype> <name>xfb</name></param>
+            <param class="transform feedback"><ptype>GLuint</ptype> <name>xfb</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
-            <param group="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
+            <param kind="BufferSize"><ptype>GLsizeiptr</ptype> <name>size</name></param>
         </command>
         <command>
             <proto>void <name>glTransformFeedbackStreamAttribsNV</name></proto>
@@ -29734,31 +25538,31 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glTransformFeedbackVaryings</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param len="count">const <ptype>GLchar</ptype> *const*<name>varyings</name></param>
-            <param group="TransformFeedbackBufferMode" ><ptype>GLenum</ptype> <name>bufferMode</name></param>
+            <param group="TransformFeedbackBufferMode"><ptype>GLenum</ptype> <name>bufferMode</name></param>
             <glx type="render" opcode="359"/>
         </command>
         <command>
             <proto>void <name>glTransformFeedbackVaryingsEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param len="count">const <ptype>GLchar</ptype> *const*<name>varyings</name></param>
-            <param><ptype>GLenum</ptype> <name>bufferMode</name></param>
+            <param group="TransformFeedbackBufferMode"><ptype>GLenum</ptype> <name>bufferMode</name></param>
             <alias name="glTransformFeedbackVaryings"/>
         </command>
         <command>
             <proto>void <name>glTransformFeedbackVaryingsNV</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count">const <ptype>GLint</ptype> *<name>locations</name></param>
-            <param><ptype>GLenum</ptype> <name>bufferMode</name></param>
+            <param group="TransformFeedbackTokenNV" len="count">const <ptype>GLint</ptype> *<name>locations</name></param>
+            <param group="TransformFeedbackBufferMode"><ptype>GLenum</ptype> <name>bufferMode</name></param>
         </command>
         <command>
             <proto>void <name>glTransformPathNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>resultPath</name></param>
-            <param group="Path"><ptype>GLuint</ptype> <name>srcPath</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>resultPath</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>srcPath</name></param>
             <param group="PathTransformType"><ptype>GLenum</ptype> <name>transformType</name></param>
             <param len="COMPSIZE(transformType)">const <ptype>GLfloat</ptype> *<name>transformValues</name></param>
         </command>
@@ -29797,7 +25601,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform1dv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*1">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count*1">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform1f</name></proto>
@@ -29814,13 +25618,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform1fv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*1">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count*1">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform1fvARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*1">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count*1">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glUniform1fv"/>
         </command>
         <command>
@@ -29842,13 +25646,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform1i64vARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*1">const <ptype>GLint64</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count*1">const <ptype>GLint64</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform1i64vNV</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*1">const <ptype>GLint64EXT</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count*1">const <ptype>GLint64EXT</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform1iARB</name></proto>
@@ -29860,13 +25664,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform1iv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*1">const <ptype>GLint</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count*1">const <ptype>GLint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform1ivARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*1">const <ptype>GLint</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count*1">const <ptype>GLint</ptype> *<name>value</name></param>
             <alias name="glUniform1iv"/>
         </command>
         <command>
@@ -29888,13 +25692,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform1ui64vARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*1">const <ptype>GLuint64</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count*1">const <ptype>GLuint64</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform1ui64vNV</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*1">const <ptype>GLuint64EXT</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count*1">const <ptype>GLuint64EXT</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform1uiEXT</name></proto>
@@ -29906,13 +25710,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform1uiv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*1">const <ptype>GLuint</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count*1">const <ptype>GLuint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform1uivEXT</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*1">const <ptype>GLuint</ptype> *<name>value</name></param>
+            <param kind="Vector1" len="count*1">const <ptype>GLuint</ptype> *<name>value</name></param>
             <alias name="glUniform1uiv"/>
         </command>
         <command>
@@ -29925,7 +25729,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform2dv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform2f</name></proto>
@@ -29944,13 +25748,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform2fv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform2fvARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glUniform2fv"/>
         </command>
         <command>
@@ -29975,13 +25779,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform2i64vARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLint64</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLint64</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform2i64vNV</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLint64EXT</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLint64EXT</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform2iARB</name></proto>
@@ -29994,13 +25798,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform2iv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLint</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform2ivARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLint</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLint</ptype> *<name>value</name></param>
             <alias name="glUniform2iv"/>
         </command>
         <command>
@@ -30025,13 +25829,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform2ui64vARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLuint64</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLuint64</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform2ui64vNV</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLuint64EXT</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLuint64EXT</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform2uiEXT</name></proto>
@@ -30044,13 +25848,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform2uiv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLuint</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLuint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform2uivEXT</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*2">const <ptype>GLuint</ptype> *<name>value</name></param>
+            <param kind="Vector2" len="count*2">const <ptype>GLuint</ptype> *<name>value</name></param>
             <alias name="glUniform2uiv"/>
         </command>
         <command>
@@ -30064,7 +25868,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform3dv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform3f</name></proto>
@@ -30085,13 +25889,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform3fv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform3fvARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glUniform3fv"/>
         </command>
         <command>
@@ -30119,13 +25923,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform3i64vARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLint64</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLint64</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform3i64vNV</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLint64EXT</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLint64EXT</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform3iARB</name></proto>
@@ -30139,13 +25943,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform3iv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLint</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform3ivARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLint</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLint</ptype> *<name>value</name></param>
             <alias name="glUniform3iv"/>
         </command>
         <command>
@@ -30173,13 +25977,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform3ui64vARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLuint64</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLuint64</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform3ui64vNV</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLuint64EXT</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLuint64EXT</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform3uiEXT</name></proto>
@@ -30193,13 +25997,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform3uiv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLuint</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLuint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform3uivEXT</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*3">const <ptype>GLuint</ptype> *<name>value</name></param>
+            <param kind="Vector3" len="count*3">const <ptype>GLuint</ptype> *<name>value</name></param>
             <alias name="glUniform3uiv"/>
         </command>
         <command>
@@ -30214,7 +26018,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform4dv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform4f</name></proto>
@@ -30237,13 +26041,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform4fv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform4fvARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glUniform4fv"/>
         </command>
         <command>
@@ -30274,13 +26078,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform4i64vARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLint64</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLint64</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform4i64vNV</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLint64EXT</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLint64EXT</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform4iARB</name></proto>
@@ -30295,13 +26099,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform4iv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLint</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform4ivARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLint</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLint</ptype> *<name>value</name></param>
             <alias name="glUniform4iv"/>
         </command>
         <command>
@@ -30332,13 +26136,13 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform4ui64vARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLuint64</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLuint64</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform4ui64vNV</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLuint64EXT</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLuint64EXT</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform4uiEXT</name></proto>
@@ -30353,27 +26157,27 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniform4uiv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLuint</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLuint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniform4uivEXT</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param len="count*4">const <ptype>GLuint</ptype> *<name>value</name></param>
+            <param kind="Vector4" len="count*4">const <ptype>GLuint</ptype> *<name>value</name></param>
             <alias name="glUniform4uiv"/>
         </command>
         <command>
             <proto>void <name>glUniformBlockBinding</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLuint</ptype> <name>uniformBlockIndex</name></param>
             <param><ptype>GLuint</ptype> <name>uniformBlockBinding</name></param>
             <glx type="render" opcode="366"/>
         </command>
         <command>
             <proto>void <name>glUniformBufferEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
             <param><ptype>GLint</ptype> <name>location</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
             <proto>void <name>glUniformHandleui64ARB</name></proto>
@@ -30414,204 +26218,204 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUniformMatrix2dv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*4">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x2" len="count*4">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniformMatrix2fv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*4">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x2" len="count*4">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniformMatrix2fvARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*4">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x2" len="count*4">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glUniformMatrix2fv"/>
         </command>
         <command>
             <proto>void <name>glUniformMatrix2x3dv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*6">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x3" len="count*6">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniformMatrix2x3fv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*6">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x3" len="count*6">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <glx type="render" opcode="305"/>
         </command>
         <command>
             <proto>void <name>glUniformMatrix2x3fvNV</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*6">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x3" len="count*6">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glUniformMatrix2x3fv"/>
         </command>
         <command>
             <proto>void <name>glUniformMatrix2x4dv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*8">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x4" len="count*8">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniformMatrix2x4fv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*8">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x4" len="count*8">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <glx type="render" opcode="307"/>
         </command>
         <command>
             <proto>void <name>glUniformMatrix2x4fvNV</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*8">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix2x4" len="count*8">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glUniformMatrix2x4fv"/>
         </command>
         <command>
             <proto>void <name>glUniformMatrix3dv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*9">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x3" len="count*9">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniformMatrix3fv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*9">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x3" len="count*9">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniformMatrix3fvARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*9">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x3" len="count*9">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glUniformMatrix3fv"/>
         </command>
         <command>
             <proto>void <name>glUniformMatrix3x2dv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*6">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x2" len="count*6">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniformMatrix3x2fv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*6">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x2" len="count*6">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <glx type="render" opcode="306"/>
         </command>
         <command>
             <proto>void <name>glUniformMatrix3x2fvNV</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*6">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x2" len="count*6">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glUniformMatrix3x2fv"/>
         </command>
         <command>
             <proto>void <name>glUniformMatrix3x4dv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*12">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x4" len="count*12">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniformMatrix3x4fv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*12">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x4" len="count*12">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <glx type="render" opcode="309"/>
         </command>
         <command>
             <proto>void <name>glUniformMatrix3x4fvNV</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*12">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix3x4" len="count*12">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glUniformMatrix3x4fv"/>
         </command>
         <command>
             <proto>void <name>glUniformMatrix4dv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*16">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x4" len="count*16">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniformMatrix4fv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*16">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x4" len="count*16">const <ptype>GLfloat</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniformMatrix4fvARB</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*16">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x4" len="count*16">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glUniformMatrix4fv"/>
         </command>
         <command>
             <proto>void <name>glUniformMatrix4x2dv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*8">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x2" len="count*8">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniformMatrix4x2fv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*8">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x2" len="count*8">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <glx type="render" opcode="308"/>
         </command>
         <command>
             <proto>void <name>glUniformMatrix4x2fvNV</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*8">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x2" len="count*8">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glUniformMatrix4x2fv"/>
         </command>
         <command>
             <proto>void <name>glUniformMatrix4x3dv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*12">const <ptype>GLdouble</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x3" len="count*12">const <ptype>GLdouble</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glUniformMatrix4x3fv</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*12">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x3" len="count*12">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <glx type="render" opcode="310"/>
         </command>
         <command>
             <proto>void <name>glUniformMatrix4x3fvNV</name></proto>
             <param><ptype>GLint</ptype> <name>location</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>transpose</name></param>
-            <param len="count*12">const <ptype>GLfloat</ptype> *<name>value</name></param>
+            <param><ptype>GLboolean</ptype> <name>transpose</name></param>
+            <param kind="Matrix4x3" len="count*12">const <ptype>GLfloat</ptype> *<name>value</name></param>
             <alias name="glUniformMatrix4x3fv"/>
         </command>
         <command>
@@ -30635,11 +26439,11 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glUnlockArraysEXT</name></proto>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glUnmapBuffer</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glUnmapBuffer</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glUnmapBufferARB</name></proto>
+            <proto><ptype>GLboolean</ptype> <name>glUnmapBufferARB</name></proto>
             <param group="BufferTargetARB"><ptype>GLenum</ptype> <name>target</name></param>
             <alias name="glUnmapBuffer"/>
         </command>
@@ -30650,24 +26454,24 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto><ptype>GLboolean</ptype> <name>glUnmapNamedBuffer</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
-            <proto group="Boolean"><ptype>GLboolean</ptype> <name>glUnmapNamedBufferEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <proto><ptype>GLboolean</ptype> <name>glUnmapNamedBufferEXT</name></proto>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
             <proto>void <name>glUnmapObjectBufferATI</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
             <proto>void <name>glUnmapTexture2DINTEL</name></proto>
-            <param><ptype>GLuint</ptype> <name>texture</name></param>
+            <param class="texture"><ptype>GLuint</ptype> <name>texture</name></param>
             <param><ptype>GLint</ptype> <name>level</name></param>
         </command>
         <command>
             <proto>void <name>glUpdateObjectBufferATI</name></proto>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLuint</ptype> <name>offset</name></param>
             <param><ptype>GLsizei</ptype> <name>size</name></param>
             <param len="size">const void *<name>pointer</name></param>
@@ -30679,40 +26483,40 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glUseProgram</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
         </command>
         <command>
             <proto>void <name>glUseProgramObjectARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>programObj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>programObj</name></param>
             <alias name="glUseProgram"/>
         </command>
         <command>
             <proto>void <name>glUseProgramStages</name></proto>
-            <param><ptype>GLuint</ptype> <name>pipeline</name></param>
+            <param class="program pipeline"><ptype>GLuint</ptype> <name>pipeline</name></param>
             <param group="UseProgramStageMask"><ptype>GLbitfield</ptype> <name>stages</name></param>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
         </command>
         <command>
             <proto>void <name>glUseProgramStagesEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>pipeline</name></param>
+            <param class="program pipeline"><ptype>GLuint</ptype> <name>pipeline</name></param>
             <param group="UseProgramStageMask"><ptype>GLbitfield</ptype> <name>stages</name></param>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
         </command>
         <command>
             <proto>void <name>glUseShaderProgramEXT</name></proto>
             <param><ptype>GLenum</ptype> <name>type</name></param>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
         </command>
         <command>
             <proto>void <name>glVDPAUFiniNV</name></proto>
         </command>
         <command>
             <proto>void <name>glVDPAUGetSurfaceivNV</name></proto>
-            <param group="vdpauSurfaceNV"><ptype>GLvdpauSurfaceNV</ptype> <name>surface</name></param>
+            <param><ptype>GLvdpauSurfaceNV</ptype> <name>surface</name></param>
             <param><ptype>GLenum</ptype> <name>pname</name></param>
-            <param><ptype>GLsizei</ptype> <name>bufSize</name></param>
+            <param><ptype>GLsizei</ptype> <name>count</name></param>
             <param><ptype>GLsizei</ptype> *<name>length</name></param>
-            <param len="bufSize"><ptype>GLint</ptype> *<name>values</name></param>
+            <param len="count"><ptype>GLint</ptype> *<name>values</name></param>
         </command>
         <command>
             <proto>void <name>glVDPAUInitNV</name></proto>
@@ -30721,72 +26525,72 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto><ptype>GLboolean</ptype> <name>glVDPAUIsSurfaceNV</name></proto>
-            <param group="vdpauSurfaceNV"><ptype>GLvdpauSurfaceNV</ptype> <name>surface</name></param>
+            <param><ptype>GLvdpauSurfaceNV</ptype> <name>surface</name></param>
         </command>
         <command>
             <proto>void <name>glVDPAUMapSurfacesNV</name></proto>
             <param><ptype>GLsizei</ptype> <name>numSurfaces</name></param>
-            <param group="vdpauSurfaceNV" len="numSurfaces">const <ptype>GLvdpauSurfaceNV</ptype> *<name>surfaces</name></param>
+            <param len="numSurfaces">const <ptype>GLvdpauSurfaceNV</ptype> *<name>surfaces</name></param>
         </command>
         <command>
-            <proto group="vdpauSurfaceNV"><ptype>GLvdpauSurfaceNV</ptype> <name>glVDPAURegisterOutputSurfaceNV</name></proto>
+            <proto><ptype>GLvdpauSurfaceNV</ptype> <name>glVDPAURegisterOutputSurfaceNV</name></proto>
             <param>const void *<name>vdpSurface</name></param>
             <param><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>numTextureNames</name></param>
             <param len="numTextureNames">const <ptype>GLuint</ptype> *<name>textureNames</name></param>
         </command>
         <command>
-            <proto group="vdpauSurfaceNV"><ptype>GLvdpauSurfaceNV</ptype> <name>glVDPAURegisterVideoSurfaceNV</name></proto>
+            <proto><ptype>GLvdpauSurfaceNV</ptype> <name>glVDPAURegisterVideoSurfaceNV</name></proto>
             <param>const void *<name>vdpSurface</name></param>
             <param><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>numTextureNames</name></param>
             <param len="numTextureNames">const <ptype>GLuint</ptype> *<name>textureNames</name></param>
         </command>
         <command>
-            <proto group="vdpauSurfaceNV"><ptype>GLvdpauSurfaceNV</ptype> <name>glVDPAURegisterVideoSurfaceWithPictureStructureNV</name></proto>
+            <proto><ptype>GLvdpauSurfaceNV</ptype> <name>glVDPAURegisterVideoSurfaceWithPictureStructureNV</name></proto>
             <param>const void *<name>vdpSurface</name></param>
             <param><ptype>GLenum</ptype> <name>target</name></param>
             <param><ptype>GLsizei</ptype> <name>numTextureNames</name></param>
             <param len="numTextureNames">const <ptype>GLuint</ptype> *<name>textureNames</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>isFrameStructure</name></param>
+            <param><ptype>GLboolean</ptype> <name>isFrameStructure</name></param>
         </command>
         <command>
             <proto>void <name>glVDPAUSurfaceAccessNV</name></proto>
-            <param group="vdpauSurfaceNV"><ptype>GLvdpauSurfaceNV</ptype> <name>surface</name></param>
+            <param><ptype>GLvdpauSurfaceNV</ptype> <name>surface</name></param>
             <param><ptype>GLenum</ptype> <name>access</name></param>
         </command>
         <command>
             <proto>void <name>glVDPAUUnmapSurfacesNV</name></proto>
             <param><ptype>GLsizei</ptype> <name>numSurface</name></param>
-            <param group="vdpauSurfaceNV" len="numSurface">const <ptype>GLvdpauSurfaceNV</ptype> *<name>surfaces</name></param>
+            <param len="numSurface">const <ptype>GLvdpauSurfaceNV</ptype> *<name>surfaces</name></param>
         </command>
         <command>
             <proto>void <name>glVDPAUUnregisterSurfaceNV</name></proto>
-            <param group="vdpauSurfaceNV"><ptype>GLvdpauSurfaceNV</ptype> <name>surface</name></param>
+            <param><ptype>GLvdpauSurfaceNV</ptype> <name>surface</name></param>
         </command>
         <command>
             <proto>void <name>glValidateProgram</name></proto>
-            <param><ptype>GLuint</ptype> <name>program</name></param>
+            <param class="program"><ptype>GLuint</ptype> <name>program</name></param>
         </command>
         <command>
             <proto>void <name>glValidateProgramARB</name></proto>
-            <param group="handleARB"><ptype>GLhandleARB</ptype> <name>programObj</name></param>
+            <param><ptype>GLhandleARB</ptype> <name>programObj</name></param>
             <alias name="glValidateProgram"/>
         </command>
         <command>
             <proto>void <name>glValidateProgramPipeline</name></proto>
-            <param><ptype>GLuint</ptype> <name>pipeline</name></param>
+            <param class="program pipeline"><ptype>GLuint</ptype> <name>pipeline</name></param>
         </command>
         <command>
             <proto>void <name>glValidateProgramPipelineEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>pipeline</name></param>
+            <param class="program pipeline"><ptype>GLuint</ptype> <name>pipeline</name></param>
         </command>
         <command>
             <proto>void <name>glVariantArrayObjectATI</name></proto>
             <param><ptype>GLuint</ptype> <name>id</name></param>
             <param group="ScalarType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLuint</ptype> <name>offset</name></param>
         </command>
         <command>
@@ -30847,57 +26651,57 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glVertex2d</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>x</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>y</name></param>
             <vecequiv name="glVertex2dv"/>
         </command>
         <command>
             <proto>void <name>glVertex2dv</name></proto>
-            <param group="CoordD" len="2">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="65"/>
         </command>
         <command>
             <proto>void <name>glVertex2f</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>x</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>y</name></param>
             <vecequiv name="glVertex2fv"/>
         </command>
         <command>
             <proto>void <name>glVertex2fv</name></proto>
-            <param group="CoordF" len="2">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="66"/>
         </command>
         <command>
             <proto>void <name>glVertex2hNV</name></proto>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>x</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>y</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>x</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>y</name></param>
             <vecequiv name="glVertex2hvNV"/>
         </command>
         <command>
             <proto>void <name>glVertex2hvNV</name></proto>
-            <param group="Half16NV" len="2">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="2">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4240"/>
         </command>
         <command>
             <proto>void <name>glVertex2i</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>y</name></param>
             <vecequiv name="glVertex2iv"/>
         </command>
         <command>
             <proto>void <name>glVertex2iv</name></proto>
-            <param group="CoordI" len="2">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="67"/>
         </command>
         <command>
             <proto>void <name>glVertex2s</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>x</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>y</name></param>
             <vecequiv name="glVertex2sv"/>
         </command>
         <command>
             <proto>void <name>glVertex2sv</name></proto>
-            <param group="CoordS" len="2">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="68"/>
         </command>
         <command>
@@ -30920,62 +26724,62 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glVertex3d</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>x</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>y</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>z</name></param>
             <vecequiv name="glVertex3dv"/>
         </command>
         <command>
             <proto>void <name>glVertex3dv</name></proto>
-            <param group="CoordD" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="69"/>
         </command>
         <command>
             <proto>void <name>glVertex3f</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>x</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>y</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>z</name></param>
             <vecequiv name="glVertex3fv"/>
         </command>
         <command>
             <proto>void <name>glVertex3fv</name></proto>
-            <param group="CoordF" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="70"/>
         </command>
         <command>
             <proto>void <name>glVertex3hNV</name></proto>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>x</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>y</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>z</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>x</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>y</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>z</name></param>
             <vecequiv name="glVertex3hvNV"/>
         </command>
         <command>
             <proto>void <name>glVertex3hvNV</name></proto>
-            <param group="Half16NV" len="3">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="3">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4241"/>
         </command>
         <command>
             <proto>void <name>glVertex3i</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>y</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>z</name></param>
             <vecequiv name="glVertex3iv"/>
         </command>
         <command>
             <proto>void <name>glVertex3iv</name></proto>
-            <param group="CoordI" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="71"/>
         </command>
         <command>
             <proto>void <name>glVertex3s</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>x</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>y</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>z</name></param>
             <vecequiv name="glVertex3sv"/>
         </command>
         <command>
             <proto>void <name>glVertex3sv</name></proto>
-            <param group="CoordS" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="72"/>
         </command>
         <command>
@@ -31000,67 +26804,67 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glVertex4d</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>x</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>y</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>z</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>w</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>w</name></param>
             <vecequiv name="glVertex4dv"/>
         </command>
         <command>
             <proto>void <name>glVertex4dv</name></proto>
-            <param group="CoordD" len="4">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="73"/>
         </command>
         <command>
             <proto>void <name>glVertex4f</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>x</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>y</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>z</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>w</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>w</name></param>
             <vecequiv name="glVertex4fv"/>
         </command>
         <command>
             <proto>void <name>glVertex4fv</name></proto>
-            <param group="CoordF" len="4">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="74"/>
         </command>
         <command>
             <proto>void <name>glVertex4hNV</name></proto>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>x</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>y</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>z</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>w</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>x</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>y</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>z</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>w</name></param>
             <vecequiv name="glVertex4hvNV"/>
         </command>
         <command>
             <proto>void <name>glVertex4hvNV</name></proto>
-            <param group="Half16NV" len="4">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="4">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4242"/>
         </command>
         <command>
             <proto>void <name>glVertex4i</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>y</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>z</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>w</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>w</name></param>
             <vecequiv name="glVertex4iv"/>
         </command>
         <command>
             <proto>void <name>glVertex4iv</name></proto>
-            <param group="CoordI" len="4">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="75"/>
         </command>
         <command>
             <proto>void <name>glVertex4s</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>x</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>y</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>z</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>w</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>w</name></param>
             <vecequiv name="glVertex4sv"/>
         </command>
         <command>
             <proto>void <name>glVertex4sv</name></proto>
-            <param group="CoordS" len="4">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="76"/>
         </command>
         <command>
@@ -31075,13 +26879,13 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glVertexArrayAttribBinding</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>attribindex</name></param>
             <param><ptype>GLuint</ptype> <name>bindingindex</name></param>
         </command>
         <command>
             <proto>void <name>glVertexArrayAttribFormat</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>attribindex</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="VertexAttribType"><ptype>GLenum</ptype> <name>type</name></param>
@@ -31090,7 +26894,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glVertexArrayAttribIFormat</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>attribindex</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="VertexAttribIType"><ptype>GLenum</ptype> <name>type</name></param>
@@ -31098,7 +26902,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glVertexArrayAttribLFormat</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>attribindex</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="VertexAttribLType"><ptype>GLenum</ptype> <name>type</name></param>
@@ -31106,22 +26910,22 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glVertexArrayBindVertexBufferEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>bindingindex</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
         </command>
         <command>
             <proto>void <name>glVertexArrayBindingDivisor</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>bindingindex</name></param>
             <param><ptype>GLuint</ptype> <name>divisor</name></param>
         </command>
         <command>
             <proto>void <name>glVertexArrayColorOffsetEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="ColorPointerType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
@@ -31129,36 +26933,36 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glVertexArrayEdgeFlagOffsetEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
         </command>
         <command>
             <proto>void <name>glVertexArrayElementBuffer</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
         </command>
         <command>
             <proto>void <name>glVertexArrayFogCoordOffsetEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param group="FogCoordinatePointerType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
         </command>
         <command>
             <proto>void <name>glVertexArrayIndexOffsetEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param group="IndexPointerType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
         </command>
         <command>
             <proto>void <name>glVertexArrayMultiTexCoordOffsetEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLenum</ptype> <name>texunit</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="TexCoordPointerType"><ptype>GLenum</ptype> <name>type</name></param>
@@ -31167,8 +26971,8 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glVertexArrayNormalOffsetEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param group="NormalPointerType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
@@ -31190,8 +26994,8 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glVertexArraySecondaryColorOffsetEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="ColorPointerType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
@@ -31199,8 +27003,8 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glVertexArrayTexCoordOffsetEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="TexCoordPointerType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
@@ -31208,28 +27012,28 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glVertexArrayVertexAttribBindingEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>attribindex</name></param>
             <param><ptype>GLuint</ptype> <name>bindingindex</name></param>
         </command>
         <command>
             <proto>void <name>glVertexArrayVertexAttribDivisorEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLuint</ptype> <name>divisor</name></param>
         </command>
         <command>
             <proto>void <name>glVertexArrayVertexAttribFormatEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>attribindex</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="VertexAttribType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>normalized</name></param>
+            <param><ptype>GLboolean</ptype> <name>normalized</name></param>
             <param><ptype>GLuint</ptype> <name>relativeoffset</name></param>
         </command>
         <command>
             <proto>void <name>glVertexArrayVertexAttribIFormatEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>attribindex</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="VertexAttribIType"><ptype>GLenum</ptype> <name>type</name></param>
@@ -31237,8 +27041,8 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glVertexArrayVertexAttribIOffsetEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="VertexAttribType"><ptype>GLenum</ptype> <name>type</name></param>
@@ -31247,7 +27051,7 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glVertexArrayVertexAttribLFormatEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>attribindex</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="VertexAttribLType"><ptype>GLenum</ptype> <name>type</name></param>
@@ -31255,18 +27059,18 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glVertexArrayVertexAttribLOffsetEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="VertexAttribLType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
-            <param group="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
+            <param kind="BufferOffset"><ptype>GLintptr</ptype> <name>offset</name></param>
         </command>
         <command>
             <proto>void <name>glVertexArrayVertexAttribOffsetEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="VertexAttribPointerType"><ptype>GLenum</ptype> <name>type</name></param>
@@ -31276,31 +27080,31 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glVertexArrayVertexBindingDivisorEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>bindingindex</name></param>
             <param><ptype>GLuint</ptype> <name>divisor</name></param>
         </command>
         <command>
             <proto>void <name>glVertexArrayVertexBuffer</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>bindingindex</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLintptr</ptype> <name>offset</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
         </command>
         <command>
             <proto>void <name>glVertexArrayVertexBuffers</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
             <param><ptype>GLuint</ptype> <name>first</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param>const <ptype>GLuint</ptype> *<name>buffers</name></param>
-            <param>const <ptype>GLintptr</ptype> *<name>offsets</name></param>
-            <param>const <ptype>GLsizei</ptype> *<name>strides</name></param>
+            <param class="buffer" len="count">const <ptype>GLuint</ptype> *<name>buffers</name></param>
+            <param len="count">const <ptype>GLintptr</ptype> *<name>offsets</name></param>
+            <param len="count">const <ptype>GLsizei</ptype> *<name>strides</name></param>
         </command>
         <command>
             <proto>void <name>glVertexArrayVertexOffsetEXT</name></proto>
-            <param><ptype>GLuint</ptype> <name>vaobj</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="vertex array"><ptype>GLuint</ptype> <name>vaobj</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="VertexPointerType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
@@ -31389,13 +27193,13 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glVertexAttrib1hNV</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>x</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>x</name></param>
             <vecequiv name="glVertexAttrib1hvNV"/>
         </command>
         <command>
             <proto>void <name>glVertexAttrib1hvNV</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param group="Half16NV" len="1">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="1">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4257"/>
         </command>
         <command>
@@ -31527,14 +27331,14 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glVertexAttrib2hNV</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>x</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>y</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>x</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>y</name></param>
             <vecequiv name="glVertexAttrib2hvNV"/>
         </command>
         <command>
             <proto>void <name>glVertexAttrib2hvNV</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param group="Half16NV" len="2">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="2">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4258"/>
         </command>
         <command>
@@ -31675,15 +27479,15 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glVertexAttrib3hNV</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>x</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>y</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>z</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>x</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>y</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>z</name></param>
             <vecequiv name="glVertexAttrib3hvNV"/>
         </command>
         <command>
             <proto>void <name>glVertexAttrib3hvNV</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param group="Half16NV" len="3">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="3">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4259"/>
         </command>
         <command>
@@ -31929,16 +27733,16 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glVertexAttrib4hNV</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>x</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>y</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>z</name></param>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>w</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>x</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>y</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>z</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>w</name></param>
             <vecequiv name="glVertexAttrib4hvNV"/>
         </command>
         <command>
             <proto>void <name>glVertexAttrib4hvNV</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param group="Half16NV" len="4">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="4">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4260"/>
         </command>
         <command>
@@ -32004,10 +27808,10 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glVertexAttrib4ubNV</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param group="ColorUB"><ptype>GLubyte</ptype> <name>x</name></param>
-            <param group="ColorUB"><ptype>GLubyte</ptype> <name>y</name></param>
-            <param group="ColorUB"><ptype>GLubyte</ptype> <name>z</name></param>
-            <param group="ColorUB"><ptype>GLubyte</ptype> <name>w</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>x</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>y</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>z</name></param>
+            <param kind="Color"><ptype>GLubyte</ptype> <name>w</name></param>
             <alias name="glVertexAttrib4Nub"/>
             <vecequiv name="glVertexAttrib4ubvNV"/>
         </command>
@@ -32025,7 +27829,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glVertexAttrib4ubvNV</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
-            <param group="ColorUB" len="4">const <ptype>GLubyte</ptype> *<name>v</name></param>
+            <param kind="Color" len="4">const <ptype>GLubyte</ptype> *<name>v</name></param>
             <alias name="glVertexAttrib4Nubv"/>
             <glx type="render" opcode="4201"/>
         </command>
@@ -32056,9 +27860,9 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="VertexAttribPointerType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>normalized</name></param>
+            <param><ptype>GLboolean</ptype> <name>normalized</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
-            <param><ptype>GLuint</ptype> <name>buffer</name></param>
+            <param class="buffer"><ptype>GLuint</ptype> <name>buffer</name></param>
             <param><ptype>GLuint</ptype> <name>offset</name></param>
         </command>
         <command>
@@ -32100,7 +27904,7 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLuint</ptype> <name>attribindex</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="VertexAttribType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>normalized</name></param>
+            <param><ptype>GLboolean</ptype> <name>normalized</name></param>
             <param><ptype>GLuint</ptype> <name>relativeoffset</name></param>
         </command>
         <command>
@@ -32108,7 +27912,7 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="VertexAttribType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>normalized</name></param>
+            <param><ptype>GLboolean</ptype> <name>normalized</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
         </command>
         <command>
@@ -32389,7 +28193,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glVertexAttribIPointer</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
-            <param group="VertexAttribPointerType"><ptype>GLenum</ptype> <name>type</name></param>
+            <param group="VertexAttribIType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
             <param len="COMPSIZE(size,type,stride)">const void *<name>pointer</name></param>
         </command>
@@ -32397,7 +28201,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glVertexAttribIPointerEXT</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
-            <param group="VertexAttribPointerType"><ptype>GLenum</ptype> <name>type</name></param>
+            <param group="VertexAttribIType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
             <param len="COMPSIZE(size,type,stride)">const void *<name>pointer</name></param>
             <alias name="glVertexAttribIPointer"/>
@@ -32622,7 +28426,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glVertexAttribLPointer</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
-            <param group="VertexAttribPointerType"><ptype>GLenum</ptype> <name>type</name></param>
+            <param group="VertexAttribLType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
             <param len="size">const void *<name>pointer</name></param>
         </command>
@@ -32630,7 +28434,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glVertexAttribLPointerEXT</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
-            <param group="VertexAttribPointerType"><ptype>GLenum</ptype> <name>type</name></param>
+            <param group="VertexAttribLType"><ptype>GLenum</ptype> <name>type</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
             <param len="size">const void *<name>pointer</name></param>
             <alias name="glVertexAttribLPointer"/>
@@ -32639,56 +28443,56 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glVertexAttribP1ui</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param group="VertexAttribPointerType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>normalized</name></param>
+            <param><ptype>GLboolean</ptype> <name>normalized</name></param>
             <param><ptype>GLuint</ptype> <name>value</name></param>
         </command>
         <command>
             <proto>void <name>glVertexAttribP1uiv</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param group="VertexAttribPointerType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>normalized</name></param>
+            <param><ptype>GLboolean</ptype> <name>normalized</name></param>
             <param len="1">const <ptype>GLuint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glVertexAttribP2ui</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param group="VertexAttribPointerType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>normalized</name></param>
+            <param><ptype>GLboolean</ptype> <name>normalized</name></param>
             <param><ptype>GLuint</ptype> <name>value</name></param>
         </command>
         <command>
             <proto>void <name>glVertexAttribP2uiv</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param group="VertexAttribPointerType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>normalized</name></param>
+            <param><ptype>GLboolean</ptype> <name>normalized</name></param>
             <param len="1">const <ptype>GLuint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glVertexAttribP3ui</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param group="VertexAttribPointerType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>normalized</name></param>
+            <param><ptype>GLboolean</ptype> <name>normalized</name></param>
             <param><ptype>GLuint</ptype> <name>value</name></param>
         </command>
         <command>
             <proto>void <name>glVertexAttribP3uiv</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param group="VertexAttribPointerType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>normalized</name></param>
+            <param><ptype>GLboolean</ptype> <name>normalized</name></param>
             <param len="1">const <ptype>GLuint</ptype> *<name>value</name></param>
         </command>
         <command>
             <proto>void <name>glVertexAttribP4ui</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param group="VertexAttribPointerType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>normalized</name></param>
+            <param><ptype>GLboolean</ptype> <name>normalized</name></param>
             <param><ptype>GLuint</ptype> <name>value</name></param>
         </command>
         <command>
             <proto>void <name>glVertexAttribP4uiv</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param group="VertexAttribPointerType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>normalized</name></param>
+            <param><ptype>GLboolean</ptype> <name>normalized</name></param>
             <param len="1">const <ptype>GLuint</ptype> *<name>value</name></param>
         </command>
         <command>
@@ -32702,7 +28506,7 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="VertexAttribPointerType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>normalized</name></param>
+            <param><ptype>GLboolean</ptype> <name>normalized</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
             <param len="COMPSIZE(size,type,stride)">const void *<name>pointer</name></param>
         </command>
@@ -32711,7 +28515,7 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLint</ptype> <name>size</name></param>
             <param group="VertexAttribPointerType"><ptype>GLenum</ptype> <name>type</name></param>
-            <param group="Boolean"><ptype>GLboolean</ptype> <name>normalized</name></param>
+            <param><ptype>GLboolean</ptype> <name>normalized</name></param>
             <param><ptype>GLsizei</ptype> <name>stride</name></param>
             <param len="COMPSIZE(size,type,stride)">const void *<name>pointer</name></param>
             <alias name="glVertexAttribPointer"/>
@@ -32742,7 +28546,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glVertexAttribs1hvNV</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param group="Half16NV" len="n">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="n">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4261"/>
         </command>
         <command>
@@ -32770,7 +28574,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glVertexAttribs2hvNV</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param group="Half16NV" len="n">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="n">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4262"/>
         </command>
         <command>
@@ -32798,7 +28602,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glVertexAttribs3hvNV</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param group="Half16NV" len="n">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="n">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4263"/>
         </command>
         <command>
@@ -32826,7 +28630,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glVertexAttribs4hvNV</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>n</name></param>
-            <param group="Half16NV" len="n">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
+            <param len="n">const <ptype>GLhalfNV</ptype> *<name>v</name></param>
             <glx type="render" opcode="4264"/>
         </command>
         <command>
@@ -32840,7 +28644,7 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glVertexAttribs4ubvNV</name></proto>
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param><ptype>GLsizei</ptype> <name>count</name></param>
-            <param group="ColorUB" len="count*4">const <ptype>GLubyte</ptype> *<name>v</name></param>
+            <param kind="Color" len="count*4">const <ptype>GLubyte</ptype> *<name>v</name></param>
             <glx type="render" opcode="4214"/>
         </command>
         <command>
@@ -33131,12 +28935,12 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glVertexWeighthNV</name></proto>
-            <param group="Half16NV"><ptype>GLhalfNV</ptype> <name>weight</name></param>
+            <param><ptype>GLhalfNV</ptype> <name>weight</name></param>
             <vecequiv name="glVertexWeighthvNV"/>
         </command>
         <command>
             <proto>void <name>glVertexWeighthvNV</name></proto>
-            <param group="Half16NV" len="1">const <ptype>GLhalfNV</ptype> *<name>weight</name></param>
+            <param len="1">const <ptype>GLhalfNV</ptype> *<name>weight</name></param>
             <glx type="render" opcode="4256"/>
         </command>
         <command>
@@ -33168,8 +28972,8 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glViewport</name></proto>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="WinCoord"><ptype>GLint</ptype> <name>y</name></param>
             <param><ptype>GLsizei</ptype> <name>width</name></param>
             <param><ptype>GLsizei</ptype> <name>height</name></param>
             <glx type="render" opcode="191"/>
@@ -33255,9 +29059,9 @@ typedef unsigned int GLhandleARB;
             <proto>void <name>glWaitSemaphoreEXT</name></proto>
             <param><ptype>GLuint</ptype> <name>semaphore</name></param>
             <param><ptype>GLuint</ptype> <name>numBufferBarriers</name></param>
-            <param len="COMPSIZE(numBufferBarriers)">const <ptype>GLuint</ptype> *<name>buffers</name></param>
+            <param class="buffer" len="COMPSIZE(numBufferBarriers)">const <ptype>GLuint</ptype> *<name>buffers</name></param>
             <param><ptype>GLuint</ptype> <name>numTextureBarriers</name></param>
-            <param len="COMPSIZE(numTextureBarriers)">const <ptype>GLuint</ptype> *<name>textures</name></param>
+            <param class="texture" len="COMPSIZE(numTextureBarriers)">const <ptype>GLuint</ptype> *<name>textures</name></param>
             <param group="TextureLayout" len="COMPSIZE(numTextureBarriers)">const <ptype>GLenum</ptype> *<name>srcLayouts</name></param>
         </command>
         <command>
@@ -33269,22 +29073,22 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glWaitSync</name></proto>
-            <param group="sync"><ptype>GLsync</ptype> <name>sync</name></param>
-            <param><ptype>GLbitfield</ptype> <name>flags</name></param>
+            <param class="sync"><ptype>GLsync</ptype> <name>sync</name></param>
+            <param group="SyncBehaviorFlags"><ptype>GLbitfield</ptype> <name>flags</name></param>
             <param><ptype>GLuint64</ptype> <name>timeout</name></param>
         </command>
         <command>
             <proto>void <name>glWaitSyncAPPLE</name></proto>
-            <param><ptype>GLsync</ptype> <name>sync</name></param>
-            <param><ptype>GLbitfield</ptype> <name>flags</name></param>
+            <param class="sync"><ptype>GLsync</ptype> <name>sync</name></param>
+            <param group="SyncBehaviorFlags"><ptype>GLbitfield</ptype> <name>flags</name></param>
             <param><ptype>GLuint64</ptype> <name>timeout</name></param>
             <alias name="glWaitSync"/>
         </command>
         <command>
             <proto>void <name>glWeightPathsNV</name></proto>
-            <param group="Path"><ptype>GLuint</ptype> <name>resultPath</name></param>
+            <param kind="Path"><ptype>GLuint</ptype> <name>resultPath</name></param>
             <param><ptype>GLsizei</ptype> <name>numPaths</name></param>
-            <param group="Path" len="numPaths">const <ptype>GLuint</ptype> *<name>paths</name></param>
+            <param kind="Path" len="numPaths">const <ptype>GLuint</ptype> *<name>paths</name></param>
             <param len="numPaths">const <ptype>GLfloat</ptype> *<name>weights</name></param>
         </command>
         <command>
@@ -33351,351 +29155,351 @@ typedef unsigned int GLhandleARB;
         </command>
         <command>
             <proto>void <name>glWindowPos2d</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>x</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>y</name></param>
             <vecequiv name="glWindowPos2dv"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2dARB</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>x</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>y</name></param>
             <alias name="glWindowPos2d"/>
             <vecequiv name="glWindowPos2dvARB"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2dMESA</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>x</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>y</name></param>
             <alias name="glWindowPos2d"/>
             <vecequiv name="glWindowPos2dvMESA"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2dv</name></proto>
-            <param group="CoordD" len="2">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="230"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2dvARB</name></proto>
-            <param group="CoordD" len="2">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <alias name="glWindowPos2dv"/>
             <glx type="render" opcode="230"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2dvMESA</name></proto>
-            <param group="CoordD" len="2">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <alias name="glWindowPos2dv"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2f</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>x</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>y</name></param>
             <vecequiv name="glWindowPos2fv"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2fARB</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>x</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>y</name></param>
             <alias name="glWindowPos2f"/>
             <vecequiv name="glWindowPos2fvARB"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2fMESA</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>x</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>y</name></param>
             <alias name="glWindowPos2f"/>
             <vecequiv name="glWindowPos2fvMESA"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2fv</name></proto>
-            <param group="CoordF" len="2">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="230"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2fvARB</name></proto>
-            <param group="CoordF" len="2">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <alias name="glWindowPos2fv"/>
             <glx type="render" opcode="230"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2fvMESA</name></proto>
-            <param group="CoordF" len="2">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <alias name="glWindowPos2fv"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2i</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>y</name></param>
             <vecequiv name="glWindowPos2iv"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2iARB</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>y</name></param>
             <alias name="glWindowPos2i"/>
             <vecequiv name="glWindowPos2ivARB"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2iMESA</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>y</name></param>
             <alias name="glWindowPos2i"/>
             <vecequiv name="glWindowPos2ivMESA"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2iv</name></proto>
-            <param group="CoordI" len="2">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="230"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2ivARB</name></proto>
-            <param group="CoordI" len="2">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLint</ptype> *<name>v</name></param>
             <alias name="glWindowPos2iv"/>
             <glx type="render" opcode="230"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2ivMESA</name></proto>
-            <param group="CoordI" len="2">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLint</ptype> *<name>v</name></param>
             <alias name="glWindowPos2iv"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2s</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>x</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>y</name></param>
             <vecequiv name="glWindowPos2sv"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2sARB</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>x</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>y</name></param>
             <alias name="glWindowPos2s"/>
             <vecequiv name="glWindowPos2svARB"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2sMESA</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>x</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>y</name></param>
             <alias name="glWindowPos2s"/>
             <vecequiv name="glWindowPos2svMESA"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2sv</name></proto>
-            <param group="CoordS" len="2">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="230"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2svARB</name></proto>
-            <param group="CoordS" len="2">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLshort</ptype> *<name>v</name></param>
             <alias name="glWindowPos2sv"/>
             <glx type="render" opcode="230"/>
         </command>
         <command>
             <proto>void <name>glWindowPos2svMESA</name></proto>
-            <param group="CoordS" len="2">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="2">const <ptype>GLshort</ptype> *<name>v</name></param>
             <alias name="glWindowPos2sv"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3d</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>x</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>y</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>z</name></param>
             <vecequiv name="glWindowPos3dv"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3dARB</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>x</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>y</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>z</name></param>
             <alias name="glWindowPos3d"/>
             <vecequiv name="glWindowPos3dvARB"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3dMESA</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>x</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>y</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>z</name></param>
             <alias name="glWindowPos3d"/>
             <vecequiv name="glWindowPos3dvMESA"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3dv</name></proto>
-            <param group="CoordD" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <glx type="render" opcode="230"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3dvARB</name></proto>
-            <param group="CoordD" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <alias name="glWindowPos3dv"/>
             <glx type="render" opcode="230"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3dvMESA</name></proto>
-            <param group="CoordD" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLdouble</ptype> *<name>v</name></param>
             <alias name="glWindowPos3dv"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3f</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>x</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>y</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>z</name></param>
             <vecequiv name="glWindowPos3fv"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3fARB</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>x</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>y</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>z</name></param>
             <alias name="glWindowPos3f"/>
             <vecequiv name="glWindowPos3fvARB"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3fMESA</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>x</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>y</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>z</name></param>
             <alias name="glWindowPos3f"/>
             <vecequiv name="glWindowPos3fvMESA"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3fv</name></proto>
-            <param group="CoordF" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <glx type="render" opcode="230"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3fvARB</name></proto>
-            <param group="CoordF" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <alias name="glWindowPos3fv"/>
             <glx type="render" opcode="230"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3fvMESA</name></proto>
-            <param group="CoordF" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLfloat</ptype> *<name>v</name></param>
             <alias name="glWindowPos3fv"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3i</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>y</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>z</name></param>
             <vecequiv name="glWindowPos3iv"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3iARB</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>y</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>z</name></param>
             <alias name="glWindowPos3i"/>
             <vecequiv name="glWindowPos3ivARB"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3iMESA</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>y</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>z</name></param>
             <alias name="glWindowPos3i"/>
             <vecequiv name="glWindowPos3ivMESA"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3iv</name></proto>
-            <param group="CoordI" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
             <glx type="render" opcode="230"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3ivARB</name></proto>
-            <param group="CoordI" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
             <alias name="glWindowPos3iv"/>
             <glx type="render" opcode="230"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3ivMESA</name></proto>
-            <param group="CoordI" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLint</ptype> *<name>v</name></param>
             <alias name="glWindowPos3iv"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3s</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>x</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>y</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>z</name></param>
             <vecequiv name="glWindowPos3sv"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3sARB</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>x</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>y</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>z</name></param>
             <alias name="glWindowPos3s"/>
             <vecequiv name="glWindowPos3svARB"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3sMESA</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>x</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>y</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>z</name></param>
             <alias name="glWindowPos3s"/>
             <vecequiv name="glWindowPos3svMESA"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3sv</name></proto>
-            <param group="CoordS" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
             <glx type="render" opcode="230"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3svARB</name></proto>
-            <param group="CoordS" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
             <alias name="glWindowPos3sv"/>
             <glx type="render" opcode="230"/>
         </command>
         <command>
             <proto>void <name>glWindowPos3svMESA</name></proto>
-            <param group="CoordS" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="3">const <ptype>GLshort</ptype> *<name>v</name></param>
             <alias name="glWindowPos3sv"/>
         </command>
         <command>
             <proto>void <name>glWindowPos4dMESA</name></proto>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>x</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>y</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>z</name></param>
-            <param group="CoordD"><ptype>GLdouble</ptype> <name>w</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLdouble</ptype> <name>w</name></param>
             <vecequiv name="glWindowPos4dvMESA"/>
         </command>
         <command>
             <proto>void <name>glWindowPos4dvMESA</name></proto>
-            <param group="CoordD" len="4">const <ptype>GLdouble</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLdouble</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glWindowPos4fMESA</name></proto>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>x</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>y</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>z</name></param>
-            <param group="CoordF"><ptype>GLfloat</ptype> <name>w</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLfloat</ptype> <name>w</name></param>
             <vecequiv name="glWindowPos4fvMESA"/>
         </command>
         <command>
             <proto>void <name>glWindowPos4fvMESA</name></proto>
-            <param group="CoordF" len="4">const <ptype>GLfloat</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLfloat</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glWindowPos4iMESA</name></proto>
-            <param group="CoordI"><ptype>GLint</ptype> <name>x</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>y</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>z</name></param>
-            <param group="CoordI"><ptype>GLint</ptype> <name>w</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLint</ptype> <name>w</name></param>
             <vecequiv name="glWindowPos4ivMESA"/>
         </command>
         <command>
             <proto>void <name>glWindowPos4ivMESA</name></proto>
-            <param group="CoordI" len="4">const <ptype>GLint</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLint</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glWindowPos4sMESA</name></proto>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>x</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>y</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>z</name></param>
-            <param group="CoordS"><ptype>GLshort</ptype> <name>w</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>x</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>y</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>z</name></param>
+            <param kind="Coord"><ptype>GLshort</ptype> <name>w</name></param>
             <vecequiv name="glWindowPos4svMESA"/>
         </command>
         <command>
             <proto>void <name>glWindowPos4svMESA</name></proto>
-            <param group="CoordS" len="4">const <ptype>GLshort</ptype> *<name>v</name></param>
+            <param kind="Coord" len="4">const <ptype>GLshort</ptype> *<name>v</name></param>
         </command>
         <command>
             <proto>void <name>glWindowRectanglesEXT</name></proto>
@@ -33715,7 +29519,7 @@ typedef unsigned int GLhandleARB;
         <command>
             <proto>void <name>glDrawVkImageNV</name></proto>
             <param><ptype>GLuint64</ptype> <name>vkImage</name></param>
-            <param><ptype>GLuint</ptype> <name>sampler</name></param>
+            <param class="sampler"><ptype>GLuint</ptype> <name>sampler</name></param>
             <param><ptype>GLfloat</ptype> <name>x0</name></param>
             <param><ptype>GLfloat</ptype> <name>y0</name></param>
             <param><ptype>GLfloat</ptype> <name>x1</name></param>
@@ -37781,6 +33585,20 @@ typedef unsigned int GLhandleARB;
             <command name="glGetnHistogram"/>
             <command name="glGetnMinmax"/>
         </require>
+        <require profile="compatibility">
+            <enum name="GL_COLOR_TABLE"/>
+            <enum name="GL_POST_CONVOLUTION_COLOR_TABLE"/>
+            <enum name="GL_POST_COLOR_MATRIX_COLOR_TABLE"/>
+            <enum name="GL_PROXY_COLOR_TABLE"/>
+            <enum name="GL_PROXY_POST_CONVOLUTION_COLOR_TABLE"/>
+            <enum name="GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE"/>
+            <enum name="GL_CONVOLUTION_1D"/>
+            <enum name="GL_CONVOLUTION_2D"/>
+            <enum name="GL_SEPARABLE_2D"/>
+            <enum name="GL_HISTOGRAM"/>
+            <enum name="GL_PROXY_HISTOGRAM"/>
+            <enum name="GL_MINMAX"/>
+        </require>
         <require comment="Reuse GL_ARB_texture_barrier">
             <command name="glTextureBarrier"/>
         </require>
@@ -40123,7 +35941,6 @@ typedef unsigned int GLhandleARB;
             <enum name="GL_FRAMEBUFFER_BINDING"/>
             <enum name="GL_RENDERBUFFER_BINDING"/>
             <enum name="GL_MAX_RENDERBUFFER_SIZE"/>
-            <enum name="GL_NO_ERROR"/>
             <enum name="GL_GUILTY_CONTEXT_RESET"/>
             <enum name="GL_INNOCENT_CONTEXT_RESET"/>
             <enum name="GL_UNKNOWN_CONTEXT_RESET"/>
@@ -43767,6 +39584,10 @@ typedef unsigned int GLhandleARB;
                 <command name="glGetFloati_v"/>
                 <command name="glGetDoublei_v"/>
             </require>
+            <require comment="ARB_viewport_array interactions with NV_depth_buffer_float">
+                <command name="glDepthRangeArraydvNV"/>
+                <command name="glDepthRangeIndexeddNV"/>
+            </require>
         </extension>
         <extension name="GL_ARB_window_pos" supported="gl">
             <require>
@@ -43806,6 +39627,11 @@ typedef unsigned int GLhandleARB;
             </require>
         </extension>
         <extension name="GL_ARM_shader_framebuffer_fetch_depth_stencil" supported="gles2"/>
+        <extension name="GL_ARM_texture_unnormalized_coordinates" supported="gles2">
+            <require>
+                <enum name="GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM"/>
+            </require>
+        </extension>
         <extension name="GL_ATI_draw_buffers" supported="gl">
             <require>
                 <enum name="GL_MAX_DRAW_BUFFERS_ATI"/>
@@ -44175,6 +40001,13 @@ typedef unsigned int GLhandleARB;
                 <command name="glEGLImageTargetTextureStorageEXT"/>
             </require>
         </extension>
+        <extension name="GL_EXT_EGL_image_storage_compression" supported="gles2">
+            <require>
+                <enum name="GL_SURFACE_COMPRESSION_EXT"/>
+                <enum name="GL_SURFACE_COMPRESSION_FIXED_RATE_NONE_EXT"/>
+                <enum name="GL_SURFACE_COMPRESSION_FIXED_RATE_DEFAULT_EXT"/>
+            </require>
+        </extension>
         <extension name="GL_EXT_EGL_sync" supported="gl|glcore"/>
         <extension name="GL_EXT_YUV_target" supported="gles2">
             <require>
@@ -45020,6 +40853,40 @@ typedef unsigned int GLhandleARB;
                 <command name="glFogCoordPointerEXT"/>
             </require>
         </extension>
+        <extension name="GL_EXT_fragment_shading_rate" supported="gles2">
+            <require>
+                <enum name="GL_SHADING_RATE_1X1_PIXELS_EXT"/>
+                <enum name="GL_SHADING_RATE_1X2_PIXELS_EXT"/>
+                <enum name="GL_SHADING_RATE_2X1_PIXELS_EXT"/>
+                <enum name="GL_SHADING_RATE_2X2_PIXELS_EXT"/>
+                <enum name="GL_SHADING_RATE_1X4_PIXELS_EXT"/>
+                <enum name="GL_SHADING_RATE_4X1_PIXELS_EXT"/>
+                <enum name="GL_SHADING_RATE_4X2_PIXELS_EXT"/>
+                <enum name="GL_SHADING_RATE_2X4_PIXELS_EXT"/>
+                <enum name="GL_SHADING_RATE_4X4_PIXELS_EXT"/>
+                <enum name="GL_SHADING_RATE_EXT"/>
+                <enum name="GL_SHADING_RATE_ATTACHMENT_EXT"/>
+                <enum name="GL_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_EXT"/>
+                <enum name="GL_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_EXT"/>
+                <enum name="GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_EXT"/>
+                <enum name="GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_EXT"/>
+                <enum name="GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_EXT"/>
+                <enum name="GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT"/>
+                <enum name="GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT"/>
+                <enum name="GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT"/>
+                <enum name="GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT"/>
+                <enum name="GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_ASPECT_RATIO_EXT"/>
+                <enum name="GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_LAYERS_EXT"/>
+                <enum name="GL_FRAGMENT_SHADING_RATE_WITH_SHADER_DEPTH_STENCIL_WRITES_SUPPORTED_EXT"/>
+                <enum name="GL_FRAGMENT_SHADING_RATE_WITH_SAMPLE_MASK_SUPPORTED_EXT"/>
+                <enum name="GL_FRAGMENT_SHADING_RATE_ATTACHMENT_WITH_DEFAULT_FRAMEBUFFER_SUPPORTED_EXT"/>
+                <enum name="GL_FRAGMENT_SHADING_RATE_NON_TRIVIAL_COMBINERS_SUPPORTED_EXT"/>
+                <command name="glGetFragmentShadingRatesEXT"/>
+                <command name="glShadingRateEXT"/>
+                <command name="glShadingRateCombinerOpsEXT"/>
+                <command name="glFramebufferShadingRateEXT"/>
+            </require>
+        </extension>
         <extension name="GL_EXT_framebuffer_blit" supported="gl">
             <require>
                 <enum name="GL_READ_FRAMEBUFFER_EXT"/>
@@ -45029,6 +40896,12 @@ typedef unsigned int GLhandleARB;
                 <command name="glBlitFramebufferEXT"/>
             </require>
         </extension>
+        <extension name="GL_EXT_framebuffer_blit_layers" supported="gl|gles2">
+            <require>
+                <command name="glBlitFramebufferLayersEXT"/>
+                <command name="glBlitFramebufferLayerEXT"/>
+            </require>
+        </extension>
         <extension name="GL_EXT_framebuffer_multisample" supported="gl">
             <require>
                 <enum name="GL_RENDERBUFFER_SAMPLES_EXT"/>
@@ -45193,7 +41066,6 @@ typedef unsigned int GLhandleARB;
         </extension>
         <extension name="GL_EXT_gpu_shader4" supported="gl">
             <require>
-                <enum name="GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT"/>
                 <enum name="GL_SAMPLER_1D_ARRAY_EXT"/>
                 <enum name="GL_SAMPLER_2D_ARRAY_EXT"/>
                 <enum name="GL_SAMPLER_BUFFER_EXT"/>
@@ -45233,6 +41105,32 @@ typedef unsigned int GLhandleARB;
                 <command name="glUniform3uivEXT"/>
                 <command name="glUniform4uivEXT"/>
             </require>
+            <require comment="Duplicated in GL_NV_vertex_program4 since both extensions list these functions and tokens">
+                <enum name="GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT"/>
+                <command name="glVertexAttribI1iEXT"/>
+                <command name="glVertexAttribI2iEXT"/>
+                <command name="glVertexAttribI3iEXT"/>
+                <command name="glVertexAttribI4iEXT"/>
+                <command name="glVertexAttribI1uiEXT"/>
+                <command name="glVertexAttribI2uiEXT"/>
+                <command name="glVertexAttribI3uiEXT"/>
+                <command name="glVertexAttribI4uiEXT"/>
+                <command name="glVertexAttribI1ivEXT"/>
+                <command name="glVertexAttribI2ivEXT"/>
+                <command name="glVertexAttribI3ivEXT"/>
+                <command name="glVertexAttribI4ivEXT"/>
+                <command name="glVertexAttribI1uivEXT"/>
+                <command name="glVertexAttribI2uivEXT"/>
+                <command name="glVertexAttribI3uivEXT"/>
+                <command name="glVertexAttribI4uivEXT"/>
+                <command name="glVertexAttribI4bvEXT"/>
+                <command name="glVertexAttribI4svEXT"/>
+                <command name="glVertexAttribI4ubvEXT"/>
+                <command name="glVertexAttribI4usvEXT"/>
+                <command name="glVertexAttribIPointerEXT"/>
+                <command name="glGetVertexAttribIivEXT"/>
+                <command name="glGetVertexAttribIuivEXT"/>
+            </require>
         </extension>
         <extension name="GL_EXT_gpu_shader5" supported="gles2"/>
         <extension name="GL_EXT_histogram" supported="gl">
@@ -45442,6 +41340,10 @@ typedef unsigned int GLhandleARB;
                 <command name="glFramebufferTexture2DMultisampleEXT"/>
             </require>
         </extension>
+        <extension name="GL_EXT_multisampled_render_to_texture2" supported="gles2">
+            <require>
+            </require>
+        </extension>
         <extension name="GL_EXT_multiview_draw_buffers" supported="gles2">
             <require>
                 <enum name="GL_COLOR_ATTACHMENT_EXT"/>
@@ -45733,6 +41635,7 @@ typedef unsigned int GLhandleARB;
                 <command name="glSecondaryColorPointerEXT"/>
             </require>
         </extension>
+        <extension name="GL_EXT_separate_depth_stencil" supported="gles2"/>
         <extension name="GL_EXT_separate_shader_objects" supported="gl|glcore|gles2">
             <require api="gl" comment="The OpenGL version of this extension is completely unrelated to the OpenGL ES version">
                 <enum name="GL_ACTIVE_PROGRAM_EXT"/>
@@ -45787,7 +41690,6 @@ typedef unsigned int GLhandleARB;
                 <command name="glProgramUniform2uivEXT"/>
                 <command name="glProgramUniform3uivEXT"/>
                 <command name="glProgramUniform4uivEXT"/>
-                <command name="glProgramUniformMatrix4fvEXT"/>
                 <command name="glProgramUniformMatrix2x3fvEXT"/>
                 <command name="glProgramUniformMatrix3x2fvEXT"/>
                 <command name="glProgramUniformMatrix2x4fvEXT"/>
@@ -45898,6 +41800,7 @@ typedef unsigned int GLhandleARB;
                 <command name="glClearPixelLocalStorageuiEXT"/>
             </require>
         </extension>
+        <extension name="GL_EXT_shader_samples_identical" supported="gl|gles2"/>
         <extension name="GL_EXT_shader_texture_lod" supported="gles2"/>
         <extension name="GL_EXT_shadow_funcs" supported="gl"/>
         <extension name="GL_EXT_shadow_samplers" supported="gles2">
@@ -46413,7 +42316,7 @@ typedef unsigned int GLhandleARB;
                 <enum name="GL_SR8_EXT"/>
             </require>
         </extension>
-        <extension name="GL_EXT_texture_sRGB_RG8" supported="gles2">
+        <extension name="GL_EXT_texture_sRGB_RG8" supported="gles2|gl|glcore">
             <require>
                 <enum name="GL_SRG8_EXT"/>
             </require>
@@ -46461,7 +42364,7 @@ typedef unsigned int GLhandleARB;
                 <enum name="GL_SIGNED_NORMALIZED"/>
             </require>
         </extension>
-        <extension name="GL_EXT_texture_storage" supported="gles1|gles2">
+        <extension name="GL_EXT_texture_storage" supported="gles1|gles2|gl|glcore">
             <require comment="Not clear all of these enums should be here for OpenGL ES. Many are only defined if other extensions also requiring them are supported">
                 <enum name="GL_TEXTURE_IMMUTABLE_FORMAT_EXT"/>
                 <enum name="GL_ALPHA8_EXT"/>
@@ -46496,6 +42399,28 @@ typedef unsigned int GLhandleARB;
                 <command name="glTextureStorage3DEXT"/>
             </require>
         </extension>
+        <extension name="GL_EXT_texture_storage_compression" supported="gles2">
+            <require>
+                <enum name="GL_SURFACE_COMPRESSION_EXT"/>
+                <enum name="GL_NUM_SURFACE_COMPRESSION_FIXED_RATES_EXT"/>
+                <enum name="GL_SURFACE_COMPRESSION_FIXED_RATE_NONE_EXT"/>
+                <enum name="GL_SURFACE_COMPRESSION_FIXED_RATE_DEFAULT_EXT"/>
+                <enum name="GL_SURFACE_COMPRESSION_FIXED_RATE_1BPC_EXT"/>
+                <enum name="GL_SURFACE_COMPRESSION_FIXED_RATE_2BPC_EXT"/>
+                <enum name="GL_SURFACE_COMPRESSION_FIXED_RATE_3BPC_EXT"/>
+                <enum name="GL_SURFACE_COMPRESSION_FIXED_RATE_4BPC_EXT"/>
+                <enum name="GL_SURFACE_COMPRESSION_FIXED_RATE_5BPC_EXT"/>
+                <enum name="GL_SURFACE_COMPRESSION_FIXED_RATE_6BPC_EXT"/>
+                <enum name="GL_SURFACE_COMPRESSION_FIXED_RATE_7BPC_EXT"/>
+                <enum name="GL_SURFACE_COMPRESSION_FIXED_RATE_8BPC_EXT"/>
+                <enum name="GL_SURFACE_COMPRESSION_FIXED_RATE_9BPC_EXT"/>
+                <enum name="GL_SURFACE_COMPRESSION_FIXED_RATE_10BPC_EXT"/>
+                <enum name="GL_SURFACE_COMPRESSION_FIXED_RATE_11BPC_EXT"/>
+                <enum name="GL_SURFACE_COMPRESSION_FIXED_RATE_12BPC_EXT"/>
+                <command name="glTexStorageAttribs2DEXT"/>
+                <command name="glTexStorageAttribs3DEXT"/>
+            </require>
+        </extension>
         <extension name="GL_EXT_texture_swizzle" supported="gl">
             <require>
                 <enum name="GL_TEXTURE_SWIZZLE_R_EXT"/>
@@ -46520,6 +42445,18 @@ typedef unsigned int GLhandleARB;
                 <command name="glTextureViewEXT"/>
             </require>
         </extension>
+        <extension name="GL_NV_timeline_semaphore" supported="gl|gles2">
+            <require>
+                <enum name="GL_TIMELINE_SEMAPHORE_VALUE_NV"/>
+                <enum name="GL_SEMAPHORE_TYPE_NV"/>
+                <enum name="GL_SEMAPHORE_TYPE_BINARY_NV"/>
+                <enum name="GL_SEMAPHORE_TYPE_TIMELINE_NV"/>
+                <enum name="GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV"/>
+                <command name="glCreateSemaphoresNV"/>
+                <command name="glSemaphoreParameterivNV"/>
+                <command name="glGetSemaphoreParameterivNV"/>
+            </require>
+        </extension>
         <extension name="GL_EXT_timer_query" supported="gl">
             <require>
                 <enum name="GL_TIME_ELAPSED_EXT"/>
@@ -47044,6 +42981,18 @@ typedef unsigned int GLhandleARB;
                 <command name="glClipPlanexIMG"/>
             </require>
         </extension>
+        <extension name="GL_IMG_tile_region_protection" supported="glsc2">
+            <require>
+                <enum name="GL_TRP_IMG"/>
+                <enum name="GL_TRP_ERROR_CONTEXT_RESET_IMG"/>
+                <enum name="GL_TRP_UNSUPPORTED_CONTEXT_IMG"/>
+            </require>
+        </extension>
+        <extension name="GL_IMG_pvric_end_to_end_signature" supported="glsc2">
+            <require>
+                <enum name="GL_PVRIC_SIGNATURE_MISMATCH_IMG"/>
+            </require>
+        </extension>
         <extension name="GL_INGR_blend_func_separate" supported="gl">
             <require>
                 <command name="glBlendFuncSeparateINGR"/>
@@ -47426,6 +43375,18 @@ typedef unsigned int GLhandleARB;
                 <enum name="GL_TEXTURE_2D_STACK_BINDING_MESAX"/>
             </require>
         </extension>
+        <extension name="GL_MESA_bgra" supported="gles2">
+          <require>
+                <enum name="GL_BGR_EXT"/>
+                <enum name="GL_BGRA_EXT"/>
+            </require>
+        </extension>
+
+        <extension name="GL_MESA_framebuffer_flip_x" supported="gl|glcore|gles2">
+            <require>
+                <enum name="GL_FRAMEBUFFER_FLIP_X_MESA"/>
+            </require>
+        </extension>
         <extension name="GL_MESA_framebuffer_flip_y" supported="gl|glcore|gles2">
             <require>
                 <enum name="GL_FRAMEBUFFER_FLIP_Y_MESA"/>
@@ -47433,6 +43394,11 @@ typedef unsigned int GLhandleARB;
                 <command name="glGetFramebufferParameterivMESA"/>
             </require>
         </extension>
+        <extension name="GL_MESA_framebuffer_swap_xy" supported="gl|glcore|gles2">
+            <require>
+                <enum name="GL_FRAMEBUFFER_SWAP_XY_MESA"/>
+            </require>
+        </extension>
         <extension name="GL_MESA_pack_invert" supported="gl">
             <require>
                 <enum name="GL_PACK_INVERT_MESA"/>
@@ -47720,7 +43686,6 @@ typedef unsigned int GLhandleARB;
                 <enum name="GL_CONSERVATIVE_RASTER_MODE_NV"/>
                 <enum name="GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV"/>
                 <enum name="GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV"/>
-                <enum name="GL_CONSERVATIVE_RASTER_MODE_NV"/>
                 <command name="glConservativeRasterParameteriNV"/>
             </require>
         </extension>
@@ -47764,7 +43729,7 @@ typedef unsigned int GLhandleARB;
                 <enum name="GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV"/>
             </require>
         </extension>
-        <extension name="GL_NV_depth_buffer_float" supported="gl">
+        <extension name="GL_NV_depth_buffer_float" supported="gl|glcore">
             <require>
                 <enum name="GL_DEPTH_COMPONENT32F_NV"/>
                 <enum name="GL_DEPTH32F_STENCIL8_NV"/>
@@ -48220,12 +44185,6 @@ typedef unsigned int GLhandleARB;
                 <command name="glMultiTexCoord3hvNV"/>
                 <command name="glMultiTexCoord4hNV"/>
                 <command name="glMultiTexCoord4hvNV"/>
-                <command name="glFogCoordhNV"/>
-                <command name="glFogCoordhvNV"/>
-                <command name="glSecondaryColor3hNV"/>
-                <command name="glSecondaryColor3hvNV"/>
-                <command name="glVertexWeighthNV"/>
-                <command name="glVertexWeighthvNV"/>
                 <command name="glVertexAttrib1hNV"/>
                 <command name="glVertexAttrib1hvNV"/>
                 <command name="glVertexAttrib2hNV"/>
@@ -48239,6 +44198,18 @@ typedef unsigned int GLhandleARB;
                 <command name="glVertexAttribs3hvNV"/>
                 <command name="glVertexAttribs4hvNV"/>
             </require>
+            <require comment="Supported only if GL_EXT_fog_coord is supported">
+                <command name="glFogCoordhNV"/>
+                <command name="glFogCoordhvNV"/>
+            </require>
+            <require comment="Supported only if GL_EXT_secondary_color is supported">
+                <command name="glSecondaryColor3hNV"/>
+                <command name="glSecondaryColor3hvNV"/>
+            </require>
+            <require comment="Supported only if GL_EXT_vertex_weighting is supported">
+                <command name="glVertexWeighthNV"/>
+                <command name="glVertexWeighthvNV"/>
+            </require>
         </extension>
         <extension name="GL_NV_image_formats" supported="gles2"/>
         <extension name="GL_NV_instanced_arrays" supported="gles2">
@@ -48327,6 +44298,16 @@ typedef unsigned int GLhandleARB;
                 <command name="glNamedBufferAttachMemoryNV"/>
             </require>
         </extension>
+        <extension name="GL_NV_memory_object_sparse" supported="gl|glcore|gles2">
+            <require>
+                <command name="glBufferPageCommitmentMemNV"/>
+                <command name="glTexPageCommitmentMemNV"/>
+            </require>
+            <require comment="Supported only if GL_EXT_direct_state_access is supported">
+                <command name="glNamedBufferPageCommitmentMemNV"/>
+                <command name="glTexturePageCommitmentMemNV"/>
+            </require>
+        </extension>
         <extension name="GL_NV_mesh_shader" supported="gl|glcore|gles2">
             <require>
                 <enum name="GL_MESH_SHADER_NV"/>
@@ -48774,6 +44755,12 @@ typedef unsigned int GLhandleARB;
                 <command name="glPrimitiveRestartIndexNV"/>
             </require>
         </extension>
+        <extension name="GL_NV_primitive_shading_rate" supported="gl|glcore|gles2">
+            <require>
+                <enum name="GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV"/>
+                <enum name="GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV"/>
+            </require>
+        </extension>
         <extension name="GL_NV_query_resource" supported="gl">
             <require>
                 <enum name="GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV"/>
@@ -49006,7 +44993,6 @@ typedef unsigned int GLhandleARB;
                 <command name="glGetShadingRateImagePaletteNV"/>
                 <command name="glGetShadingRateSampleLocationivNV"/>
                 <command name="glShadingRateImageBarrierNV"/>
-                <command name="glShadingRateImageBarrierNV"/>
                 <command name="glShadingRateImagePaletteNV"/>
                 <command name="glShadingRateSampleOrderNV"/>
                 <command name="glShadingRateSampleOrderCustomNV"/>
@@ -49540,7 +45526,7 @@ typedef unsigned int GLhandleARB;
             </require>
         </extension>
         <extension name="GL_NV_vertex_program4" supported="gl">
-            <require>
+            <require comment="Shared with the EXT_gpu_shader4 extension">
                 <enum name="GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV"/>
                 <command name="glVertexAttribI1iEXT"/>
                 <command name="glVertexAttribI2iEXT"/>
@@ -49654,6 +45640,13 @@ typedef unsigned int GLhandleARB;
                 <command name="glViewportSwizzleNV"/>
             </require>
         </extension>
+        <extension name="GL_NV_pack_subimage" supported="gles2">
+            <require>
+                <enum name="GL_PACK_ROW_LENGTH_NV"/>
+                <enum name="GL_PACK_SKIP_ROWS_NV"/>
+                <enum name="GL_PACK_SKIP_PIXELS_NV"/>
+            </require>
+        </extension>
         <extension name="GL_OES_EGL_image" supported="gles1|gles2">
             <require>
                 <type name="GLeglImageOES"/>
@@ -50658,6 +46651,22 @@ typedef unsigned int GLhandleARB;
                 <command name="glFramebufferFoveationParametersQCOM"/>
             </require>
         </extension>
+        <extension name="GL_QCOM_motion_estimation" supported="gles2">
+            <require>
+                <enum name="GL_MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM"/>
+                <enum name="GL_MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM"/>
+                <enum name="GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM"/>
+                <command name="glTexEstimateMotionQCOM"/>
+                <command name="glTexEstimateMotionRegionsQCOM"/>
+            </require>
+        </extension>
+        <extension name="GL_QCOM_frame_extrapolation" supported="gles2">
+            <require>
+                <command name="glExtrapolateTex2DQCOM"/>
+            </require>
+        </extension>
+        <extension name="GL_QCOM_render_shared_exponent" supported="gles2">
+        </extension>
         <extension name="GL_QCOM_texture_foveated" supported="gles2">
             <require>
                 <enum name="GL_FOVEATION_ENABLE_BIT_QCOM"/>
@@ -50670,6 +46679,11 @@ typedef unsigned int GLhandleARB;
                 <command name="glTextureFoveationParametersQCOM"/>
             </require>
         </extension>
+        <extension name="GL_QCOM_texture_foveated2" supported="gles2">
+            <require>
+                <enum name="GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM"/>
+            </require>
+        </extension>
         <extension name="GL_QCOM_texture_foveated_subsampled_layout" supported="gles2">
             <require>
                 <enum name="GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM"/>
@@ -50689,6 +46703,19 @@ typedef unsigned int GLhandleARB;
         </extension>
         <extension name="GL_QCOM_shader_framebuffer_fetch_rate" supported="gles2">
         </extension>
+        <extension name="GL_QCOM_shading_rate" supported="gles2">
+            <require>
+                <enum name="GL_SHADING_RATE_QCOM"/>
+                <enum name="GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM"/>
+                <enum name="GL_SHADING_RATE_1X1_PIXELS_QCOM"/>
+                <enum name="GL_SHADING_RATE_1X2_PIXELS_QCOM"/>
+                <enum name="GL_SHADING_RATE_2X1_PIXELS_QCOM"/>
+                <enum name="GL_SHADING_RATE_2X2_PIXELS_QCOM"/>
+                <enum name="GL_SHADING_RATE_4X2_PIXELS_QCOM"/>
+                <enum name="GL_SHADING_RATE_4X4_PIXELS_QCOM"/>
+                <command name="glShadingRateQCOM"/>
+            </require>
+        </extension>
         <extension name="GL_QCOM_tiled_rendering" supported="gles1|gles2">
             <require>
                 <enum name="GL_COLOR_BUFFER_BIT0_QCOM"/>
-- 
2.44.0

